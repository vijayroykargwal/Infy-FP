2019-03-06 09:07:18,748 INFO  Loading Baseframework Plugin
2019-03-06 09:07:18,751 INFO  Initializing the platform to load the Menu - HandsOn
2019-03-06 09:07:18,753 INFO  Loading the Menu - HandsOn
2019-03-06 09:07:18,771 INFO  Successfully loaded the Menu - HandsOn
2019-03-06 09:44:59,419 INFO  Loading Programming Assignment Plugin
2019-03-06 09:44:59,901 INFO  Setting request parameters for VerifySolution
2019-03-06 09:44:59,901 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 09:44:59,905 INFO  Starting to parse the user solution
2019-03-06 09:44:59,906 INFO  Displaying user solution
2019-03-06 09:45:00,021 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-8\r\n'''\r\nCreated on Mar 5, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Student:\r\n    def __init__(self):\r\n        self.__student_id = None\r\n        self.__age = None\r\n        self.__marks = None\r\n    def get_student_id(self):\r\n        return self.__student_id\r\n\r\n\r\n    def get_age(self):\r\n        return self.__age\r\n\r\n\r\n    def get_marks(self):\r\n        return self.__marks\r\n\r\n\r\n    def set_student_id(self, id):\r\n        self.__student_id = id\r\n\r\n\r\n    def set_age(self, age):\r\n        self.__age = age\r\n\r\n\r\n    def set_marks(self, marks):\r\n        self.__marks = marks\r\n        \r\n    def validate_marks(self):\r\n        if(self.get_marks()>=0 and self.get_marks()<=100):\r\n            return True\r\n        else:\r\n            return False\r\n    def validate_age(self):\r\n        if(self.get_age()>20):\r\n            return True\r\n        else:\r\n            return False\r\n    def check_qualification(self):\r\n        if(self.get_marks()>=0 and self.get_marks()<=100 and self.get_age()>20):\r\n            if(self.get_marks()>=65):\r\n                return True\r\n            else:\r\n                return False\r\n        else:\r\n            return False\r\n        \r\ns1 = Student\r\ns1.set_student_id(167)\r\ns1.set_age(22)\r\ns1.set_marks(74)\r\ns1.validate_marks()\r\ns1.validate_age()\r\ns1.check_qualification()        \r\n        \r\n\r\n    \r\n","asgnmtId":"8","SolutionFileName":"Assign8.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 09:45:00,022 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 09:45:00,022 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 09:45:00,022 INFO  Invoking the service to verify the user solution
2019-03-06 09:45:00,023 INFO  Time before invoking service:Wed Mar 06 09:45:00 IST 2019
2019-03-06 09:45:00,023 INFO  Initialising service address for VerifySolution
2019-03-06 09:45:00,024 INFO  Time before invoking service In SUPER:Wed Mar 06 09:45:00 IST 2019
2019-03-06 09:45:01,191 INFO  Time after invoking service In SUPER:Wed Mar 06 09:45:01 IST 2019
2019-03-06 09:45:01,192 INFO  Service responded successfully with required details
2019-03-06 09:45:01,192 INFO  Time after invoking service:Wed Mar 06 09:45:01 IST 2019
2019-03-06 09:45:01,192 INFO  User solution successfully verified
2019-03-06 09:45:01,193 INFO  Processing the response from verify service
2019-03-06 09:45:01,197 INFO  Starting to parse JSON response
2019-03-06 09:45:01,201 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 09:45:01,202 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 09:45:01,202 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 09:45:01,202 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 09:45:01,202 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 09:45:01,202 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 09:45:01,202 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 09:45:01,202 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 09:45:01,202 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 09:45:01,202 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 09:45:01,205 INFO  Successfully parsed JSON response
2019-03-06 09:45:01,205 INFO  In the process of generating verify response in HTML
2019-03-06 09:45:01,621 INFO  Successfully generated verify response in HTML
2019-03-06 09:45:01,622 INFO  Successfully processed the response from service
2019-03-06 09:46:22,702 INFO  Setting request parameters for VerifySolution
2019-03-06 09:46:22,702 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 09:46:22,702 INFO  Starting to parse the user solution
2019-03-06 09:46:22,703 INFO  Displaying user solution
2019-03-06 09:46:22,761 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-8\r\n'''\r\nCreated on Mar 5, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Student:\r\n    def __init__(self):\r\n        self.__student_id = None\r\n        self.__age = None\r\n        self.__marks = None\r\n    def get_student_id(self):\r\n        return self.__student_id\r\n\r\n\r\n    def get_age(self):\r\n        return self.__age\r\n\r\n\r\n    def get_marks(self):\r\n        return self.__marks\r\n\r\n\r\n    def set_student_id(self, id):\r\n        self.__student_id = id\r\n\r\n\r\n    def set_age(self, age):\r\n        self.__age = age\r\n\r\n\r\n    def set_marks(self, marks):\r\n        self.__marks = marks\r\n        \r\n    def validate_marks(self):\r\n        if(self.get_marks()>=0 and self.get_marks()<=100):\r\n            return True\r\n        else:\r\n            return False\r\n    def validate_age(self):\r\n        if(self.get_age()>20):\r\n            return True\r\n        else:\r\n            return False\r\n    def check_qualification(self):\r\n        if(self.get_marks()>=0 and self.get_marks()<=100 and self.get_age()>20):\r\n            if(self.get_marks()>=65):\r\n                return True\r\n            else:\r\n                return False\r\n        else:\r\n            return False\r\n        \r\ns1 = Student()\r\ns1.set_student_id(167)\r\ns1.set_age(22)\r\ns1.set_marks(74)\r\ns1.validate_marks()\r\ns1.validate_age()\r\ns1.check_qualification()        \r\n        \r\n\r\n    \r\n","asgnmtId":"8","SolutionFileName":"Assign8.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 09:46:22,761 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 09:46:22,762 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 09:46:22,762 INFO  Invoking the service to verify the user solution
2019-03-06 09:46:22,762 INFO  Time before invoking service:Wed Mar 06 09:46:22 IST 2019
2019-03-06 09:46:22,762 INFO  Initialising service address for VerifySolution
2019-03-06 09:46:22,762 INFO  Time before invoking service In SUPER:Wed Mar 06 09:46:22 IST 2019
2019-03-06 09:46:23,772 INFO  Time after invoking service In SUPER:Wed Mar 06 09:46:23 IST 2019
2019-03-06 09:46:23,772 INFO  Service responded successfully with required details
2019-03-06 09:46:23,773 INFO  Time after invoking service:Wed Mar 06 09:46:23 IST 2019
2019-03-06 09:46:23,773 INFO  User solution successfully verified
2019-03-06 09:46:23,773 INFO  Processing the response from verify service
2019-03-06 09:46:23,776 INFO  Starting to parse JSON response
2019-03-06 09:46:23,778 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 09:46:23,778 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 09:46:23,778 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 09:46:23,778 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 09:46:23,778 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 09:46:23,778 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 09:46:23,778 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 09:46:23,778 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 09:46:23,778 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 09:46:23,778 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 09:46:23,779 INFO  Successfully parsed JSON response
2019-03-06 09:46:23,779 INFO  In the process of generating verify response in HTML
2019-03-06 09:46:23,844 INFO  Successfully generated verify response in HTML
2019-03-06 09:46:23,844 INFO  Successfully processed the response from service
2019-03-06 09:46:31,156 INFO  Setting request parameters for VerifySolution
2019-03-06 09:46:31,156 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 09:46:31,156 INFO  Starting to parse the user solution
2019-03-06 09:46:31,157 INFO  Displaying user solution
2019-03-06 09:46:31,210 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-8\r\n'''\r\nCreated on Mar 5, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Student:\r\n    def __init__(self):\r\n        self.__student_id = None\r\n        self.__age = None\r\n        self.__marks = None\r\n    def get_student_id(self):\r\n        return self.__student_id\r\n\r\n\r\n    def get_age(self):\r\n        return self.__age\r\n\r\n\r\n    def get_marks(self):\r\n        return self.__marks\r\n\r\n\r\n    def set_student_id(self, id):\r\n        self.__student_id = id\r\n\r\n\r\n    def set_age(self, age):\r\n        self.__age = age\r\n\r\n\r\n    def set_marks(self, marks):\r\n        self.__marks = marks\r\n        \r\n    def validate_marks(self):\r\n        if(self.get_marks()>=0 and self.get_marks()<=100):\r\n            return True\r\n        else:\r\n            return False\r\n    def validate_age(self):\r\n        if(self.get_age()>20):\r\n            return True\r\n        else:\r\n            return False\r\n    def check_qualification(self):\r\n        if(self.get_marks()>=0 and self.get_marks()<=100 and self.get_age()>20):\r\n            if(self.get_marks()>=65):\r\n                return True\r\n            else:\r\n                return False\r\n        else:\r\n            return False\r\n        \r\ns1 = Student()\r\ns1.set_student_id(167)\r\ns1.set_age(22)\r\ns1.set_marks(74)\r\ns1.validate_marks()\r\ns1.validate_age()\r\ns1.check_qualification()        \r\n        \r\n\r\n    \r\n","asgnmtId":"8","SolutionFileName":"Assign8.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 09:46:31,211 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 09:46:31,211 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 09:46:31,211 INFO  Invoking the service to verify the user solution
2019-03-06 09:46:31,211 INFO  Time before invoking service:Wed Mar 06 09:46:31 IST 2019
2019-03-06 09:46:31,211 INFO  Initialising service address for VerifySolution
2019-03-06 09:46:31,212 INFO  Time before invoking service In SUPER:Wed Mar 06 09:46:31 IST 2019
2019-03-06 09:46:32,191 INFO  Time after invoking service In SUPER:Wed Mar 06 09:46:32 IST 2019
2019-03-06 09:46:32,192 INFO  Service responded successfully with required details
2019-03-06 09:46:32,192 INFO  Time after invoking service:Wed Mar 06 09:46:32 IST 2019
2019-03-06 09:46:32,192 INFO  User solution successfully verified
2019-03-06 09:46:32,192 INFO  Processing the response from verify service
2019-03-06 09:46:32,194 INFO  Starting to parse JSON response
2019-03-06 09:46:32,196 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 09:46:32,196 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 09:46:32,196 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 09:46:32,196 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 09:46:32,196 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 09:46:32,196 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 09:46:32,196 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 09:46:32,196 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 09:46:32,196 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 09:46:32,196 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 09:46:32,197 INFO  Successfully parsed JSON response
2019-03-06 09:46:32,197 INFO  In the process of generating verify response in HTML
2019-03-06 09:46:32,259 INFO  Successfully generated verify response in HTML
2019-03-06 09:46:32,259 INFO  Successfully processed the response from service
2019-03-06 09:47:06,064 INFO  Setting request parameters for VerifySolution
2019-03-06 09:47:06,064 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 09:47:06,064 INFO  Starting to parse the user solution
2019-03-06 09:47:06,065 INFO  Displaying user solution
2019-03-06 09:47:06,147 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-8\r\n'''\r\nCreated on Mar 5, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Student:\r\n    def __init__(self):\r\n        self.__student_id = None\r\n        self.__age = None\r\n        self.__marks = None\r\n    def get_student_id(self):\r\n        return self.__student_id\r\n\r\n\r\n    def get_age(self):\r\n        return self.__age\r\n\r\n\r\n    def get_marks(self):\r\n        return self.__marks\r\n\r\n\r\n    def set_student_id(self, student_id):\r\n        self.__student_id = student_id\r\n\r\n\r\n    def set_age(self, age):\r\n        self.__age = age\r\n\r\n\r\n    def set_marks(self, marks):\r\n        self.__marks = marks\r\n        \r\n    def validate_marks(self):\r\n        if(self.get_marks()>=0 and self.get_marks()<=100):\r\n            return True\r\n        else:\r\n            return False\r\n    def validate_age(self):\r\n        if(self.get_age()>20):\r\n            return True\r\n        else:\r\n            return False\r\n    def check_qualification(self):\r\n        if(self.get_marks()>=0 and self.get_marks()<=100 and self.get_age()>20):\r\n            if(self.get_marks()>=65):\r\n                return True\r\n            else:\r\n                return False\r\n        else:\r\n            return False\r\n        \r\ns1 = Student()\r\ns1.set_student_id(167)\r\ns1.set_age(22)\r\ns1.set_marks(74)\r\ns1.validate_marks()\r\ns1.validate_age()\r\ns1.check_qualification()        \r\n        \r\n\r\n    \r\n","asgnmtId":"8","SolutionFileName":"Assign8.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 09:47:06,148 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 09:47:06,148 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 09:47:06,148 INFO  Invoking the service to verify the user solution
2019-03-06 09:47:06,149 INFO  Time before invoking service:Wed Mar 06 09:47:06 IST 2019
2019-03-06 09:47:06,149 INFO  Initialising service address for VerifySolution
2019-03-06 09:47:06,149 INFO  Time before invoking service In SUPER:Wed Mar 06 09:47:06 IST 2019
2019-03-06 09:47:07,195 INFO  Time after invoking service In SUPER:Wed Mar 06 09:47:07 IST 2019
2019-03-06 09:47:07,196 INFO  Service responded successfully with required details
2019-03-06 09:47:07,196 INFO  Time after invoking service:Wed Mar 06 09:47:07 IST 2019
2019-03-06 09:47:07,196 INFO  User solution successfully verified
2019-03-06 09:47:07,196 INFO  Processing the response from verify service
2019-03-06 09:47:07,198 INFO  Starting to parse JSON response
2019-03-06 09:47:07,200 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 09:47:07,200 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 09:47:07,200 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 09:47:07,200 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 09:47:07,200 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 09:47:07,200 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 09:47:07,200 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 09:47:07,200 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 09:47:07,200 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 09:47:07,200 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 09:47:07,202 INFO  Successfully parsed JSON response
2019-03-06 09:47:07,202 INFO  In the process of generating verify response in HTML
2019-03-06 09:47:07,275 INFO  Successfully generated verify response in HTML
2019-03-06 09:47:07,275 INFO  Successfully processed the response from service
2019-03-06 09:47:22,035 INFO  Initiating to process and prepare Input for the submit service
2019-03-06 09:47:22,039 INFO  Displaying user solution
2019-03-06 09:47:22,048 INFO  Successfully processed and prepared the input for the submit service
2019-03-06 09:47:22,048 INFO  Invoking the service to submit the user solution
2019-03-06 09:47:22,048 INFO  Initialising service address for Submit
2019-03-06 09:47:22,049 INFO  Time before invoking service In SUPER:Wed Mar 06 09:47:22 IST 2019
2019-03-06 09:47:22,402 INFO  Time after invoking service In SUPER:Wed Mar 06 09:47:22 IST 2019
2019-03-06 09:47:22,402 INFO  Service responded successfully with required details
2019-03-06 09:47:22,402 INFO  User solution successfully submitted
2019-03-06 09:47:22,403 INFO  Displaying submission status
2019-03-06 09:47:22,403 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-06 09:47:24,962 INFO  Initiating to process and prepare Input for the submit service
2019-03-06 09:47:24,963 INFO  Displaying user solution
2019-03-06 09:47:24,973 INFO  Successfully processed and prepared the input for the submit service
2019-03-06 09:47:24,973 INFO  Invoking the service to submit the user solution
2019-03-06 09:47:24,973 INFO  Initialising service address for Submit
2019-03-06 09:47:24,974 INFO  Time before invoking service In SUPER:Wed Mar 06 09:47:24 IST 2019
2019-03-06 09:47:25,084 INFO  Time after invoking service In SUPER:Wed Mar 06 09:47:25 IST 2019
2019-03-06 09:47:25,084 INFO  Service responded successfully with required details
2019-03-06 09:47:25,084 INFO  User solution successfully submitted
2019-03-06 09:47:25,085 INFO  Displaying submission status
2019-03-06 09:47:25,085 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-06 10:48:11,976 INFO  Setting request parameters for VerifySolution
2019-03-06 10:48:11,976 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 10:48:11,976 INFO  Starting to parse the user solution
2019-03-06 10:48:11,976 INFO  Displaying user solution
2019-03-06 10:48:12,029 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Exer-6\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Vehicle:\r\n    def __init__(self):\r\n        self.mileage = None\r\n        self.fuel_left = None\r\n    def identify_distance_that_can_be_travelled(self):\r\n        if(self.fuel_left<=5):\r\n            return 0\r\n        else: \r\n            return (self.mileage)*(self.fuel_left)\r\n    def identify_distance_travelled(self,initial_fuel):\r\n        return (initial_fuel-(self.fuel_left))*(self.mileage)\r\n    \r\nv1 = Vehicle()\r\nv1.mileage = 75\r\nv1.fuel_left = 8\r\nprint(v1.identify_distance_that_can_be_travelled())\r\nprint(v1.identify_distance_travelled(15))\r\n","asgnmtId":"6","SolutionFileName":"Excer6.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-06 10:48:12,029 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 10:48:12,029 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 10:48:12,029 INFO  Invoking the service to verify the user solution
2019-03-06 10:48:12,030 INFO  Time before invoking service:Wed Mar 06 10:48:12 IST 2019
2019-03-06 10:48:12,030 INFO  Initialising service address for VerifySolution
2019-03-06 10:48:12,030 INFO  Time before invoking service In SUPER:Wed Mar 06 10:48:12 IST 2019
2019-03-06 10:48:12,964 INFO  Time after invoking service In SUPER:Wed Mar 06 10:48:12 IST 2019
2019-03-06 10:48:12,964 INFO  Service responded successfully with required details
2019-03-06 10:48:12,964 INFO  Time after invoking service:Wed Mar 06 10:48:12 IST 2019
2019-03-06 10:48:12,964 INFO  User solution successfully verified
2019-03-06 10:48:12,965 INFO  Processing the response from verify service
2019-03-06 10:48:12,971 INFO  Starting to parse JSON response
2019-03-06 10:48:12,973 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 10:48:12,973 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 10:48:12,973 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 10:48:12,973 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 10:48:12,973 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 10:48:12,973 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 10:48:12,974 INFO  Successfully parsed JSON response
2019-03-06 10:48:12,974 INFO  In the process of generating verify response in HTML
2019-03-06 10:48:13,052 INFO  Successfully generated verify response in HTML
2019-03-06 10:48:13,052 INFO  Successfully processed the response from service
2019-03-06 10:50:41,849 INFO  Setting request parameters for VerifySolution
2019-03-06 10:50:41,849 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 10:50:41,849 INFO  Starting to parse the user solution
2019-03-06 10:50:41,849 INFO  Displaying user solution
2019-03-06 10:50:41,874 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Exer-6\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Vehicle:\r\n    def __init__(self):\r\n        self.mileage = None\r\n        self.fuel_left = None\r\n    def identify_distance_that_can_be_travelled(self):\r\n        if(self.fuel_left<=5):\r\n            return 0\r\n        else: \r\n            return (self.mileage)*((self.fuel_left)-5)\r\n    def identify_distance_travelled(self,initial_fuel):\r\n        return (initial_fuel-(self.fuel_left))*(self.mileage)\r\n    \r\nv1 = Vehicle()\r\nv1.mileage = 75\r\nv1.fuel_left = 8\r\nprint(v1.identify_distance_that_can_be_travelled())\r\nprint(v1.identify_distance_travelled(15))\r\n","asgnmtId":"6","SolutionFileName":"Excer6.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-06 10:50:41,875 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 10:50:41,875 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 10:50:41,875 INFO  Invoking the service to verify the user solution
2019-03-06 10:50:41,875 INFO  Time before invoking service:Wed Mar 06 10:50:41 IST 2019
2019-03-06 10:50:41,875 INFO  Initialising service address for VerifySolution
2019-03-06 10:50:41,876 INFO  Time before invoking service In SUPER:Wed Mar 06 10:50:41 IST 2019
2019-03-06 10:50:42,788 INFO  Time after invoking service In SUPER:Wed Mar 06 10:50:42 IST 2019
2019-03-06 10:50:42,789 INFO  Service responded successfully with required details
2019-03-06 10:50:42,789 INFO  Time after invoking service:Wed Mar 06 10:50:42 IST 2019
2019-03-06 10:50:42,789 INFO  User solution successfully verified
2019-03-06 10:50:42,790 INFO  Processing the response from verify service
2019-03-06 10:50:42,793 INFO  Starting to parse JSON response
2019-03-06 10:50:42,794 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 10:50:42,794 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 10:50:42,794 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 10:50:42,795 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 10:50:42,797 INFO  Successfully parsed JSON response
2019-03-06 10:50:42,797 INFO  In the process of generating verify response in HTML
2019-03-06 10:50:42,872 INFO  Successfully generated verify response in HTML
2019-03-06 10:50:42,872 INFO  Successfully processed the response from service
2019-03-06 10:51:38,806 INFO  Initiating to process and prepare Input for the submit service
2019-03-06 10:51:38,807 INFO  Displaying user solution
2019-03-06 10:51:38,814 INFO  Successfully processed and prepared the input for the submit service
2019-03-06 10:51:38,814 INFO  Invoking the service to submit the user solution
2019-03-06 10:51:38,814 INFO  Initialising service address for Submit
2019-03-06 10:51:38,815 INFO  Time before invoking service In SUPER:Wed Mar 06 10:51:38 IST 2019
2019-03-06 10:51:39,244 INFO  Time after invoking service In SUPER:Wed Mar 06 10:51:39 IST 2019
2019-03-06 10:51:39,244 INFO  Service responded successfully with required details
2019-03-06 10:51:39,244 INFO  User solution successfully submitted
2019-03-06 10:51:39,244 INFO  Displaying submission status
2019-03-06 10:51:39,245 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-06 10:51:41,494 INFO  Initiating to process and prepare Input for the submit service
2019-03-06 10:51:41,495 INFO  Displaying user solution
2019-03-06 10:51:41,507 INFO  Successfully processed and prepared the input for the submit service
2019-03-06 10:51:41,507 INFO  Invoking the service to submit the user solution
2019-03-06 10:51:41,507 INFO  Initialising service address for Submit
2019-03-06 10:51:41,508 INFO  Time before invoking service In SUPER:Wed Mar 06 10:51:41 IST 2019
2019-03-06 10:51:41,669 INFO  Time after invoking service In SUPER:Wed Mar 06 10:51:41 IST 2019
2019-03-06 10:51:41,670 INFO  Service responded successfully with required details
2019-03-06 10:51:41,670 INFO  User solution successfully submitted
2019-03-06 10:51:41,670 INFO  Displaying submission status
2019-03-06 10:51:41,670 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-06 11:01:35,193 INFO  Setting request parameters for VerifySolution
2019-03-06 11:01:35,193 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 11:01:35,193 INFO  Starting to parse the user solution
2019-03-06 11:01:35,194 INFO  Displaying user solution
2019-03-06 11:01:35,266 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-7\r\n'''\r\nCreated on Mar 5, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Instructor:\r\n    def __init__(self):\r\n        self.__instructor_name= None\r\n        self.__technology_skill =None\r\n        self.__experience = None\r\n        self.__avg_feedback = None\r\n    def get_instructor_name(self):\r\n        return self.__instructor_name\r\n\r\n\r\n    def get_technology_skill(self):\r\n        return self.__technology_skill\r\n\r\n\r\n    def get_experience(self):\r\n        return self.__experience\r\n\r\n\r\n    def get_avg_feedback(self):\r\n        return self.__avg_feedback\r\n\r\n\r\n    def set_instructor_name(self, instructor_name):\r\n        self.__instructor_name = instructor_name\r\n\r\n\r\n    def set_technology_skill(self, technology_skill):\r\n        self.__technology_skill =list(technology_skill)[:1] if technology_skill else []\r\n\r\n\r\n    def set_experience(self, experience):\r\n        self.__experience = experience\r\n\r\n\r\n    def set_avg_feedback(self,avg_feedback):\r\n        self.__avg_feedback =avg_feedback\r\n    def check_eligibility(self):\r\n        if(self.get_experience()>3 and self.get_avg_feedback()>=4.5):\r\n            return True\r\n        elif(self.get_experience()<=3 and self.get_avg_feedback()>=4):\r\n            return True\r\n        else:\r\n            return False\r\n    def allocate_course(self,technology):\r\n        if technology in (self.get_technology_skill()):\r\n            return True\r\n        else:\r\n            return False\r\n\r\nI1 = Instructor()\r\nI1.set_instructor_name(\"Vijay\")\r\nI1.set_experience(3)\r\nI1.set_avg_feedback(4)\r\nI1.set_technology_skill([\"C++\",\"JAVA\"])\r\nI1.check_eligibility()\r\nI1.allocate_course(\"C++\")\r\n\r\n","asgnmtId":"7","SolutionFileName":"Assign7.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 11:01:35,267 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 11:01:35,267 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 11:01:35,267 INFO  Invoking the service to verify the user solution
2019-03-06 11:01:35,267 INFO  Time before invoking service:Wed Mar 06 11:01:35 IST 2019
2019-03-06 11:01:35,268 INFO  Initialising service address for VerifySolution
2019-03-06 11:01:35,268 INFO  Time before invoking service In SUPER:Wed Mar 06 11:01:35 IST 2019
2019-03-06 11:01:36,233 INFO  Time after invoking service In SUPER:Wed Mar 06 11:01:36 IST 2019
2019-03-06 11:01:36,234 INFO  Service responded successfully with required details
2019-03-06 11:01:36,234 INFO  Time after invoking service:Wed Mar 06 11:01:36 IST 2019
2019-03-06 11:01:36,234 INFO  User solution successfully verified
2019-03-06 11:01:36,235 INFO  Processing the response from verify service
2019-03-06 11:01:36,241 INFO  Starting to parse JSON response
2019-03-06 11:01:36,242 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 11:01:36,242 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 11:01:36,242 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 11:01:36,242 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 11:01:36,243 INFO  Successfully parsed JSON response
2019-03-06 11:01:36,243 INFO  In the process of generating verify response in HTML
2019-03-06 11:01:36,314 INFO  Successfully generated verify response in HTML
2019-03-06 11:01:36,314 INFO  Successfully processed the response from service
2019-03-06 11:36:53,800 INFO  Setting request parameters for VerifySolution
2019-03-06 11:36:53,800 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 11:36:53,800 INFO  Starting to parse the user solution
2019-03-06 11:36:53,800 INFO  Displaying user solution
2019-03-06 11:36:53,921 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-9\r\n'''\r\nCreated on Mar 5, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Student:\r\n    def __init__(self):\r\n        self.__student_id = None\r\n        self.__age = None\r\n        self.__marks = None\r\n        self.__course_id = None\r\n        self.__fees = None\r\n\r\n    def get_course_id(self):\r\n        return self.__course_id\r\n\r\n\r\n    def get_fees(self):\r\n        return self.__fees\r\n\r\n\r\n    def set_course_id(self, course_id):\r\n        self.__course_id = course_id\r\n\r\n\r\n    def set_fees(self, course_fee):\r\n        self.__fees = course_fee\r\n\r\n    def get_student_id(self):\r\n        return self.__student_id\r\n\r\n\r\n    def get_age(self):\r\n        return self.__age\r\n\r\n\r\n    def get_marks(self):\r\n        return self.__marks\r\n\r\n\r\n    def set_student_id(self, student_id):\r\n        self.__student_id = student_id\r\n\r\n\r\n    def set_age(self, age):\r\n        self.__age = age\r\n\r\n\r\n    def set_marks(self, marks):\r\n        self.__marks = marks\r\n        \r\n    def validate_marks(self):\r\n        if(self.get_marks()>=0 and self.get_marks()<=100):\r\n            return True\r\n        else:\r\n            return False\r\n    def validate_age(self):\r\n        if(self.get_age()>20):\r\n            return True\r\n        else:\r\n            return False\r\n    def check_qualification(self):\r\n        if(self.get_marks()>=0 and self.get_marks()<=100 and self.get_age()>20):\r\n            if(self.get_marks()>=65):\r\n                return True\r\n            else:\r\n                return False\r\n        else:\r\n            return False\r\n    def choose_course(self,course_id):\r\n         course_id = self.set_course_id(course_id)\r\n         if(self.get_course_id()==1001):\r\n             self.set_fees(25575.0)\r\n             if(self.get_marks()>=85):\r\n                 s = 0.75*(self.get_fees())\r\n             return s\r\n         elif(self.get_course_id()==1002):\r\n             self.set_fees(15500.0)\r\n             if(self.get_marks()>=85):\r\n                 s = 0.75*self.get_fees()\r\n             return s\r\n         else:\r\n             return False\r\n   \r\ns1 = Student()\r\ns1.set_student_id(167)\r\ns1.set_age(22)\r\ns1.set_marks(74)\r\ns1.validate_marks()\r\ns1.validate_age()\r\ns1.check_qualification()\r\ns1.set_course_id(1002)\r\n\r\n\r\n        \r\n        \r\n\r\n    \r\n","asgnmtId":"9","SolutionFileName":"Assign9.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 11:36:53,922 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 11:36:53,922 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 11:36:53,922 INFO  Invoking the service to verify the user solution
2019-03-06 11:36:53,922 INFO  Time before invoking service:Wed Mar 06 11:36:53 IST 2019
2019-03-06 11:36:53,923 INFO  Initialising service address for VerifySolution
2019-03-06 11:36:53,923 INFO  Time before invoking service In SUPER:Wed Mar 06 11:36:53 IST 2019
2019-03-06 11:36:55,200 INFO  Time after invoking service In SUPER:Wed Mar 06 11:36:55 IST 2019
2019-03-06 11:36:55,201 INFO  Service responded successfully with required details
2019-03-06 11:36:55,201 INFO  Time after invoking service:Wed Mar 06 11:36:55 IST 2019
2019-03-06 11:36:55,201 INFO  User solution successfully verified
2019-03-06 11:36:55,201 INFO  Processing the response from verify service
2019-03-06 11:36:55,208 INFO  Starting to parse JSON response
2019-03-06 11:36:55,211 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 11:36:55,211 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 11:36:55,211 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 11:36:55,211 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 11:36:55,211 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 11:36:55,211 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 11:36:55,211 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 11:36:55,212 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 11:36:55,212 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 11:36:55,212 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 11:36:55,213 INFO  Successfully parsed JSON response
2019-03-06 11:36:55,213 INFO  In the process of generating verify response in HTML
2019-03-06 11:36:55,291 INFO  Successfully generated verify response in HTML
2019-03-06 11:36:55,291 INFO  Successfully processed the response from service
2019-03-06 11:47:41,159 INFO  Setting request parameters for VerifySolution
2019-03-06 11:47:41,160 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 11:47:41,160 INFO  Starting to parse the user solution
2019-03-06 11:47:41,160 INFO  Displaying user solution
2019-03-06 11:47:41,249 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-9\r\n'''\r\nCreated on Mar 5, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Student:\r\n    def __init__(self):\r\n        self.__student_id = None\r\n        self.__age = None\r\n        self.__marks = None\r\n        self.__course_id = None\r\n        self.__fees = None\r\n\r\n    def get_course_id(self):\r\n        return self.__course_id\r\n\r\n\r\n    def get_fees(self):\r\n        return self.__fees\r\n\r\n\r\n    def set_course_id(self, course_id):\r\n        self.__course_id = course_id\r\n\r\n\r\n    def set_fees(self, course_fee):\r\n        self.__fees = course_fee\r\n\r\n    def get_student_id(self):\r\n        return self.__student_id\r\n\r\n\r\n    def get_age(self):\r\n        return self.__age\r\n\r\n\r\n    def get_marks(self):\r\n        return self.__marks\r\n\r\n\r\n    def set_student_id(self, student_id):\r\n        self.__student_id = student_id\r\n\r\n\r\n    def set_age(self, age):\r\n        self.__age = age\r\n\r\n\r\n    def set_marks(self, marks):\r\n        self.__marks = marks\r\n        \r\n    def validate_marks(self):\r\n        if(self.get_marks()>=0 and self.get_marks()<=100):\r\n            return True\r\n        else:\r\n            return False\r\n    def validate_age(self):\r\n        if(self.get_age()>20):\r\n            return True\r\n        else:\r\n            return False\r\n    def check_qualification(self):\r\n        if(self.get_marks()>=0 and self.get_marks()<=100 and self.get_age()>20):\r\n            if(self.get_marks()>=65):\r\n                return True\r\n            else:\r\n                return False\r\n        else:\r\n            return False\r\n    def choose_course(self,course_id):\r\n         self.set_course_id(course_id)\r\n         if(self.get_course_id()==1001):\r\n             s=self.set_fees(25575.0)\r\n             if(self.get_marks()>=85):\r\n                 s = 0.75*(self.get_fees())\r\n             return s\r\n         elif(self.get_course_id()==1002):\r\n             s=self.set_fees(15500.0)\r\n             if(self.get_marks()>=85):\r\n                 s = 0.75*self.get_fees()\r\n             return s\r\n         else:\r\n             return False\r\n   \r\ns1 = Student()\r\ns1.set_student_id(167)\r\ns1.set_age(22)\r\ns1.set_marks(74)\r\ns1.validate_marks()\r\ns1.validate_age()\r\ns1.check_qualification()\r\ns1.set_course_id(1002)\r\n\r\n\r\n        \r\n        \r\n\r\n    \r\n","asgnmtId":"9","SolutionFileName":"Assign9.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 11:47:41,249 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 11:47:41,250 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 11:47:41,250 INFO  Invoking the service to verify the user solution
2019-03-06 11:47:41,250 INFO  Time before invoking service:Wed Mar 06 11:47:41 IST 2019
2019-03-06 11:47:41,250 INFO  Initialising service address for VerifySolution
2019-03-06 11:47:41,251 INFO  Time before invoking service In SUPER:Wed Mar 06 11:47:41 IST 2019
2019-03-06 11:47:42,453 INFO  Time after invoking service In SUPER:Wed Mar 06 11:47:42 IST 2019
2019-03-06 11:47:42,453 INFO  Service responded successfully with required details
2019-03-06 11:47:42,453 INFO  Time after invoking service:Wed Mar 06 11:47:42 IST 2019
2019-03-06 11:47:42,453 INFO  User solution successfully verified
2019-03-06 11:47:42,454 INFO  Processing the response from verify service
2019-03-06 11:47:42,459 INFO  Starting to parse JSON response
2019-03-06 11:47:42,461 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 11:47:42,462 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 11:47:42,462 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 11:47:42,462 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 11:47:42,462 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 11:47:42,462 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 11:47:42,462 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 11:47:42,462 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 11:47:42,462 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 11:47:42,462 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 11:47:42,463 INFO  Successfully parsed JSON response
2019-03-06 11:47:42,463 INFO  In the process of generating verify response in HTML
2019-03-06 11:47:42,531 INFO  Successfully generated verify response in HTML
2019-03-06 11:47:42,531 INFO  Successfully processed the response from service
2019-03-06 11:50:49,282 INFO  Setting request parameters for VerifySolution
2019-03-06 11:50:49,282 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 11:50:49,282 INFO  Starting to parse the user solution
2019-03-06 11:50:49,283 INFO  Displaying user solution
2019-03-06 11:50:49,343 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-9\r\n'''\r\nCreated on Mar 5, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Student:\r\n    def __init__(self):\r\n        self.__student_id = None\r\n        self.__age = None\r\n        self.__marks = None\r\n        self.__course_id = None\r\n        self.__fees = None\r\n\r\n    def get_course_id(self):\r\n        return self.__course_id\r\n\r\n\r\n    def get_fees(self):\r\n        return self.__fees\r\n\r\n\r\n    def set_course_id(self, course_id):\r\n        self.__course_id = course_id\r\n\r\n\r\n    def set_fees(self, course_fee):\r\n        self.__fees = course_fee\r\n\r\n    def get_student_id(self):\r\n        return self.__student_id\r\n\r\n\r\n    def get_age(self):\r\n        return self.__age\r\n\r\n\r\n    def get_marks(self):\r\n        return self.__marks\r\n\r\n\r\n    def set_student_id(self, student_id):\r\n        self.__student_id = student_id\r\n\r\n\r\n    def set_age(self, age):\r\n        self.__age = age\r\n\r\n\r\n    def set_marks(self, marks):\r\n        self.__marks = marks\r\n        \r\n    def validate_marks(self):\r\n        if(self.get_marks()>=0 and self.get_marks()<=100):\r\n            return True\r\n        else:\r\n            return False\r\n    def validate_age(self):\r\n        if(self.get_age()>20):\r\n            return True\r\n        else:\r\n            return False\r\n    def check_qualification(self):\r\n        if(self.get_marks()>=0 and self.get_marks()<=100 and self.get_age()>20):\r\n            if(self.get_marks()>=65):\r\n                return True\r\n            else:\r\n                return False\r\n        else:\r\n            return False\r\n    def choose_course(self,course_id):\r\n         self.set_course_id(course_id)\r\n         if(self.get_course_id()==1001):\r\n             s=self.set_fees(25575.0)\r\n             if(self.get_marks()>=85):\r\n                 s = 0.75*(self.get_fees())\r\n             return s\r\n         elif(self.get_course_id()==1002):\r\n             s=self.set_fees(15500.0)\r\n             if(self.get_marks()>=85):\r\n                 s = 0.75*self.get_fees()\r\n             return s\r\n         else:\r\n             return False\r\n   \r\ns1 = Student()\r\ns1.set_student_id(167)\r\ns1.set_age(22)\r\ns1.set_marks(74)\r\ns1.validate_marks()\r\ns1.validate_age()\r\ns1.check_qualification()\r\ns1.set_course_id(1002)\r\n\r\n\r\n        \r\n        \r\n\r\n    \r\n","asgnmtId":"9","SolutionFileName":"Assign9.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 11:50:49,343 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 11:50:49,344 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 11:50:49,344 INFO  Invoking the service to verify the user solution
2019-03-06 11:50:49,345 INFO  Time before invoking service:Wed Mar 06 11:50:49 IST 2019
2019-03-06 11:50:49,345 INFO  Initialising service address for VerifySolution
2019-03-06 11:50:49,346 INFO  Time before invoking service In SUPER:Wed Mar 06 11:50:49 IST 2019
2019-03-06 11:50:50,813 INFO  Time after invoking service In SUPER:Wed Mar 06 11:50:50 IST 2019
2019-03-06 11:50:50,813 INFO  Service responded successfully with required details
2019-03-06 11:50:50,814 INFO  Time after invoking service:Wed Mar 06 11:50:50 IST 2019
2019-03-06 11:50:50,814 INFO  User solution successfully verified
2019-03-06 11:50:50,814 INFO  Processing the response from verify service
2019-03-06 11:50:50,816 INFO  Starting to parse JSON response
2019-03-06 11:50:50,817 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 11:50:50,817 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 11:50:50,817 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 11:50:50,817 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 11:50:50,817 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 11:50:50,817 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 11:50:50,817 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 11:50:50,817 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 11:50:50,817 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 11:50:50,817 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 11:50:50,818 INFO  Successfully parsed JSON response
2019-03-06 11:50:50,819 INFO  In the process of generating verify response in HTML
2019-03-06 11:50:50,896 INFO  Successfully generated verify response in HTML
2019-03-06 11:50:50,896 INFO  Successfully processed the response from service
2019-03-06 12:14:44,304 INFO  Setting request parameters for VerifySolution
2019-03-06 12:14:44,304 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 12:14:44,304 INFO  Starting to parse the user solution
2019-03-06 12:14:44,305 INFO  Displaying user solution
2019-03-06 12:14:44,372 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-9\r\n'''\r\nCreated on Mar 5, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Student:\r\n    def __init__(self):\r\n        self.__student_id = None\r\n        self.__age = None\r\n        self.__marks = None\r\n        self.__course_id = None\r\n        self.__fees = None\r\n\r\n    def get_course_id(self):\r\n        return self.__course_id\r\n\r\n\r\n    def get_fees(self):\r\n        return self.__fees\r\n\r\n\r\n    def set_course_id(self, course_id):\r\n        self.__course_id = course_id\r\n\r\n\r\n    def set_fees(self, course_fee):\r\n        self.__fees = course_fee\r\n\r\n    def get_student_id(self):\r\n        return self.__student_id\r\n\r\n\r\n    def get_age(self):\r\n        return self.__age\r\n\r\n\r\n    def get_marks(self):\r\n        return self.__marks\r\n\r\n\r\n    def set_student_id(self, student_id):\r\n        self.__student_id = student_id\r\n\r\n\r\n    def set_age(self, age):\r\n        self.__age = age\r\n\r\n\r\n    def set_marks(self, marks):\r\n        self.__marks = marks\r\n        \r\n    def validate_marks(self):\r\n        if(self.get_marks()>=0 and self.get_marks()<=100):\r\n            return True\r\n        else:\r\n            return False\r\n    def validate_age(self):\r\n        if(self.get_age()>20):\r\n            return True\r\n        else:\r\n            return False\r\n    def check_qualification(self):\r\n        if(self.get_marks()>=0 and self.get_marks()<=100 and self.get_age()>20):\r\n            if(self.get_marks()>=65):\r\n                return True\r\n            else:\r\n                return False\r\n        else:\r\n            return False\r\n    def choose_course(self,course_id):\r\n         if(course_id==1001):\r\n             self.set_course_id(course_id)\r\n             s=self.set_fees(25575.0)\r\n             if(self.get_marks()>=85):\r\n                 s = 0.75*(self.get_fees())\r\n             return s\r\n         elif(course_id==1002):\r\n             self.set_course_id(course_id)\r\n             s=self.set_fees(15500.0)\r\n             if(self.get_marks()>=85):\r\n                 s = 0.75*self.get_fees()\r\n             return s\r\n         else:\r\n             return False\r\n   \r\ns1 = Student()\r\ns1.set_student_id(167)\r\ns1.set_age(22)\r\ns1.set_marks(74)\r\ns1.validate_marks()\r\ns1.validate_age()\r\ns1.check_qualification()\r\ns1.choose_course(1002)\r\n\r\n\r\n        \r\n        \r\n\r\n    \r\n","asgnmtId":"9","SolutionFileName":"Assign9.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 12:14:44,373 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 12:14:44,373 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 12:14:44,373 INFO  Invoking the service to verify the user solution
2019-03-06 12:14:44,374 INFO  Time before invoking service:Wed Mar 06 12:14:44 IST 2019
2019-03-06 12:14:44,374 INFO  Initialising service address for VerifySolution
2019-03-06 12:14:44,374 INFO  Time before invoking service In SUPER:Wed Mar 06 12:14:44 IST 2019
2019-03-06 12:14:45,549 INFO  Time after invoking service In SUPER:Wed Mar 06 12:14:45 IST 2019
2019-03-06 12:14:45,549 INFO  Service responded successfully with required details
2019-03-06 12:14:45,550 INFO  Time after invoking service:Wed Mar 06 12:14:45 IST 2019
2019-03-06 12:14:45,550 INFO  User solution successfully verified
2019-03-06 12:14:45,550 INFO  Processing the response from verify service
2019-03-06 12:14:45,556 INFO  Starting to parse JSON response
2019-03-06 12:14:45,559 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:14:45,559 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:14:45,559 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:14:45,560 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:14:45,560 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:14:45,560 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:14:45,560 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:14:45,560 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:14:45,560 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:14:45,561 INFO  Successfully parsed JSON response
2019-03-06 12:14:45,561 INFO  In the process of generating verify response in HTML
2019-03-06 12:14:45,639 INFO  Successfully generated verify response in HTML
2019-03-06 12:14:45,640 INFO  Successfully processed the response from service
2019-03-06 12:14:55,213 INFO  Setting request parameters for VerifySolution
2019-03-06 12:14:55,213 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 12:14:55,213 INFO  Starting to parse the user solution
2019-03-06 12:14:55,214 INFO  Displaying user solution
2019-03-06 12:14:55,281 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-9\r\n'''\r\nCreated on Mar 5, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Student:\r\n    def __init__(self):\r\n        self.__student_id = None\r\n        self.__age = None\r\n        self.__marks = None\r\n        self.__course_id = None\r\n        self.__fees = None\r\n\r\n    def get_course_id(self):\r\n        return self.__course_id\r\n\r\n\r\n    def get_fees(self):\r\n        return self.__fees\r\n\r\n\r\n    def set_course_id(self, course_id):\r\n        self.__course_id = course_id\r\n\r\n\r\n    def set_fees(self, course_fee):\r\n        self.__fees = course_fee\r\n\r\n    def get_student_id(self):\r\n        return self.__student_id\r\n\r\n\r\n    def get_age(self):\r\n        return self.__age\r\n\r\n\r\n    def get_marks(self):\r\n        return self.__marks\r\n\r\n\r\n    def set_student_id(self, student_id):\r\n        self.__student_id = student_id\r\n\r\n\r\n    def set_age(self, age):\r\n        self.__age = age\r\n\r\n\r\n    def set_marks(self, marks):\r\n        self.__marks = marks\r\n        \r\n    def validate_marks(self):\r\n        if(self.get_marks()>=0 and self.get_marks()<=100):\r\n            return True\r\n        else:\r\n            return False\r\n    def validate_age(self):\r\n        if(self.get_age()>20):\r\n            return True\r\n        else:\r\n            return False\r\n    def check_qualification(self):\r\n        if(self.get_marks()>=0 and self.get_marks()<=100 and self.get_age()>20):\r\n            if(self.get_marks()>=65):\r\n                return True\r\n            else:\r\n                return False\r\n        else:\r\n            return False\r\n    def choose_course(self,course_id):\r\n         if(course_id==1001):\r\n             self.set_course_id(course_id)\r\n             s=self.set_fees(25575.0)\r\n             if(self.get_marks()>=85):\r\n                 s = 0.75*(self.get_fees())\r\n             return s\r\n         elif(course_id==1002):\r\n             self.set_course_id(course_id)\r\n             s=self.set_fees(15500.0)\r\n             if(self.get_marks()>=85):\r\n                 s = 0.75*self.get_fees()\r\n             return s\r\n         else:\r\n             return False\r\n   \r\ns1 = Student()\r\ns1.set_student_id(167)\r\ns1.set_age(22)\r\ns1.set_marks(74)\r\ns1.validate_marks()\r\ns1.validate_age()\r\ns1.check_qualification()\r\ns1.choose_course(1002)\r\n\r\n\r\n        \r\n        \r\n\r\n    \r\n","asgnmtId":"9","SolutionFileName":"Assign9.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 12:14:55,282 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 12:14:55,282 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 12:14:55,282 INFO  Invoking the service to verify the user solution
2019-03-06 12:14:55,282 INFO  Time before invoking service:Wed Mar 06 12:14:55 IST 2019
2019-03-06 12:14:55,283 INFO  Initialising service address for VerifySolution
2019-03-06 12:14:55,283 INFO  Time before invoking service In SUPER:Wed Mar 06 12:14:55 IST 2019
2019-03-06 12:14:56,342 INFO  Time after invoking service In SUPER:Wed Mar 06 12:14:56 IST 2019
2019-03-06 12:14:56,342 INFO  Service responded successfully with required details
2019-03-06 12:14:56,342 INFO  Time after invoking service:Wed Mar 06 12:14:56 IST 2019
2019-03-06 12:14:56,342 INFO  User solution successfully verified
2019-03-06 12:14:56,343 INFO  Processing the response from verify service
2019-03-06 12:14:56,345 INFO  Starting to parse JSON response
2019-03-06 12:14:56,346 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:14:56,346 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:14:56,346 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:14:56,346 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:14:56,346 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:14:56,346 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:14:56,346 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:14:56,346 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:14:56,346 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:14:56,347 INFO  Successfully parsed JSON response
2019-03-06 12:14:56,347 INFO  In the process of generating verify response in HTML
2019-03-06 12:14:56,412 INFO  Successfully generated verify response in HTML
2019-03-06 12:14:56,412 INFO  Successfully processed the response from service
2019-03-06 12:16:15,713 INFO  Setting request parameters for VerifySolution
2019-03-06 12:16:15,713 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 12:16:15,713 INFO  Starting to parse the user solution
2019-03-06 12:16:15,713 INFO  Displaying user solution
2019-03-06 12:16:15,785 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-9\r\n'''\r\nCreated on Mar 5, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Student:\r\n    def __init__(self):\r\n        self.__student_id = None\r\n        self.__age = None\r\n        self.__marks = None\r\n        self.__course_id = None\r\n        self.__fees = None\r\n\r\n    def get_course_id(self):\r\n        return self.__course_id\r\n\r\n\r\n    def get_fees(self):\r\n        return self.__fees\r\n\r\n\r\n    def set_course_id(self, course_id):\r\n        self.__course_id = course_id\r\n\r\n\r\n    def set_fees(self, course_fee):\r\n        self.__fees = course_fee\r\n\r\n    def get_student_id(self):\r\n        return self.__student_id\r\n\r\n\r\n    def get_age(self):\r\n        return self.__age\r\n\r\n\r\n    def get_marks(self):\r\n        return self.__marks\r\n\r\n\r\n    def set_student_id(self, student_id):\r\n        self.__student_id = student_id\r\n\r\n\r\n    def set_age(self, age):\r\n        self.__age = age\r\n\r\n\r\n    def set_marks(self, marks):\r\n        self.__marks = marks\r\n        \r\n    def validate_marks(self):\r\n        if(self.get_marks()>=0 and self.get_marks()<=100):\r\n            return True\r\n        else:\r\n            return False\r\n    def validate_age(self):\r\n        if(self.get_age()>20):\r\n            return True\r\n        else:\r\n            return False\r\n    def check_qualification(self):\r\n        if(self.get_marks()>=0 and self.get_marks()<=100 and self.get_age()>20):\r\n            if(self.get_marks()>=65):\r\n                return True\r\n            else:\r\n                return False\r\n        else:\r\n            return False\r\n    def choose_course(self,course_id):\r\n         if(course_id==1001):\r\n             self.set_course_id(course_id)\r\n             s=self.set_fees(25575.0)\r\n             if(self.get_marks()>=85):\r\n                 s = 0.75*s\r\n             return s\r\n         elif(course_id==1002):\r\n             self.set_course_id(course_id)\r\n             s=self.set_fees(15500.0)\r\n             if(self.get_marks()>=85):\r\n                 s = 0.75*s\r\n             return s\r\n         else:\r\n             return False\r\n   \r\ns1 = Student()\r\ns1.set_student_id(167)\r\ns1.set_age(22)\r\ns1.set_marks(74)\r\ns1.validate_marks()\r\ns1.validate_age()\r\ns1.check_qualification()\r\ns1.choose_course(1002)\r\n\r\n\r\n        \r\n        \r\n\r\n    \r\n","asgnmtId":"9","SolutionFileName":"Assign9.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 12:16:15,785 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 12:16:15,785 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 12:16:15,785 INFO  Invoking the service to verify the user solution
2019-03-06 12:16:15,786 INFO  Time before invoking service:Wed Mar 06 12:16:15 IST 2019
2019-03-06 12:16:15,786 INFO  Initialising service address for VerifySolution
2019-03-06 12:16:15,786 INFO  Time before invoking service In SUPER:Wed Mar 06 12:16:15 IST 2019
2019-03-06 12:16:16,957 INFO  Time after invoking service In SUPER:Wed Mar 06 12:16:16 IST 2019
2019-03-06 12:16:16,957 INFO  Service responded successfully with required details
2019-03-06 12:16:16,957 INFO  Time after invoking service:Wed Mar 06 12:16:16 IST 2019
2019-03-06 12:16:16,957 INFO  User solution successfully verified
2019-03-06 12:16:16,958 INFO  Processing the response from verify service
2019-03-06 12:16:16,960 INFO  Starting to parse JSON response
2019-03-06 12:16:16,960 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:16:16,960 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:16:16,960 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:16:16,960 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:16:16,960 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:16:16,960 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:16:16,960 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:16:16,960 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:16:16,960 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:16:16,960 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:16:16,961 INFO  Successfully parsed JSON response
2019-03-06 12:16:16,962 INFO  In the process of generating verify response in HTML
2019-03-06 12:16:17,047 INFO  Successfully generated verify response in HTML
2019-03-06 12:16:17,047 INFO  Successfully processed the response from service
2019-03-06 12:19:43,854 INFO  Setting request parameters for VerifySolution
2019-03-06 12:19:43,854 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 12:19:43,854 INFO  Starting to parse the user solution
2019-03-06 12:19:43,854 INFO  Displaying user solution
2019-03-06 12:19:43,923 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-9\r\n'''\r\nCreated on Mar 5, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Student:\r\n    def __init__(self):\r\n        self.__student_id = None\r\n        self.__age = None\r\n        self.__marks = None\r\n        self.__course_id = None\r\n        self.__fees = None\r\n\r\n    def get_course_id(self):\r\n        return self.__course_id\r\n\r\n\r\n    def get_fees(self):\r\n        return self.__fees\r\n\r\n\r\n    def set_course_id(self, course_id):\r\n        self.__course_id = course_id\r\n\r\n\r\n    def set_fees(self, course_fee):\r\n        self.__fees = course_fee\r\n\r\n    def get_student_id(self):\r\n        return self.__student_id\r\n\r\n\r\n    def get_age(self):\r\n        return self.__age\r\n\r\n\r\n    def get_marks(self):\r\n        return self.__marks\r\n\r\n\r\n    def set_student_id(self, student_id):\r\n        self.__student_id = student_id\r\n\r\n\r\n    def set_age(self, age):\r\n        self.__age = age\r\n\r\n\r\n    def set_marks(self, marks):\r\n        self.__marks = marks\r\n        \r\n    def validate_marks(self):\r\n        if(self.get_marks()>=0 and self.get_marks()<=100):\r\n            return True\r\n        else:\r\n            return False\r\n    def validate_age(self):\r\n        if(self.get_age()>20):\r\n            return True\r\n        else:\r\n            return False\r\n    def check_qualification(self):\r\n        if(self.get_marks()>=0 and self.get_marks()<=100 and self.get_age()>20):\r\n            if(self.get_marks()>=65):\r\n                return True\r\n            else:\r\n                return False\r\n        else:\r\n            return False\r\n    def choose_course(self,course_id):\r\n         if(course_id==1001):\r\n             self.set_course_id(course_id)\r\n             self.set_fees(25575.0)\r\n             s=self.get_fees()\r\n             if(self.get_marks()>=85):\r\n                 s = 0.75*s\r\n             return s\r\n         elif(course_id==1002):\r\n             self.set_course_id(course_id)\r\n             self.set_fees(15500.0)\r\n             s=self.get_fees()\r\n             if(self.get_marks()>=85):\r\n                 s = 0.75*s\r\n             return s\r\n         else:\r\n             return False\r\n   \r\ns1 = Student()\r\ns1.set_student_id(167)\r\ns1.set_age(22)\r\ns1.set_marks(85)\r\ns1.validate_marks()\r\ns1.validate_age()\r\ns1.check_qualification()\r\ns1.choose_course(1002)\r\n\r\n\r\n        \r\n        \r\n\r\n    \r\n","asgnmtId":"9","SolutionFileName":"Assign9.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 12:19:43,924 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 12:19:43,925 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 12:19:43,925 INFO  Invoking the service to verify the user solution
2019-03-06 12:19:43,925 INFO  Time before invoking service:Wed Mar 06 12:19:43 IST 2019
2019-03-06 12:19:43,925 INFO  Initialising service address for VerifySolution
2019-03-06 12:19:43,926 INFO  Time before invoking service In SUPER:Wed Mar 06 12:19:43 IST 2019
2019-03-06 12:19:44,897 INFO  Time after invoking service In SUPER:Wed Mar 06 12:19:44 IST 2019
2019-03-06 12:19:44,897 INFO  Service responded successfully with required details
2019-03-06 12:19:44,897 INFO  Time after invoking service:Wed Mar 06 12:19:44 IST 2019
2019-03-06 12:19:44,897 INFO  User solution successfully verified
2019-03-06 12:19:44,898 INFO  Processing the response from verify service
2019-03-06 12:19:44,905 INFO  Starting to parse JSON response
2019-03-06 12:19:44,908 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:19:44,908 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:19:44,908 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:19:44,908 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:19:44,908 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:19:44,908 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:19:44,908 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:19:44,908 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:19:44,908 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:19:44,910 INFO  Successfully parsed JSON response
2019-03-06 12:19:44,910 INFO  In the process of generating verify response in HTML
2019-03-06 12:19:45,002 INFO  Successfully generated verify response in HTML
2019-03-06 12:19:45,002 INFO  Successfully processed the response from service
2019-03-06 12:20:36,976 INFO  Setting request parameters for VerifySolution
2019-03-06 12:20:36,976 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 12:20:36,976 INFO  Starting to parse the user solution
2019-03-06 12:20:36,977 INFO  Displaying user solution
2019-03-06 12:20:37,041 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-9\r\n'''\r\nCreated on Mar 5, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Student:\r\n    def __init__(self):\r\n        self.__student_id = None\r\n        self.__age = None\r\n        self.__marks = None\r\n        self.__course_id = None\r\n        self.__fees = None\r\n\r\n    def get_course_id(self):\r\n        return self.__course_id\r\n\r\n\r\n    def get_fees(self):\r\n        return self.__fees\r\n\r\n\r\n    def set_course_id(self, course_id):\r\n        self.__course_id = course_id\r\n\r\n\r\n    def set_fees(self, course_fee):\r\n        self.__fees = course_fee\r\n\r\n    def get_student_id(self):\r\n        return self.__student_id\r\n\r\n\r\n    def get_age(self):\r\n        return self.__age\r\n\r\n\r\n    def get_marks(self):\r\n        return self.__marks\r\n\r\n\r\n    def set_student_id(self, student_id):\r\n        self.__student_id = student_id\r\n\r\n\r\n    def set_age(self, age):\r\n        self.__age = age\r\n\r\n\r\n    def set_marks(self, marks):\r\n        self.__marks = marks\r\n        \r\n    def validate_marks(self):\r\n        if(self.get_marks()>=0 and self.get_marks()<=100):\r\n            return True\r\n        else:\r\n            return False\r\n    def validate_age(self):\r\n        if(self.get_age()>20):\r\n            return True\r\n        else:\r\n            return False\r\n    def check_qualification(self):\r\n        if(self.get_marks()>=0 and self.get_marks()<=100 and self.get_age()>20):\r\n            if(self.get_marks()>=65):\r\n                return True\r\n            else:\r\n                return False\r\n        else:\r\n            return False\r\n    def choose_course(self,course_id):\r\n         if(course_id==1001):\r\n             self.set_course_id(course_id)\r\n             self.set_fees(25575)\r\n             s=self.get_fees()\r\n             if(self.get_marks()>=85):\r\n                 s = 0.75*s\r\n             return s\r\n         elif(course_id==1002):\r\n             self.set_course_id(course_id)\r\n             self.set_fees(15500)\r\n             s=self.get_fees()\r\n             if(self.get_marks()>=85):\r\n                 s = 0.75*s\r\n             return s\r\n         else:\r\n             return False\r\n   \r\ns1 = Student()\r\ns1.set_student_id(167)\r\ns1.set_age(22)\r\ns1.set_marks(85)\r\ns1.validate_marks()\r\ns1.validate_age()\r\ns1.check_qualification()\r\ns1.choose_course(1002)\r\n\r\n\r\n        \r\n        \r\n\r\n    \r\n","asgnmtId":"9","SolutionFileName":"Assign9.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 12:20:37,042 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 12:20:37,042 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 12:20:37,042 INFO  Invoking the service to verify the user solution
2019-03-06 12:20:37,043 INFO  Time before invoking service:Wed Mar 06 12:20:37 IST 2019
2019-03-06 12:20:37,043 INFO  Initialising service address for VerifySolution
2019-03-06 12:20:37,044 INFO  Time before invoking service In SUPER:Wed Mar 06 12:20:37 IST 2019
2019-03-06 12:20:38,285 INFO  Time after invoking service In SUPER:Wed Mar 06 12:20:38 IST 2019
2019-03-06 12:20:38,285 INFO  Service responded successfully with required details
2019-03-06 12:20:38,285 INFO  Time after invoking service:Wed Mar 06 12:20:38 IST 2019
2019-03-06 12:20:38,285 INFO  User solution successfully verified
2019-03-06 12:20:38,286 INFO  Processing the response from verify service
2019-03-06 12:20:38,288 INFO  Starting to parse JSON response
2019-03-06 12:20:38,289 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:20:38,289 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:20:38,289 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:20:38,289 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:20:38,289 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:20:38,289 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:20:38,289 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:20:38,289 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:20:38,289 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:20:38,290 INFO  Successfully parsed JSON response
2019-03-06 12:20:38,290 INFO  In the process of generating verify response in HTML
2019-03-06 12:20:38,361 INFO  Successfully generated verify response in HTML
2019-03-06 12:20:38,362 INFO  Successfully processed the response from service
2019-03-06 12:21:06,343 INFO  Setting request parameters for VerifySolution
2019-03-06 12:21:06,343 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 12:21:06,343 INFO  Starting to parse the user solution
2019-03-06 12:21:06,344 INFO  Displaying user solution
2019-03-06 12:21:06,415 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-9\r\n'''\r\nCreated on Mar 5, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Student:\r\n    def __init__(self):\r\n        self.__student_id = None\r\n        self.__age = None\r\n        self.__marks = None\r\n        self.__course_id = None\r\n        self.__fees = None\r\n\r\n    def get_course_id(self):\r\n        return self.__course_id\r\n\r\n\r\n    def get_fees(self):\r\n        return self.__fees\r\n\r\n\r\n    def set_course_id(self, course_id):\r\n        self.__course_id = course_id\r\n\r\n\r\n    def set_fees(self, course_fee):\r\n        self.__fees = course_fee\r\n\r\n    def get_student_id(self):\r\n        return self.__student_id\r\n\r\n\r\n    def get_age(self):\r\n        return self.__age\r\n\r\n\r\n    def get_marks(self):\r\n        return self.__marks\r\n\r\n\r\n    def set_student_id(self, student_id):\r\n        self.__student_id = student_id\r\n\r\n\r\n    def set_age(self, age):\r\n        self.__age = age\r\n\r\n\r\n    def set_marks(self, marks):\r\n        self.__marks = marks\r\n        \r\n    def validate_marks(self):\r\n        if(self.get_marks()>=0 and self.get_marks()<=100):\r\n            return True\r\n        else:\r\n            return False\r\n    def validate_age(self):\r\n        if(self.get_age()>20):\r\n            return True\r\n        else:\r\n            return False\r\n    def check_qualification(self):\r\n        if(self.get_marks()>=0 and self.get_marks()<=100 and self.get_age()>20):\r\n            if(self.get_marks()>=65):\r\n                return True\r\n            else:\r\n                return False\r\n        else:\r\n            return False\r\n    def choose_course(self,course_id):\r\n         if(course_id==1001):\r\n             self.set_course_id(course_id)\r\n             self.set_fees(25575)\r\n             s=self.get_fees()\r\n             if(self.get_marks()>=85):\r\n                 s = 0.75*s\r\n             return s\r\n         elif(course_id==1002):\r\n             self.set_course_id(course_id)\r\n             self.set_fees(15500)\r\n             s=self.get_fees()\r\n             if(self.get_marks()>=85):\r\n                 s = 0.75*s\r\n             return s\r\n         else:\r\n             return False\r\n   \r\ns1 = Student()\r\ns1.set_student_id(167)\r\ns1.set_age(22)\r\ns1.set_marks(85)\r\ns1.validate_marks()\r\ns1.validate_age()\r\ns1.check_qualification()\r\ns1.choose_course(1002)\r\n\r\n\r\n        \r\n        \r\n\r\n    \r\n","asgnmtId":"9","SolutionFileName":"Assign9.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 12:21:06,416 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 12:21:06,416 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 12:21:06,416 INFO  Invoking the service to verify the user solution
2019-03-06 12:21:06,416 INFO  Time before invoking service:Wed Mar 06 12:21:06 IST 2019
2019-03-06 12:21:06,416 INFO  Initialising service address for VerifySolution
2019-03-06 12:21:06,417 INFO  Time before invoking service In SUPER:Wed Mar 06 12:21:06 IST 2019
2019-03-06 12:21:07,701 INFO  Time after invoking service In SUPER:Wed Mar 06 12:21:07 IST 2019
2019-03-06 12:21:07,701 INFO  Service responded successfully with required details
2019-03-06 12:21:07,701 INFO  Time after invoking service:Wed Mar 06 12:21:07 IST 2019
2019-03-06 12:21:07,701 INFO  User solution successfully verified
2019-03-06 12:21:07,702 INFO  Processing the response from verify service
2019-03-06 12:21:07,703 INFO  Starting to parse JSON response
2019-03-06 12:21:07,704 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:21:07,704 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:21:07,704 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:21:07,705 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:21:07,705 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:21:07,705 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:21:07,705 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:21:07,705 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:21:07,705 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:21:07,706 INFO  Successfully parsed JSON response
2019-03-06 12:21:07,706 INFO  In the process of generating verify response in HTML
2019-03-06 12:21:07,781 INFO  Successfully generated verify response in HTML
2019-03-06 12:21:07,781 INFO  Successfully processed the response from service
2019-03-06 12:21:47,942 INFO  Setting request parameters for VerifySolution
2019-03-06 12:21:47,942 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 12:21:47,942 INFO  Starting to parse the user solution
2019-03-06 12:21:47,943 INFO  Displaying user solution
2019-03-06 12:21:48,009 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-9\r\n'''\r\nCreated on Mar 5, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Student:\r\n    def __init__(self):\r\n        self.__student_id = None\r\n        self.__age = None\r\n        self.__marks = None\r\n        self.__course_id = None\r\n        self.__fees = None\r\n\r\n    def get_course_id(self):\r\n        return self.__course_id\r\n\r\n\r\n    def get_fees(self):\r\n        return self.__fees\r\n\r\n\r\n    def set_course_id(self, course_id):\r\n        self.__course_id = course_id\r\n\r\n\r\n    def set_fees(self, course_fee):\r\n        self.__fees = course_fee\r\n\r\n    def get_student_id(self):\r\n        return self.__student_id\r\n\r\n\r\n    def get_age(self):\r\n        return self.__age\r\n\r\n\r\n    def get_marks(self):\r\n        return self.__marks\r\n\r\n\r\n    def set_student_id(self, student_id):\r\n        self.__student_id = student_id\r\n\r\n\r\n    def set_age(self, age):\r\n        self.__age = age\r\n\r\n\r\n    def set_marks(self, marks):\r\n        self.__marks = marks\r\n        \r\n    def validate_marks(self):\r\n        if(self.get_marks()>=0 and self.get_marks()<=100):\r\n            return True\r\n        else:\r\n            return False\r\n    def validate_age(self):\r\n        if(self.get_age()>20):\r\n            return True\r\n        else:\r\n            return False\r\n    def check_qualification(self):\r\n        if(self.get_marks()>=0 and self.get_marks()<=100 and self.get_age()>20):\r\n            if(self.get_marks()>=65):\r\n                return True\r\n            else:\r\n                return False\r\n        else:\r\n            return False\r\n    def choose_course(self,course_id):\r\n         if(course_id==1001):\r\n             self.set_course_id(course_id)\r\n             self.set_fees(25575)\r\n             s=self.get_fees()\r\n             if(self.get_marks()>=85):\r\n                 s = 0.75*s\r\n             return s\r\n         elif(course_id==1002):\r\n             self.set_course_id(course_id)\r\n             self.set_fees(15500)\r\n             s=self.get_fees()\r\n             if(self.get_marks()>=85):\r\n                 s = 0.75*s\r\n             return s\r\n         else:\r\n             return False\r\n   \r\ns1 = Student()\r\ns1.set_student_id(167)\r\ns1.set_age(22)\r\ns1.set_marks(85)\r\ns1.validate_marks()\r\ns1.validate_age()\r\ns1.check_qualification()\r\ns1.choose_course(1002)\r\n\r\n\r\n        \r\n        \r\n\r\n    \r\n","asgnmtId":"9","SolutionFileName":"Assign9.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 12:21:48,009 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 12:21:48,009 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 12:21:48,010 INFO  Invoking the service to verify the user solution
2019-03-06 12:21:48,010 INFO  Time before invoking service:Wed Mar 06 12:21:48 IST 2019
2019-03-06 12:21:48,010 INFO  Initialising service address for VerifySolution
2019-03-06 12:21:48,010 INFO  Time before invoking service In SUPER:Wed Mar 06 12:21:48 IST 2019
2019-03-06 12:21:49,191 INFO  Time after invoking service In SUPER:Wed Mar 06 12:21:49 IST 2019
2019-03-06 12:21:49,192 INFO  Service responded successfully with required details
2019-03-06 12:21:49,192 INFO  Time after invoking service:Wed Mar 06 12:21:49 IST 2019
2019-03-06 12:21:49,192 INFO  User solution successfully verified
2019-03-06 12:21:49,192 INFO  Processing the response from verify service
2019-03-06 12:21:49,194 INFO  Starting to parse JSON response
2019-03-06 12:21:49,195 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:21:49,195 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:21:49,195 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:21:49,195 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:21:49,195 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:21:49,195 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:21:49,195 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:21:49,195 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:21:49,195 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:21:49,196 INFO  Successfully parsed JSON response
2019-03-06 12:21:49,197 INFO  In the process of generating verify response in HTML
2019-03-06 12:21:49,270 INFO  Successfully generated verify response in HTML
2019-03-06 12:21:49,270 INFO  Successfully processed the response from service
2019-03-06 12:23:05,725 INFO  Setting request parameters for VerifySolution
2019-03-06 12:23:05,726 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 12:23:05,726 INFO  Starting to parse the user solution
2019-03-06 12:23:05,726 INFO  Displaying user solution
2019-03-06 12:23:05,792 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-9\r\n'''\r\nCreated on Mar 5, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Student:\r\n    def __init__(self):\r\n        self.__student_id = None\r\n        self.__age = None\r\n        self.__marks = None\r\n        self.__course_id = None\r\n        self.__fees = None\r\n\r\n    def get_course_id(self):\r\n        return self.__course_id\r\n\r\n\r\n    def get_fees(self):\r\n        return self.__fees\r\n\r\n\r\n    def set_course_id(self, course_id):\r\n        self.__course_id = course_id\r\n\r\n\r\n    def set_fees(self, course_fee):\r\n        self.__fees = course_fee\r\n\r\n    def get_student_id(self):\r\n        return self.__student_id\r\n\r\n\r\n    def get_age(self):\r\n        return self.__age\r\n\r\n\r\n    def get_marks(self):\r\n        return self.__marks\r\n\r\n\r\n    def set_student_id(self, student_id):\r\n        self.__student_id = student_id\r\n\r\n\r\n    def set_age(self, age):\r\n        self.__age = age\r\n\r\n\r\n    def set_marks(self, marks):\r\n        self.__marks = marks\r\n        \r\n    def validate_marks(self):\r\n        if(self.get_marks()>=0 and self.get_marks()<=100):\r\n            return True\r\n        else:\r\n            return False\r\n    def validate_age(self):\r\n        if(self.get_age()>20):\r\n            return True\r\n        else:\r\n            return False\r\n    def check_qualification(self):\r\n        if(self.get_marks()>=0 and self.get_marks()<=100 and self.get_age()>20):\r\n            if(self.get_marks()>=65):\r\n                return True\r\n            else:\r\n                return False\r\n        else:\r\n            return False\r\n    def choose_course(self,course_id):\r\n         if(course_id==1001):\r\n             self.set_course_id(course_id)\r\n             self.set_fees(25575)\r\n             s=self.get_fees()\r\n             if(self.get_marks()>=85):\r\n                 s = 0.75*s\r\n             return s\r\n         elif(course_id==1002):\r\n             self.set_course_id(course_id)\r\n             self.set_fees(15500)\r\n             s=self.get_fees()\r\n             if(self.get_marks()>=85):\r\n                 s = 0.75*s\r\n             return s\r\n         else:\r\n             return False\r\n   \r\ns1 = Student()\r\ns1.set_student_id(167)\r\ns1.set_age(22)\r\ns1.set_marks(85)\r\ns1.validate_marks()\r\ns1.validate_age()\r\ns1.check_qualification()\r\ns1.choose_course(1002)\r\n\r\n\r\n        \r\n        \r\n\r\n    \r\n","asgnmtId":"9","SolutionFileName":"Assign9.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 12:23:05,792 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 12:23:05,793 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 12:23:05,793 INFO  Invoking the service to verify the user solution
2019-03-06 12:23:05,793 INFO  Time before invoking service:Wed Mar 06 12:23:05 IST 2019
2019-03-06 12:23:05,793 INFO  Initialising service address for VerifySolution
2019-03-06 12:23:05,794 INFO  Time before invoking service In SUPER:Wed Mar 06 12:23:05 IST 2019
2019-03-06 12:23:07,206 INFO  Time after invoking service In SUPER:Wed Mar 06 12:23:07 IST 2019
2019-03-06 12:23:07,206 INFO  Service responded successfully with required details
2019-03-06 12:23:07,206 INFO  Time after invoking service:Wed Mar 06 12:23:07 IST 2019
2019-03-06 12:23:07,206 INFO  User solution successfully verified
2019-03-06 12:23:07,207 INFO  Processing the response from verify service
2019-03-06 12:23:07,210 INFO  Starting to parse JSON response
2019-03-06 12:23:07,210 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:23:07,211 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:23:07,211 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:23:07,211 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:23:07,211 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:23:07,211 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:23:07,211 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:23:07,211 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:23:07,211 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:23:07,212 INFO  Successfully parsed JSON response
2019-03-06 12:23:07,213 INFO  In the process of generating verify response in HTML
2019-03-06 12:23:07,298 INFO  Successfully generated verify response in HTML
2019-03-06 12:23:07,298 INFO  Successfully processed the response from service
2019-03-06 12:23:58,617 INFO  Setting request parameters for VerifySolution
2019-03-06 12:23:58,617 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 12:23:58,617 INFO  Starting to parse the user solution
2019-03-06 12:23:58,618 INFO  Displaying user solution
2019-03-06 12:23:58,691 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-9\r\n'''\r\nCreated on Mar 5, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Student:\r\n    def __init__(self):\r\n        self.__student_id = None\r\n        self.__age = None\r\n        self.__marks = None\r\n        self.__course_id = None\r\n        self.__fees = None\r\n\r\n    def get_course_id(self):\r\n        return self.__course_id\r\n\r\n\r\n    def get_fees(self):\r\n        return self.__fees\r\n\r\n\r\n    def set_course_id(self, course_id):\r\n        self.__course_id = course_id\r\n\r\n\r\n    def set_fees(self, course_fee):\r\n        self.__fees = course_fee\r\n\r\n    def get_student_id(self):\r\n        return self.__student_id\r\n\r\n\r\n    def get_age(self):\r\n        return self.__age\r\n\r\n\r\n    def get_marks(self):\r\n        return self.__marks\r\n\r\n\r\n    def set_student_id(self, student_id):\r\n        self.__student_id = student_id\r\n\r\n\r\n    def set_age(self, age):\r\n        self.__age = age\r\n\r\n\r\n    def set_marks(self, marks):\r\n        self.__marks = marks\r\n        \r\n    def validate_marks(self):\r\n        if(self.get_marks()>=0 and self.get_marks()<=100):\r\n            return True\r\n        else:\r\n            return False\r\n    def validate_age(self):\r\n        if(self.get_age()>20):\r\n            return True\r\n        else:\r\n            return False\r\n    def check_qualification(self):\r\n        if(self.get_marks()>=0 and self.get_marks()<=100 and self.get_age()>20):\r\n            if(self.get_marks()>=65):\r\n                return True\r\n            else:\r\n                return False\r\n        else:\r\n            return False\r\n    def choose_course(self,course_id):\r\n         if(course_id==1001):\r\n             self.set_course_id(course_id)\r\n             self.set_fees(25575)\r\n             s=self.get_fees()\r\n             if(self.get_marks()>=85):\r\n                 s = 0.75*s\r\n             return s\r\n         elif(course_id==1002):\r\n             self.set_course_id(course_id)\r\n             self.set_fees(15500)\r\n             s=self.get_fees()\r\n             if(self.get_marks()>=85):\r\n                 s = 0.75*s\r\n             return s\r\n         else:\r\n             return False\r\n   \r\ns1 = Student()\r\ns1.set_student_id(167)\r\ns1.set_age(22)\r\ns1.set_marks(85)\r\ns1.validate_marks()\r\ns1.validate_age()\r\ns1.check_qualification()\r\ns1.choose_course(1002)\r\n\r\n\r\n        \r\n        \r\n\r\n    \r\n","asgnmtId":"9","SolutionFileName":"Assign9.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 12:23:58,692 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 12:23:58,692 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 12:23:58,692 INFO  Invoking the service to verify the user solution
2019-03-06 12:23:58,692 INFO  Time before invoking service:Wed Mar 06 12:23:58 IST 2019
2019-03-06 12:23:58,693 INFO  Initialising service address for VerifySolution
2019-03-06 12:23:58,693 INFO  Time before invoking service In SUPER:Wed Mar 06 12:23:58 IST 2019
2019-03-06 12:23:59,914 INFO  Time after invoking service In SUPER:Wed Mar 06 12:23:59 IST 2019
2019-03-06 12:23:59,914 INFO  Service responded successfully with required details
2019-03-06 12:23:59,915 INFO  Time after invoking service:Wed Mar 06 12:23:59 IST 2019
2019-03-06 12:23:59,915 INFO  User solution successfully verified
2019-03-06 12:23:59,915 INFO  Processing the response from verify service
2019-03-06 12:23:59,917 INFO  Starting to parse JSON response
2019-03-06 12:23:59,918 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:23:59,918 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:23:59,918 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:23:59,918 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:23:59,918 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:23:59,918 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:23:59,918 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:23:59,919 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:23:59,919 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:23:59,920 INFO  Successfully parsed JSON response
2019-03-06 12:23:59,920 INFO  In the process of generating verify response in HTML
2019-03-06 12:23:59,991 INFO  Successfully generated verify response in HTML
2019-03-06 12:23:59,991 INFO  Successfully processed the response from service
2019-03-06 12:27:36,297 INFO  Setting request parameters for VerifySolution
2019-03-06 12:27:36,297 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 12:27:36,297 INFO  Starting to parse the user solution
2019-03-06 12:27:36,300 INFO  Displaying user solution
2019-03-06 12:27:36,388 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-9\r\n'''\r\nCreated on Mar 5, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Student:\r\n    def __init__(self):\r\n        self.__student_id = None\r\n        self.__age = None\r\n        self.__marks = None\r\n        self.__course_id = None\r\n        self.__fees = None\r\n\r\n    def get_course_id(self):\r\n        return self.__course_id\r\n\r\n\r\n    def get_fees(self):\r\n        return self.__fees\r\n\r\n\r\n    def get_student_id(self):\r\n        return self.__student_id\r\n\r\n\r\n    def get_age(self):\r\n        return self.__age\r\n\r\n\r\n    def get_marks(self):\r\n        return self.__marks\r\n\r\n\r\n    def set_student_id(self, student_id):\r\n        self.__student_id = student_id\r\n\r\n\r\n    def set_age(self, age):\r\n        self.__age = age\r\n\r\n\r\n    def set_marks(self, marks):\r\n        self.__marks = marks\r\n        \r\n    def validate_marks(self):\r\n        if(self.get_marks()>=0 and self.get_marks()<=100):\r\n            return True\r\n        else:\r\n            return False\r\n    def validate_age(self):\r\n        if(self.get_age()>20):\r\n            return True\r\n        else:\r\n            return False\r\n    def check_qualification(self):\r\n        if(self.get_marks()>=0 and self.get_marks()<=100 and self.get_age()>20):\r\n            if(self.get_marks()>=65):\r\n                return True\r\n            else:\r\n                return False\r\n        else:\r\n            return False\r\n    def choose_course(self,course_id):\r\n         if(course_id==1001):\r\n             self.__course_id = 1001\r\n             self.__fees = 25575.0\r\n             s=self.get_fees()\r\n             if(self.get_marks()>=85):\r\n                 s = 0.75*s\r\n             return s\r\n         elif(course_id==1002):\r\n             self.__course_id = 1002\r\n             self.__fees = 15500.0\r\n             s=self.get_fees()\r\n             if(self.get_marks()>=85):\r\n                 s = 0.75*s\r\n             return s\r\n         else:\r\n             return False\r\n   \r\ns1 = Student()\r\ns1.set_student_id(167)\r\ns1.set_age(22)\r\ns1.set_marks(85)\r\ns1.validate_marks()\r\ns1.validate_age()\r\ns1.check_qualification()\r\ns1.choose_course(1002)\r\n\r\n\r\n        \r\n        \r\n\r\n    \r\n","asgnmtId":"9","SolutionFileName":"Assign9.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 12:27:36,389 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 12:27:36,390 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 12:27:36,390 INFO  Invoking the service to verify the user solution
2019-03-06 12:27:36,390 INFO  Time before invoking service:Wed Mar 06 12:27:36 IST 2019
2019-03-06 12:27:36,390 INFO  Initialising service address for VerifySolution
2019-03-06 12:27:36,391 INFO  Time before invoking service In SUPER:Wed Mar 06 12:27:36 IST 2019
2019-03-06 12:27:37,593 INFO  Time after invoking service In SUPER:Wed Mar 06 12:27:37 IST 2019
2019-03-06 12:27:37,593 INFO  Service responded successfully with required details
2019-03-06 12:27:37,594 INFO  Time after invoking service:Wed Mar 06 12:27:37 IST 2019
2019-03-06 12:27:37,594 INFO  User solution successfully verified
2019-03-06 12:27:37,595 INFO  Processing the response from verify service
2019-03-06 12:27:37,602 INFO  Starting to parse JSON response
2019-03-06 12:27:37,603 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:27:37,603 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:27:37,603 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:27:37,603 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:27:37,603 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:27:37,603 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:27:37,603 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:27:37,603 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:27:37,603 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:27:37,605 INFO  Successfully parsed JSON response
2019-03-06 12:27:37,606 INFO  In the process of generating verify response in HTML
2019-03-06 12:27:37,681 INFO  Successfully generated verify response in HTML
2019-03-06 12:27:37,681 INFO  Successfully processed the response from service
2019-03-06 12:29:21,157 INFO  Setting request parameters for VerifySolution
2019-03-06 12:29:21,157 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 12:29:21,157 INFO  Starting to parse the user solution
2019-03-06 12:29:21,158 INFO  Displaying user solution
2019-03-06 12:29:21,225 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-9\r\n'''\r\nCreated on Mar 5, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Student:\r\n    def __init__(self):\r\n        self.__student_id = None\r\n        self.__age = None\r\n        self.__marks = None\r\n        self.__course_id = None\r\n        self.__fees = None\r\n\r\n    def get_course_id(self):\r\n        return self.__course_id\r\n\r\n\r\n    def get_fees(self):\r\n        return self.__fees\r\n\r\n\r\n    def get_student_id(self):\r\n        return self.__student_id\r\n\r\n\r\n    def get_age(self):\r\n        return self.__age\r\n\r\n\r\n    def get_marks(self):\r\n        return self.__marks\r\n\r\n\r\n    def set_student_id(self, student_id):\r\n        self.__student_id = student_id\r\n\r\n\r\n    def set_age(self, age):\r\n        self.__age = age\r\n\r\n\r\n    def set_marks(self, marks):\r\n        self.__marks = marks\r\n        \r\n    def validate_marks(self):\r\n        if(self.get_marks()>=0 and self.get_marks()<=100):\r\n            return True\r\n        else:\r\n            return False\r\n    def validate_age(self):\r\n        if(self.get_age()>20):\r\n            return True\r\n        else:\r\n            return False\r\n    def check_qualification(self):\r\n        if(self.get_marks()>=0 and self.get_marks()<=100 and self.get_age()>20):\r\n            if(self.get_marks()>=65):\r\n                return True\r\n            else:\r\n                return False\r\n        else:\r\n            return False\r\n    def choose_course(self,course_id):\r\n         if(course_id==1001):\r\n             self.__course_id = 1001\r\n             self.__fees = 25575.0\r\n             if(self.get_marks()>=85):\r\n                 self.__fees = 0.75*self.__fees\r\n             return self.__fees\r\n         elif(course_id==1002):\r\n             self.__course_id = 1002\r\n             self.__fees = 15500.0\r\n             if(self.get_marks()>=85):\r\n                 self.__fees= 0.75*self.__fees\r\n             return self.__fees\r\n         else:\r\n             return False\r\n   \r\ns1 = Student()\r\ns1.set_student_id(167)\r\ns1.set_age(22)\r\ns1.set_marks(85)\r\ns1.validate_marks()\r\ns1.validate_age()\r\ns1.check_qualification()\r\ns1.choose_course(1002)\r\n\r\n\r\n        \r\n        \r\n\r\n    \r\n","asgnmtId":"9","SolutionFileName":"Assign9.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 12:29:21,225 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 12:29:21,226 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 12:29:21,226 INFO  Invoking the service to verify the user solution
2019-03-06 12:29:21,226 INFO  Time before invoking service:Wed Mar 06 12:29:21 IST 2019
2019-03-06 12:29:21,226 INFO  Initialising service address for VerifySolution
2019-03-06 12:29:21,227 INFO  Time before invoking service In SUPER:Wed Mar 06 12:29:21 IST 2019
2019-03-06 12:29:22,357 INFO  Time after invoking service In SUPER:Wed Mar 06 12:29:22 IST 2019
2019-03-06 12:29:22,357 INFO  Service responded successfully with required details
2019-03-06 12:29:22,357 INFO  Time after invoking service:Wed Mar 06 12:29:22 IST 2019
2019-03-06 12:29:22,358 INFO  User solution successfully verified
2019-03-06 12:29:22,358 INFO  Processing the response from verify service
2019-03-06 12:29:22,360 INFO  Starting to parse JSON response
2019-03-06 12:29:22,361 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:29:22,361 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:29:22,361 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:29:22,361 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:29:22,362 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:29:22,362 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:29:22,362 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:29:22,362 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:29:22,362 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:29:22,363 INFO  Successfully parsed JSON response
2019-03-06 12:29:22,363 INFO  In the process of generating verify response in HTML
2019-03-06 12:29:22,434 INFO  Successfully generated verify response in HTML
2019-03-06 12:29:22,434 INFO  Successfully processed the response from service
2019-03-06 12:29:55,932 INFO  Setting request parameters for VerifySolution
2019-03-06 12:29:55,932 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 12:29:55,932 INFO  Starting to parse the user solution
2019-03-06 12:29:55,932 INFO  Displaying user solution
2019-03-06 12:29:55,994 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-9\r\n'''\r\nCreated on Mar 5, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Student:\r\n    def __init__(self):\r\n        self.__student_id = None\r\n        self.__age = None\r\n        self.__marks = None\r\n        self.__course_id = None\r\n        self.__fees = None\r\n\r\n    def get_course_id(self):\r\n        return self.__course_id\r\n\r\n\r\n    def get_fees(self):\r\n        return self.__fees\r\n\r\n\r\n    def get_student_id(self):\r\n        return self.__student_id\r\n\r\n\r\n    def get_age(self):\r\n        return self.__age\r\n\r\n\r\n    def get_marks(self):\r\n        return self.__marks\r\n\r\n\r\n    def set_student_id(self, student_id):\r\n        self.__student_id = student_id\r\n\r\n\r\n    def set_age(self, age):\r\n        self.__age = age\r\n\r\n\r\n    def set_marks(self, marks):\r\n        self.__marks = marks\r\n        \r\n    def validate_marks(self):\r\n        if(self.get_marks()>=0 and self.get_marks()<=100):\r\n            return True\r\n        else:\r\n            return False\r\n    def validate_age(self):\r\n        if(self.get_age()>20):\r\n            return True\r\n        else:\r\n            return False\r\n    def check_qualification(self):\r\n        if(self.get_marks()>=0 and self.get_marks()<=100 and self.get_age()>20):\r\n            if(self.get_marks()>=65):\r\n                return True\r\n            else:\r\n                return False\r\n        else:\r\n            return False\r\n    def choose_course(self,course_id):\r\n         if(course_id==1001):\r\n             self.__course_id = 1001\r\n             self.__fees = 25575.0\r\n             if(self.get_marks()>=85):\r\n                 self.__fees = 0.75*self.__fees\r\n             return True\r\n         elif(course_id==1002):\r\n             self.__course_id = 1002\r\n             self.__fees = 15500.0\r\n             if(self.get_marks()>=85):\r\n                 self.__fees= 0.75*self.__fees\r\n             return True\r\n         else:\r\n             return False\r\n   \r\ns1 = Student()\r\ns1.set_student_id(167)\r\ns1.set_age(22)\r\ns1.set_marks(85)\r\ns1.validate_marks()\r\ns1.validate_age()\r\ns1.check_qualification()\r\ns1.choose_course(1002)\r\n\r\n\r\n        \r\n        \r\n\r\n    \r\n","asgnmtId":"9","SolutionFileName":"Assign9.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 12:29:55,994 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 12:29:55,995 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 12:29:55,995 INFO  Invoking the service to verify the user solution
2019-03-06 12:29:55,995 INFO  Time before invoking service:Wed Mar 06 12:29:55 IST 2019
2019-03-06 12:29:55,995 INFO  Initialising service address for VerifySolution
2019-03-06 12:29:55,996 INFO  Time before invoking service In SUPER:Wed Mar 06 12:29:55 IST 2019
2019-03-06 12:29:57,195 INFO  Time after invoking service In SUPER:Wed Mar 06 12:29:57 IST 2019
2019-03-06 12:29:57,196 INFO  Service responded successfully with required details
2019-03-06 12:29:57,196 INFO  Time after invoking service:Wed Mar 06 12:29:57 IST 2019
2019-03-06 12:29:57,196 INFO  User solution successfully verified
2019-03-06 12:29:57,196 INFO  Processing the response from verify service
2019-03-06 12:29:57,198 INFO  Starting to parse JSON response
2019-03-06 12:29:57,199 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:29:57,199 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:29:57,199 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:29:57,199 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:29:57,199 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:29:57,199 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:29:57,199 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:29:57,201 INFO  Successfully parsed JSON response
2019-03-06 12:29:57,201 INFO  In the process of generating verify response in HTML
2019-03-06 12:29:57,265 INFO  Successfully generated verify response in HTML
2019-03-06 12:29:57,265 INFO  Successfully processed the response from service
2019-03-06 12:30:29,552 INFO  Setting request parameters for VerifySolution
2019-03-06 12:30:29,553 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 12:30:29,553 INFO  Starting to parse the user solution
2019-03-06 12:30:29,553 INFO  Displaying user solution
2019-03-06 12:30:29,609 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-9\r\n'''\r\nCreated on Mar 5, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Student:\r\n    def __init__(self):\r\n        self.__student_id = None\r\n        self.__age = None\r\n        self.__marks = None\r\n        self.__course_id = None\r\n        self.__fees = None\r\n\r\n    def get_course_id(self):\r\n        return self.__course_id\r\n\r\n\r\n    def get_fees(self):\r\n        return self.__fees\r\n\r\n\r\n    def get_student_id(self):\r\n        return self.__student_id\r\n\r\n\r\n    def get_age(self):\r\n        return self.__age\r\n\r\n\r\n    def get_marks(self):\r\n        return self.__marks\r\n\r\n\r\n    def set_student_id(self, student_id):\r\n        self.__student_id = student_id\r\n\r\n\r\n    def set_age(self, age):\r\n        self.__age = age\r\n\r\n\r\n    def set_marks(self, marks):\r\n        self.__marks = marks\r\n        \r\n    def validate_marks(self):\r\n        if(self.get_marks()>=0 and self.get_marks()<=100):\r\n            return True\r\n        else:\r\n            return False\r\n    def validate_age(self):\r\n        if(self.get_age()>20):\r\n            return True\r\n        else:\r\n            return False\r\n    def check_qualification(self):\r\n        if(self.get_marks()>=0 and self.get_marks()<=100 and self.get_age()>20):\r\n            if(self.get_marks()>=65):\r\n                return True\r\n            else:\r\n                return False\r\n        else:\r\n            return False\r\n    def choose_course(self,course_id):\r\n         if(course_id==1001):\r\n             self.__course_id = 1001\r\n             self.__fees = 25575.0\r\n             if(self.get_marks()>=85):\r\n                 self.__fees = 0.75*self.__fees\r\n             return True\r\n         elif(course_id==1002):\r\n             self.__course_id = 1002\r\n             self.__fees = 15500.0\r\n             if(self.get_marks()>=85):\r\n                 self.__fees= 0.75*self.__fees\r\n             return True\r\n         else:\r\n             return False\r\n   \r\ns1 = Student()\r\ns1.set_student_id(167)\r\ns1.set_age(22)\r\ns1.set_marks(85)\r\ns1.validate_marks()\r\ns1.validate_age()\r\ns1.check_qualification()\r\ns1.choose_course(1002)\r\n\r\n\r\n        \r\n        \r\n\r\n    \r\n","asgnmtId":"9","SolutionFileName":"Assign9.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 12:30:29,609 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 12:30:29,609 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 12:30:29,609 INFO  Invoking the service to verify the user solution
2019-03-06 12:30:29,609 INFO  Time before invoking service:Wed Mar 06 12:30:29 IST 2019
2019-03-06 12:30:29,610 INFO  Initialising service address for VerifySolution
2019-03-06 12:30:29,610 INFO  Time before invoking service In SUPER:Wed Mar 06 12:30:29 IST 2019
2019-03-06 12:30:30,760 INFO  Time after invoking service In SUPER:Wed Mar 06 12:30:30 IST 2019
2019-03-06 12:30:30,761 INFO  Service responded successfully with required details
2019-03-06 12:30:30,761 INFO  Time after invoking service:Wed Mar 06 12:30:30 IST 2019
2019-03-06 12:30:30,761 INFO  User solution successfully verified
2019-03-06 12:30:30,762 INFO  Processing the response from verify service
2019-03-06 12:30:30,765 INFO  Starting to parse JSON response
2019-03-06 12:30:30,766 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:30:30,766 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:30:30,766 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:30:30,766 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:30:30,766 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:30:30,767 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:30:30,767 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:30:30,769 INFO  Successfully parsed JSON response
2019-03-06 12:30:30,769 INFO  In the process of generating verify response in HTML
2019-03-06 12:30:30,838 INFO  Successfully generated verify response in HTML
2019-03-06 12:30:30,839 INFO  Successfully processed the response from service
2019-03-06 12:30:52,643 INFO  Setting request parameters for VerifySolution
2019-03-06 12:30:52,643 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 12:30:52,643 INFO  Starting to parse the user solution
2019-03-06 12:30:52,643 INFO  Displaying user solution
2019-03-06 12:30:52,702 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-9\r\n'''\r\nCreated on Mar 5, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Student:\r\n    def __init__(self):\r\n        self.__student_id = None\r\n        self.__age = None\r\n        self.__marks = None\r\n        self.__course_id = None\r\n        self.__fees = None\r\n\r\n    def get_course_id(self):\r\n        return self.__course_id\r\n\r\n\r\n    def get_fees(self):\r\n        return self.__fees\r\n\r\n\r\n    def get_student_id(self):\r\n        return self.__student_id\r\n\r\n\r\n    def get_age(self):\r\n        return self.__age\r\n\r\n\r\n    def get_marks(self):\r\n        return self.__marks\r\n\r\n\r\n    def set_student_id(self, student_id):\r\n        self.__student_id = student_id\r\n\r\n\r\n    def set_age(self, age):\r\n        self.__age = age\r\n\r\n\r\n    def set_marks(self, marks):\r\n        self.__marks = marks\r\n        \r\n    def validate_marks(self):\r\n        if(self.get_marks()>=0 and self.get_marks()<=100):\r\n            return True\r\n        else:\r\n            return False\r\n    def validate_age(self):\r\n        if(self.get_age()>20):\r\n            return True\r\n        else:\r\n            return False\r\n    def check_qualification(self):\r\n        if(self.get_marks()>=0 and self.get_marks()<=100 and self.get_age()>20):\r\n            if(self.get_marks()>=65):\r\n                return True\r\n            else:\r\n                return False\r\n        else:\r\n            return False\r\n    def choose_course(self,course_id):\r\n         if(course_id==1001):\r\n             self.__course_id = 1001\r\n             self.__fees = 25575.0\r\n             if(self.get_marks()>=85):\r\n                 self.__fees = 0.75*self.__fees\r\n             return True\r\n         elif(course_id==1002):\r\n             self.__course_id = 1002\r\n             self.__fees = 15500.0\r\n             if(self.get_marks()>=85):\r\n                 self.__fees= 0.75*self.__fees\r\n             return True\r\n         else:\r\n             return False\r\n   \r\ns1 = Student()\r\ns1.set_student_id(167)\r\ns1.set_age(22)\r\ns1.set_marks(85)\r\ns1.validate_marks()\r\ns1.validate_age()\r\ns1.check_qualification()\r\ns1.choose_course(1002)\r\n\r\n\r\n        \r\n        \r\n\r\n    \r\n","asgnmtId":"9","SolutionFileName":"Assign9.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 12:30:52,703 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 12:30:52,703 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 12:30:52,703 INFO  Invoking the service to verify the user solution
2019-03-06 12:30:52,703 INFO  Time before invoking service:Wed Mar 06 12:30:52 IST 2019
2019-03-06 12:30:52,704 INFO  Initialising service address for VerifySolution
2019-03-06 12:30:52,704 INFO  Time before invoking service In SUPER:Wed Mar 06 12:30:52 IST 2019
2019-03-06 12:30:53,891 INFO  Time after invoking service In SUPER:Wed Mar 06 12:30:53 IST 2019
2019-03-06 12:30:53,891 INFO  Service responded successfully with required details
2019-03-06 12:30:53,892 INFO  Time after invoking service:Wed Mar 06 12:30:53 IST 2019
2019-03-06 12:30:53,892 INFO  User solution successfully verified
2019-03-06 12:30:53,892 INFO  Processing the response from verify service
2019-03-06 12:30:53,894 INFO  Starting to parse JSON response
2019-03-06 12:30:53,895 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:30:53,895 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:30:53,895 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:30:53,895 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:30:53,895 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:30:53,895 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:30:53,895 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:30:53,897 INFO  Successfully parsed JSON response
2019-03-06 12:30:53,897 INFO  In the process of generating verify response in HTML
2019-03-06 12:30:53,967 INFO  Successfully generated verify response in HTML
2019-03-06 12:30:53,967 INFO  Successfully processed the response from service
2019-03-06 12:31:24,978 INFO  Setting request parameters for VerifySolution
2019-03-06 12:31:24,978 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 12:31:24,978 INFO  Starting to parse the user solution
2019-03-06 12:31:24,978 INFO  Displaying user solution
2019-03-06 12:31:25,048 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-9\r\n'''\r\nCreated on Mar 5, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Student:\r\n    def __init__(self):\r\n        self.__student_id = None\r\n        self.__age = None\r\n        self.__marks = None\r\n        self.__course_id = None\r\n        self.__fees = None\r\n\r\n    def get_course_id(self):\r\n        return self.__course_id\r\n\r\n\r\n    def get_fees(self):\r\n        return self.__fees\r\n\r\n\r\n    def get_student_id(self):\r\n        return self.__student_id\r\n\r\n\r\n    def get_age(self):\r\n        return self.__age\r\n\r\n\r\n    def get_marks(self):\r\n        return self.__marks\r\n\r\n\r\n    def set_student_id(self, student_id):\r\n        self.__student_id = student_id\r\n\r\n\r\n    def set_age(self, age):\r\n        self.__age = age\r\n\r\n\r\n    def set_marks(self, marks):\r\n        self.__marks = marks\r\n        \r\n    def validate_marks(self):\r\n        if(self.get_marks()>=0 and self.get_marks()<=100):\r\n            return True\r\n        else:\r\n            return False\r\n    def validate_age(self):\r\n        if(self.get_age()>20):\r\n            return True\r\n        else:\r\n            return False\r\n    def check_qualification(self):\r\n        if(self.get_marks()>=0 and self.get_marks()<=100 and self.get_age()>20):\r\n            if(self.get_marks()>=65):\r\n                return True\r\n            else:\r\n                return False\r\n        else:\r\n            return False\r\n    def choose_course(self,course_id):\r\n         if(course_id==1001):\r\n             self.__course_id = 1001\r\n             self.__fees = 25575.0\r\n             if(self.get_marks()>85):\r\n                 self.__fees = 0.75*self.__fees\r\n             return True\r\n         elif(course_id==1002):\r\n             self.__course_id = 1002\r\n             self.__fees = 15500.0\r\n             if(self.get_marks()>85):\r\n                 self.__fees= 0.75*self.__fees\r\n             return True\r\n         else:\r\n             return False\r\n   \r\ns1 = Student()\r\ns1.set_student_id(167)\r\ns1.set_age(22)\r\ns1.set_marks(85)\r\ns1.validate_marks()\r\ns1.validate_age()\r\ns1.check_qualification()\r\ns1.choose_course(1002)\r\n\r\n\r\n        \r\n        \r\n\r\n    \r\n","asgnmtId":"9","SolutionFileName":"Assign9.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 12:31:25,048 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 12:31:25,049 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 12:31:25,049 INFO  Invoking the service to verify the user solution
2019-03-06 12:31:25,049 INFO  Time before invoking service:Wed Mar 06 12:31:25 IST 2019
2019-03-06 12:31:25,049 INFO  Initialising service address for VerifySolution
2019-03-06 12:31:25,051 INFO  Time before invoking service In SUPER:Wed Mar 06 12:31:25 IST 2019
2019-03-06 12:31:26,231 INFO  Time after invoking service In SUPER:Wed Mar 06 12:31:26 IST 2019
2019-03-06 12:31:26,231 INFO  Service responded successfully with required details
2019-03-06 12:31:26,231 INFO  Time after invoking service:Wed Mar 06 12:31:26 IST 2019
2019-03-06 12:31:26,232 INFO  User solution successfully verified
2019-03-06 12:31:26,232 INFO  Processing the response from verify service
2019-03-06 12:31:26,237 INFO  Starting to parse JSON response
2019-03-06 12:31:26,239 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:31:26,239 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:31:26,240 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:31:26,240 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:31:26,240 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:31:26,240 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:31:26,240 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:31:26,240 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:31:26,240 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:31:26,240 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:31:26,241 INFO  Successfully parsed JSON response
2019-03-06 12:31:26,241 INFO  In the process of generating verify response in HTML
2019-03-06 12:31:26,307 INFO  Successfully generated verify response in HTML
2019-03-06 12:31:26,308 INFO  Successfully processed the response from service
2019-03-06 12:31:42,558 INFO  Initiating to process and prepare Input for the submit service
2019-03-06 12:31:42,558 INFO  Displaying user solution
2019-03-06 12:31:42,566 INFO  Successfully processed and prepared the input for the submit service
2019-03-06 12:31:42,567 INFO  Invoking the service to submit the user solution
2019-03-06 12:31:42,567 INFO  Initialising service address for Submit
2019-03-06 12:31:42,567 INFO  Time before invoking service In SUPER:Wed Mar 06 12:31:42 IST 2019
2019-03-06 12:31:42,922 INFO  Time after invoking service In SUPER:Wed Mar 06 12:31:42 IST 2019
2019-03-06 12:31:42,922 INFO  Service responded successfully with required details
2019-03-06 12:31:42,922 INFO  User solution successfully submitted
2019-03-06 12:31:42,923 INFO  Displaying submission status
2019-03-06 12:31:42,923 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-06 12:31:45,389 INFO  Initiating to process and prepare Input for the submit service
2019-03-06 12:31:45,392 INFO  Displaying user solution
2019-03-06 12:31:45,402 INFO  Successfully processed and prepared the input for the submit service
2019-03-06 12:31:45,402 INFO  Invoking the service to submit the user solution
2019-03-06 12:31:45,402 INFO  Initialising service address for Submit
2019-03-06 12:31:45,402 INFO  Time before invoking service In SUPER:Wed Mar 06 12:31:45 IST 2019
2019-03-06 12:31:45,548 INFO  Time after invoking service In SUPER:Wed Mar 06 12:31:45 IST 2019
2019-03-06 12:31:45,548 INFO  Service responded successfully with required details
2019-03-06 12:31:45,548 INFO  User solution successfully submitted
2019-03-06 12:31:45,548 INFO  Displaying submission status
2019-03-06 12:31:45,548 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-06 12:31:47,847 INFO  Setting request parameters for VerifySolution
2019-03-06 12:31:47,848 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 12:31:47,848 INFO  Starting to parse the user solution
2019-03-06 12:31:47,848 INFO  Displaying user solution
2019-03-06 12:31:47,915 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-9\r\n'''\r\nCreated on Mar 5, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Student:\r\n    def __init__(self):\r\n        self.__student_id = None\r\n        self.__age = None\r\n        self.__marks = None\r\n        self.__course_id = None\r\n        self.__fees = None\r\n\r\n    def get_course_id(self):\r\n        return self.__course_id\r\n\r\n\r\n    def get_fees(self):\r\n        return self.__fees\r\n\r\n\r\n    def get_student_id(self):\r\n        return self.__student_id\r\n\r\n\r\n    def get_age(self):\r\n        return self.__age\r\n\r\n\r\n    def get_marks(self):\r\n        return self.__marks\r\n\r\n\r\n    def set_student_id(self, student_id):\r\n        self.__student_id = student_id\r\n\r\n\r\n    def set_age(self, age):\r\n        self.__age = age\r\n\r\n\r\n    def set_marks(self, marks):\r\n        self.__marks = marks\r\n        \r\n    def validate_marks(self):\r\n        if(self.get_marks()>=0 and self.get_marks()<=100):\r\n            return True\r\n        else:\r\n            return False\r\n    def validate_age(self):\r\n        if(self.get_age()>20):\r\n            return True\r\n        else:\r\n            return False\r\n    def check_qualification(self):\r\n        if(self.get_marks()>=0 and self.get_marks()<=100 and self.get_age()>20):\r\n            if(self.get_marks()>=65):\r\n                return True\r\n            else:\r\n                return False\r\n        else:\r\n            return False\r\n    def choose_course(self,course_id):\r\n         if(course_id==1001):\r\n             self.__course_id = 1001\r\n             self.__fees = 25575.0\r\n             if(self.get_marks()>85):\r\n                 self.__fees = 0.75*self.__fees\r\n             return True\r\n         elif(course_id==1002):\r\n             self.__course_id = 1002\r\n             self.__fees = 15500.0\r\n             if(self.get_marks()>85):\r\n                 self.__fees= 0.75*self.__fees\r\n             return True\r\n         else:\r\n             return False\r\n   \r\ns1 = Student()\r\ns1.set_student_id(167)\r\ns1.set_age(22)\r\ns1.set_marks(85)\r\ns1.validate_marks()\r\ns1.validate_age()\r\ns1.check_qualification()\r\ns1.choose_course(1002)\r\n\r\n\r\n        \r\n        \r\n\r\n    \r\n","asgnmtId":"9","SolutionFileName":"Assign9.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 12:31:47,915 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 12:31:47,915 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 12:31:47,915 INFO  Invoking the service to verify the user solution
2019-03-06 12:31:47,915 INFO  Time before invoking service:Wed Mar 06 12:31:47 IST 2019
2019-03-06 12:31:47,915 INFO  Initialising service address for VerifySolution
2019-03-06 12:31:47,916 INFO  Time before invoking service In SUPER:Wed Mar 06 12:31:47 IST 2019
2019-03-06 12:31:48,976 INFO  Time after invoking service In SUPER:Wed Mar 06 12:31:48 IST 2019
2019-03-06 12:31:48,976 INFO  Service responded successfully with required details
2019-03-06 12:31:48,976 INFO  Time after invoking service:Wed Mar 06 12:31:48 IST 2019
2019-03-06 12:31:48,977 INFO  User solution successfully verified
2019-03-06 12:31:48,977 INFO  Processing the response from verify service
2019-03-06 12:31:48,979 INFO  Starting to parse JSON response
2019-03-06 12:31:48,980 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:31:48,980 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:31:48,980 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:31:48,980 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:31:48,980 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:31:48,980 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:31:48,980 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:31:48,980 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:31:48,980 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:31:48,980 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:31:48,981 INFO  Successfully parsed JSON response
2019-03-06 12:31:48,982 INFO  In the process of generating verify response in HTML
2019-03-06 12:31:49,047 INFO  Successfully generated verify response in HTML
2019-03-06 12:31:49,047 INFO  Successfully processed the response from service
2019-03-06 12:32:07,489 INFO  Setting request parameters for VerifySolution
2019-03-06 12:32:07,489 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 12:32:07,489 INFO  Starting to parse the user solution
2019-03-06 12:32:07,490 INFO  Displaying user solution
2019-03-06 12:32:07,558 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-7\r\n'''\r\nCreated on Mar 5, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Instructor:\r\n    def __init__(self):\r\n        self.__instructor_name= None\r\n        self.__technology_skill =None\r\n        self.__experience = None\r\n        self.__avg_feedback = None\r\n    def get_instructor_name(self):\r\n        return self.__instructor_name\r\n\r\n\r\n    def get_technology_skill(self):\r\n        return self.__technology_skill\r\n\r\n\r\n    def get_experience(self):\r\n        return self.__experience\r\n\r\n\r\n    def get_avg_feedback(self):\r\n        return self.__avg_feedback\r\n\r\n\r\n    def set_instructor_name(self, instructor_name):\r\n        self.__instructor_name = instructor_name\r\n\r\n\r\n    def set_technology_skill(self, technology_skill):\r\n        self.__technology_skill =list(technology_skill)[:1] if technology_skill else []\r\n\r\n\r\n    def set_experience(self, experience):\r\n        self.__experience = experience\r\n\r\n\r\n    def set_avg_feedback(self,avg_feedback):\r\n        self.__avg_feedback =avg_feedback\r\n    def check_eligibility(self):\r\n        if(self.get_experience()>3 and self.get_avg_feedback()>=4.5):\r\n            return True\r\n        elif(self.get_experience()<=3 and self.get_avg_feedback()>=4):\r\n            return True\r\n        else:\r\n            return False\r\n    def allocate_course(self,technology):\r\n        if technology in (self.get_technology_skill()):\r\n            return True\r\n        else:\r\n            return False\r\n\r\nI1 = Instructor()\r\nI1.set_instructor_name(\"Vijay\")\r\nI1.set_experience(3)\r\nI1.set_avg_feedback(4)\r\nI1.set_technology_skill([\"C++\",\"JAVA\"])\r\nI1.check_eligibility()\r\nI1.allocate_course(\"C++\")\r\n\r\n","asgnmtId":"7","SolutionFileName":"Assign7.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 12:32:07,558 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 12:32:07,558 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 12:32:07,558 INFO  Invoking the service to verify the user solution
2019-03-06 12:32:07,559 INFO  Time before invoking service:Wed Mar 06 12:32:07 IST 2019
2019-03-06 12:32:07,559 INFO  Initialising service address for VerifySolution
2019-03-06 12:32:07,559 INFO  Time before invoking service In SUPER:Wed Mar 06 12:32:07 IST 2019
2019-03-06 12:32:08,507 INFO  Time after invoking service In SUPER:Wed Mar 06 12:32:08 IST 2019
2019-03-06 12:32:08,507 INFO  Service responded successfully with required details
2019-03-06 12:32:08,507 INFO  Time after invoking service:Wed Mar 06 12:32:08 IST 2019
2019-03-06 12:32:08,507 INFO  User solution successfully verified
2019-03-06 12:32:08,508 INFO  Processing the response from verify service
2019-03-06 12:32:08,510 INFO  Starting to parse JSON response
2019-03-06 12:32:08,510 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:32:08,511 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:32:08,511 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:32:08,511 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:32:08,512 INFO  Successfully parsed JSON response
2019-03-06 12:32:08,512 INFO  In the process of generating verify response in HTML
2019-03-06 12:32:08,580 INFO  Successfully generated verify response in HTML
2019-03-06 12:32:08,580 INFO  Successfully processed the response from service
2019-03-06 12:33:35,505 INFO  Setting request parameters for VerifySolution
2019-03-06 12:33:35,505 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 12:33:35,505 INFO  Starting to parse the user solution
2019-03-06 12:33:35,506 INFO  Displaying user solution
2019-03-06 12:33:35,567 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-9\r\n'''\r\nCreated on Mar 5, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Student:\r\n    def __init__(self):\r\n        self.__student_id = None\r\n        self.__age = None\r\n        self.__marks = None\r\n        self.__course_id = None\r\n        self.__fees = None\r\n\r\n    def get_course_id(self):\r\n        return self.__course_id\r\n\r\n\r\n    def get_fees(self):\r\n        return self.__fees\r\n\r\n\r\n    def get_student_id(self):\r\n        return self.__student_id\r\n\r\n\r\n    def get_age(self):\r\n        return self.__age\r\n\r\n\r\n    def get_marks(self):\r\n        return self.__marks\r\n\r\n\r\n    def set_student_id(self, student_id):\r\n        self.__student_id = student_id\r\n\r\n\r\n    def set_age(self, age):\r\n        self.__age = age\r\n\r\n\r\n    def set_marks(self, marks):\r\n        self.__marks = marks\r\n        \r\n    def validate_marks(self):\r\n        if(self.get_marks()>=0 and self.get_marks()<=100):\r\n            return True\r\n        else:\r\n            return False\r\n    def validate_age(self):\r\n        if(self.get_age()>20):\r\n            return True\r\n        else:\r\n            return False\r\n    def check_qualification(self):\r\n        if(self.get_marks()>=0 and self.get_marks()<=100 and self.get_age()>20):\r\n            if(self.get_marks()>=65):\r\n                return True\r\n            else:\r\n                return False\r\n        else:\r\n            return False\r\n    def choose_course(self,course_id):\r\n         if(course_id==1001):\r\n             self.__course_id = 1001\r\n             self.__fees = 25575.0\r\n             if(self.get_marks()>85):\r\n                 self.__fees = 0.75*self.__fees\r\n             return True\r\n         elif(course_id==1002):\r\n             self.__course_id = 1002\r\n             self.__fees = 15500.0\r\n             if(self.get_marks()>85):\r\n                 self.__fees= 0.75*self.__fees\r\n             return True\r\n         else:\r\n             return False\r\n   \r\ns1 = Student()\r\ns1.set_student_id(167)\r\ns1.set_age(22)\r\ns1.set_marks(85)\r\ns1.validate_marks()\r\ns1.validate_age()\r\ns1.check_qualification()\r\ns1.choose_course(1002)\r\n\r\n\r\n        \r\n        \r\n\r\n    \r\n","asgnmtId":"9","SolutionFileName":"Assign9.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 12:33:35,568 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 12:33:35,568 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 12:33:35,568 INFO  Invoking the service to verify the user solution
2019-03-06 12:33:35,568 INFO  Time before invoking service:Wed Mar 06 12:33:35 IST 2019
2019-03-06 12:33:35,568 INFO  Initialising service address for VerifySolution
2019-03-06 12:33:35,569 INFO  Time before invoking service In SUPER:Wed Mar 06 12:33:35 IST 2019
2019-03-06 12:33:36,676 INFO  Time after invoking service In SUPER:Wed Mar 06 12:33:36 IST 2019
2019-03-06 12:33:36,676 INFO  Service responded successfully with required details
2019-03-06 12:33:36,676 INFO  Time after invoking service:Wed Mar 06 12:33:36 IST 2019
2019-03-06 12:33:36,676 INFO  User solution successfully verified
2019-03-06 12:33:36,677 INFO  Processing the response from verify service
2019-03-06 12:33:36,678 INFO  Starting to parse JSON response
2019-03-06 12:33:36,679 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:33:36,679 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:33:36,680 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:33:36,680 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:33:36,680 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:33:36,680 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:33:36,680 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:33:36,680 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:33:36,680 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:33:36,680 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 12:33:36,681 INFO  Successfully parsed JSON response
2019-03-06 12:33:36,681 INFO  In the process of generating verify response in HTML
2019-03-06 12:33:36,758 INFO  Successfully generated verify response in HTML
2019-03-06 12:33:36,758 INFO  Successfully processed the response from service
2019-03-06 13:57:07,687 INFO  Setting request parameters for VerifySolution
2019-03-06 13:57:07,687 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 13:57:07,687 INFO  Starting to parse the user solution
2019-03-06 13:57:07,688 INFO  Displaying user solution
2019-03-06 13:57:07,763 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-7\r\n'''\r\nCreated on Mar 5, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Instructor:\r\n    def __init__(self):\r\n        self.__instructor_name= None\r\n        self.__technology_skill =None\r\n        self.__experience = None\r\n        self.__avg_feedback = None\r\n    def get_instructor_name(self):\r\n        return self.__instructor_name\r\n\r\n\r\n    def get_technology_skill(self):\r\n        return self.__technology_skill\r\n\r\n\r\n    def get_experience(self):\r\n        return self.__experience\r\n\r\n\r\n    def get_avg_feedback(self):\r\n        return self.__avg_feedback\r\n\r\n\r\n    def set_instructor_name(self, instructor_name):\r\n        self.__instructor_name = instructor_name\r\n\r\n\r\n    def set_technology_skill(self, technology_skill):\r\n        self.__technology_skill =list(technology_skill)[:1] if technology_skill else []\r\n\r\n\r\n    def set_experience(self, experience):\r\n        self.__experience = experience\r\n\r\n\r\n    def set_avg_feedback(self,avg_feedback):\r\n        self.__avg_feedback =avg_feedback\r\n    def check_eligibility(self):\r\n        if(self.get_experience()>3 and self.get_avg_feedback()>=4.5):\r\n            return True\r\n        elif(self.get_experience()<=3 and self.get_avg_feedback()>=4):\r\n            return True\r\n        else:\r\n            return False\r\n    def allocate_course(self,technology):\r\n        if technology in (self.get_technology_skill()):\r\n            return True\r\n        else:\r\n            return False\r\n\r\nI1 = Instructor()\r\nI1.set_instructor_name(\"Vijay\")\r\nI1.set_experience(3)\r\nI1.set_avg_feedback(4)\r\nI1.set_technology_skill([\"C++\",\"JAVA\"])\r\nI1.check_eligibility()\r\nI1.allocate_course(\"C++\")\r\n\r\n","asgnmtId":"7","SolutionFileName":"Assign7.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 13:57:07,764 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 13:57:07,764 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 13:57:07,764 INFO  Invoking the service to verify the user solution
2019-03-06 13:57:07,764 INFO  Time before invoking service:Wed Mar 06 13:57:07 IST 2019
2019-03-06 13:57:07,764 INFO  Initialising service address for VerifySolution
2019-03-06 13:57:07,765 INFO  Time before invoking service In SUPER:Wed Mar 06 13:57:07 IST 2019
2019-03-06 13:57:08,854 INFO  Time after invoking service In SUPER:Wed Mar 06 13:57:08 IST 2019
2019-03-06 13:57:08,854 INFO  Service responded successfully with required details
2019-03-06 13:57:08,854 INFO  Time after invoking service:Wed Mar 06 13:57:08 IST 2019
2019-03-06 13:57:08,855 INFO  User solution successfully verified
2019-03-06 13:57:08,855 INFO  Processing the response from verify service
2019-03-06 13:57:08,860 INFO  Starting to parse JSON response
2019-03-06 13:57:08,862 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 13:57:08,862 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 13:57:08,862 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 13:57:08,862 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 13:57:08,863 INFO  Successfully parsed JSON response
2019-03-06 13:57:08,863 INFO  In the process of generating verify response in HTML
2019-03-06 13:57:08,958 INFO  Successfully generated verify response in HTML
2019-03-06 13:57:08,958 INFO  Successfully processed the response from service
2019-03-06 13:59:53,986 INFO  Setting request parameters for VerifySolution
2019-03-06 13:59:53,986 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 13:59:53,986 INFO  Starting to parse the user solution
2019-03-06 13:59:53,987 INFO  Displaying user solution
2019-03-06 13:59:54,065 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-7\r\n'''\r\nCreated on Mar 5, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Instructor:\r\n    def __init__(self):\r\n        self.__instructor_name= None\r\n        self.__technology_skill =None\r\n        self.__experience = None\r\n        self.__avg_feedback = None\r\n    def get_instructor_name(self):\r\n        return self.__instructor_name\r\n\r\n\r\n    def get_technology_skill(self):\r\n        return self.__technology_skill\r\n\r\n\r\n    def get_experience(self):\r\n        return self.__experience\r\n\r\n\r\n    def get_avg_feedback(self):\r\n        return self.__avg_feedback\r\n\r\n\r\n    def set_instructor_name(self, instructor_name):\r\n        self.__instructor_name = instructor_name\r\n\r\n\r\n    def set_technology_skill(self, technology_skill):\r\n        self.__technology_skill =list(technology_skill)[:1] if technology_skill else []\r\n\r\n\r\n    def set_experience(self, experience):\r\n        self.__experience = experience\r\n\r\n\r\n    def set_avg_feedback(self,avg_feedback):\r\n        self.__avg_feedback =avg_feedback\r\n    def check_eligibility(self):\r\n        if(self.get_experience()>3 and self.get_avg_feedback()>=4.5):\r\n            return True\r\n        elif(self.get_experience()<=3 and self.get_avg_feedback()>=4):\r\n            return True\r\n        else:\r\n            return False\r\n    def allocate_course(self,technology):\r\n        if technology in (self.get_technology_skill()):\r\n            return True\r\n        else:\r\n            return False\r\n\r\nI1 = Instructor()\r\nI1.set_instructor_name(\"Vijay\")\r\nI1.set_experience(3)\r\nI1.set_avg_feedback(4)\r\nI1.set_technology_skill([\"C++\",\"JAVA\"])\r\nI1.check_eligibility()\r\nI1.allocate_course(\"C++\")\r\n\r\n","asgnmtId":"7","SolutionFileName":"Assign7.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 13:59:54,066 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 13:59:54,066 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 13:59:54,066 INFO  Invoking the service to verify the user solution
2019-03-06 13:59:54,066 INFO  Time before invoking service:Wed Mar 06 13:59:54 IST 2019
2019-03-06 13:59:54,066 INFO  Initialising service address for VerifySolution
2019-03-06 13:59:54,066 INFO  Time before invoking service In SUPER:Wed Mar 06 13:59:54 IST 2019
2019-03-06 13:59:55,026 INFO  Time after invoking service In SUPER:Wed Mar 06 13:59:55 IST 2019
2019-03-06 13:59:55,026 INFO  Service responded successfully with required details
2019-03-06 13:59:55,026 INFO  Time after invoking service:Wed Mar 06 13:59:55 IST 2019
2019-03-06 13:59:55,027 INFO  User solution successfully verified
2019-03-06 13:59:55,027 INFO  Processing the response from verify service
2019-03-06 13:59:55,029 INFO  Starting to parse JSON response
2019-03-06 13:59:55,030 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 13:59:55,030 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 13:59:55,030 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 13:59:55,030 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 13:59:55,031 INFO  Successfully parsed JSON response
2019-03-06 13:59:55,032 INFO  In the process of generating verify response in HTML
2019-03-06 13:59:55,102 INFO  Successfully generated verify response in HTML
2019-03-06 13:59:55,103 INFO  Successfully processed the response from service
2019-03-06 14:01:30,091 INFO  Setting request parameters for VerifySolution
2019-03-06 14:01:30,091 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 14:01:30,091 INFO  Starting to parse the user solution
2019-03-06 14:01:30,092 INFO  Displaying user solution
2019-03-06 14:01:30,158 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-7\r\n'''\r\nCreated on Mar 5, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Instructor:\r\n    def __init__(self):\r\n        self.__instructor_name= None\r\n        self.__technology_skill =None\r\n        self.__experience = None\r\n        self.__avg_feedback = None\r\n    def get_instructor_name(self):\r\n        return self.__instructor_name\r\n\r\n\r\n    def get_technology_skill(self):\r\n        return self.__technology_skill\r\n\r\n\r\n    def get_experience(self):\r\n        return self.__experience\r\n\r\n\r\n    def get_avg_feedback(self):\r\n        return self.__avg_feedback\r\n\r\n\r\n    def set_instructor_name(self, instructor_name):\r\n        self.__instructor_name = instructor_name\r\n\r\n\r\n    def set_technology_skill(self, technology_skill):\r\n        self.__technology_skill =list(technology_skill)[:1] if technology_skill else []\r\n\r\n\r\n    def set_experience(self, experience):\r\n        self.__experience = experience\r\n\r\n\r\n    def set_avg_feedback(self,avg_feedback):\r\n        self.__avg_feedback =avg_feedback\r\n    def check_eligibility(self):\r\n        if(self.get_experience()>3 and self.get_avg_feedback()>=4.5):\r\n            return True\r\n        elif(self.get_experience()<=3 and self.get_avg_feedback()>=4):\r\n            return True\r\n        else:\r\n            return False\r\n    def allocate_course(self,technology):\r\n        if technology in (self.get_technology_skill()):\r\n            return True\r\n        else:\r\n            return False\r\n\r\nI1 = Instructor()\r\nI1.set_instructor_name(\"Vijay\")\r\nI1.set_experience(3)\r\nI1.set_avg_feedback(4)\r\nI1.set_technology_skill([\"C++\",\"JAVA\"])\r\nI1.check_eligibility()\r\nI1.allocate_course(\"C++\")\r\n\r\n","asgnmtId":"7","SolutionFileName":"Assign7.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 14:01:30,158 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 14:01:30,159 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 14:01:30,159 INFO  Invoking the service to verify the user solution
2019-03-06 14:01:30,160 INFO  Time before invoking service:Wed Mar 06 14:01:30 IST 2019
2019-03-06 14:01:30,160 INFO  Initialising service address for VerifySolution
2019-03-06 14:01:30,161 INFO  Time before invoking service In SUPER:Wed Mar 06 14:01:30 IST 2019
2019-03-06 14:01:31,085 INFO  Time after invoking service In SUPER:Wed Mar 06 14:01:31 IST 2019
2019-03-06 14:01:31,085 INFO  Service responded successfully with required details
2019-03-06 14:01:31,085 INFO  Time after invoking service:Wed Mar 06 14:01:31 IST 2019
2019-03-06 14:01:31,085 INFO  User solution successfully verified
2019-03-06 14:01:31,086 INFO  Processing the response from verify service
2019-03-06 14:01:31,087 INFO  Starting to parse JSON response
2019-03-06 14:01:31,089 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:01:31,089 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:01:31,089 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:01:31,089 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:01:31,091 INFO  Successfully parsed JSON response
2019-03-06 14:01:31,091 INFO  In the process of generating verify response in HTML
2019-03-06 14:01:31,170 INFO  Successfully generated verify response in HTML
2019-03-06 14:01:31,170 INFO  Successfully processed the response from service
2019-03-06 14:08:25,022 INFO  Setting request parameters for VerifySolution
2019-03-06 14:08:25,022 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 14:08:25,022 INFO  Starting to parse the user solution
2019-03-06 14:08:25,022 INFO  Displaying user solution
2019-03-06 14:08:25,099 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-7\r\n'''\r\nCreated on Mar 5, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Instructor:\r\n    def __init__(self):\r\n        self.__instructor_name= None\r\n        self.__technology_skill =None\r\n        self.__experience = None\r\n        self.__avg_feedback = None\r\n    def get_instructor_name(self):\r\n        return self.__instructor_name\r\n\r\n\r\n    def get_technology_skill(self):\r\n        return self.__technology_skill\r\n\r\n\r\n    def get_experience(self):\r\n        return self.__experience\r\n\r\n\r\n    def get_avg_feedback(self):\r\n        return self.__avg_feedback\r\n\r\n\r\n    def set_instructor_name(self, instructor_name):\r\n        self.__instructor_name = instructor_name\r\n\r\n\r\n    def set_technology_skill(self, technology_skill):\r\n        for technology_skill in range(0,2):\r\n            self.__technology_skill=self.__technology_skill[technology_skill]\r\n\r\n\r\n    def set_experience(self, experience):\r\n        self.__experience = experience\r\n\r\n\r\n    def set_avg_feedback(self,avg_feedback):\r\n        self.__avg_feedback =avg_feedback\r\n    def check_eligibility(self):\r\n        if(self.get_experience()>3 and self.get_avg_feedback()>=4.5):\r\n            return True\r\n        elif(self.get_experience()<=3 and self.get_avg_feedback()>=4):\r\n            return True\r\n        else:\r\n            return False\r\n    def allocate_course(self,technology):\r\n        if technology in (self.get_technology_skill()):\r\n            return True\r\n        else:\r\n            return False\r\n\r\nI1 = Instructor()\r\nI1.set_instructor_name(\"Vijay\")\r\nI1.set_experience(3)\r\nI1.set_avg_feedback(4)\r\nI1.set_technology_skill([\"C++\",\"JAVA\"])\r\nI1.check_eligibility()\r\nI1.allocate_course(\"C++\")\r\n\r\n","asgnmtId":"7","SolutionFileName":"Assign7.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 14:08:25,100 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 14:08:25,101 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 14:08:25,101 INFO  Invoking the service to verify the user solution
2019-03-06 14:08:25,101 INFO  Time before invoking service:Wed Mar 06 14:08:25 IST 2019
2019-03-06 14:08:25,101 INFO  Initialising service address for VerifySolution
2019-03-06 14:08:25,101 INFO  Time before invoking service In SUPER:Wed Mar 06 14:08:25 IST 2019
2019-03-06 14:08:26,231 INFO  Time after invoking service In SUPER:Wed Mar 06 14:08:26 IST 2019
2019-03-06 14:08:26,231 INFO  Service responded successfully with required details
2019-03-06 14:08:26,231 INFO  Time after invoking service:Wed Mar 06 14:08:26 IST 2019
2019-03-06 14:08:26,232 INFO  User solution successfully verified
2019-03-06 14:08:26,232 INFO  Processing the response from verify service
2019-03-06 14:08:26,237 INFO  Starting to parse JSON response
2019-03-06 14:08:26,239 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:08:26,239 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:08:26,239 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:08:26,239 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:08:26,239 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:08:26,239 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:08:26,241 INFO  Successfully parsed JSON response
2019-03-06 14:08:26,241 INFO  In the process of generating verify response in HTML
2019-03-06 14:08:26,325 INFO  Successfully generated verify response in HTML
2019-03-06 14:08:26,325 INFO  Successfully processed the response from service
2019-03-06 14:14:17,057 INFO  Setting request parameters for VerifySolution
2019-03-06 14:14:17,061 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 14:14:17,061 INFO  Starting to parse the user solution
2019-03-06 14:14:17,061 INFO  Displaying user solution
2019-03-06 14:14:17,131 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-7\r\n'''\r\nCreated on Mar 5, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Instructor:\r\n    def __init__(self):\r\n        self.__instructor_name= None\r\n        self.__technology_skill =None\r\n        self.__experience = None\r\n        self.__avg_feedback = None\r\n    def get_instructor_name(self):\r\n        return self.__instructor_name\r\n\r\n\r\n    def get_technology_skill(self):\r\n        return self.__technology_skill\r\n\r\n\r\n    def get_experience(self):\r\n        return self.__experience\r\n\r\n\r\n    def get_avg_feedback(self):\r\n        return self.__avg_feedback\r\n\r\n\r\n    def set_instructor_name(self, instructor_name):\r\n        self.__instructor_name = instructor_name\r\n\r\n\r\n    def set_technology_skill(self, technology_skill):\r\n            self.__technology_skill=technology_skill\r\n\r\n\r\n    def set_experience(self, experience):\r\n        self.__experience = experience\r\n\r\n\r\n    def set_avg_feedback(self,avg_feedback):\r\n        self.__avg_feedback =avg_feedback\r\n    def check_eligibility(self):\r\n        if(self.get_experience()>3 and self.get_avg_feedback()>=4.5):\r\n            return True\r\n        elif(self.get_experience()<=3 and self.get_avg_feedback()>=4):\r\n            return True\r\n        else:\r\n            return False\r\n    def allocate_course(self,technology):\r\n        for technology in (self.get_technology_skill()):\r\n            if(self.get_technology_skill()==technology):\r\n             return True\r\n            else:\r\n              return False\r\n\r\nI1 = Instructor()\r\nI1.set_instructor_name(\"Vijay\")\r\nI1.set_experience(3)\r\nI1.set_avg_feedback(4)\r\nI1.set_technology_skill([\"C++\",\"JAVA\"])\r\nI1.check_eligibility()\r\nI1.allocate_course(\"C++\")\r\n\r\n","asgnmtId":"7","SolutionFileName":"Assign7.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 14:14:17,132 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 14:14:17,132 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 14:14:17,132 INFO  Invoking the service to verify the user solution
2019-03-06 14:14:17,132 INFO  Time before invoking service:Wed Mar 06 14:14:17 IST 2019
2019-03-06 14:14:17,132 INFO  Initialising service address for VerifySolution
2019-03-06 14:14:17,133 INFO  Time before invoking service In SUPER:Wed Mar 06 14:14:17 IST 2019
2019-03-06 14:14:18,133 INFO  Time after invoking service In SUPER:Wed Mar 06 14:14:18 IST 2019
2019-03-06 14:14:18,133 INFO  Service responded successfully with required details
2019-03-06 14:14:18,134 INFO  Time after invoking service:Wed Mar 06 14:14:18 IST 2019
2019-03-06 14:14:18,135 INFO  User solution successfully verified
2019-03-06 14:14:18,136 INFO  Processing the response from verify service
2019-03-06 14:14:18,140 INFO  Starting to parse JSON response
2019-03-06 14:14:18,144 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:14:18,144 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:14:18,144 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:14:18,144 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:14:18,145 INFO  Successfully parsed JSON response
2019-03-06 14:14:18,145 INFO  In the process of generating verify response in HTML
2019-03-06 14:14:18,220 INFO  Successfully generated verify response in HTML
2019-03-06 14:14:18,220 INFO  Successfully processed the response from service
2019-03-06 14:14:54,015 INFO  Setting request parameters for VerifySolution
2019-03-06 14:14:54,016 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 14:14:54,016 INFO  Starting to parse the user solution
2019-03-06 14:14:54,016 INFO  Displaying user solution
2019-03-06 14:14:54,085 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-7\r\n'''\r\nCreated on Mar 5, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Instructor:\r\n    def __init__(self):\r\n        self.__instructor_name= None\r\n        self.__technology_skill =None\r\n        self.__experience = None\r\n        self.__avg_feedback = None\r\n    def get_instructor_name(self):\r\n        return self.__instructor_name\r\n\r\n\r\n    def get_technology_skill(self):\r\n        return self.__technology_skill\r\n\r\n\r\n    def get_experience(self):\r\n        return self.__experience\r\n\r\n\r\n    def get_avg_feedback(self):\r\n        return self.__avg_feedback\r\n\r\n\r\n    def set_instructor_name(self, instructor_name):\r\n        self.__instructor_name = instructor_name\r\n\r\n\r\n    def set_technology_skill(self, technology_skill):\r\n            self.__technology_skill=technology_skill\r\n\r\n\r\n    def set_experience(self, experience):\r\n        self.__experience = experience\r\n\r\n\r\n    def set_avg_feedback(self,avg_feedback):\r\n        self.__avg_feedback =avg_feedback\r\n    def check_eligibility(self):\r\n        if(self.get_experience()>3 and self.get_avg_feedback()>=4.5):\r\n            return True\r\n        elif(self.get_experience()<=3 and self.get_avg_feedback()>=4):\r\n            return True\r\n        else:\r\n            return False\r\n    def allocate_course(self,technology):\r\n        for technology in (self.get_technology_skill()):\r\n            if(self.get_technology_skill()==technology):\r\n             return True\r\n            else:\r\n              return False\r\n\r\nI1 = Instructor()\r\nI1.set_instructor_name(\"Vijay\")\r\nI1.set_experience(3)\r\nI1.set_avg_feedback(4)\r\nI1.set_technology_skill([\"C++\",\"JAVA\"])\r\nI1.check_eligibility()\r\nI1.allocate_course(\"C++\")\r\n\r\n","asgnmtId":"7","SolutionFileName":"Assign7.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 14:14:54,086 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 14:14:54,086 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 14:14:54,086 INFO  Invoking the service to verify the user solution
2019-03-06 14:14:54,086 INFO  Time before invoking service:Wed Mar 06 14:14:54 IST 2019
2019-03-06 14:14:54,086 INFO  Initialising service address for VerifySolution
2019-03-06 14:14:54,087 INFO  Time before invoking service In SUPER:Wed Mar 06 14:14:54 IST 2019
2019-03-06 14:14:55,003 INFO  Time after invoking service In SUPER:Wed Mar 06 14:14:55 IST 2019
2019-03-06 14:14:55,003 INFO  Service responded successfully with required details
2019-03-06 14:14:55,003 INFO  Time after invoking service:Wed Mar 06 14:14:55 IST 2019
2019-03-06 14:14:55,003 INFO  User solution successfully verified
2019-03-06 14:14:55,004 INFO  Processing the response from verify service
2019-03-06 14:14:55,005 INFO  Starting to parse JSON response
2019-03-06 14:14:55,006 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:14:55,006 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:14:55,006 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:14:55,006 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:14:55,007 INFO  Successfully parsed JSON response
2019-03-06 14:14:55,009 INFO  In the process of generating verify response in HTML
2019-03-06 14:14:55,078 INFO  Successfully generated verify response in HTML
2019-03-06 14:14:55,078 INFO  Successfully processed the response from service
2019-03-06 14:18:07,890 INFO  Setting request parameters for VerifySolution
2019-03-06 14:18:07,890 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 14:18:07,890 INFO  Starting to parse the user solution
2019-03-06 14:18:07,891 INFO  Displaying user solution
2019-03-06 14:18:07,968 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-7\r\n'''\r\nCreated on Mar 5, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Instructor:\r\n    def __init__(self):\r\n        self.__instructor_name= None\r\n        self.__technology_skill =None\r\n        self.__experience = None\r\n        self.__avg_feedback = None\r\n    def get_instructor_name(self):\r\n        return self.__instructor_name\r\n\r\n\r\n    def get_technology_skill(self):\r\n        return self.__technology_skill\r\n\r\n\r\n    def get_experience(self):\r\n        return self.__experience\r\n\r\n\r\n    def get_avg_feedback(self):\r\n        return self.__avg_feedback\r\n\r\n\r\n    def set_instructor_name(self, instructor_name):\r\n        self.__instructor_name = instructor_name\r\n\r\n\r\n    def set_technology_skill(self, technology_skill):\r\n            self.__technology_skill=technology_skill\r\n\r\n\r\n    def set_experience(self, experience):\r\n        self.__experience = experience\r\n\r\n\r\n    def set_avg_feedback(self,avg_feedback):\r\n        self.__avg_feedback =avg_feedback\r\n    def check_eligibility(self):\r\n        if(self.get_experience()>3 and self.get_avg_feedback()>=4.5):\r\n            return True\r\n        elif(self.get_experience()<=3 and self.get_avg_feedback()>=4):\r\n            return True\r\n        else:\r\n            return False\r\n    def allocate_course(self,technology):\r\n        for i in (self.get_technology_skill()):\r\n            if(i==technology):\r\n                return True\r\n            else:\r\n              return False\r\n\r\nI1 = Instructor()\r\nI1.set_instructor_name(\"Vijay\")\r\nI1.set_experience(3)\r\nI1.set_avg_feedback(4)\r\nI1.set_technology_skill([\"C++\",\"JAVA\"])\r\nI1.check_eligibility()\r\nI1.allocate_course(\"C++\")\r\n\r\n","asgnmtId":"7","SolutionFileName":"Assign7.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 14:18:07,969 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 14:18:07,969 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 14:18:07,969 INFO  Invoking the service to verify the user solution
2019-03-06 14:18:07,970 INFO  Time before invoking service:Wed Mar 06 14:18:07 IST 2019
2019-03-06 14:18:07,971 INFO  Initialising service address for VerifySolution
2019-03-06 14:18:07,971 INFO  Time before invoking service In SUPER:Wed Mar 06 14:18:07 IST 2019
2019-03-06 14:18:08,975 INFO  Time after invoking service In SUPER:Wed Mar 06 14:18:08 IST 2019
2019-03-06 14:18:08,975 INFO  Service responded successfully with required details
2019-03-06 14:18:08,975 INFO  Time after invoking service:Wed Mar 06 14:18:08 IST 2019
2019-03-06 14:18:08,976 INFO  User solution successfully verified
2019-03-06 14:18:08,976 INFO  Processing the response from verify service
2019-03-06 14:18:08,977 INFO  Starting to parse JSON response
2019-03-06 14:18:08,978 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:18:08,978 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:18:08,978 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:18:08,978 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:18:08,979 INFO  Successfully parsed JSON response
2019-03-06 14:18:08,980 INFO  In the process of generating verify response in HTML
2019-03-06 14:18:09,052 INFO  Successfully generated verify response in HTML
2019-03-06 14:18:09,052 INFO  Successfully processed the response from service
2019-03-06 14:18:20,720 INFO  Setting request parameters for VerifySolution
2019-03-06 14:18:20,721 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 14:18:20,721 INFO  Starting to parse the user solution
2019-03-06 14:18:20,721 INFO  Displaying user solution
2019-03-06 14:18:20,783 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-7\r\n'''\r\nCreated on Mar 5, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Instructor:\r\n    def __init__(self):\r\n        self.__instructor_name= None\r\n        self.__technology_skill =None\r\n        self.__experience = None\r\n        self.__avg_feedback = None\r\n    def get_instructor_name(self):\r\n        return self.__instructor_name\r\n\r\n\r\n    def get_technology_skill(self):\r\n        return self.__technology_skill\r\n\r\n\r\n    def get_experience(self):\r\n        return self.__experience\r\n\r\n\r\n    def get_avg_feedback(self):\r\n        return self.__avg_feedback\r\n\r\n\r\n    def set_instructor_name(self, instructor_name):\r\n        self.__instructor_name = instructor_name\r\n\r\n\r\n    def set_technology_skill(self, technology_skill):\r\n            self.__technology_skill=technology_skill\r\n\r\n\r\n    def set_experience(self, experience):\r\n        self.__experience = experience\r\n\r\n\r\n    def set_avg_feedback(self,avg_feedback):\r\n        self.__avg_feedback =avg_feedback\r\n    def check_eligibility(self):\r\n        if(self.get_experience()>3 and self.get_avg_feedback()>=4.5):\r\n            return True\r\n        elif(self.get_experience()<=3 and self.get_avg_feedback()>=4):\r\n            return True\r\n        else:\r\n            return False\r\n    def allocate_course(self,technology):\r\n        for i in (self.get_technology_skill()):\r\n            if(i==technology):\r\n                return True\r\n            else:\r\n              return False\r\n\r\nI1 = Instructor()\r\nI1.set_instructor_name(\"Vijay\")\r\nI1.set_experience(3)\r\nI1.set_avg_feedback(4)\r\nI1.set_technology_skill([\"C++\",\"JAVA\"])\r\nI1.check_eligibility()\r\nI1.allocate_course(\"C++\")\r\n\r\n","asgnmtId":"7","SolutionFileName":"Assign7.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 14:18:20,783 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 14:18:20,783 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 14:18:20,783 INFO  Invoking the service to verify the user solution
2019-03-06 14:18:20,784 INFO  Time before invoking service:Wed Mar 06 14:18:20 IST 2019
2019-03-06 14:18:20,784 INFO  Initialising service address for VerifySolution
2019-03-06 14:18:20,784 INFO  Time before invoking service In SUPER:Wed Mar 06 14:18:20 IST 2019
2019-03-06 14:18:21,750 INFO  Time after invoking service In SUPER:Wed Mar 06 14:18:21 IST 2019
2019-03-06 14:18:21,750 INFO  Service responded successfully with required details
2019-03-06 14:18:21,750 INFO  Time after invoking service:Wed Mar 06 14:18:21 IST 2019
2019-03-06 14:18:21,751 INFO  User solution successfully verified
2019-03-06 14:18:21,751 INFO  Processing the response from verify service
2019-03-06 14:18:21,753 INFO  Starting to parse JSON response
2019-03-06 14:18:21,753 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:18:21,753 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:18:21,754 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:18:21,754 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:18:21,755 INFO  Successfully parsed JSON response
2019-03-06 14:18:21,755 INFO  In the process of generating verify response in HTML
2019-03-06 14:18:21,821 INFO  Successfully generated verify response in HTML
2019-03-06 14:18:21,821 INFO  Successfully processed the response from service
2019-03-06 14:19:53,163 INFO  Setting request parameters for VerifySolution
2019-03-06 14:19:53,163 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 14:19:53,163 INFO  Starting to parse the user solution
2019-03-06 14:19:53,164 INFO  Displaying user solution
2019-03-06 14:19:53,224 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-7\r\n'''\r\nCreated on Mar 5, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Instructor:\r\n    def __init__(self):\r\n        self.__instructor_name= None\r\n        self.__technology_skill =None\r\n        self.__experience = None\r\n        self.__avg_feedback = None\r\n    def get_instructor_name(self):\r\n        return self.__instructor_name\r\n\r\n\r\n    def get_technology_skill(self):\r\n        return self.__technology_skill\r\n\r\n\r\n    def get_experience(self):\r\n        return self.__experience\r\n\r\n\r\n    def get_avg_feedback(self):\r\n        return self.__avg_feedback\r\n\r\n\r\n    def set_instructor_name(self, instructor_name):\r\n        self.__instructor_name = instructor_name\r\n\r\n\r\n    def set_technology_skill(self, technology_skill):\r\n            self.__technology_skill=technology_skill\r\n\r\n\r\n    def set_experience(self, experience):\r\n        self.__experience = experience\r\n\r\n\r\n    def set_avg_feedback(self,avg_feedback):\r\n        self.__avg_feedback =avg_feedback\r\n    def check_eligibility(self):\r\n        if(self.get_experience()>3 and self.get_avg_feedback()>=4.5):\r\n            return True\r\n        elif(self.get_experience()<=3 and self.get_avg_feedback()>=4):\r\n            return True\r\n        else:\r\n            return False\r\n    def allocate_course(self,technology):\r\n        for i in (self.get_technology_skill()):\r\n            if(i==technology):\r\n                return True\r\n            else:\r\n              return False\r\n\r\nI1 = Instructor()\r\nI1.set_instructor_name(\"Vijay\")\r\nI1.set_experience(3)\r\nI1.set_avg_feedback(4)\r\nI1.set_technology_skill(['C++','JAVA'])\r\nI1.check_eligibility()\r\nI1.allocate_course('C++')\r\n\r\n","asgnmtId":"7","SolutionFileName":"Assign7.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 14:19:53,225 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 14:19:53,225 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 14:19:53,225 INFO  Invoking the service to verify the user solution
2019-03-06 14:19:53,225 INFO  Time before invoking service:Wed Mar 06 14:19:53 IST 2019
2019-03-06 14:19:53,225 INFO  Initialising service address for VerifySolution
2019-03-06 14:19:53,226 INFO  Time before invoking service In SUPER:Wed Mar 06 14:19:53 IST 2019
2019-03-06 14:19:54,393 INFO  Time after invoking service In SUPER:Wed Mar 06 14:19:54 IST 2019
2019-03-06 14:19:54,394 INFO  Service responded successfully with required details
2019-03-06 14:19:54,394 INFO  Time after invoking service:Wed Mar 06 14:19:54 IST 2019
2019-03-06 14:19:54,394 INFO  User solution successfully verified
2019-03-06 14:19:54,394 INFO  Processing the response from verify service
2019-03-06 14:19:54,399 INFO  Starting to parse JSON response
2019-03-06 14:19:54,401 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:19:54,401 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:19:54,401 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:19:54,401 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:19:54,402 INFO  Successfully parsed JSON response
2019-03-06 14:19:54,402 INFO  In the process of generating verify response in HTML
2019-03-06 14:19:54,474 INFO  Successfully generated verify response in HTML
2019-03-06 14:19:54,474 INFO  Successfully processed the response from service
2019-03-06 14:21:51,314 INFO  Setting request parameters for VerifySolution
2019-03-06 14:21:51,314 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 14:21:51,314 INFO  Starting to parse the user solution
2019-03-06 14:21:51,314 INFO  Displaying user solution
2019-03-06 14:21:51,420 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-7\r\n'''\r\nCreated on Mar 5, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Instructor:\r\n    def __init__(self):\r\n        self.__instructor_name= None\r\n        self.__technology_skill =None\r\n        self.__experience = None\r\n        self.__avg_feedback = None\r\n    def get_instructor_name(self):\r\n        return self.__instructor_name\r\n\r\n\r\n    def get_technology_skill(self):\r\n        return self.__technology_skill\r\n\r\n\r\n    def get_experience(self):\r\n        return self.__experience\r\n\r\n\r\n    def get_avg_feedback(self):\r\n        return self.__avg_feedback\r\n\r\n\r\n    def set_instructor_name(self, instructor_name):\r\n        self.__instructor_name = instructor_name\r\n\r\n\r\n    def set_technology_skill(self, technology_skill):\r\n            self.__technology_skill=technology_skill\r\n\r\n\r\n    def set_experience(self, experience):\r\n        self.__experience = experience\r\n\r\n\r\n    def set_avg_feedback(self,avg_feedback):\r\n        self.__avg_feedback =avg_feedback\r\n    def check_eligibility(self):\r\n        if(self.get_experience()>3 and self.get_avg_feedback()>=4.5):\r\n            return True\r\n        elif(self.get_experience()<=3 and self.get_avg_feedback()>=4):\r\n            return True\r\n        else:\r\n            return False\r\n    def allocate_course(self,technology):\r\n        for i in (self.get_technology_skill()):\r\n            if(i==technology and self.check_eligibility()):\r\n                return True\r\n            else:\r\n              return False\r\n\r\nI1 = Instructor()\r\nI1.set_instructor_name(\"Vijay\")\r\nI1.set_experience(3)\r\nI1.set_avg_feedback(4)\r\nI1.set_technology_skill(['C++','JAVA'])\r\nI1.check_eligibility()\r\nI1.allocate_course('C++')\r\n\r\n","asgnmtId":"7","SolutionFileName":"Assign7.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 14:21:51,421 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 14:21:51,421 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 14:21:51,421 INFO  Invoking the service to verify the user solution
2019-03-06 14:21:51,422 INFO  Time before invoking service:Wed Mar 06 14:21:51 IST 2019
2019-03-06 14:21:51,422 INFO  Initialising service address for VerifySolution
2019-03-06 14:21:51,423 INFO  Time before invoking service In SUPER:Wed Mar 06 14:21:51 IST 2019
2019-03-06 14:21:52,435 INFO  Time after invoking service In SUPER:Wed Mar 06 14:21:52 IST 2019
2019-03-06 14:21:52,435 INFO  Service responded successfully with required details
2019-03-06 14:21:52,435 INFO  Time after invoking service:Wed Mar 06 14:21:52 IST 2019
2019-03-06 14:21:52,436 INFO  User solution successfully verified
2019-03-06 14:21:52,436 INFO  Processing the response from verify service
2019-03-06 14:21:52,439 INFO  Starting to parse JSON response
2019-03-06 14:21:52,440 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:21:52,440 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:21:52,441 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:21:52,441 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:21:52,442 INFO  Successfully parsed JSON response
2019-03-06 14:21:52,443 INFO  In the process of generating verify response in HTML
2019-03-06 14:21:52,520 INFO  Successfully generated verify response in HTML
2019-03-06 14:21:52,520 INFO  Successfully processed the response from service
2019-03-06 14:22:00,348 INFO  Setting request parameters for VerifySolution
2019-03-06 14:22:00,349 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 14:22:00,349 INFO  Starting to parse the user solution
2019-03-06 14:22:00,349 INFO  Displaying user solution
2019-03-06 14:22:00,420 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-7\r\n'''\r\nCreated on Mar 5, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Instructor:\r\n    def __init__(self):\r\n        self.__instructor_name= None\r\n        self.__technology_skill =None\r\n        self.__experience = None\r\n        self.__avg_feedback = None\r\n    def get_instructor_name(self):\r\n        return self.__instructor_name\r\n\r\n\r\n    def get_technology_skill(self):\r\n        return self.__technology_skill\r\n\r\n\r\n    def get_experience(self):\r\n        return self.__experience\r\n\r\n\r\n    def get_avg_feedback(self):\r\n        return self.__avg_feedback\r\n\r\n\r\n    def set_instructor_name(self, instructor_name):\r\n        self.__instructor_name = instructor_name\r\n\r\n\r\n    def set_technology_skill(self, technology_skill):\r\n            self.__technology_skill=technology_skill\r\n\r\n\r\n    def set_experience(self, experience):\r\n        self.__experience = experience\r\n\r\n\r\n    def set_avg_feedback(self,avg_feedback):\r\n        self.__avg_feedback =avg_feedback\r\n    def check_eligibility(self):\r\n        if(self.get_experience()>3 and self.get_avg_feedback()>=4.5):\r\n            return True\r\n        elif(self.get_experience()<=3 and self.get_avg_feedback()>=4):\r\n            return True\r\n        else:\r\n            return False\r\n    def allocate_course(self,technology):\r\n        for i in (self.get_technology_skill()):\r\n            if(i==technology and self.check_eligibility()):\r\n                return True\r\n            else:\r\n              return False\r\n\r\nI1 = Instructor()\r\nI1.set_instructor_name(\"Vijay\")\r\nI1.set_experience(3)\r\nI1.set_avg_feedback(4)\r\nI1.set_technology_skill(['C++','JAVA'])\r\nI1.check_eligibility()\r\nI1.allocate_course('C++')\r\n\r\n","asgnmtId":"7","SolutionFileName":"Assign7.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 14:22:00,421 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 14:22:00,421 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 14:22:00,421 INFO  Invoking the service to verify the user solution
2019-03-06 14:22:00,421 INFO  Time before invoking service:Wed Mar 06 14:22:00 IST 2019
2019-03-06 14:22:00,421 INFO  Initialising service address for VerifySolution
2019-03-06 14:22:00,422 INFO  Time before invoking service In SUPER:Wed Mar 06 14:22:00 IST 2019
2019-03-06 14:22:01,416 INFO  Time after invoking service In SUPER:Wed Mar 06 14:22:01 IST 2019
2019-03-06 14:22:01,417 INFO  Service responded successfully with required details
2019-03-06 14:22:01,417 INFO  Time after invoking service:Wed Mar 06 14:22:01 IST 2019
2019-03-06 14:22:01,417 INFO  User solution successfully verified
2019-03-06 14:22:01,417 INFO  Processing the response from verify service
2019-03-06 14:22:01,419 INFO  Starting to parse JSON response
2019-03-06 14:22:01,421 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:22:01,421 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:22:01,421 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:22:01,421 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:22:01,425 INFO  Successfully parsed JSON response
2019-03-06 14:22:01,425 INFO  In the process of generating verify response in HTML
2019-03-06 14:22:01,503 INFO  Successfully generated verify response in HTML
2019-03-06 14:22:01,503 INFO  Successfully processed the response from service
2019-03-06 14:24:04,374 INFO  Setting request parameters for VerifySolution
2019-03-06 14:24:04,374 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 14:24:04,374 INFO  Starting to parse the user solution
2019-03-06 14:24:04,375 INFO  Displaying user solution
2019-03-06 14:24:04,450 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-7\r\n'''\r\nCreated on Mar 5, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Instructor:\r\n    def __init__(self):\r\n        self.__instructor_name= None\r\n        self.__technology_skill =None\r\n        self.__experience = None\r\n        self.__avg_feedback = None\r\n    def get_instructor_name(self):\r\n        return self.__instructor_name\r\n\r\n\r\n    def get_technology_skill(self):\r\n        return self.__technology_skill\r\n\r\n\r\n    def get_experience(self):\r\n        return self.__experience\r\n\r\n\r\n    def get_avg_feedback(self):\r\n        return self.__avg_feedback\r\n\r\n\r\n    def set_instructor_name(self, instructor_name):\r\n        self.__instructor_name = instructor_name\r\n\r\n\r\n    def set_technology_skill(self, technology_skill):\r\n            self.__technology_skill=technology_skill\r\n\r\n\r\n    def set_experience(self, experience):\r\n        self.__experience = experience\r\n\r\n\r\n    def set_avg_feedback(self,avg_feedback):\r\n        self.__avg_feedback =avg_feedback\r\n    def check_eligibility(self):\r\n        if(self.get_experience()>3 and self.get_avg_feedback()>=4.5):\r\n            return True\r\n        elif(self.get_experience()<=3 and self.get_avg_feedback()>=4):\r\n            return True\r\n        else:\r\n            return False\r\n    def allocate_course(self,technology):\r\n            if(technology in self.__technology_skill and self.check_eligibility()):\r\n                return True\r\n            else:\r\n              return False\r\n\r\nI1 = Instructor()\r\nI1.set_instructor_name(\"Vijay\")\r\nI1.set_experience(3)\r\nI1.set_avg_feedback(4)\r\nI1.set_technology_skill(['C++','JAVA'])\r\nI1.check_eligibility()\r\nI1.allocate_course('C++')\r\n\r\n","asgnmtId":"7","SolutionFileName":"Assign7.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 14:24:04,454 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 14:24:04,454 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 14:24:04,454 INFO  Invoking the service to verify the user solution
2019-03-06 14:24:04,454 INFO  Time before invoking service:Wed Mar 06 14:24:04 IST 2019
2019-03-06 14:24:04,455 INFO  Initialising service address for VerifySolution
2019-03-06 14:24:04,455 INFO  Time before invoking service In SUPER:Wed Mar 06 14:24:04 IST 2019
2019-03-06 14:24:05,496 INFO  Time after invoking service In SUPER:Wed Mar 06 14:24:05 IST 2019
2019-03-06 14:24:05,497 INFO  Service responded successfully with required details
2019-03-06 14:24:05,497 INFO  Time after invoking service:Wed Mar 06 14:24:05 IST 2019
2019-03-06 14:24:05,497 INFO  User solution successfully verified
2019-03-06 14:24:05,498 INFO  Processing the response from verify service
2019-03-06 14:24:05,500 INFO  Starting to parse JSON response
2019-03-06 14:24:05,501 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:24:05,501 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:24:05,501 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:24:05,501 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:24:05,501 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:24:05,501 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:24:05,501 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:24:05,501 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:24:05,501 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:24:05,501 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:24:05,502 INFO  Successfully parsed JSON response
2019-03-06 14:24:05,503 INFO  In the process of generating verify response in HTML
2019-03-06 14:24:05,569 INFO  Successfully generated verify response in HTML
2019-03-06 14:24:05,569 INFO  Successfully processed the response from service
2019-03-06 14:24:26,831 INFO  Setting request parameters for VerifySolution
2019-03-06 14:24:26,831 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 14:24:26,831 INFO  Starting to parse the user solution
2019-03-06 14:24:26,832 INFO  Displaying user solution
2019-03-06 14:24:26,905 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-7\r\n'''\r\nCreated on Mar 5, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Instructor:\r\n    def __init__(self):\r\n        self.__instructor_name= None\r\n        self.__technology_skill =None\r\n        self.__experience = None\r\n        self.__avg_feedback = None\r\n    def get_instructor_name(self):\r\n        return self.__instructor_name\r\n\r\n\r\n    def get_technology_skill(self):\r\n        return self.__technology_skill\r\n\r\n\r\n    def get_experience(self):\r\n        return self.__experience\r\n\r\n\r\n    def get_avg_feedback(self):\r\n        return self.__avg_feedback\r\n\r\n\r\n    def set_instructor_name(self, instructor_name):\r\n        self.__instructor_name = instructor_name\r\n\r\n\r\n    def set_technology_skill(self, technology_skill):\r\n            self.__technology_skill=technology_skill\r\n\r\n\r\n    def set_experience(self, experience):\r\n        self.__experience = experience\r\n\r\n\r\n    def set_avg_feedback(self,avg_feedback):\r\n        self.__avg_feedback =avg_feedback\r\n    def check_eligibility(self):\r\n        if(self.get_experience()>3 and self.get_avg_feedback()>=4.5):\r\n            return True\r\n        elif(self.get_experience()<=3 and self.get_avg_feedback()>=4):\r\n            return True\r\n        else:\r\n            return False\r\n    def allocate_course(self,technology):\r\n            if(technology in self.__technology_skill):\r\n                return True\r\n            else:\r\n              return False\r\n\r\nI1 = Instructor()\r\nI1.set_instructor_name(\"Vijay\")\r\nI1.set_experience(3)\r\nI1.set_avg_feedback(4)\r\nI1.set_technology_skill(['C++','JAVA'])\r\nI1.check_eligibility()\r\nI1.allocate_course('C++')\r\n\r\n","asgnmtId":"7","SolutionFileName":"Assign7.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 14:24:26,905 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 14:24:26,905 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 14:24:26,905 INFO  Invoking the service to verify the user solution
2019-03-06 14:24:26,906 INFO  Time before invoking service:Wed Mar 06 14:24:26 IST 2019
2019-03-06 14:24:26,906 INFO  Initialising service address for VerifySolution
2019-03-06 14:24:26,907 INFO  Time before invoking service In SUPER:Wed Mar 06 14:24:26 IST 2019
2019-03-06 14:24:27,975 INFO  Time after invoking service In SUPER:Wed Mar 06 14:24:27 IST 2019
2019-03-06 14:24:27,976 INFO  Service responded successfully with required details
2019-03-06 14:24:27,976 INFO  Time after invoking service:Wed Mar 06 14:24:27 IST 2019
2019-03-06 14:24:27,976 INFO  User solution successfully verified
2019-03-06 14:24:27,977 INFO  Processing the response from verify service
2019-03-06 14:24:27,979 INFO  Starting to parse JSON response
2019-03-06 14:24:27,981 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:24:27,981 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:24:27,981 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:24:27,981 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:24:27,983 INFO  Successfully parsed JSON response
2019-03-06 14:24:27,983 INFO  In the process of generating verify response in HTML
2019-03-06 14:24:28,070 INFO  Successfully generated verify response in HTML
2019-03-06 14:24:28,070 INFO  Successfully processed the response from service
2019-03-06 14:25:04,322 INFO  Setting request parameters for VerifySolution
2019-03-06 14:25:04,322 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 14:25:04,322 INFO  Starting to parse the user solution
2019-03-06 14:25:04,322 INFO  Displaying user solution
2019-03-06 14:25:04,393 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-7\r\n'''\r\nCreated on Mar 5, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Instructor:\r\n    def __init__(self):\r\n        self.__instructor_name= None\r\n        self.__technology_skill =None\r\n        self.__experience = None\r\n        self.__avg_feedback = None\r\n    def get_instructor_name(self):\r\n        return self.__instructor_name\r\n\r\n\r\n    def get_technology_skill(self):\r\n        return self.__technology_skill\r\n\r\n\r\n    def get_experience(self):\r\n        return self.__experience\r\n\r\n\r\n    def get_avg_feedback(self):\r\n        return self.__avg_feedback\r\n\r\n\r\n    def set_instructor_name(self, instructor_name):\r\n        self.__instructor_name = instructor_name\r\n\r\n\r\n    def set_technology_skill(self, technology_skill):\r\n            self.__technology_skill=technology_skill\r\n\r\n\r\n    def set_experience(self, experience):\r\n        self.__experience = experience\r\n\r\n\r\n    def set_avg_feedback(self,avg_feedback):\r\n        self.__avg_feedback =avg_feedback\r\n    def check_eligibility(self):\r\n        if(self.get_experience()>3 and self.get_avg_feedback()>=4.5):\r\n            return True\r\n        elif(self.get_experience()<=3 and self.get_avg_feedback()>=4):\r\n            return True\r\n        else:\r\n            return False\r\n    def allocate_course(self,technology):\r\n            if(technology in self.__technology_skill and self.check_eligibility()):\r\n                return True\r\n            else:\r\n              return False\r\n\r\nI1 = Instructor()\r\nI1.set_instructor_name(\"Vijay\")\r\nI1.set_experience(3)\r\nI1.set_avg_feedback(4)\r\nI1.set_technology_skill(['C++','JAVA'])\r\nI1.check_eligibility()\r\nI1.allocate_course('C++')\r\n\r\n","asgnmtId":"7","SolutionFileName":"Assign7.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 14:25:04,393 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 14:25:04,393 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 14:25:04,393 INFO  Invoking the service to verify the user solution
2019-03-06 14:25:04,393 INFO  Time before invoking service:Wed Mar 06 14:25:04 IST 2019
2019-03-06 14:25:04,393 INFO  Initialising service address for VerifySolution
2019-03-06 14:25:04,394 INFO  Time before invoking service In SUPER:Wed Mar 06 14:25:04 IST 2019
2019-03-06 14:25:05,401 INFO  Time after invoking service In SUPER:Wed Mar 06 14:25:05 IST 2019
2019-03-06 14:25:05,401 INFO  Service responded successfully with required details
2019-03-06 14:25:05,401 INFO  Time after invoking service:Wed Mar 06 14:25:05 IST 2019
2019-03-06 14:25:05,402 INFO  User solution successfully verified
2019-03-06 14:25:05,402 INFO  Processing the response from verify service
2019-03-06 14:25:05,408 INFO  Starting to parse JSON response
2019-03-06 14:25:05,410 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:25:05,410 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:25:05,410 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:25:05,410 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:25:05,410 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:25:05,410 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:25:05,410 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:25:05,410 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:25:05,410 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:25:05,410 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:25:05,411 INFO  Successfully parsed JSON response
2019-03-06 14:25:05,411 INFO  In the process of generating verify response in HTML
2019-03-06 14:25:05,497 INFO  Successfully generated verify response in HTML
2019-03-06 14:25:05,497 INFO  Successfully processed the response from service
2019-03-06 14:26:11,129 INFO  Setting request parameters for VerifySolution
2019-03-06 14:26:11,129 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 14:26:11,129 INFO  Starting to parse the user solution
2019-03-06 14:26:11,129 INFO  Displaying user solution
2019-03-06 14:26:11,203 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-7\r\n'''\r\nCreated on Mar 5, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Instructor:\r\n    def __init__(self):\r\n        self.__instructor_name= None\r\n        self.__technology_skill =None\r\n        self.__experience = None\r\n        self.__avg_feedback = None\r\n    def get_instructor_name(self):\r\n        return self.__instructor_name\r\n\r\n\r\n    def get_technology_skill(self):\r\n        return self.__technology_skill\r\n\r\n\r\n    def get_experience(self):\r\n        return self.__experience\r\n\r\n\r\n    def get_avg_feedback(self):\r\n        return self.__avg_feedback\r\n\r\n\r\n    def set_instructor_name(self, instructor_name):\r\n        self.__instructor_name = instructor_name\r\n\r\n\r\n    def set_technology_skill(self, technology_skill):\r\n            self.__technology_skill=technology_skill\r\n\r\n\r\n    def set_experience(self, experience):\r\n        self.__experience = experience\r\n\r\n\r\n    def set_avg_feedback(self,avg_feedback):\r\n        self.__avg_feedback =avg_feedback\r\n    def check_eligibility(self):\r\n        if(self.get_experience()>3 and self.get_avg_feedback()>=4.5):\r\n            return True\r\n        elif(self.get_experience()<=3 and self.get_avg_feedback()>=4):\r\n            return True\r\n        else:\r\n            return False\r\n    def allocate_course(self,technology):\r\n            s=self.check_eligibility()\r\n            if(technology in self.__technology_skill and s ):\r\n                return True\r\n            else:\r\n              return False\r\n\r\nI1 = Instructor()\r\nI1.set_instructor_name(\"Vijay\")\r\nI1.set_experience(3)\r\nI1.set_avg_feedback(4)\r\nI1.set_technology_skill(['C++','JAVA'])\r\nI1.check_eligibility()\r\nI1.allocate_course('C++')\r\n\r\n","asgnmtId":"7","SolutionFileName":"Assign7.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 14:26:11,205 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 14:26:11,206 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 14:26:11,206 INFO  Invoking the service to verify the user solution
2019-03-06 14:26:11,206 INFO  Time before invoking service:Wed Mar 06 14:26:11 IST 2019
2019-03-06 14:26:11,206 INFO  Initialising service address for VerifySolution
2019-03-06 14:26:11,207 INFO  Time before invoking service In SUPER:Wed Mar 06 14:26:11 IST 2019
2019-03-06 14:26:12,256 INFO  Time after invoking service In SUPER:Wed Mar 06 14:26:12 IST 2019
2019-03-06 14:26:12,257 INFO  Service responded successfully with required details
2019-03-06 14:26:12,257 INFO  Time after invoking service:Wed Mar 06 14:26:12 IST 2019
2019-03-06 14:26:12,257 INFO  User solution successfully verified
2019-03-06 14:26:12,257 INFO  Processing the response from verify service
2019-03-06 14:26:12,260 INFO  Starting to parse JSON response
2019-03-06 14:26:12,261 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:26:12,261 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:26:12,261 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:26:12,261 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:26:12,261 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:26:12,261 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:26:12,261 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:26:12,261 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:26:12,261 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:26:12,261 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:26:12,262 INFO  Successfully parsed JSON response
2019-03-06 14:26:12,262 INFO  In the process of generating verify response in HTML
2019-03-06 14:26:12,328 INFO  Successfully generated verify response in HTML
2019-03-06 14:26:12,329 INFO  Successfully processed the response from service
2019-03-06 14:26:25,721 INFO  Setting request parameters for VerifySolution
2019-03-06 14:26:25,722 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 14:26:25,722 INFO  Starting to parse the user solution
2019-03-06 14:26:25,722 INFO  Displaying user solution
2019-03-06 14:26:25,794 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-7\r\n'''\r\nCreated on Mar 5, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Instructor:\r\n    def __init__(self):\r\n        self.__instructor_name= None\r\n        self.__technology_skill =None\r\n        self.__experience = None\r\n        self.__avg_feedback = None\r\n    def get_instructor_name(self):\r\n        return self.__instructor_name\r\n\r\n\r\n    def get_technology_skill(self):\r\n        return self.__technology_skill\r\n\r\n\r\n    def get_experience(self):\r\n        return self.__experience\r\n\r\n\r\n    def get_avg_feedback(self):\r\n        return self.__avg_feedback\r\n\r\n\r\n    def set_instructor_name(self, instructor_name):\r\n        self.__instructor_name = instructor_name\r\n\r\n\r\n    def set_technology_skill(self, technology_skill):\r\n            self.__technology_skill=technology_skill\r\n\r\n\r\n    def set_experience(self, experience):\r\n        self.__experience = experience\r\n\r\n\r\n    def set_avg_feedback(self,avg_feedback):\r\n        self.__avg_feedback =avg_feedback\r\n    def check_eligibility(self):\r\n        if(self.get_experience()>3 and self.get_avg_feedback()>=4.5):\r\n            return True\r\n        elif(self.get_experience()<=3 and self.get_avg_feedback()>=4):\r\n            return True\r\n        else:\r\n            return False\r\n    def allocate_course(self,technology):\r\n            s=self.check_eligibility()\r\n            if(technology in self.__technology_skill and s ):\r\n                return True\r\n            else:\r\n              return False\r\n\r\nI1 = Instructor()\r\nI1.set_instructor_name(\"Vijay\")\r\nI1.set_experience(3)\r\nI1.set_avg_feedback(4)\r\nI1.set_technology_skill(['C++','JAVA'])\r\nI1.check_eligibility()\r\nI1.allocate_course('C++')\r\n\r\n","asgnmtId":"7","SolutionFileName":"Assign7.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 14:26:25,794 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 14:26:25,794 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 14:26:25,794 INFO  Invoking the service to verify the user solution
2019-03-06 14:26:25,795 INFO  Time before invoking service:Wed Mar 06 14:26:25 IST 2019
2019-03-06 14:26:25,795 INFO  Initialising service address for VerifySolution
2019-03-06 14:26:25,795 INFO  Time before invoking service In SUPER:Wed Mar 06 14:26:25 IST 2019
2019-03-06 14:26:26,719 INFO  Time after invoking service In SUPER:Wed Mar 06 14:26:26 IST 2019
2019-03-06 14:26:26,720 INFO  Service responded successfully with required details
2019-03-06 14:26:26,720 INFO  Time after invoking service:Wed Mar 06 14:26:26 IST 2019
2019-03-06 14:26:26,720 INFO  User solution successfully verified
2019-03-06 14:26:26,720 INFO  Processing the response from verify service
2019-03-06 14:26:26,722 INFO  Starting to parse JSON response
2019-03-06 14:26:26,723 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:26:26,723 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:26:26,723 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:26:26,723 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:26:26,723 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:26:26,723 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:26:26,723 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:26:26,723 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:26:26,723 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:26:26,724 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:26:26,725 INFO  Successfully parsed JSON response
2019-03-06 14:26:26,725 INFO  In the process of generating verify response in HTML
2019-03-06 14:26:26,795 INFO  Successfully generated verify response in HTML
2019-03-06 14:26:26,795 INFO  Successfully processed the response from service
2019-03-06 14:27:07,526 INFO  Initiating to process and prepare Input for the submit service
2019-03-06 14:27:07,527 INFO  Displaying user solution
2019-03-06 14:27:07,537 INFO  Successfully processed and prepared the input for the submit service
2019-03-06 14:27:07,537 INFO  Invoking the service to submit the user solution
2019-03-06 14:27:07,537 INFO  Initialising service address for Submit
2019-03-06 14:27:07,538 INFO  Time before invoking service In SUPER:Wed Mar 06 14:27:07 IST 2019
2019-03-06 14:27:07,946 INFO  Time after invoking service In SUPER:Wed Mar 06 14:27:07 IST 2019
2019-03-06 14:27:07,947 INFO  Service responded successfully with required details
2019-03-06 14:27:07,947 INFO  User solution successfully submitted
2019-03-06 14:27:07,947 INFO  Displaying submission status
2019-03-06 14:27:07,947 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-06 14:27:11,190 INFO  Initiating to process and prepare Input for the submit service
2019-03-06 14:27:11,190 INFO  Displaying user solution
2019-03-06 14:27:11,198 INFO  Successfully processed and prepared the input for the submit service
2019-03-06 14:27:11,198 INFO  Invoking the service to submit the user solution
2019-03-06 14:27:11,198 INFO  Initialising service address for Submit
2019-03-06 14:27:11,199 INFO  Time before invoking service In SUPER:Wed Mar 06 14:27:11 IST 2019
2019-03-06 14:27:11,402 INFO  Time after invoking service In SUPER:Wed Mar 06 14:27:11 IST 2019
2019-03-06 14:27:11,402 INFO  Service responded successfully with required details
2019-03-06 14:27:11,402 INFO  User solution successfully submitted
2019-03-06 14:27:11,403 INFO  Displaying submission status
2019-03-06 14:27:11,403 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-06 14:27:41,335 INFO  Setting request parameters for VerifySolution
2019-03-06 14:27:41,336 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 14:27:41,336 INFO  Starting to parse the user solution
2019-03-06 14:27:41,337 INFO  Displaying user solution
2019-03-06 14:27:41,439 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-7\r\n'''\r\nCreated on Mar 5, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Instructor:\r\n    def __init__(self):\r\n        self.__instructor_name= None\r\n        self.__technology_skill =None\r\n        self.__experience = None\r\n        self.__avg_feedback = None\r\n    def get_instructor_name(self):\r\n        return self.__instructor_name\r\n\r\n\r\n    def get_technology_skill(self):\r\n        return self.__technology_skill\r\n\r\n\r\n    def get_experience(self):\r\n        return self.__experience\r\n\r\n\r\n    def get_avg_feedback(self):\r\n        return self.__avg_feedback\r\n\r\n\r\n    def set_instructor_name(self, instructor_name):\r\n        self.__instructor_name = instructor_name\r\n\r\n\r\n    def set_technology_skill(self, technology_skill):\r\n            self.__technology_skill=technology_skill\r\n\r\n\r\n    def set_experience(self, experience):\r\n        self.__experience = experience\r\n\r\n\r\n    def set_avg_feedback(self,avg_feedback):\r\n        self.__avg_feedback =avg_feedback\r\n    def check_eligibility(self):\r\n        if(self.get_experience()>3 and self.get_avg_feedback()>=4.5):\r\n            return True\r\n        elif(self.get_experience()<=3 and self.get_avg_feedback()>=4):\r\n            return True\r\n        else:\r\n            return False\r\n    def allocate_course(self,technology):\r\n        s=self.check_eligibility()\r\n        if(technology in self.__technology_skill and s ):\r\n            return True\r\n        else:\r\n            return False\r\n\r\nI1 = Instructor()\r\nI1.set_instructor_name(\"Vijay\")\r\nI1.set_experience(3)\r\nI1.set_avg_feedback(4)\r\nI1.set_technology_skill(['C++','JAVA'])\r\nI1.check_eligibility()\r\nI1.allocate_course('C++')\r\n\r\n","asgnmtId":"7","SolutionFileName":"Assign7.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 14:27:41,440 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 14:27:41,440 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 14:27:41,441 INFO  Invoking the service to verify the user solution
2019-03-06 14:27:41,441 INFO  Time before invoking service:Wed Mar 06 14:27:41 IST 2019
2019-03-06 14:27:41,441 INFO  Initialising service address for VerifySolution
2019-03-06 14:27:41,442 INFO  Time before invoking service In SUPER:Wed Mar 06 14:27:41 IST 2019
2019-03-06 14:27:42,425 INFO  Time after invoking service In SUPER:Wed Mar 06 14:27:42 IST 2019
2019-03-06 14:27:42,426 INFO  Service responded successfully with required details
2019-03-06 14:27:42,427 INFO  Time after invoking service:Wed Mar 06 14:27:42 IST 2019
2019-03-06 14:27:42,428 INFO  User solution successfully verified
2019-03-06 14:27:42,428 INFO  Processing the response from verify service
2019-03-06 14:27:42,432 INFO  Starting to parse JSON response
2019-03-06 14:27:42,433 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:27:42,433 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:27:42,433 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:27:42,433 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:27:42,433 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:27:42,433 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:27:42,433 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:27:42,433 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:27:42,433 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:27:42,433 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:27:42,435 INFO  Successfully parsed JSON response
2019-03-06 14:27:42,435 INFO  In the process of generating verify response in HTML
2019-03-06 14:27:42,553 INFO  Successfully generated verify response in HTML
2019-03-06 14:27:42,553 INFO  Successfully processed the response from service
2019-03-06 14:27:45,917 INFO  Initiating to process and prepare Input for the submit service
2019-03-06 14:27:45,918 INFO  Displaying user solution
2019-03-06 14:27:45,928 INFO  Successfully processed and prepared the input for the submit service
2019-03-06 14:27:45,928 INFO  Invoking the service to submit the user solution
2019-03-06 14:27:45,928 INFO  Initialising service address for Submit
2019-03-06 14:27:45,928 INFO  Time before invoking service In SUPER:Wed Mar 06 14:27:45 IST 2019
2019-03-06 14:27:46,124 INFO  Time after invoking service In SUPER:Wed Mar 06 14:27:46 IST 2019
2019-03-06 14:27:46,124 INFO  Service responded successfully with required details
2019-03-06 14:27:46,124 INFO  User solution successfully submitted
2019-03-06 14:27:46,124 INFO  Displaying submission status
2019-03-06 14:27:46,124 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-06 14:27:48,567 INFO  Initiating to process and prepare Input for the submit service
2019-03-06 14:27:48,568 INFO  Displaying user solution
2019-03-06 14:27:48,579 INFO  Successfully processed and prepared the input for the submit service
2019-03-06 14:27:48,579 INFO  Invoking the service to submit the user solution
2019-03-06 14:27:48,579 INFO  Initialising service address for Submit
2019-03-06 14:27:48,580 INFO  Time before invoking service In SUPER:Wed Mar 06 14:27:48 IST 2019
2019-03-06 14:27:48,652 INFO  Time after invoking service In SUPER:Wed Mar 06 14:27:48 IST 2019
2019-03-06 14:27:48,653 INFO  Service responded successfully with required details
2019-03-06 14:27:48,653 INFO  User solution successfully submitted
2019-03-06 14:27:48,653 INFO  Displaying submission status
2019-03-06 14:27:48,653 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-06 14:29:24,829 INFO  Setting request parameters for VerifySolution
2019-03-06 14:29:24,830 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 14:29:24,830 INFO  Starting to parse the user solution
2019-03-06 14:29:24,835 INFO  Displaying user solution
2019-03-06 14:29:24,859 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Exer-6\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Vehicle:\r\n    def __init__(self):\r\n        self.mileage = None\r\n        self.fuel_left = None\r\n    def identify_distance_that_can_be_travelled(self):\r\n        if(self.fuel_left<=5):\r\n            return 0\r\n        else: \r\n            return (self.mileage)*((self.fuel_left)-5)\r\n    def identify_distance_travelled(self,initial_fuel):\r\n        return (initial_fuel-(self.fuel_left))*(self.mileage)\r\n    \r\nv1 = Vehicle()\r\nv1.mileage = 75\r\nv1.fuel_left = 8\r\nprint(v1.identify_distance_that_can_be_travelled())\r\nprint(v1.identify_distance_travelled(15))\r\n","asgnmtId":"6","SolutionFileName":"Excer6.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-06 14:29:24,859 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 14:29:24,859 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 14:29:24,859 INFO  Invoking the service to verify the user solution
2019-03-06 14:29:24,860 INFO  Time before invoking service:Wed Mar 06 14:29:24 IST 2019
2019-03-06 14:29:24,860 INFO  Initialising service address for VerifySolution
2019-03-06 14:29:24,860 INFO  Time before invoking service In SUPER:Wed Mar 06 14:29:24 IST 2019
2019-03-06 14:29:25,901 INFO  Time after invoking service In SUPER:Wed Mar 06 14:29:25 IST 2019
2019-03-06 14:29:25,901 INFO  Service responded successfully with required details
2019-03-06 14:29:25,901 INFO  Time after invoking service:Wed Mar 06 14:29:25 IST 2019
2019-03-06 14:29:25,901 INFO  User solution successfully verified
2019-03-06 14:29:25,902 INFO  Processing the response from verify service
2019-03-06 14:29:25,907 INFO  Starting to parse JSON response
2019-03-06 14:29:25,909 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:29:25,909 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:29:25,909 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:29:25,909 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:29:25,911 INFO  Successfully parsed JSON response
2019-03-06 14:29:25,911 INFO  In the process of generating verify response in HTML
2019-03-06 14:29:25,980 INFO  Successfully generated verify response in HTML
2019-03-06 14:29:25,980 INFO  Successfully processed the response from service
2019-03-06 14:33:15,192 INFO  Setting request parameters for VerifySolution
2019-03-06 14:33:15,193 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 14:33:15,193 INFO  Starting to parse the user solution
2019-03-06 14:33:15,193 INFO  Displaying user solution
2019-03-06 14:33:15,272 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-3\r\n'''\r\nCreated on Mar 5, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self):\r\n        self.customer_name = None\r\n        self.bill_amount = None\r\n    def purchases(self):\r\n        bill_amount = self.bill_amount\r\n        amount = 0.95*bill_amount\r\n        return amount\r\n    def pays_bill(self,amount):\r\n        return( self.customer_name, \"pays bill amount of Rs.\",amount)\r\n    \r\nc1 = Customer()\r\nc1.customer_name = \"Vijay\"\r\nc1.bill_amount = 5000\r\nprint(c1.pays_bill(c1.purchases()))\r\n","asgnmtId":"3","SolutionFileName":"Assign3.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 14:33:15,272 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 14:33:15,272 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 14:33:15,272 INFO  Invoking the service to verify the user solution
2019-03-06 14:33:15,273 INFO  Time before invoking service:Wed Mar 06 14:33:15 IST 2019
2019-03-06 14:33:15,273 INFO  Initialising service address for VerifySolution
2019-03-06 14:33:15,273 INFO  Time before invoking service In SUPER:Wed Mar 06 14:33:15 IST 2019
2019-03-06 14:33:16,194 INFO  Time after invoking service In SUPER:Wed Mar 06 14:33:16 IST 2019
2019-03-06 14:33:16,194 INFO  Service responded successfully with required details
2019-03-06 14:33:16,194 INFO  Time after invoking service:Wed Mar 06 14:33:16 IST 2019
2019-03-06 14:33:16,194 INFO  User solution successfully verified
2019-03-06 14:33:16,194 INFO  Processing the response from verify service
2019-03-06 14:33:16,196 INFO  Starting to parse JSON response
2019-03-06 14:33:16,198 INFO  Successfully parsed JSON response
2019-03-06 14:33:16,199 INFO  In the process of generating verify response in HTML
2019-03-06 14:33:16,296 INFO  Successfully generated verify response in HTML
2019-03-06 14:33:16,296 INFO  Successfully processed the response from service
2019-03-06 14:33:20,333 INFO  Initiating to process and prepare Input for the submit service
2019-03-06 14:33:20,334 INFO  Displaying user solution
2019-03-06 14:33:20,344 INFO  Successfully processed and prepared the input for the submit service
2019-03-06 14:33:20,344 INFO  Invoking the service to submit the user solution
2019-03-06 14:33:20,344 INFO  Initialising service address for Submit
2019-03-06 14:33:20,344 INFO  Time before invoking service In SUPER:Wed Mar 06 14:33:20 IST 2019
2019-03-06 14:33:20,540 INFO  Time after invoking service In SUPER:Wed Mar 06 14:33:20 IST 2019
2019-03-06 14:33:20,540 INFO  Service responded successfully with required details
2019-03-06 14:33:20,540 INFO  User solution successfully submitted
2019-03-06 14:33:20,541 INFO  Displaying submission status
2019-03-06 14:33:20,541 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-06 14:33:25,009 INFO  Setting request parameters for VerifySolution
2019-03-06 14:33:25,009 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 14:33:25,009 INFO  Starting to parse the user solution
2019-03-06 14:33:25,010 INFO  Displaying user solution
2019-03-06 14:33:25,097 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-5\r\n'''\r\nCreated on Mar 5, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Vehicle:\r\n    def __init__(self):\r\n        self.__vehicle_id =None\r\n        self.__vehicle_type = None\r\n        self.__vehicle_cost = None\r\n        self.__premium_amount = None\r\n\r\n    def get_vehicle_id(self):\r\n        return self.__vehicle_id\r\n\r\n\r\n    def get_vehicle_type(self):\r\n        return self.__vehicle_type\r\n\r\n    def get_vehicle_cost(self):\r\n        return self.__vehicle_cost\r\n\r\n\r\n    def get_premium_amount(self):\r\n        return self.__premium_amount\r\n\r\n\r\n    def set_vehicle_id(self, vehicle_id):\r\n        self.__vehicle_id = vehicle_id\r\n\r\n\r\n    def set_vehicle_type(self,vehicle_type):\r\n        self.__vehicle_type = vehicle_type\r\n\r\n\r\n    def set_vehicle_cost(self, vehicle_cost):\r\n        self.__vehicle_cost = vehicle_cost\r\n\r\n\r\n    def set_premium_amount(self, premium_amount):\r\n        self.__premium_amount = premium_amount\r\n    \r\n    def calculate_premium(self):\r\n        if(self.get_vehicle_type()==\"Two Wheeler\"):\r\n            amount = 0.02*(self.get_vehicle_cost())\r\n            self.set_premium_amount(amount)\r\n            return self.get_premium_amount()\r\n        elif(self.get_vehicle_type()==\"Four Wheeler\"):\r\n            amount = 0.06*(self.get_vehicle_cost())\r\n            self.set_premium_amount(amount)\r\n            return self.get_premium_amount()\r\n        else:\r\n            return \"Invalid Vehicle\"\r\n    def display_vehicle_details(self):\r\n        return(\"Vehicle Type:\"+self.get_vehicle_type()+\"\\nVehicle ID:\"+self.get_vehicle_id()+\"\\nVehicle Cost:\"+str(self.get_vehicle_cost())+\"\\nPremium Amount:\"+str(self.get_premium_amount())) \r\n        \r\nveh1 = Vehicle()\r\nveh1.set_vehicle_type(\"Four Wheeler\")\r\nveh1.set_vehicle_id(\"RJ31-2930\")\r\nveh1.set_vehicle_cost(1000000)\r\nveh1.calculate_premium()\r\nprint(veh1.display_vehicle_details())\r\n          \r\n    \r\n","asgnmtId":"5","SolutionFileName":"Assign5.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 14:33:25,097 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 14:33:25,097 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 14:33:25,097 INFO  Invoking the service to verify the user solution
2019-03-06 14:33:25,098 INFO  Time before invoking service:Wed Mar 06 14:33:25 IST 2019
2019-03-06 14:33:25,098 INFO  Initialising service address for VerifySolution
2019-03-06 14:33:25,098 INFO  Time before invoking service In SUPER:Wed Mar 06 14:33:25 IST 2019
2019-03-06 14:33:26,018 INFO  Time after invoking service In SUPER:Wed Mar 06 14:33:26 IST 2019
2019-03-06 14:33:26,019 INFO  Service responded successfully with required details
2019-03-06 14:33:26,019 INFO  Time after invoking service:Wed Mar 06 14:33:26 IST 2019
2019-03-06 14:33:26,019 INFO  User solution successfully verified
2019-03-06 14:33:26,020 INFO  Processing the response from verify service
2019-03-06 14:33:26,022 INFO  Starting to parse JSON response
2019-03-06 14:33:26,023 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:33:26,023 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:33:26,023 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:33:26,023 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:33:26,024 INFO  Successfully parsed JSON response
2019-03-06 14:33:26,025 INFO  In the process of generating verify response in HTML
2019-03-06 14:33:26,110 INFO  Successfully generated verify response in HTML
2019-03-06 14:33:26,110 INFO  Successfully processed the response from service
2019-03-06 14:34:42,683 INFO  Setting request parameters for VerifySolution
2019-03-06 14:34:42,683 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 14:34:42,683 INFO  Starting to parse the user solution
2019-03-06 14:34:42,690 INFO  Displaying user solution
2019-03-06 14:34:42,770 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-5\r\n'''\r\nCreated on Mar 5, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Vehicle:\r\n    def __init__(self):\r\n        self.__vehicle_id =None\r\n        self.__vehicle_type = None\r\n        self.__vehicle_cost = None\r\n        self.__premium_amount = None\r\n\r\n    def get_vehicle_id(self):\r\n        return self.__vehicle_id\r\n\r\n\r\n    def get_vehicle_type(self):\r\n        return self.__vehicle_type\r\n\r\n    def get_vehicle_cost(self):\r\n        return self.__vehicle_cost\r\n\r\n\r\n    def get_premium_amount(self):\r\n        return self.__premium_amount\r\n\r\n\r\n    def set_vehicle_id(self, vehicle_id):\r\n        self.__vehicle_id = vehicle_id\r\n\r\n\r\n    def set_vehicle_type(self,vehicle_type):\r\n        self.__vehicle_type = vehicle_type\r\n\r\n\r\n    def set_vehicle_cost(self, vehicle_cost):\r\n        self.__vehicle_cost = vehicle_cost\r\n\r\n\r\n    def set_premium_amount(self, premium_amount):\r\n        self.__premium_amount = premium_amount\r\n    \r\n    def calculate_premium(self):\r\n        if(self.get_vehicle_type()==\"Two Wheeler\"):\r\n            amount = 0.02*(self.get_vehicle_cost())\r\n            self.set_premium_amount(amount)\r\n            return self.get_premium_amount()\r\n        elif(self.get_vehicle_type()==\"Four Wheeler\"):\r\n            amount = 0.06*(self.get_vehicle_cost())\r\n            self.set_premium_amount(amount)\r\n            return self.get_premium_amount()\r\n        else:\r\n            return \"Invalid Vehicle\"\r\n    def display_vehicle_details(self):\r\n        return(\"Vehicle Type:\"+self.get_vehicle_type()+\"\\tVehicle ID:\"+self.get_vehicle_id()+\"\\tVehicle Cost:\"+str(self.get_vehicle_cost())+\"\\tPremium Amount:\"+str(self.get_premium_amount())) \r\n        \r\nveh1 = Vehicle()\r\nveh1.set_vehicle_type(\"Four Wheeler\")\r\nveh1.set_vehicle_id(\"RJ31-2930\")\r\nveh1.set_vehicle_cost(1000000)\r\nveh1.calculate_premium()\r\nprint(veh1.display_vehicle_details())\r\n          \r\n    \r\n","asgnmtId":"5","SolutionFileName":"Assign5.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 14:34:42,771 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 14:34:42,771 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 14:34:42,771 INFO  Invoking the service to verify the user solution
2019-03-06 14:34:42,771 INFO  Time before invoking service:Wed Mar 06 14:34:42 IST 2019
2019-03-06 14:34:42,771 INFO  Initialising service address for VerifySolution
2019-03-06 14:34:42,772 INFO  Time before invoking service In SUPER:Wed Mar 06 14:34:42 IST 2019
2019-03-06 14:34:43,634 INFO  Time after invoking service In SUPER:Wed Mar 06 14:34:43 IST 2019
2019-03-06 14:34:43,635 INFO  Service responded successfully with required details
2019-03-06 14:34:43,635 INFO  Time after invoking service:Wed Mar 06 14:34:43 IST 2019
2019-03-06 14:34:43,635 INFO  User solution successfully verified
2019-03-06 14:34:43,635 INFO  Processing the response from verify service
2019-03-06 14:34:43,637 INFO  Starting to parse JSON response
2019-03-06 14:34:43,639 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:34:43,639 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:34:43,639 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:34:43,639 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:34:43,640 INFO  Successfully parsed JSON response
2019-03-06 14:34:43,641 INFO  In the process of generating verify response in HTML
2019-03-06 14:34:43,727 INFO  Successfully generated verify response in HTML
2019-03-06 14:34:43,727 INFO  Successfully processed the response from service
2019-03-06 14:35:14,432 INFO  Initiating to process and prepare Input for the submit service
2019-03-06 14:35:14,433 INFO  Displaying user solution
2019-03-06 14:35:14,441 INFO  Successfully processed and prepared the input for the submit service
2019-03-06 14:35:14,441 INFO  Invoking the service to submit the user solution
2019-03-06 14:35:14,441 INFO  Initialising service address for Submit
2019-03-06 14:35:14,442 INFO  Time before invoking service In SUPER:Wed Mar 06 14:35:14 IST 2019
2019-03-06 14:35:14,652 INFO  Time after invoking service In SUPER:Wed Mar 06 14:35:14 IST 2019
2019-03-06 14:35:14,652 INFO  Service responded successfully with required details
2019-03-06 14:35:14,652 INFO  User solution successfully submitted
2019-03-06 14:35:14,652 INFO  Displaying submission status
2019-03-06 14:35:14,652 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-06 14:35:25,047 INFO  Initiating to process and prepare Input for the submit service
2019-03-06 14:35:25,048 INFO  Displaying user solution
2019-03-06 14:35:25,049 INFO  Submission failed : Code not verified
->Please verify your code before submitting
2019-03-06 14:35:25,051 ERROR Exception occured while submitting the user solution
2019-03-06 14:35:28,623 INFO  Setting request parameters for VerifySolution
2019-03-06 14:35:28,623 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 14:35:28,623 INFO  Starting to parse the user solution
2019-03-06 14:35:28,624 INFO  Displaying user solution
2019-03-06 14:35:28,707 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-7\r\n'''\r\nCreated on Mar 5, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Instructor:\r\n    def __init__(self):\r\n        self.__instructor_name= None\r\n        self.__technology_skill =None\r\n        self.__experience = None\r\n        self.__avg_feedback = None\r\n    def get_instructor_name(self):\r\n        return self.__instructor_name\r\n\r\n\r\n    def get_technology_skill(self):\r\n        return self.__technology_skill\r\n\r\n\r\n    def get_experience(self):\r\n        return self.__experience\r\n\r\n\r\n    def get_avg_feedback(self):\r\n        return self.__avg_feedback\r\n\r\n\r\n    def set_instructor_name(self, instructor_name):\r\n        self.__instructor_name = instructor_name\r\n\r\n\r\n    def set_technology_skill(self, technology_skill):\r\n            self.__technology_skill=technology_skill\r\n\r\n\r\n    def set_experience(self, experience):\r\n        self.__experience = experience\r\n\r\n\r\n    def set_avg_feedback(self,avg_feedback):\r\n        self.__avg_feedback =avg_feedback\r\n    def check_eligibility(self):\r\n        if(self.get_experience()>3 and self.get_avg_feedback()>=4.5):\r\n            return True\r\n        elif(self.get_experience()<=3 and self.get_avg_feedback()>=4):\r\n            return True\r\n        else:\r\n            return False\r\n    def allocate_course(self,technology):\r\n        s=self.check_eligibility()\r\n        if(technology in self.__technology_skill and s ):\r\n            return True\r\n        else:\r\n            return False\r\n\r\nI1 = Instructor()\r\nI1.set_instructor_name(\"Vijay\")\r\nI1.set_experience(3)\r\nI1.set_avg_feedback(4)\r\nI1.set_technology_skill(['C++','JAVA'])\r\nI1.check_eligibility()\r\nI1.allocate_course('C++')\r\n\r\n","asgnmtId":"7","SolutionFileName":"Assign7.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 14:35:28,708 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 14:35:28,708 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 14:35:28,708 INFO  Invoking the service to verify the user solution
2019-03-06 14:35:28,708 INFO  Time before invoking service:Wed Mar 06 14:35:28 IST 2019
2019-03-06 14:35:28,708 INFO  Initialising service address for VerifySolution
2019-03-06 14:35:28,709 INFO  Time before invoking service In SUPER:Wed Mar 06 14:35:28 IST 2019
2019-03-06 14:35:29,713 INFO  Time after invoking service In SUPER:Wed Mar 06 14:35:29 IST 2019
2019-03-06 14:35:29,713 INFO  Service responded successfully with required details
2019-03-06 14:35:29,713 INFO  Time after invoking service:Wed Mar 06 14:35:29 IST 2019
2019-03-06 14:35:29,713 INFO  User solution successfully verified
2019-03-06 14:35:29,714 INFO  Processing the response from verify service
2019-03-06 14:35:29,715 INFO  Starting to parse JSON response
2019-03-06 14:35:29,716 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:35:29,716 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:35:29,716 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:35:29,717 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:35:29,717 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:35:29,717 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:35:29,717 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:35:29,717 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:35:29,717 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:35:29,717 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:35:29,718 INFO  Successfully parsed JSON response
2019-03-06 14:35:29,718 INFO  In the process of generating verify response in HTML
2019-03-06 14:35:29,800 INFO  Successfully generated verify response in HTML
2019-03-06 14:35:29,800 INFO  Successfully processed the response from service
2019-03-06 14:35:33,424 INFO  Initiating to process and prepare Input for the submit service
2019-03-06 14:35:33,425 INFO  Displaying user solution
2019-03-06 14:35:33,434 INFO  Successfully processed and prepared the input for the submit service
2019-03-06 14:35:33,434 INFO  Invoking the service to submit the user solution
2019-03-06 14:35:33,434 INFO  Initialising service address for Submit
2019-03-06 14:35:33,435 INFO  Time before invoking service In SUPER:Wed Mar 06 14:35:33 IST 2019
2019-03-06 14:35:33,578 INFO  Time after invoking service In SUPER:Wed Mar 06 14:35:33 IST 2019
2019-03-06 14:35:33,578 INFO  Service responded successfully with required details
2019-03-06 14:35:33,578 INFO  User solution successfully submitted
2019-03-06 14:35:33,579 INFO  Displaying submission status
2019-03-06 14:35:33,579 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-06 14:35:37,837 INFO  Setting request parameters for VerifySolution
2019-03-06 14:35:37,837 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 14:35:37,837 INFO  Starting to parse the user solution
2019-03-06 14:35:37,838 INFO  Displaying user solution
2019-03-06 14:35:37,908 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-8\r\n'''\r\nCreated on Mar 5, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Student:\r\n    def __init__(self):\r\n        self.__student_id = None\r\n        self.__age = None\r\n        self.__marks = None\r\n    def get_student_id(self):\r\n        return self.__student_id\r\n\r\n\r\n    def get_age(self):\r\n        return self.__age\r\n\r\n\r\n    def get_marks(self):\r\n        return self.__marks\r\n\r\n\r\n    def set_student_id(self, student_id):\r\n        self.__student_id = student_id\r\n\r\n\r\n    def set_age(self, age):\r\n        self.__age = age\r\n\r\n\r\n    def set_marks(self, marks):\r\n        self.__marks = marks\r\n        \r\n    def validate_marks(self):\r\n        if(self.get_marks()>=0 and self.get_marks()<=100):\r\n            return True\r\n        else:\r\n            return False\r\n    def validate_age(self):\r\n        if(self.get_age()>20):\r\n            return True\r\n        else:\r\n            return False\r\n    def check_qualification(self):\r\n        if(self.get_marks()>=0 and self.get_marks()<=100 and self.get_age()>20):\r\n            if(self.get_marks()>=65):\r\n                return True\r\n            else:\r\n                return False\r\n        else:\r\n            return False\r\n        \r\ns1 = Student()\r\ns1.set_student_id(167)\r\ns1.set_age(22)\r\ns1.set_marks(74)\r\ns1.validate_marks()\r\ns1.validate_age()\r\ns1.check_qualification()        \r\n        \r\n\r\n    \r\n","asgnmtId":"8","SolutionFileName":"Assign8.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 14:35:37,909 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 14:35:37,909 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 14:35:37,909 INFO  Invoking the service to verify the user solution
2019-03-06 14:35:37,909 INFO  Time before invoking service:Wed Mar 06 14:35:37 IST 2019
2019-03-06 14:35:37,909 INFO  Initialising service address for VerifySolution
2019-03-06 14:35:37,910 INFO  Time before invoking service In SUPER:Wed Mar 06 14:35:37 IST 2019
2019-03-06 14:35:38,861 INFO  Time after invoking service In SUPER:Wed Mar 06 14:35:38 IST 2019
2019-03-06 14:35:38,861 INFO  Service responded successfully with required details
2019-03-06 14:35:38,862 INFO  Time after invoking service:Wed Mar 06 14:35:38 IST 2019
2019-03-06 14:35:38,862 INFO  User solution successfully verified
2019-03-06 14:35:38,862 INFO  Processing the response from verify service
2019-03-06 14:35:38,863 INFO  Starting to parse JSON response
2019-03-06 14:35:38,864 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:35:38,864 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:35:38,864 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:35:38,864 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:35:38,864 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:35:38,864 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:35:38,864 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:35:38,865 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:35:38,865 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:35:38,865 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:35:38,866 INFO  Successfully parsed JSON response
2019-03-06 14:35:38,866 INFO  In the process of generating verify response in HTML
2019-03-06 14:35:38,930 INFO  Successfully generated verify response in HTML
2019-03-06 14:35:38,930 INFO  Successfully processed the response from service
2019-03-06 14:35:42,784 INFO  Initiating to process and prepare Input for the submit service
2019-03-06 14:35:42,784 INFO  Displaying user solution
2019-03-06 14:35:42,792 INFO  Successfully processed and prepared the input for the submit service
2019-03-06 14:35:42,792 INFO  Invoking the service to submit the user solution
2019-03-06 14:35:42,792 INFO  Initialising service address for Submit
2019-03-06 14:35:42,793 INFO  Time before invoking service In SUPER:Wed Mar 06 14:35:42 IST 2019
2019-03-06 14:35:42,908 INFO  Time after invoking service In SUPER:Wed Mar 06 14:35:42 IST 2019
2019-03-06 14:35:42,908 INFO  Service responded successfully with required details
2019-03-06 14:35:42,908 INFO  User solution successfully submitted
2019-03-06 14:35:42,908 INFO  Displaying submission status
2019-03-06 14:35:42,909 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-06 14:35:48,108 INFO  Setting request parameters for VerifySolution
2019-03-06 14:35:48,108 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 14:35:48,108 INFO  Starting to parse the user solution
2019-03-06 14:35:48,109 INFO  Displaying user solution
2019-03-06 14:35:48,170 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-9\r\n'''\r\nCreated on Mar 5, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Student:\r\n    def __init__(self):\r\n        self.__student_id = None\r\n        self.__age = None\r\n        self.__marks = None\r\n        self.__course_id = None\r\n        self.__fees = None\r\n\r\n    def get_course_id(self):\r\n        return self.__course_id\r\n\r\n\r\n    def get_fees(self):\r\n        return self.__fees\r\n\r\n\r\n    def get_student_id(self):\r\n        return self.__student_id\r\n\r\n\r\n    def get_age(self):\r\n        return self.__age\r\n\r\n\r\n    def get_marks(self):\r\n        return self.__marks\r\n\r\n\r\n    def set_student_id(self, student_id):\r\n        self.__student_id = student_id\r\n\r\n\r\n    def set_age(self, age):\r\n        self.__age = age\r\n\r\n\r\n    def set_marks(self, marks):\r\n        self.__marks = marks\r\n        \r\n    def validate_marks(self):\r\n        if(self.get_marks()>=0 and self.get_marks()<=100):\r\n            return True\r\n        else:\r\n            return False\r\n    def validate_age(self):\r\n        if(self.get_age()>20):\r\n            return True\r\n        else:\r\n            return False\r\n    def check_qualification(self):\r\n        if(self.get_marks()>=0 and self.get_marks()<=100 and self.get_age()>20):\r\n            if(self.get_marks()>=65):\r\n                return True\r\n            else:\r\n                return False\r\n        else:\r\n            return False\r\n    def choose_course(self,course_id):\r\n         if(course_id==1001):\r\n             self.__course_id = 1001\r\n             self.__fees = 25575.0\r\n             if(self.get_marks()>85):\r\n                 self.__fees = 0.75*self.__fees\r\n             return True\r\n         elif(course_id==1002):\r\n             self.__course_id = 1002\r\n             self.__fees = 15500.0\r\n             if(self.get_marks()>85):\r\n                 self.__fees= 0.75*self.__fees\r\n             return True\r\n         else:\r\n             return False\r\n   \r\ns1 = Student()\r\ns1.set_student_id(167)\r\ns1.set_age(22)\r\ns1.set_marks(85)\r\ns1.validate_marks()\r\ns1.validate_age()\r\ns1.check_qualification()\r\ns1.choose_course(1002)\r\n\r\n\r\n        \r\n        \r\n\r\n    \r\n","asgnmtId":"9","SolutionFileName":"Assign9.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 14:35:48,170 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 14:35:48,170 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 14:35:48,170 INFO  Invoking the service to verify the user solution
2019-03-06 14:35:48,171 INFO  Time before invoking service:Wed Mar 06 14:35:48 IST 2019
2019-03-06 14:35:48,171 INFO  Initialising service address for VerifySolution
2019-03-06 14:35:48,172 INFO  Time before invoking service In SUPER:Wed Mar 06 14:35:48 IST 2019
2019-03-06 14:35:49,647 INFO  Time after invoking service In SUPER:Wed Mar 06 14:35:49 IST 2019
2019-03-06 14:35:49,647 INFO  Service responded successfully with required details
2019-03-06 14:35:49,647 INFO  Time after invoking service:Wed Mar 06 14:35:49 IST 2019
2019-03-06 14:35:49,647 INFO  User solution successfully verified
2019-03-06 14:35:49,648 INFO  Processing the response from verify service
2019-03-06 14:35:49,649 INFO  Starting to parse JSON response
2019-03-06 14:35:49,650 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:35:49,650 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:35:49,650 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:35:49,650 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:35:49,650 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:35:49,650 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:35:49,650 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:35:49,650 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:35:49,650 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:35:49,650 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 14:35:49,651 INFO  Successfully parsed JSON response
2019-03-06 14:35:49,652 INFO  In the process of generating verify response in HTML
2019-03-06 14:35:49,722 INFO  Successfully generated verify response in HTML
2019-03-06 14:35:49,723 INFO  Successfully processed the response from service
2019-03-06 14:35:53,272 INFO  Initiating to process and prepare Input for the submit service
2019-03-06 14:35:53,273 INFO  Displaying user solution
2019-03-06 14:35:53,283 INFO  Successfully processed and prepared the input for the submit service
2019-03-06 14:35:53,284 INFO  Invoking the service to submit the user solution
2019-03-06 14:35:53,284 INFO  Initialising service address for Submit
2019-03-06 14:35:53,284 INFO  Time before invoking service In SUPER:Wed Mar 06 14:35:53 IST 2019
2019-03-06 14:35:53,424 INFO  Time after invoking service In SUPER:Wed Mar 06 14:35:53 IST 2019
2019-03-06 14:35:53,424 INFO  Service responded successfully with required details
2019-03-06 14:35:53,425 INFO  User solution successfully submitted
2019-03-06 14:35:53,425 INFO  Displaying submission status
2019-03-06 14:35:53,425 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-06 16:35:49,184 INFO  Setting request parameters for VerifySolution
2019-03-06 16:35:49,184 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 16:35:49,184 INFO  Starting to parse the user solution
2019-03-06 16:35:49,185 INFO  Displaying user solution
2019-03-06 16:35:49,254 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-10\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass CallDetail:\r\n    def __init__(self,phoneno,called_no,duration,call_type):\r\n        self.phoneno = phoneno\r\n        self.called_no = called_no\r\n        self.duration=duration\r\n        self.call_type= call_type\r\n\r\nclass Util:\r\n    def __init__(self):\r\n        self.list_of_call_objects=None\r\n\r\n    def parse_customer(self,list_of_call_string):\r\n        pass\r\n\r\ncall='9990000001,9330000001,23,STD'\r\ncall2='9990000001,9330000002,54,Local'\r\ncall3='9990000001,9330000003,6,ISD'\r\n\r\nlist_of_call_string=[call,call2,call3]\r\nUtil().parse_customer(list_of_call_string)\r\n","asgnmtId":"10","SolutionFileName":"Assign10.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 16:35:49,254 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 16:35:49,255 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 16:35:49,255 INFO  Invoking the service to verify the user solution
2019-03-06 16:35:49,255 INFO  Time before invoking service:Wed Mar 06 16:35:49 IST 2019
2019-03-06 16:35:49,255 INFO  Initialising service address for VerifySolution
2019-03-06 16:35:49,256 INFO  Time before invoking service In SUPER:Wed Mar 06 16:35:49 IST 2019
2019-03-06 16:35:50,181 INFO  Time after invoking service In SUPER:Wed Mar 06 16:35:50 IST 2019
2019-03-06 16:35:50,181 INFO  Service responded successfully with required details
2019-03-06 16:35:50,181 INFO  Time after invoking service:Wed Mar 06 16:35:50 IST 2019
2019-03-06 16:35:50,182 INFO  User solution successfully verified
2019-03-06 16:35:50,182 INFO  Processing the response from verify service
2019-03-06 16:35:50,186 INFO  Starting to parse JSON response
2019-03-06 16:35:50,189 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 16:35:50,189 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 16:35:50,189 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 16:35:50,189 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 16:35:50,191 INFO  Successfully parsed JSON response
2019-03-06 16:35:50,191 INFO  In the process of generating verify response in HTML
2019-03-06 16:35:50,286 INFO  Successfully generated verify response in HTML
2019-03-06 16:35:50,286 INFO  Successfully processed the response from service
2019-03-06 16:36:55,531 INFO  Setting request parameters for VerifySolution
2019-03-06 16:36:55,531 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 16:36:55,531 INFO  Starting to parse the user solution
2019-03-06 16:36:55,532 INFO  Displaying user solution
2019-03-06 16:36:55,571 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-10\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass CallDetail:\r\n    def __init__(self,phoneno,called_no,duration,call_type):\r\n        self.__phoneno = phoneno\r\n        self.__called_no = called_no\r\n        self.__duration=duration\r\n        self.__call_type= call_type\r\n\r\nclass Util:\r\n    def __init__(self):\r\n        self.list_of_call_objects=None\r\n\r\n    def parse_customer(self,list_of_call_string):\r\n        pass\r\n\r\ncall='9990000001,9330000001,23,STD'\r\ncall2='9990000001,9330000002,54,Local'\r\ncall3='9990000001,9330000003,6,ISD'\r\n\r\nlist_of_call_string=[call,call2,call3]\r\nUtil().parse_customer(list_of_call_string)\r\n","asgnmtId":"10","SolutionFileName":"Assign10.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 16:36:55,572 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 16:36:55,572 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 16:36:55,572 INFO  Invoking the service to verify the user solution
2019-03-06 16:36:55,572 INFO  Time before invoking service:Wed Mar 06 16:36:55 IST 2019
2019-03-06 16:36:55,572 INFO  Initialising service address for VerifySolution
2019-03-06 16:36:55,572 INFO  Time before invoking service In SUPER:Wed Mar 06 16:36:55 IST 2019
2019-03-06 16:36:56,619 INFO  Time after invoking service In SUPER:Wed Mar 06 16:36:56 IST 2019
2019-03-06 16:36:56,619 INFO  Service responded successfully with required details
2019-03-06 16:36:56,619 INFO  Time after invoking service:Wed Mar 06 16:36:56 IST 2019
2019-03-06 16:36:56,620 INFO  User solution successfully verified
2019-03-06 16:36:56,620 INFO  Processing the response from verify service
2019-03-06 16:36:56,622 INFO  Starting to parse JSON response
2019-03-06 16:36:56,623 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 16:36:56,623 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 16:36:56,623 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 16:36:56,624 INFO  Successfully parsed JSON response
2019-03-06 16:36:56,624 INFO  In the process of generating verify response in HTML
2019-03-06 16:36:56,700 INFO  Successfully generated verify response in HTML
2019-03-06 16:36:56,700 INFO  Successfully processed the response from service
2019-03-06 16:44:35,144 INFO  Setting request parameters for VerifySolution
2019-03-06 16:44:35,145 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 16:44:35,145 INFO  Starting to parse the user solution
2019-03-06 16:44:35,145 INFO  Displaying user solution
2019-03-06 16:44:35,204 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-10\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass CallDetail:\r\n    def __init__(self,phoneno,called_no,duration,call_type):\r\n        self.__phoneno = phoneno\r\n        self.__called_no = called_no\r\n        self.__duration=duration\r\n        self.__call_type= call_type\r\n\r\nclass Util:\r\n    def __init__(self):\r\n        self.list_of_call_objects=None\r\n\r\n    def parse_customer(self,list_of_call_string):\r\n        for i in list_of_call_string:\r\n            i = self.list_of_call_objects\r\n\r\ncall='9990000001,9330000001,23,STD'\r\ncall2='9990000001,9330000002,54,Local'\r\ncall3='9990000001,9330000003,6,ISD'\r\n\r\nlist_of_call_string=[call,call2,call3]\r\nUtil().parse_customer(list_of_call_string)\r\n","asgnmtId":"10","SolutionFileName":"Assign10.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 16:44:35,205 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 16:44:35,205 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 16:44:35,205 INFO  Invoking the service to verify the user solution
2019-03-06 16:44:35,205 INFO  Time before invoking service:Wed Mar 06 16:44:35 IST 2019
2019-03-06 16:44:35,205 INFO  Initialising service address for VerifySolution
2019-03-06 16:44:35,206 INFO  Time before invoking service In SUPER:Wed Mar 06 16:44:35 IST 2019
2019-03-06 16:44:36,150 INFO  Time after invoking service In SUPER:Wed Mar 06 16:44:36 IST 2019
2019-03-06 16:44:36,150 INFO  Service responded successfully with required details
2019-03-06 16:44:36,150 INFO  Time after invoking service:Wed Mar 06 16:44:36 IST 2019
2019-03-06 16:44:36,150 INFO  User solution successfully verified
2019-03-06 16:44:36,150 INFO  Processing the response from verify service
2019-03-06 16:44:36,154 INFO  Starting to parse JSON response
2019-03-06 16:44:36,156 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 16:44:36,156 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 16:44:36,156 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 16:44:36,157 INFO  Successfully parsed JSON response
2019-03-06 16:44:36,157 INFO  In the process of generating verify response in HTML
2019-03-06 16:44:36,237 INFO  Successfully generated verify response in HTML
2019-03-06 16:44:36,237 INFO  Successfully processed the response from service
2019-03-06 16:46:06,574 INFO  Setting request parameters for VerifySolution
2019-03-06 16:46:06,575 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 16:46:06,575 INFO  Starting to parse the user solution
2019-03-06 16:46:06,575 INFO  Displaying user solution
2019-03-06 16:46:06,611 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-10\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass CallDetail:\r\n    def __init__(self,phoneno,called_no,duration,call_type):\r\n        self.__phoneno = phoneno\r\n        self.__called_no = called_no\r\n        self.__duration=duration\r\n        self.__call_type= call_type\r\n\r\nclass Util:\r\n    def __init__(self):\r\n        self.list_of_call_objects=None\r\n\r\n    def parse_customer(self,list_of_call_string):\r\n        for i in list_of_call_string:\r\n            i = self.list_of_call_objects\r\n        return self.list_of_call_objects\r\n\r\ncall='9990000001,9330000001,23,STD'\r\ncall2='9990000001,9330000002,54,Local'\r\ncall3='9990000001,9330000003,6,ISD'\r\n\r\nlist_of_call_string=[call,call2,call3]\r\nUtil().parse_customer(list_of_call_string)\r\n","asgnmtId":"10","SolutionFileName":"Assign10.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 16:46:06,612 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 16:46:06,612 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 16:46:06,612 INFO  Invoking the service to verify the user solution
2019-03-06 16:46:06,612 INFO  Time before invoking service:Wed Mar 06 16:46:06 IST 2019
2019-03-06 16:46:06,612 INFO  Initialising service address for VerifySolution
2019-03-06 16:46:06,613 INFO  Time before invoking service In SUPER:Wed Mar 06 16:46:06 IST 2019
2019-03-06 16:46:07,570 INFO  Time after invoking service In SUPER:Wed Mar 06 16:46:07 IST 2019
2019-03-06 16:46:07,571 INFO  Service responded successfully with required details
2019-03-06 16:46:07,571 INFO  Time after invoking service:Wed Mar 06 16:46:07 IST 2019
2019-03-06 16:46:07,571 INFO  User solution successfully verified
2019-03-06 16:46:07,571 INFO  Processing the response from verify service
2019-03-06 16:46:07,574 INFO  Starting to parse JSON response
2019-03-06 16:46:07,575 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 16:46:07,575 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 16:46:07,575 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 16:46:07,577 INFO  Successfully parsed JSON response
2019-03-06 16:46:07,577 INFO  In the process of generating verify response in HTML
2019-03-06 16:46:07,650 INFO  Successfully generated verify response in HTML
2019-03-06 16:46:07,650 INFO  Successfully processed the response from service
2019-03-06 16:56:14,623 INFO  Setting request parameters for VerifySolution
2019-03-06 16:56:14,624 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 16:56:14,624 INFO  Starting to parse the user solution
2019-03-06 16:56:14,624 INFO  Displaying user solution
2019-03-06 16:56:14,675 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-10\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass CallDetail:\r\n    def __init__(self,phoneno,called_no,duration,call_type):\r\n        self.__phoneno = phoneno\r\n        self.__called_no = called_no\r\n        self.__duration=duration\r\n        self.__call_type= call_type\r\n\r\nclass Util:\r\n    def __init__(self):\r\n        self.list_of_call_objects=None\r\n\r\n    def parse_customer(self,list_of_call_string):\r\n        for i in list_of_call_string:\r\n          self.list_of_call_objects=i\r\n        return self.list_of_call_objects\r\n\r\ncall='9990000001,9330000001,23,STD'\r\ncall2='9990000001,9330000002,54,Local'\r\ncall3='9990000001,9330000003,6,ISD'\r\n\r\nlist_of_call_string=[call,call2,call3]\r\nUtil().parse_customer(list_of_call_string)\r\n","asgnmtId":"10","SolutionFileName":"Assign10.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 16:56:14,675 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 16:56:14,676 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 16:56:14,676 INFO  Invoking the service to verify the user solution
2019-03-06 16:56:14,676 INFO  Time before invoking service:Wed Mar 06 16:56:14 IST 2019
2019-03-06 16:56:14,676 INFO  Initialising service address for VerifySolution
2019-03-06 16:56:14,677 INFO  Time before invoking service In SUPER:Wed Mar 06 16:56:14 IST 2019
2019-03-06 16:56:15,619 INFO  Time after invoking service In SUPER:Wed Mar 06 16:56:15 IST 2019
2019-03-06 16:56:15,619 INFO  Service responded successfully with required details
2019-03-06 16:56:15,619 INFO  Time after invoking service:Wed Mar 06 16:56:15 IST 2019
2019-03-06 16:56:15,620 INFO  User solution successfully verified
2019-03-06 16:56:15,620 INFO  Processing the response from verify service
2019-03-06 16:56:15,624 INFO  Starting to parse JSON response
2019-03-06 16:56:15,625 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 16:56:15,625 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 16:56:15,625 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 16:56:15,627 INFO  Successfully parsed JSON response
2019-03-06 16:56:15,627 INFO  In the process of generating verify response in HTML
2019-03-06 16:56:15,702 INFO  Successfully generated verify response in HTML
2019-03-06 16:56:15,702 INFO  Successfully processed the response from service
2019-03-06 17:12:35,639 INFO  Setting request parameters for VerifySolution
2019-03-06 17:12:35,642 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 17:12:35,642 INFO  Starting to parse the user solution
2019-03-06 17:12:35,643 INFO  Displaying user solution
2019-03-06 17:12:35,705 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-10\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass CallDetail:\r\n    def __init__(self,phoneno,called_no,duration,call_type):\r\n        self.__phoneno = phoneno\r\n        self.__called_no = called_no\r\n        self.__duration=duration\r\n        self.__call_type= call_type\r\n\r\nclass Util:\r\n    def __init__(self):\r\n        self.list_of_call_objects=None\r\n        \r\n\r\n    def parse_customer(self,list_of_call_string):\r\n        for i in range(0,len(list_of_call_string)):\r\n           self.list_of_call_objects=list_of_call_string[i]\r\n        return self.list_of_call_objects\r\n\r\ncall='9990000001,9330000001,23,STD'\r\ncall2='9990000001,9330000002,54,Local'\r\ncall3='9990000001,9330000003,6,ISD'\r\n\r\nlist_of_call_string=[call,call2,call3]\r\nUtil().parse_customer(list_of_call_string)\r\n","asgnmtId":"10","SolutionFileName":"Assign10.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 17:12:35,705 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 17:12:35,705 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 17:12:35,705 INFO  Invoking the service to verify the user solution
2019-03-06 17:12:35,706 INFO  Time before invoking service:Wed Mar 06 17:12:35 IST 2019
2019-03-06 17:12:35,706 INFO  Initialising service address for VerifySolution
2019-03-06 17:12:35,706 INFO  Time before invoking service In SUPER:Wed Mar 06 17:12:35 IST 2019
2019-03-06 17:12:36,613 INFO  Time after invoking service In SUPER:Wed Mar 06 17:12:36 IST 2019
2019-03-06 17:12:36,614 INFO  Service responded successfully with required details
2019-03-06 17:12:36,614 INFO  Time after invoking service:Wed Mar 06 17:12:36 IST 2019
2019-03-06 17:12:36,614 INFO  User solution successfully verified
2019-03-06 17:12:36,615 INFO  Processing the response from verify service
2019-03-06 17:12:36,620 INFO  Starting to parse JSON response
2019-03-06 17:12:36,622 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 17:12:36,622 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 17:12:36,622 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 17:12:36,623 INFO  Successfully parsed JSON response
2019-03-06 17:12:36,623 INFO  In the process of generating verify response in HTML
2019-03-06 17:12:36,699 INFO  Successfully generated verify response in HTML
2019-03-06 17:12:36,699 INFO  Successfully processed the response from service
2019-03-06 17:28:10,754 INFO  Setting request parameters for VerifySolution
2019-03-06 17:28:10,754 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 17:28:10,754 INFO  Starting to parse the user solution
2019-03-06 17:28:10,755 INFO  Displaying user solution
2019-03-06 17:28:10,805 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-10\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass CallDetail:\r\n    def __init__(self,phoneno,called_no,duration,call_type):\r\n        self.__phoneno = phoneno\r\n        self.__called_no = called_no\r\n        self.__duration=duration\r\n        self.__call_type= call_type\r\n\r\nclass Util:\r\n    def __init__(self):\r\n        self.list_of_call_objects=None\r\n        \r\n        \r\n\r\n    def parse_customer(self,list_of_call_string):\r\n        for i in range(0,len(list_of_call_string)):\r\n           self.list_of_call_objects=list_of_call_string[i]\r\n        return self.list_of_call_objects\r\n\r\ncall='9990000001,9330000001,23,STD'\r\ncall2='9990000001,9330000002,54,Local'\r\ncall3='9990000001,9330000003,6,ISD'\r\n\r\nlist_of_call_string=[call,call2,call3]\r\nUtil().parse_customer(list_of_call_string)\r\n","asgnmtId":"10","SolutionFileName":"Assign10.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 17:28:10,805 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 17:28:10,805 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 17:28:10,805 INFO  Invoking the service to verify the user solution
2019-03-06 17:28:10,806 INFO  Time before invoking service:Wed Mar 06 17:28:10 IST 2019
2019-03-06 17:28:10,806 INFO  Initialising service address for VerifySolution
2019-03-06 17:28:10,806 INFO  Time before invoking service In SUPER:Wed Mar 06 17:28:10 IST 2019
2019-03-06 17:28:11,702 INFO  Time after invoking service In SUPER:Wed Mar 06 17:28:11 IST 2019
2019-03-06 17:28:11,702 INFO  Service responded successfully with required details
2019-03-06 17:28:11,702 INFO  Time after invoking service:Wed Mar 06 17:28:11 IST 2019
2019-03-06 17:28:11,703 INFO  User solution successfully verified
2019-03-06 17:28:11,703 INFO  Processing the response from verify service
2019-03-06 17:28:11,708 INFO  Starting to parse JSON response
2019-03-06 17:28:11,710 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 17:28:11,710 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 17:28:11,710 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 17:28:11,712 INFO  Successfully parsed JSON response
2019-03-06 17:28:11,712 INFO  In the process of generating verify response in HTML
2019-03-06 17:28:11,797 INFO  Successfully generated verify response in HTML
2019-03-06 17:28:11,797 INFO  Successfully processed the response from service
2019-03-06 17:35:11,236 INFO  Setting request parameters for VerifySolution
2019-03-06 17:35:11,236 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 17:35:11,236 INFO  Starting to parse the user solution
2019-03-06 17:35:11,237 INFO  Displaying user solution
2019-03-06 17:35:11,283 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-10\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass CallDetail:\r\n    def __init__(self,phoneno,called_no,duration,call_type):\r\n        self.__phoneno = phoneno\r\n        self.__called_no = called_no\r\n        self.__duration=duration\r\n        self.__call_type= call_type\r\n\r\nclass Util:\r\n    def __init__(self):\r\n        self.list_of_call_objects=None\r\n    \r\n        \r\n\r\n    def parse_customer(self,list_of_call_string):\r\n        for i in range(0,len(list_of_call_string)):\r\n           self.list_of_call_objects=list_of_call_string[i]\r\n        return list(list_of_call_string)\r\n\r\ncall='9990000001,9330000001,23,STD'\r\ncall2='9990000001,9330000002,54,Local'\r\ncall3='9990000001,9330000003,6,ISD'\r\n\r\nlist_of_call_string=[call,call2,call3]\r\nUtil().parse_customer(list_of_call_string)\r\n","asgnmtId":"10","SolutionFileName":"Assign10.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 17:35:11,283 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 17:35:11,284 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 17:35:11,284 INFO  Invoking the service to verify the user solution
2019-03-06 17:35:11,284 INFO  Time before invoking service:Wed Mar 06 17:35:11 IST 2019
2019-03-06 17:35:11,284 INFO  Initialising service address for VerifySolution
2019-03-06 17:35:11,285 INFO  Time before invoking service In SUPER:Wed Mar 06 17:35:11 IST 2019
2019-03-06 17:35:12,230 INFO  Time after invoking service In SUPER:Wed Mar 06 17:35:12 IST 2019
2019-03-06 17:35:12,230 INFO  Service responded successfully with required details
2019-03-06 17:35:12,231 INFO  Time after invoking service:Wed Mar 06 17:35:12 IST 2019
2019-03-06 17:35:12,231 INFO  User solution successfully verified
2019-03-06 17:35:12,231 INFO  Processing the response from verify service
2019-03-06 17:35:12,237 INFO  Starting to parse JSON response
2019-03-06 17:35:12,239 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 17:35:12,239 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 17:35:12,239 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 17:35:12,240 INFO  Successfully parsed JSON response
2019-03-06 17:35:12,240 INFO  In the process of generating verify response in HTML
2019-03-06 17:35:12,332 INFO  Successfully generated verify response in HTML
2019-03-06 17:35:12,332 INFO  Successfully processed the response from service
2019-03-06 18:09:35,170 INFO  Setting request parameters for VerifySolution
2019-03-06 18:09:35,170 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 18:09:35,170 INFO  Starting to parse the user solution
2019-03-06 18:09:35,171 INFO  Displaying user solution
2019-03-06 18:09:35,246 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-11\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Flower:\r\n    def __init__(self):\r\n        self.__flower_name = None\r\n        self.__price_per_kg = None\r\n        self.__stock_available = None\r\n    def get_flower_name(self):\r\n        return self.__flower_name\r\n\r\n\r\n    def get_price_per_kg(self):\r\n        return self.__price_per_kg\r\n\r\n\r\n    def get_stock_available(self):\r\n        return self.__stock_available\r\n\r\n\r\n    def set_flower_name(self, flower_name):\r\n        self.__flower_name = flower_name\r\n\r\n\r\n    def set_price_per_kg(self, price_per_kg):\r\n        self.__price_per_kg = price_per_kg\r\n\r\n\r\n    def set_stock_available(self, stock_available):\r\n        self.__stock_available =stock_available\r\n    def validate_flower(self):\r\n        if(self.get_flower_name()==\"Orchid\" or self.get_flower_name()==\"Rose\" or self.get_flower_name()==\"Jasmine\"):\r\n            return True\r\n        else:\r\n            return False\r\n    def validate_stock(self,required_quantity):\r\n        if(required_quantity<self.get_stock_available()):\r\n            return True\r\n        else:\r\n            return False\r\n    def sell_flower(self,required_quantity):\r\n        if((self.get_flower_name()==\"Orchid\" or self.get_flower_name()==\"Rose\" or self.get_flower_name()==\"Jasmine\") and (required_quantity<self.get_stock_available())):\r\n            return self.set_stock_available(required_quantity) \r\n        \r\n    def check_level(self):\r\n        if(self.get_flower_name()==\"Orchid\"):\r\n            if(self.get_stock_available()<15):\r\n                return True\r\n            else:\r\n                return False\r\n        elif(self.get_flower_name()==\"Rose\"):\r\n            if(self.get_stock_available()<25):\r\n                return True\r\n            else:\r\n                return False\r\n        elif(self.get_flower_name()==\"Jasmine\"):\r\n            if(self.get_stock_available()<40):\r\n                return True\r\n            else:\r\n                return False\r\n        else:\r\n            return False\r\n            \r\n","asgnmtId":"11","SolutionFileName":"Assign11.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 18:09:35,247 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 18:09:35,247 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 18:09:35,247 INFO  Invoking the service to verify the user solution
2019-03-06 18:09:35,247 INFO  Time before invoking service:Wed Mar 06 18:09:35 IST 2019
2019-03-06 18:09:35,247 INFO  Initialising service address for VerifySolution
2019-03-06 18:09:35,248 INFO  Time before invoking service In SUPER:Wed Mar 06 18:09:35 IST 2019
2019-03-06 18:09:36,428 INFO  Time after invoking service In SUPER:Wed Mar 06 18:09:36 IST 2019
2019-03-06 18:09:36,428 INFO  Service responded successfully with required details
2019-03-06 18:09:36,428 INFO  Time after invoking service:Wed Mar 06 18:09:36 IST 2019
2019-03-06 18:09:36,429 INFO  User solution successfully verified
2019-03-06 18:09:36,429 INFO  Processing the response from verify service
2019-03-06 18:09:36,434 INFO  Starting to parse JSON response
2019-03-06 18:09:36,436 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:09:36,436 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:09:36,436 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:09:36,436 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:09:36,436 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:09:36,436 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:09:36,436 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:09:36,436 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:09:36,436 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:09:36,436 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:09:36,437 INFO  Successfully parsed JSON response
2019-03-06 18:09:36,437 INFO  In the process of generating verify response in HTML
2019-03-06 18:09:36,521 INFO  Successfully generated verify response in HTML
2019-03-06 18:09:36,521 INFO  Successfully processed the response from service
2019-03-06 18:10:06,912 INFO  Setting request parameters for VerifySolution
2019-03-06 18:10:06,913 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 18:10:06,913 INFO  Starting to parse the user solution
2019-03-06 18:10:06,913 INFO  Displaying user solution
2019-03-06 18:10:06,959 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-11\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Flower:\r\n    def __init__(self):\r\n        self.__flower_name = None\r\n        self.__price_per_kg = None\r\n        self.__stock_available = None\r\n    def get_flower_name(self):\r\n        return self.__flower_name\r\n\r\n\r\n    def get_price_per_kg(self):\r\n        return self.__price_per_kg\r\n\r\n\r\n    def get_stock_available(self):\r\n        return self.__stock_available\r\n\r\n\r\n    def set_flower_name(self, flower_name):\r\n        self.__flower_name = flower_name\r\n\r\n\r\n    def set_price_per_kg(self, price_per_kg):\r\n        self.__price_per_kg = price_per_kg\r\n\r\n\r\n    def set_stock_available(self, stock_available):\r\n        self.__stock_available =stock_available\r\n    def validate_flower(self):\r\n        if(self.get_flower_name()==\"Orchid\" or self.get_flower_name()==\"Rose\" or self.get_flower_name()==\"Jasmine\"):\r\n            return True\r\n        else:\r\n            return False\r\n    def validate_stock(self,required_quantity):\r\n        if(required_quantity<self.get_stock_available()):\r\n            return True\r\n        else:\r\n            return False\r\n    def sell_flower(self,required_quantity):\r\n        if((self.get_flower_name()==\"Orchid\" or self.get_flower_name()==\"Rose\" or self.get_flower_name()==\"Jasmine\") and (required_quantity<self.get_stock_available())):\r\n            return self.set_stock_available(required_quantity) \r\n        \r\n    def check_level(self):\r\n        if(self.get_flower_name()==\"Orchid\"):\r\n            if(self.get_stock_available()<15):\r\n                return True\r\n            else:\r\n                return False\r\n        elif(self.get_flower_name()==\"Rose\"):\r\n            if(self.get_stock_available()<25):\r\n                return True\r\n            else:\r\n                return False\r\n        elif(self.get_flower_name()==\"Jasmine\"):\r\n            if(self.get_stock_available()<40):\r\n                return True\r\n            else:\r\n                return False\r\n        else:\r\n            return False\r\n            \r\n","asgnmtId":"11","SolutionFileName":"Assign11.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 18:10:06,960 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 18:10:06,960 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 18:10:06,960 INFO  Invoking the service to verify the user solution
2019-03-06 18:10:06,960 INFO  Time before invoking service:Wed Mar 06 18:10:06 IST 2019
2019-03-06 18:10:06,960 INFO  Initialising service address for VerifySolution
2019-03-06 18:10:06,961 INFO  Time before invoking service In SUPER:Wed Mar 06 18:10:06 IST 2019
2019-03-06 18:10:08,045 INFO  Time after invoking service In SUPER:Wed Mar 06 18:10:08 IST 2019
2019-03-06 18:10:08,045 INFO  Service responded successfully with required details
2019-03-06 18:10:08,045 INFO  Time after invoking service:Wed Mar 06 18:10:08 IST 2019
2019-03-06 18:10:08,045 INFO  User solution successfully verified
2019-03-06 18:10:08,046 INFO  Processing the response from verify service
2019-03-06 18:10:08,048 INFO  Starting to parse JSON response
2019-03-06 18:10:08,049 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:10:08,049 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:10:08,049 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:10:08,049 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:10:08,049 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:10:08,049 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:10:08,049 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:10:08,049 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:10:08,049 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:10:08,049 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:10:08,051 INFO  Successfully parsed JSON response
2019-03-06 18:10:08,051 INFO  In the process of generating verify response in HTML
2019-03-06 18:10:08,119 INFO  Successfully generated verify response in HTML
2019-03-06 18:10:08,119 INFO  Successfully processed the response from service
2019-03-06 18:13:30,549 INFO  Setting request parameters for VerifySolution
2019-03-06 18:13:30,550 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 18:13:30,550 INFO  Starting to parse the user solution
2019-03-06 18:13:30,550 INFO  Displaying user solution
2019-03-06 18:13:30,595 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-11\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Flower:\r\n    def __init__(self):\r\n        self.__flower_name = None\r\n        self.__price_per_kg = None\r\n        self.__stock_available = None\r\n    def get_flower_name(self):\r\n        return self.__flower_name\r\n\r\n\r\n    def get_price_per_kg(self):\r\n        return self.__price_per_kg\r\n\r\n\r\n    def get_stock_available(self):\r\n        return self.__stock_available\r\n\r\n\r\n    def set_flower_name(self, flower_name):\r\n        self.__flower_name = flower_name\r\n\r\n\r\n    def set_price_per_kg(self, price_per_kg):\r\n        self.__price_per_kg = price_per_kg\r\n\r\n\r\n    def set_stock_available(self, stock_available):\r\n        self.__stock_available =stock_available\r\n    def validate_flower(self):\r\n        if(self.get_flower_name()==\"Orchid\" or self.get_flower_name()==\"Rose\" or self.get_flower_name()==\"Jasmine\"):\r\n            return True\r\n        else:\r\n            return False\r\n    def validate_stock(self,required_quantity):\r\n        if(required_quantity<self.get_stock_available()):\r\n            return True\r\n        else:\r\n            return False\r\n    def sell_flower(self,required_quantity):\r\n        if((self.get_flower_name()==\"Orchid\" or self.get_flower_name()==\"Rose\" or self.get_flower_name()==\"Jasmine\") and (required_quantity<self.get_stock_available())):\r\n            return self.set_stock_available(required_quantity) \r\n        \r\n    def check_level(self):\r\n        if(self.get_flower_name()==\"Orchid\"):\r\n            if(self.get_stock_available()<15):\r\n                return True\r\n            else:\r\n                return False\r\n        elif(self.get_flower_name()==\"Rose\"):\r\n            if(self.get_stock_available()<25):\r\n                return True\r\n            else:\r\n                return False\r\n        elif(self.get_flower_name()==\"Jasmine\"):\r\n            if(self.get_stock_available()<40):\r\n                return True\r\n            else:\r\n                return False\r\n        else:\r\n            return False\r\n            \r\n","asgnmtId":"11","SolutionFileName":"Assign11.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 18:13:30,595 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 18:13:30,595 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 18:13:30,595 INFO  Invoking the service to verify the user solution
2019-03-06 18:13:30,596 INFO  Time before invoking service:Wed Mar 06 18:13:30 IST 2019
2019-03-06 18:13:30,596 INFO  Initialising service address for VerifySolution
2019-03-06 18:13:30,596 INFO  Time before invoking service In SUPER:Wed Mar 06 18:13:30 IST 2019
2019-03-06 18:13:31,825 INFO  Time after invoking service In SUPER:Wed Mar 06 18:13:31 IST 2019
2019-03-06 18:13:31,825 INFO  Service responded successfully with required details
2019-03-06 18:13:31,826 INFO  Time after invoking service:Wed Mar 06 18:13:31 IST 2019
2019-03-06 18:13:31,826 INFO  User solution successfully verified
2019-03-06 18:13:31,827 INFO  Processing the response from verify service
2019-03-06 18:13:31,828 INFO  Starting to parse JSON response
2019-03-06 18:13:31,829 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:13:31,829 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:13:31,829 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:13:31,829 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:13:31,829 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:13:31,829 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:13:31,829 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:13:31,829 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:13:31,829 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:13:31,829 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:13:31,831 INFO  Successfully parsed JSON response
2019-03-06 18:13:31,831 INFO  In the process of generating verify response in HTML
2019-03-06 18:13:31,908 INFO  Successfully generated verify response in HTML
2019-03-06 18:13:31,908 INFO  Successfully processed the response from service
2019-03-06 18:32:33,610 INFO  Setting request parameters for VerifySolution
2019-03-06 18:32:33,611 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 18:32:33,611 INFO  Starting to parse the user solution
2019-03-06 18:32:33,611 INFO  Displaying user solution
2019-03-06 18:32:33,653 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-11\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Flower:\r\n    def __init__(self):\r\n        self.__flower_name = None\r\n        self.__price_per_kg = None\r\n        self.__stock_available = None\r\n    def get_flower_name(self):\r\n        return self.__flower_name\r\n\r\n\r\n    def get_price_per_kg(self):\r\n        return self.__price_per_kg\r\n\r\n\r\n    def get_stock_available(self):\r\n        return self.__stock_available\r\n\r\n\r\n    def set_flower_name(self, flower_name):\r\n        self.__flower_name = flower_name\r\n\r\n\r\n    def set_price_per_kg(self, price_per_kg):\r\n        self.__price_per_kg = price_per_kg\r\n\r\n\r\n    def set_stock_available(self, stock_available):\r\n        self.__stock_available =stock_available\r\n    def validate_flower(self):\r\n        if(self.get_flower_name()==\"Orchid\" or self.get_flower_name()==\"Rose\" or self.get_flower_name()==\"Jasmine\"):\r\n            return True\r\n        else:\r\n            return False\r\n    def validate_stock(self,required_quantity):\r\n        if(required_quantity<=self.get_stock_available()):\r\n            return True\r\n        else:\r\n            return False\r\n    def sell_flower(self,required_quantity):\r\n        if((self.get_flower_name()==\"Orchid\" or self.get_flower_name()==\"Rose\" or self.get_flower_name()==\"Jasmine\") and (required_quantity<self.get_stock_available())):\r\n            return self \r\n        \r\n    def check_level(self):\r\n        if(self.get_flower_name()==\"Orchid\"):\r\n            if(self.get_stock_available()<15):\r\n                return True\r\n            else:\r\n                return False\r\n        elif(self.get_flower_name()==\"Rose\"):\r\n            if(self.get_stock_available()<25):\r\n                return True\r\n            else:\r\n                return False\r\n        elif(self.get_flower_name()==\"Jasmine\"):\r\n            if(self.get_stock_available()<40):\r\n                return True\r\n            else:\r\n                return False\r\n        else:\r\n            return False\r\n            \r\n","asgnmtId":"11","SolutionFileName":"Assign11.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 18:32:33,654 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 18:32:33,654 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 18:32:33,654 INFO  Invoking the service to verify the user solution
2019-03-06 18:32:33,654 INFO  Time before invoking service:Wed Mar 06 18:32:33 IST 2019
2019-03-06 18:32:33,654 INFO  Initialising service address for VerifySolution
2019-03-06 18:32:33,655 INFO  Time before invoking service In SUPER:Wed Mar 06 18:32:33 IST 2019
2019-03-06 18:32:34,823 INFO  Time after invoking service In SUPER:Wed Mar 06 18:32:34 IST 2019
2019-03-06 18:32:34,824 INFO  Service responded successfully with required details
2019-03-06 18:32:34,824 INFO  Time after invoking service:Wed Mar 06 18:32:34 IST 2019
2019-03-06 18:32:34,824 INFO  User solution successfully verified
2019-03-06 18:32:34,824 INFO  Processing the response from verify service
2019-03-06 18:32:34,830 INFO  Starting to parse JSON response
2019-03-06 18:32:34,833 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:32:34,833 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:32:34,833 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:32:34,833 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:32:34,833 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:32:34,833 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:32:34,834 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:32:34,834 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:32:34,834 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:32:34,834 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:32:34,836 INFO  Successfully parsed JSON response
2019-03-06 18:32:34,836 INFO  In the process of generating verify response in HTML
2019-03-06 18:32:34,926 INFO  Successfully generated verify response in HTML
2019-03-06 18:32:34,926 INFO  Successfully processed the response from service
2019-03-06 18:37:44,258 INFO  Setting request parameters for VerifySolution
2019-03-06 18:37:44,259 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 18:37:44,259 INFO  Starting to parse the user solution
2019-03-06 18:37:44,259 INFO  Displaying user solution
2019-03-06 18:37:44,298 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-11\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Flower:\r\n    def __init__(self):\r\n        self.__flower_name = None\r\n        self.__price_per_kg = None\r\n        self.__stock_available = None\r\n    def get_flower_name(self):\r\n        return self.__flower_name\r\n\r\n\r\n    def get_price_per_kg(self):\r\n        return self.__price_per_kg\r\n\r\n\r\n    def get_stock_available(self):\r\n        return self.__stock_available\r\n\r\n\r\n    def set_flower_name(self, flower_name):\r\n        self.__flower_name = flower_name\r\n\r\n\r\n    def set_price_per_kg(self, price_per_kg):\r\n        self.__price_per_kg = price_per_kg\r\n\r\n\r\n    def set_stock_available(self, stock_available):\r\n        self.__stock_available =stock_available\r\n    def validate_flower(self):\r\n        if(self.get_flower_name()==\"Orchid\" or self.get_flower_name()==\"Rose\" or self.get_flower_name()==\"Jasmine\"):\r\n            return True\r\n        else:\r\n            return False\r\n    def validate_stock(self,required_quantity):\r\n        if(required_quantity<=self.get_stock_available()):\r\n            return True\r\n        else:\r\n            return False\r\n    def sell_flower(self,required_quantity):\r\n        if((self.get_flower_name()==\"Orchid\" or self.get_flower_name()==\"Rose\" or self.get_flower_name()==\"Jasmine\") and (required_quantity<self.get_stock_available())):\r\n            self.set_stock_available(required_quantity)\r\n            return self.get_stock_available()\r\n        \r\n    def check_level(self):\r\n        if(self.get_flower_name()==\"Orchid\"):\r\n            if(self.get_stock_available()<15):\r\n                return True\r\n            else:\r\n                return False\r\n        elif(self.get_flower_name()==\"Rose\"):\r\n            if(self.get_stock_available()<25):\r\n                return True\r\n            else:\r\n                return False\r\n        elif(self.get_flower_name()==\"Jasmine\"):\r\n            if(self.get_stock_available()<40):\r\n                return True\r\n            else:\r\n                return False\r\n        else:\r\n            return False\r\n            \r\n","asgnmtId":"11","SolutionFileName":"Assign11.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 18:37:44,298 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 18:37:44,299 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 18:37:44,299 INFO  Invoking the service to verify the user solution
2019-03-06 18:37:44,299 INFO  Time before invoking service:Wed Mar 06 18:37:44 IST 2019
2019-03-06 18:37:44,299 INFO  Initialising service address for VerifySolution
2019-03-06 18:37:44,300 INFO  Time before invoking service In SUPER:Wed Mar 06 18:37:44 IST 2019
2019-03-06 18:37:45,482 INFO  Time after invoking service In SUPER:Wed Mar 06 18:37:45 IST 2019
2019-03-06 18:37:45,482 INFO  Service responded successfully with required details
2019-03-06 18:37:45,482 INFO  Time after invoking service:Wed Mar 06 18:37:45 IST 2019
2019-03-06 18:37:45,483 INFO  User solution successfully verified
2019-03-06 18:37:45,483 INFO  Processing the response from verify service
2019-03-06 18:37:45,491 INFO  Starting to parse JSON response
2019-03-06 18:37:45,493 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:37:45,493 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:37:45,493 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:37:45,493 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:37:45,493 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:37:45,493 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:37:45,493 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:37:45,493 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:37:45,493 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:37:45,493 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:37:45,494 INFO  Successfully parsed JSON response
2019-03-06 18:37:45,494 INFO  In the process of generating verify response in HTML
2019-03-06 18:37:45,575 INFO  Successfully generated verify response in HTML
2019-03-06 18:37:45,575 INFO  Successfully processed the response from service
2019-03-06 18:40:23,413 INFO  Setting request parameters for VerifySolution
2019-03-06 18:40:23,413 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 18:40:23,413 INFO  Starting to parse the user solution
2019-03-06 18:40:23,414 INFO  Displaying user solution
2019-03-06 18:40:23,461 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-11\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Flower:\r\n    def __init__(self):\r\n        self.__flower_name = None\r\n        self.__price_per_kg = None\r\n        self.__stock_available = None\r\n    def get_flower_name(self):\r\n        return self.__flower_name\r\n\r\n\r\n    def get_price_per_kg(self):\r\n        return self.__price_per_kg\r\n\r\n\r\n    def get_stock_available(self):\r\n        return self.__stock_available\r\n\r\n\r\n    def set_flower_name(self, flower_name):\r\n        self.__flower_name = flower_name\r\n\r\n\r\n    def set_price_per_kg(self, price_per_kg):\r\n        self.__price_per_kg = price_per_kg\r\n\r\n\r\n    def set_stock_available(self, stock_available):\r\n        self.__stock_available =stock_available\r\n    def validate_flower(self):\r\n        if(self.get_flower_name()==\"Orchid\" or self.get_flower_name()==\"Rose\" or self.get_flower_name()==\"Jasmine\"):\r\n            return True\r\n        else:\r\n            return False\r\n    def validate_stock(self,required_quantity):\r\n        if(required_quantity<=self.get_stock_available()):\r\n            return True\r\n        else:\r\n            return False\r\n    def sell_flower(self,required_quantity):\r\n        if((self.get_flower_name()==\"Orchid\" or self.get_flower_name()==\"Rose\" or self.get_flower_name()==\"Jasmine\") and (required_quantity<self.get_stock_available())):\r\n            self.set_stock_available(self.get_stock_available()-required_quantity)\r\n            return self.get_stock_available()\r\n        \r\n    def check_level(self):\r\n        if(self.get_flower_name()==\"Orchid\"):\r\n            if(self.get_stock_available()<15):\r\n                return True\r\n            else:\r\n                return False\r\n        elif(self.get_flower_name()==\"Rose\"):\r\n            if(self.get_stock_available()<25):\r\n                return True\r\n            else:\r\n                return False\r\n        elif(self.get_flower_name()==\"Jasmine\"):\r\n            if(self.get_stock_available()<40):\r\n                return True\r\n            else:\r\n                return False\r\n        else:\r\n            return False\r\n            \r\n","asgnmtId":"11","SolutionFileName":"Assign11.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 18:40:23,461 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 18:40:23,461 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 18:40:23,461 INFO  Invoking the service to verify the user solution
2019-03-06 18:40:23,462 INFO  Time before invoking service:Wed Mar 06 18:40:23 IST 2019
2019-03-06 18:40:23,462 INFO  Initialising service address for VerifySolution
2019-03-06 18:40:23,462 INFO  Time before invoking service In SUPER:Wed Mar 06 18:40:23 IST 2019
2019-03-06 18:40:24,696 INFO  Time after invoking service In SUPER:Wed Mar 06 18:40:24 IST 2019
2019-03-06 18:40:24,696 INFO  Service responded successfully with required details
2019-03-06 18:40:24,696 INFO  Time after invoking service:Wed Mar 06 18:40:24 IST 2019
2019-03-06 18:40:24,696 INFO  User solution successfully verified
2019-03-06 18:40:24,697 INFO  Processing the response from verify service
2019-03-06 18:40:24,699 INFO  Starting to parse JSON response
2019-03-06 18:40:24,699 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:40:24,700 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:40:24,700 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:40:24,700 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:40:24,700 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:40:24,700 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:40:24,700 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:40:24,700 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:40:24,700 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:40:24,700 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:40:24,701 INFO  Successfully parsed JSON response
2019-03-06 18:40:24,701 INFO  In the process of generating verify response in HTML
2019-03-06 18:40:24,768 INFO  Successfully generated verify response in HTML
2019-03-06 18:40:24,769 INFO  Successfully processed the response from service
2019-03-06 18:41:48,506 INFO  Setting request parameters for VerifySolution
2019-03-06 18:41:48,506 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 18:41:48,506 INFO  Starting to parse the user solution
2019-03-06 18:41:48,506 INFO  Displaying user solution
2019-03-06 18:41:48,548 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-11\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Flower:\r\n    def __init__(self):\r\n        self.__flower_name = None\r\n        self.__price_per_kg = None\r\n        self.__stock_available = None\r\n    def get_flower_name(self):\r\n        return self.__flower_name\r\n\r\n\r\n    def get_price_per_kg(self):\r\n        return self.__price_per_kg\r\n\r\n\r\n    def get_stock_available(self):\r\n        return self.__stock_available\r\n\r\n\r\n    def set_flower_name(self, flower_name):\r\n        self.__flower_name = flower_name\r\n\r\n\r\n    def set_price_per_kg(self, price_per_kg):\r\n        self.__price_per_kg = price_per_kg\r\n\r\n\r\n    def set_stock_available(self, stock_available):\r\n        self.__stock_available =stock_available\r\n    def validate_flower(self):\r\n        if(self.get_flower_name()==\"Orchid\" or self.get_flower_name()==\"Rose\" or self.get_flower_name()==\"Jasmine\"):\r\n            return True\r\n        else:\r\n            return False\r\n    def validate_stock(self,required_quantity):\r\n        if(required_quantity<=self.get_stock_available()):\r\n            return True\r\n        else:\r\n            return False\r\n    def sell_flower(self,required_quantity):\r\n        if((self.get_flower_name()==\"Orchid\" or self.get_flower_name()==\"Rose\" or self.get_flower_name()==\"Jasmine\") and (required_quantity<self.get_stock_available())):\r\n            self.set_stock_available(required_quantity)\r\n            return self.get_stock_available()\r\n        \r\n    def check_level(self):\r\n        if(self.get_flower_name()==\"Orchid\"):\r\n            if(self.get_stock_available()<15):\r\n                return True\r\n            else:\r\n                return False\r\n        elif(self.get_flower_name()==\"Rose\"):\r\n            if(self.get_stock_available()<25):\r\n                return True\r\n            else:\r\n                return False\r\n        elif(self.get_flower_name()==\"Jasmine\"):\r\n            if(self.get_stock_available()<40):\r\n                return True\r\n            else:\r\n                return False\r\n        else:\r\n            return False\r\n            \r\n","asgnmtId":"11","SolutionFileName":"Assign11.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 18:41:48,548 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 18:41:48,548 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 18:41:48,548 INFO  Invoking the service to verify the user solution
2019-03-06 18:41:48,549 INFO  Time before invoking service:Wed Mar 06 18:41:48 IST 2019
2019-03-06 18:41:48,549 INFO  Initialising service address for VerifySolution
2019-03-06 18:41:48,549 INFO  Time before invoking service In SUPER:Wed Mar 06 18:41:48 IST 2019
2019-03-06 18:41:49,842 INFO  Time after invoking service In SUPER:Wed Mar 06 18:41:49 IST 2019
2019-03-06 18:41:49,843 INFO  Service responded successfully with required details
2019-03-06 18:41:49,843 INFO  Time after invoking service:Wed Mar 06 18:41:49 IST 2019
2019-03-06 18:41:49,843 INFO  User solution successfully verified
2019-03-06 18:41:49,843 INFO  Processing the response from verify service
2019-03-06 18:41:49,845 INFO  Starting to parse JSON response
2019-03-06 18:41:49,846 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:41:49,846 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:41:49,846 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:41:49,846 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:41:49,846 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:41:49,846 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:41:49,846 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:41:49,846 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:41:49,846 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:41:49,846 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:41:49,847 INFO  Successfully parsed JSON response
2019-03-06 18:41:49,848 INFO  In the process of generating verify response in HTML
2019-03-06 18:41:49,914 INFO  Successfully generated verify response in HTML
2019-03-06 18:41:49,914 INFO  Successfully processed the response from service
2019-03-06 18:43:04,351 INFO  Setting request parameters for VerifySolution
2019-03-06 18:43:04,351 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 18:43:04,351 INFO  Starting to parse the user solution
2019-03-06 18:43:04,351 INFO  Displaying user solution
2019-03-06 18:43:04,391 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-11\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Flower:\r\n    def __init__(self):\r\n        self.__flower_name = None\r\n        self.__price_per_kg = None\r\n        self.__stock_available = None\r\n    def get_flower_name(self):\r\n        return self.__flower_name\r\n\r\n\r\n    def get_price_per_kg(self):\r\n        return self.__price_per_kg\r\n\r\n\r\n    def get_stock_available(self):\r\n        return self.__stock_available\r\n\r\n\r\n    def set_flower_name(self, flower_name):\r\n        self.__flower_name = flower_name\r\n\r\n\r\n    def set_price_per_kg(self, price_per_kg):\r\n        self.__price_per_kg = price_per_kg\r\n\r\n\r\n    def set_stock_available(self, stock_available):\r\n        self.__stock_available =stock_available\r\n    def validate_flower(self):\r\n        if(self.get_flower_name()==\"Orchid\" or self.get_flower_name()==\"Rose\" or self.get_flower_name()==\"Jasmine\"):\r\n            return True\r\n        else:\r\n            return False\r\n    def validate_stock(self,required_quantity):\r\n        if(required_quantity<=self.get_stock_available()):\r\n            return True\r\n        else:\r\n            return False\r\n    def sell_flower(self,required_quantity):\r\n        if((self.get_flower_name()==\"Orchid\" or self.get_flower_name()==\"Rose\" or self.get_flower_name()==\"Jasmine\") and (required_quantity<self.get_stock_available())):\r\n            return self.get_stock_available()\r\n        \r\n    def check_level(self):\r\n        if(self.get_flower_name()==\"Orchid\"):\r\n            if(self.get_stock_available()<15):\r\n                return True\r\n            else:\r\n                return False\r\n        elif(self.get_flower_name()==\"Rose\"):\r\n            if(self.get_stock_available()<25):\r\n                return True\r\n            else:\r\n                return False\r\n        elif(self.get_flower_name()==\"Jasmine\"):\r\n            if(self.get_stock_available()<40):\r\n                return True\r\n            else:\r\n                return False\r\n        else:\r\n            return False\r\n            \r\n","asgnmtId":"11","SolutionFileName":"Assign11.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 18:43:04,391 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 18:43:04,392 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 18:43:04,392 INFO  Invoking the service to verify the user solution
2019-03-06 18:43:04,392 INFO  Time before invoking service:Wed Mar 06 18:43:04 IST 2019
2019-03-06 18:43:04,392 INFO  Initialising service address for VerifySolution
2019-03-06 18:43:04,393 INFO  Time before invoking service In SUPER:Wed Mar 06 18:43:04 IST 2019
2019-03-06 18:43:05,643 INFO  Time after invoking service In SUPER:Wed Mar 06 18:43:05 IST 2019
2019-03-06 18:43:05,644 INFO  Service responded successfully with required details
2019-03-06 18:43:05,644 INFO  Time after invoking service:Wed Mar 06 18:43:05 IST 2019
2019-03-06 18:43:05,644 INFO  User solution successfully verified
2019-03-06 18:43:05,644 INFO  Processing the response from verify service
2019-03-06 18:43:05,650 INFO  Starting to parse JSON response
2019-03-06 18:43:05,652 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:43:05,652 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:43:05,652 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:43:05,652 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:43:05,652 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:43:05,652 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:43:05,652 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:43:05,652 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:43:05,652 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:43:05,652 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:43:05,653 INFO  Successfully parsed JSON response
2019-03-06 18:43:05,653 INFO  In the process of generating verify response in HTML
2019-03-06 18:43:05,732 INFO  Successfully generated verify response in HTML
2019-03-06 18:43:05,732 INFO  Successfully processed the response from service
2019-03-06 18:43:48,093 INFO  Setting request parameters for VerifySolution
2019-03-06 18:43:48,093 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 18:43:48,093 INFO  Starting to parse the user solution
2019-03-06 18:43:48,094 INFO  Displaying user solution
2019-03-06 18:43:48,134 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-11\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Flower:\r\n    def __init__(self):\r\n        self.__flower_name = None\r\n        self.__price_per_kg = None\r\n        self.__stock_available = None\r\n    def get_flower_name(self):\r\n        return self.__flower_name\r\n\r\n\r\n    def get_price_per_kg(self):\r\n        return self.__price_per_kg\r\n\r\n\r\n    def get_stock_available(self):\r\n        return self.__stock_available\r\n\r\n\r\n    def set_flower_name(self, flower_name):\r\n        self.__flower_name = flower_name\r\n\r\n\r\n    def set_price_per_kg(self, price_per_kg):\r\n        self.__price_per_kg = price_per_kg\r\n\r\n\r\n    def set_stock_available(self, stock_available):\r\n        self.__stock_available =stock_available\r\n    def validate_flower(self):\r\n        if(self.get_flower_name()==\"Orchid\" or self.get_flower_name()==\"Rose\" or self.get_flower_name()==\"Jasmine\"):\r\n            return True\r\n        else:\r\n            return False\r\n    def validate_stock(self,required_quantity):\r\n        if(required_quantity<=self.get_stock_available()):\r\n            return True\r\n        else:\r\n            return False\r\n    def sell_flower(self,required_quantity):\r\n        if((self.get_flower_name()==\"Orchid\" or self.get_flower_name()==\"Rose\" or self.get_flower_name()==\"Jasmine\") and (required_quantity<self.get_stock_available())):\r\n            return self.get_stock_available()\r\n        \r\n    def check_level(self):\r\n        if(self.get_flower_name()==\"Orchid\"):\r\n            if(self.get_stock_available()<15):\r\n                return True\r\n            else:\r\n                return False\r\n        elif(self.get_flower_name()==\"Rose\"):\r\n            if(self.get_stock_available()<25):\r\n                return True\r\n            else:\r\n                return False\r\n        elif(self.get_flower_name()==\"Jasmine\"):\r\n            if(self.get_stock_available()<40):\r\n                return True\r\n            else:\r\n                return False\r\n        else:\r\n            return False\r\n            \r\n","asgnmtId":"11","SolutionFileName":"Assign11.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 18:43:48,134 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 18:43:48,135 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 18:43:48,135 INFO  Invoking the service to verify the user solution
2019-03-06 18:43:48,135 INFO  Time before invoking service:Wed Mar 06 18:43:48 IST 2019
2019-03-06 18:43:48,135 INFO  Initialising service address for VerifySolution
2019-03-06 18:43:48,136 INFO  Time before invoking service In SUPER:Wed Mar 06 18:43:48 IST 2019
2019-03-06 18:43:49,249 INFO  Time after invoking service In SUPER:Wed Mar 06 18:43:49 IST 2019
2019-03-06 18:43:49,249 INFO  Service responded successfully with required details
2019-03-06 18:43:49,249 INFO  Time after invoking service:Wed Mar 06 18:43:49 IST 2019
2019-03-06 18:43:49,250 INFO  User solution successfully verified
2019-03-06 18:43:49,250 INFO  Processing the response from verify service
2019-03-06 18:43:49,253 INFO  Starting to parse JSON response
2019-03-06 18:43:49,255 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:43:49,255 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:43:49,255 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:43:49,255 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:43:49,255 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:43:49,255 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:43:49,255 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:43:49,255 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:43:49,255 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:43:49,255 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:43:49,257 INFO  Successfully parsed JSON response
2019-03-06 18:43:49,257 INFO  In the process of generating verify response in HTML
2019-03-06 18:43:49,325 INFO  Successfully generated verify response in HTML
2019-03-06 18:43:49,325 INFO  Successfully processed the response from service
2019-03-06 18:46:47,898 INFO  Setting request parameters for VerifySolution
2019-03-06 18:46:47,898 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 18:46:47,898 INFO  Starting to parse the user solution
2019-03-06 18:46:47,898 INFO  Displaying user solution
2019-03-06 18:46:47,933 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-11\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Flower:\r\n    def __init__(self):\r\n        self.__flower_name = None\r\n        self.__price_per_kg = None\r\n        self.__stock_available = None\r\n    def get_flower_name(self):\r\n        return self.__flower_name\r\n\r\n\r\n    def get_price_per_kg(self):\r\n        return self.__price_per_kg\r\n\r\n\r\n    def get_stock_available(self):\r\n        return self.__stock_available\r\n\r\n\r\n    def set_flower_name(self, flower_name):\r\n        self.__flower_name = flower_name\r\n\r\n\r\n    def set_price_per_kg(self, price_per_kg):\r\n        self.__price_per_kg = price_per_kg\r\n\r\n\r\n    def set_stock_available(self, stock_available):\r\n        self.__stock_available =stock_available\r\n    def validate_flower(self):\r\n        if(self.get_flower_name()==\"Orchid\" or self.get_flower_name()==\"Rose\" or self.get_flower_name()==\"Jasmine\"):\r\n            return True\r\n        else:\r\n            return False\r\n    def validate_stock(self,required_quantity):\r\n        if(required_quantity<=self.get_stock_available()):\r\n            return True\r\n        else:\r\n            return False\r\n    def sell_flower(self,required_quantity):\r\n        if((self.get_flower_name()==\"Orchid\" or self.get_flower_name()==\"Rose\" or self.get_flower_name()==\"Jasmine\") and (required_quantity<self.get_stock_available())):\r\n            self.__stock_available = required_quantity\r\n            return self.get_stock_available()\r\n        \r\n    def check_level(self):\r\n        if(self.get_flower_name()==\"Orchid\"):\r\n            if(self.get_stock_available()<15):\r\n                return True\r\n            else:\r\n                return False\r\n        elif(self.get_flower_name()==\"Rose\"):\r\n            if(self.get_stock_available()<25):\r\n                return True\r\n            else:\r\n                return False\r\n        elif(self.get_flower_name()==\"Jasmine\"):\r\n            if(self.get_stock_available()<40):\r\n                return True\r\n            else:\r\n                return False\r\n        else:\r\n            return False\r\n            \r\n","asgnmtId":"11","SolutionFileName":"Assign11.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 18:46:47,933 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 18:46:47,933 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 18:46:47,933 INFO  Invoking the service to verify the user solution
2019-03-06 18:46:47,934 INFO  Time before invoking service:Wed Mar 06 18:46:47 IST 2019
2019-03-06 18:46:47,934 INFO  Initialising service address for VerifySolution
2019-03-06 18:46:47,934 INFO  Time before invoking service In SUPER:Wed Mar 06 18:46:47 IST 2019
2019-03-06 18:46:49,147 INFO  Time after invoking service In SUPER:Wed Mar 06 18:46:49 IST 2019
2019-03-06 18:46:49,147 INFO  Service responded successfully with required details
2019-03-06 18:46:49,147 INFO  Time after invoking service:Wed Mar 06 18:46:49 IST 2019
2019-03-06 18:46:49,147 INFO  User solution successfully verified
2019-03-06 18:46:49,147 INFO  Processing the response from verify service
2019-03-06 18:46:49,149 INFO  Starting to parse JSON response
2019-03-06 18:46:49,150 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:46:49,150 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:46:49,150 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:46:49,150 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:46:49,150 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:46:49,150 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:46:49,150 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:46:49,150 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:46:49,150 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:46:49,150 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:46:49,152 INFO  Successfully parsed JSON response
2019-03-06 18:46:49,152 INFO  In the process of generating verify response in HTML
2019-03-06 18:46:49,228 INFO  Successfully generated verify response in HTML
2019-03-06 18:46:49,228 INFO  Successfully processed the response from service
2019-03-06 18:48:52,951 INFO  Setting request parameters for VerifySolution
2019-03-06 18:48:52,951 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 18:48:52,951 INFO  Starting to parse the user solution
2019-03-06 18:48:52,952 INFO  Displaying user solution
2019-03-06 18:48:52,986 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-11\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Flower:\r\n    def __init__(self):\r\n        self.__flower_name = None\r\n        self.__price_per_kg = None\r\n        self.__stock_available = None\r\n    def get_flower_name(self):\r\n        return self.__flower_name\r\n\r\n\r\n    def get_price_per_kg(self):\r\n        return self.__price_per_kg\r\n\r\n\r\n    def get_stock_available(self):\r\n        return self.__stock_available\r\n\r\n\r\n    def set_flower_name(self, flower_name):\r\n        self.__flower_name = flower_name.upper()\r\n\r\n\r\n    def set_price_per_kg(self, price_per_kg):\r\n        self.__price_per_kg = price_per_kg\r\n\r\n\r\n    def set_stock_available(self, stock_available):\r\n        self.__stock_available =stock_available\r\n    def validate_flower(self):\r\n        if(self.get_flower_name()==\"Orchid\" or self.get_flower_name()==\"Rose\" or self.get_flower_name()==\"Jasmine\"):\r\n            return True\r\n        else:\r\n            return False\r\n    def validate_stock(self,required_quantity):\r\n        if(required_quantity<=self.get_stock_available()):\r\n            return True\r\n        else:\r\n            return False\r\n    def sell_flower(self,required_quantity):\r\n        if((self.get_flower_name()==\"Orchid\" or self.get_flower_name()==\"Rose\" or self.get_flower_name()==\"Jasmine\") and (required_quantity<self.get_stock_available())):\r\n            self.__stock_available = required_quantity\r\n            return self.get_stock_available()\r\n        \r\n    def check_level(self):\r\n        if(self.get_flower_name()==\"Orchid\"):\r\n            if(self.get_stock_available()<15):\r\n                return True\r\n            else:\r\n                return False\r\n        elif(self.get_flower_name()==\"Rose\"):\r\n            if(self.get_stock_available()<25):\r\n                return True\r\n            else:\r\n                return False\r\n        elif(self.get_flower_name()==\"Jasmine\"):\r\n            if(self.get_stock_available()<40):\r\n                return True\r\n            else:\r\n                return False\r\n        else:\r\n            return False\r\n            \r\n","asgnmtId":"11","SolutionFileName":"Assign11.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 18:48:52,986 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 18:48:52,987 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 18:48:52,987 INFO  Invoking the service to verify the user solution
2019-03-06 18:48:52,987 INFO  Time before invoking service:Wed Mar 06 18:48:52 IST 2019
2019-03-06 18:48:52,987 INFO  Initialising service address for VerifySolution
2019-03-06 18:48:52,987 INFO  Time before invoking service In SUPER:Wed Mar 06 18:48:52 IST 2019
2019-03-06 18:48:54,170 INFO  Time after invoking service In SUPER:Wed Mar 06 18:48:54 IST 2019
2019-03-06 18:48:54,171 INFO  Service responded successfully with required details
2019-03-06 18:48:54,171 INFO  Time after invoking service:Wed Mar 06 18:48:54 IST 2019
2019-03-06 18:48:54,171 INFO  User solution successfully verified
2019-03-06 18:48:54,171 INFO  Processing the response from verify service
2019-03-06 18:48:54,173 INFO  Starting to parse JSON response
2019-03-06 18:48:54,174 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:48:54,174 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:48:54,174 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:48:54,174 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:48:54,174 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:48:54,174 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:48:54,174 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:48:54,174 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:48:54,174 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:48:54,174 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:48:54,175 INFO  Successfully parsed JSON response
2019-03-06 18:48:54,175 INFO  In the process of generating verify response in HTML
2019-03-06 18:48:54,242 INFO  Successfully generated verify response in HTML
2019-03-06 18:48:54,242 INFO  Successfully processed the response from service
2019-03-06 18:50:04,938 INFO  Setting request parameters for VerifySolution
2019-03-06 18:50:04,938 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 18:50:04,938 INFO  Starting to parse the user solution
2019-03-06 18:50:04,938 INFO  Displaying user solution
2019-03-06 18:50:04,975 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-11\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Flower:\r\n    def __init__(self):\r\n        self.__flower_name = None\r\n        self.__price_per_kg = None\r\n        self.__stock_available = None\r\n    def get_flower_name(self):\r\n        return self.__flower_name\r\n\r\n\r\n    def get_price_per_kg(self):\r\n        return self.__price_per_kg\r\n\r\n\r\n    def get_stock_available(self):\r\n        return self.__stock_available\r\n\r\n\r\n    def set_flower_name(self, flower_name):\r\n        self.__flower_name = flower_name.upper()\r\n\r\n\r\n    def set_price_per_kg(self, price_per_kg):\r\n        self.__price_per_kg = price_per_kg\r\n\r\n\r\n    def set_stock_available(self, stock_available):\r\n        self.__stock_available =stock_available\r\n    def validate_flower(self):\r\n        if(self.get_flower_name()==\"ORCHID\" or self.get_flower_name()==\"ROSE\" or self.get_flower_name()==\"Jasmine\"):\r\n            return True\r\n        else:\r\n            return False\r\n    def validate_stock(self,required_quantity):\r\n        if(required_quantity<=self.get_stock_available()):\r\n            return True\r\n        else:\r\n            return False\r\n    def sell_flower(self,required_quantity):\r\n        if((self.get_flower_name()==\"Orchid\" or self.get_flower_name()==\"Rose\" or self.get_flower_name()==\"Jasmine\") and (required_quantity<self.get_stock_available())):\r\n            self.__stock_available = required_quantity\r\n            return self.get_stock_available()\r\n        \r\n    def check_level(self):\r\n        if(self.get_flower_name()==\"Orchid\"):\r\n            if(self.get_stock_available()<15):\r\n                return True\r\n            else:\r\n                return False\r\n        elif(self.get_flower_name()==\"Rose\"):\r\n            if(self.get_stock_available()<25):\r\n                return True\r\n            else:\r\n                return False\r\n        elif(self.get_flower_name()==\"Jasmine\"):\r\n            if(self.get_stock_available()<40):\r\n                return True\r\n            else:\r\n                return False\r\n        else:\r\n            return False\r\n            \r\n","asgnmtId":"11","SolutionFileName":"Assign11.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 18:50:04,975 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 18:50:04,976 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 18:50:04,976 INFO  Invoking the service to verify the user solution
2019-03-06 18:50:04,976 INFO  Time before invoking service:Wed Mar 06 18:50:04 IST 2019
2019-03-06 18:50:04,976 INFO  Initialising service address for VerifySolution
2019-03-06 18:50:04,977 INFO  Time before invoking service In SUPER:Wed Mar 06 18:50:04 IST 2019
2019-03-06 18:50:06,178 INFO  Time after invoking service In SUPER:Wed Mar 06 18:50:06 IST 2019
2019-03-06 18:50:06,179 INFO  Service responded successfully with required details
2019-03-06 18:50:06,179 INFO  Time after invoking service:Wed Mar 06 18:50:06 IST 2019
2019-03-06 18:50:06,179 INFO  User solution successfully verified
2019-03-06 18:50:06,179 INFO  Processing the response from verify service
2019-03-06 18:50:06,184 INFO  Starting to parse JSON response
2019-03-06 18:50:06,186 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:50:06,186 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:50:06,186 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:50:06,186 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:50:06,186 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:50:06,186 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:50:06,186 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:50:06,186 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:50:06,186 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:50:06,186 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:50:06,188 INFO  Successfully parsed JSON response
2019-03-06 18:50:06,188 INFO  In the process of generating verify response in HTML
2019-03-06 18:50:06,261 INFO  Successfully generated verify response in HTML
2019-03-06 18:50:06,261 INFO  Successfully processed the response from service
2019-03-06 18:51:46,975 INFO  Setting request parameters for VerifySolution
2019-03-06 18:51:46,978 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 18:51:46,978 INFO  Starting to parse the user solution
2019-03-06 18:51:46,979 INFO  Displaying user solution
2019-03-06 18:51:47,018 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-11\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Flower:\r\n    def __init__(self):\r\n        self.__flower_name = None\r\n        self.__price_per_kg = None\r\n        self.__stock_available = None\r\n    def get_flower_name(self):\r\n        return self.__flower_name\r\n\r\n\r\n    def get_price_per_kg(self):\r\n        return self.__price_per_kg\r\n\r\n\r\n    def get_stock_available(self):\r\n        return self.__stock_available\r\n\r\n\r\n    def set_flower_name(self, flower_name):\r\n        self.__flower_name = flower_name.upper()\r\n\r\n\r\n    def set_price_per_kg(self, price_per_kg):\r\n        self.__price_per_kg = price_per_kg\r\n\r\n\r\n    def set_stock_available(self, stock_available):\r\n        self.__stock_available =stock_available\r\n    def validate_flower(self):\r\n        if(self.get_flower_name()==\"ORCHID\" or self.get_flower_name()==\"ROSE\" or self.get_flower_name()==\"JASMINE\"):\r\n            return True\r\n        else:\r\n            return False\r\n    def validate_stock(self,required_quantity):\r\n        if(required_quantity<=self.get_stock_available()):\r\n            return True\r\n        else:\r\n            return False\r\n    def sell_flower(self,required_quantity):\r\n        if((self.get_flower_name()==\"ORCHID\" or self.get_flower_name()==\"ROSE\" or self.get_flower_name()==\"JASMINE\") and (required_quantity<self.get_stock_available())):\r\n            self.__stock_available = required_quantity\r\n            return self.get_stock_available()\r\n        \r\n    def check_level(self):\r\n        if(self.get_flower_name()==\"ORCHID\"):\r\n            if(self.get_stock_available()<15):\r\n                return True\r\n            else:\r\n                return False\r\n        elif(self.get_flower_name()==\"ROSE\"):\r\n            if(self.get_stock_available()<25):\r\n                return True\r\n            else:\r\n                return False\r\n        elif(self.get_flower_name()==\"JASMINE\"):\r\n            if(self.get_stock_available()<40):\r\n                return True\r\n            else:\r\n                return False\r\n        else:\r\n            return False\r\n            \r\n","asgnmtId":"11","SolutionFileName":"Assign11.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 18:51:47,018 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 18:51:47,018 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 18:51:47,018 INFO  Invoking the service to verify the user solution
2019-03-06 18:51:47,019 INFO  Time before invoking service:Wed Mar 06 18:51:47 IST 2019
2019-03-06 18:51:47,019 INFO  Initialising service address for VerifySolution
2019-03-06 18:51:47,019 INFO  Time before invoking service In SUPER:Wed Mar 06 18:51:47 IST 2019
2019-03-06 18:51:48,201 INFO  Time after invoking service In SUPER:Wed Mar 06 18:51:48 IST 2019
2019-03-06 18:51:48,202 INFO  Service responded successfully with required details
2019-03-06 18:51:48,202 INFO  Time after invoking service:Wed Mar 06 18:51:48 IST 2019
2019-03-06 18:51:48,202 INFO  User solution successfully verified
2019-03-06 18:51:48,202 INFO  Processing the response from verify service
2019-03-06 18:51:48,204 INFO  Starting to parse JSON response
2019-03-06 18:51:48,206 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:51:48,206 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:51:48,206 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:51:48,206 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:51:48,206 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:51:48,206 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:51:48,206 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:51:48,207 INFO  Successfully parsed JSON response
2019-03-06 18:51:48,207 INFO  In the process of generating verify response in HTML
2019-03-06 18:51:48,289 INFO  Successfully generated verify response in HTML
2019-03-06 18:51:48,290 INFO  Successfully processed the response from service
2019-03-06 18:52:46,937 INFO  Setting request parameters for VerifySolution
2019-03-06 18:52:46,937 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 18:52:46,937 INFO  Starting to parse the user solution
2019-03-06 18:52:46,937 INFO  Displaying user solution
2019-03-06 18:52:46,984 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-11\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Flower:\r\n    def __init__(self):\r\n        self.__flower_name = None\r\n        self.__price_per_kg = None\r\n        self.__stock_available = None\r\n    def get_flower_name(self):\r\n        return self.__flower_name\r\n\r\n\r\n    def get_price_per_kg(self):\r\n        return self.__price_per_kg\r\n\r\n\r\n    def get_stock_available(self):\r\n        return self.__stock_available\r\n\r\n\r\n    def set_flower_name(self, flower_name):\r\n        self.__flower_name = flower_name.upper()\r\n\r\n\r\n    def set_price_per_kg(self, price_per_kg):\r\n        self.__price_per_kg = price_per_kg\r\n\r\n\r\n    def set_stock_available(self, stock_available):\r\n        self.__stock_available =stock_available\r\n    def validate_flower(self):\r\n        if(self.get_flower_name()==\"ORCHID\" or self.get_flower_name()==\"ROSE\" or self.get_flower_name()==\"JASMINE\"):\r\n            return True\r\n        else:\r\n            return False\r\n    def validate_stock(self,required_quantity):\r\n        if(required_quantity<=self.get_stock_available()):\r\n            return True\r\n        else:\r\n            return False\r\n    def sell_flower(self,required_quantity):\r\n        if((self.get_flower_name()==\"ORCHID\" or self.get_flower_name()==\"ROSE\" or self.get_flower_name()==\"JASMINE\") and (required_quantity<self.get_stock_available())):\r\n            self.__stock_available = required_quantity\r\n            return self.get_stock_available()\r\n        \r\n    def check_level(self):\r\n        if(self.get_flower_name()==\"ORCHID\"):\r\n            if(self.get_stock_available()<15):\r\n                return True\r\n            else:\r\n                return False\r\n        elif(self.get_flower_name()==\"ROSE\"):\r\n            if(self.get_stock_available()<25):\r\n                return True\r\n            else:\r\n                return False\r\n        elif(self.get_flower_name()==\"JASMINE\"):\r\n            if(self.get_stock_available()<40):\r\n                return True\r\n            else:\r\n                return False\r\n        else:\r\n            return False\r\n            \r\n","asgnmtId":"11","SolutionFileName":"Assign11.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 18:52:46,984 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 18:52:46,984 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 18:52:46,984 INFO  Invoking the service to verify the user solution
2019-03-06 18:52:46,985 INFO  Time before invoking service:Wed Mar 06 18:52:46 IST 2019
2019-03-06 18:52:46,985 INFO  Initialising service address for VerifySolution
2019-03-06 18:52:46,985 INFO  Time before invoking service In SUPER:Wed Mar 06 18:52:46 IST 2019
2019-03-06 18:52:48,121 INFO  Time after invoking service In SUPER:Wed Mar 06 18:52:48 IST 2019
2019-03-06 18:52:48,121 INFO  Service responded successfully with required details
2019-03-06 18:52:48,122 INFO  Time after invoking service:Wed Mar 06 18:52:48 IST 2019
2019-03-06 18:52:48,122 INFO  User solution successfully verified
2019-03-06 18:52:48,122 INFO  Processing the response from verify service
2019-03-06 18:52:48,124 INFO  Starting to parse JSON response
2019-03-06 18:52:48,125 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:52:48,125 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:52:48,125 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:52:48,125 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:52:48,125 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:52:48,125 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:52:48,125 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:52:48,126 INFO  Successfully parsed JSON response
2019-03-06 18:52:48,127 INFO  In the process of generating verify response in HTML
2019-03-06 18:52:48,202 INFO  Successfully generated verify response in HTML
2019-03-06 18:52:48,202 INFO  Successfully processed the response from service
2019-03-06 18:53:50,981 INFO  Setting request parameters for VerifySolution
2019-03-06 18:53:50,981 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 18:53:50,981 INFO  Starting to parse the user solution
2019-03-06 18:53:50,981 INFO  Displaying user solution
2019-03-06 18:53:51,022 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-11\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Flower:\r\n    def __init__(self):\r\n        self.__flower_name = None\r\n        self.__price_per_kg = None\r\n        self.__stock_available = None\r\n    def get_flower_name(self):\r\n        return self.__flower_name\r\n\r\n\r\n    def get_price_per_kg(self):\r\n        return self.__price_per_kg\r\n\r\n\r\n    def get_stock_available(self):\r\n        return self.__stock_available\r\n\r\n\r\n    def set_flower_name(self, flower_name):\r\n        self.__flower_name = flower_name.upper()\r\n\r\n\r\n    def set_price_per_kg(self, price_per_kg):\r\n        self.__price_per_kg = price_per_kg\r\n\r\n\r\n    def set_stock_available(self, stock_available):\r\n        self.__stock_available =stock_available\r\n    def validate_flower(self):\r\n        if(self.get_flower_name()==\"ORCHID\" or self.get_flower_name()==\"ROSE\" or self.get_flower_name()==\"JASMINE\"):\r\n            return True\r\n        else:\r\n            return False\r\n    def validate_stock(self,required_quantity):\r\n        if(required_quantity<=self.get_stock_available()):\r\n            return True\r\n        else:\r\n            return False\r\n    def sell_flower(self,required_quantity):\r\n        if((self.get_flower_name()==\"ORCHID\" or self.get_flower_name()==\"ROSE\" or self.get_flower_name()==\"JASMINE\") and (required_quantity<self.get_stock_available())):\r\n            self.set_stock_available(required_quantity)\r\n            return self.get_stock_available()\r\n        \r\n    def check_level(self):\r\n        if(self.get_flower_name()==\"ORCHID\"):\r\n            if(self.get_stock_available()<15):\r\n                return True\r\n            else:\r\n                return False\r\n        elif(self.get_flower_name()==\"ROSE\"):\r\n            if(self.get_stock_available()<25):\r\n                return True\r\n            else:\r\n                return False\r\n        elif(self.get_flower_name()==\"JASMINE\"):\r\n            if(self.get_stock_available()<40):\r\n                return True\r\n            else:\r\n                return False\r\n        else:\r\n            return False\r\n            \r\n","asgnmtId":"11","SolutionFileName":"Assign11.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 18:53:51,022 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 18:53:51,022 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 18:53:51,022 INFO  Invoking the service to verify the user solution
2019-03-06 18:53:51,023 INFO  Time before invoking service:Wed Mar 06 18:53:51 IST 2019
2019-03-06 18:53:51,023 INFO  Initialising service address for VerifySolution
2019-03-06 18:53:51,023 INFO  Time before invoking service In SUPER:Wed Mar 06 18:53:51 IST 2019
2019-03-06 18:53:52,205 INFO  Time after invoking service In SUPER:Wed Mar 06 18:53:52 IST 2019
2019-03-06 18:53:52,205 INFO  Service responded successfully with required details
2019-03-06 18:53:52,205 INFO  Time after invoking service:Wed Mar 06 18:53:52 IST 2019
2019-03-06 18:53:52,206 INFO  User solution successfully verified
2019-03-06 18:53:52,206 INFO  Processing the response from verify service
2019-03-06 18:53:52,213 INFO  Starting to parse JSON response
2019-03-06 18:53:52,214 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:53:52,214 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:53:52,214 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:53:52,214 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:53:52,214 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:53:52,214 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:53:52,214 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:53:52,216 INFO  Successfully parsed JSON response
2019-03-06 18:53:52,216 INFO  In the process of generating verify response in HTML
2019-03-06 18:53:52,287 INFO  Successfully generated verify response in HTML
2019-03-06 18:53:52,287 INFO  Successfully processed the response from service
2019-03-06 18:54:33,054 INFO  Setting request parameters for VerifySolution
2019-03-06 18:54:33,055 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 18:54:33,055 INFO  Starting to parse the user solution
2019-03-06 18:54:33,055 INFO  Displaying user solution
2019-03-06 18:54:33,093 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-11\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Flower:\r\n    def __init__(self):\r\n        self.__flower_name = None\r\n        self.__price_per_kg = None\r\n        self.__stock_available = None\r\n    def get_flower_name(self):\r\n        return self.__flower_name\r\n\r\n\r\n    def get_price_per_kg(self):\r\n        return self.__price_per_kg\r\n\r\n\r\n    def get_stock_available(self):\r\n        return self.__stock_available\r\n\r\n\r\n    def set_flower_name(self, flower_name):\r\n        self.__flower_name = flower_name.upper()\r\n\r\n\r\n    def set_price_per_kg(self, price_per_kg):\r\n        self.__price_per_kg = price_per_kg\r\n\r\n\r\n    def set_stock_available(self, stock_available):\r\n        self.__stock_available =stock_available\r\n    def validate_flower(self):\r\n        if(self.get_flower_name()==\"ORCHID\" or self.get_flower_name()==\"ROSE\" or self.get_flower_name()==\"JASMINE\"):\r\n            return True\r\n        else:\r\n            return False\r\n    def validate_stock(self,required_quantity):\r\n        if(required_quantity<=self.get_stock_available()):\r\n            return True\r\n        else:\r\n            return False\r\n    def sell_flower(self,required_quantity):\r\n        if((self.get_flower_name()==\"ORCHID\" or self.get_flower_name()==\"ROSE\" or self.get_flower_name()==\"JASMINE\") and (required_quantity<self.get_stock_available())):\r\n            self.set_stock_available(self.get_stock_available()-required_quantity)\r\n            return self.get_stock_available()\r\n        \r\n    def check_level(self):\r\n        if(self.get_flower_name()==\"ORCHID\"):\r\n            if(self.get_stock_available()<15):\r\n                return True\r\n            else:\r\n                return False\r\n        elif(self.get_flower_name()==\"ROSE\"):\r\n            if(self.get_stock_available()<25):\r\n                return True\r\n            else:\r\n                return False\r\n        elif(self.get_flower_name()==\"JASMINE\"):\r\n            if(self.get_stock_available()<40):\r\n                return True\r\n            else:\r\n                return False\r\n        else:\r\n            return False\r\n            \r\n","asgnmtId":"11","SolutionFileName":"Assign11.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 18:54:33,093 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 18:54:33,094 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 18:54:33,094 INFO  Invoking the service to verify the user solution
2019-03-06 18:54:33,094 INFO  Time before invoking service:Wed Mar 06 18:54:33 IST 2019
2019-03-06 18:54:33,094 INFO  Initialising service address for VerifySolution
2019-03-06 18:54:33,095 INFO  Time before invoking service In SUPER:Wed Mar 06 18:54:33 IST 2019
2019-03-06 18:54:34,286 INFO  Time after invoking service In SUPER:Wed Mar 06 18:54:34 IST 2019
2019-03-06 18:54:34,287 INFO  Service responded successfully with required details
2019-03-06 18:54:34,287 INFO  Time after invoking service:Wed Mar 06 18:54:34 IST 2019
2019-03-06 18:54:34,287 INFO  User solution successfully verified
2019-03-06 18:54:34,287 INFO  Processing the response from verify service
2019-03-06 18:54:34,289 INFO  Starting to parse JSON response
2019-03-06 18:54:34,290 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:54:34,290 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:54:34,290 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:54:34,290 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:54:34,290 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:54:34,290 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:54:34,290 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:54:34,290 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:54:34,290 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:54:34,290 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:54:34,292 INFO  Successfully parsed JSON response
2019-03-06 18:54:34,292 INFO  In the process of generating verify response in HTML
2019-03-06 18:54:34,360 INFO  Successfully generated verify response in HTML
2019-03-06 18:54:34,360 INFO  Successfully processed the response from service
2019-03-06 18:54:57,071 INFO  Setting request parameters for VerifySolution
2019-03-06 18:54:57,071 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 18:54:57,071 INFO  Starting to parse the user solution
2019-03-06 18:54:57,072 INFO  Displaying user solution
2019-03-06 18:54:57,104 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-11\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Flower:\r\n    def __init__(self):\r\n        self.__flower_name = None\r\n        self.__price_per_kg = None\r\n        self.__stock_available = None\r\n    def get_flower_name(self):\r\n        return self.__flower_name\r\n\r\n\r\n    def get_price_per_kg(self):\r\n        return self.__price_per_kg\r\n\r\n\r\n    def get_stock_available(self):\r\n        return self.__stock_available\r\n\r\n\r\n    def set_flower_name(self, flower_name):\r\n        self.__flower_name = flower_name.upper()\r\n\r\n\r\n    def set_price_per_kg(self, price_per_kg):\r\n        self.__price_per_kg = price_per_kg\r\n\r\n\r\n    def set_stock_available(self, stock_available):\r\n        self.__stock_available =stock_available\r\n    def validate_flower(self):\r\n        if(self.get_flower_name()==\"ORCHID\" or self.get_flower_name()==\"ROSE\" or self.get_flower_name()==\"JASMINE\"):\r\n            return True\r\n        else:\r\n            return False\r\n    def validate_stock(self,required_quantity):\r\n        if(required_quantity<=self.get_stock_available()):\r\n            return True\r\n        else:\r\n            return False\r\n    def sell_flower(self,required_quantity):\r\n        if((self.get_flower_name()==\"ORCHID\" or self.get_flower_name()==\"ROSE\" or self.get_flower_name()==\"JASMINE\") and (required_quantity<self.get_stock_available())):\r\n            self.set_stock_available(self.get_stock_available()-required_quantity)\r\n            return self.get_stock_available()\r\n        \r\n    def check_level(self):\r\n        if(self.get_flower_name()==\"ORCHID\"):\r\n            if(self.get_stock_available()<15):\r\n                return True\r\n            else:\r\n                return False\r\n        elif(self.get_flower_name()==\"ROSE\"):\r\n            if(self.get_stock_available()<25):\r\n                return True\r\n            else:\r\n                return False\r\n        elif(self.get_flower_name()==\"JASMINE\"):\r\n            if(self.get_stock_available()<40):\r\n                return True\r\n            else:\r\n                return False\r\n        else:\r\n            return False\r\n            \r\n","asgnmtId":"11","SolutionFileName":"Assign11.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 18:54:57,105 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 18:54:57,105 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 18:54:57,105 INFO  Invoking the service to verify the user solution
2019-03-06 18:54:57,105 INFO  Time before invoking service:Wed Mar 06 18:54:57 IST 2019
2019-03-06 18:54:57,105 INFO  Initialising service address for VerifySolution
2019-03-06 18:54:57,106 INFO  Time before invoking service In SUPER:Wed Mar 06 18:54:57 IST 2019
2019-03-06 18:54:58,463 INFO  Time after invoking service In SUPER:Wed Mar 06 18:54:58 IST 2019
2019-03-06 18:54:58,463 INFO  Service responded successfully with required details
2019-03-06 18:54:58,463 INFO  Time after invoking service:Wed Mar 06 18:54:58 IST 2019
2019-03-06 18:54:58,464 INFO  User solution successfully verified
2019-03-06 18:54:58,464 INFO  Processing the response from verify service
2019-03-06 18:54:58,465 INFO  Starting to parse JSON response
2019-03-06 18:54:58,466 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:54:58,466 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:54:58,466 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:54:58,466 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:54:58,466 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:54:58,466 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:54:58,466 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:54:58,466 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:54:58,466 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:54:58,466 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:54:58,468 INFO  Successfully parsed JSON response
2019-03-06 18:54:58,468 INFO  In the process of generating verify response in HTML
2019-03-06 18:54:58,536 INFO  Successfully generated verify response in HTML
2019-03-06 18:54:58,536 INFO  Successfully processed the response from service
2019-03-06 18:55:23,145 INFO  Initiating to process and prepare Input for the submit service
2019-03-06 18:55:23,146 INFO  Displaying user solution
2019-03-06 18:55:23,154 INFO  Successfully processed and prepared the input for the submit service
2019-03-06 18:55:23,154 INFO  Invoking the service to submit the user solution
2019-03-06 18:55:23,154 INFO  Initialising service address for Submit
2019-03-06 18:55:23,154 INFO  Time before invoking service In SUPER:Wed Mar 06 18:55:23 IST 2019
2019-03-06 18:55:23,608 INFO  Time after invoking service In SUPER:Wed Mar 06 18:55:23 IST 2019
2019-03-06 18:55:23,609 INFO  Service responded successfully with required details
2019-03-06 18:55:23,609 INFO  User solution successfully submitted
2019-03-06 18:55:23,609 INFO  Displaying submission status
2019-03-06 18:55:23,609 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-06 18:55:26,624 INFO  Initiating to process and prepare Input for the submit service
2019-03-06 18:55:26,625 INFO  Displaying user solution
2019-03-06 18:55:26,633 INFO  Successfully processed and prepared the input for the submit service
2019-03-06 18:55:26,633 INFO  Invoking the service to submit the user solution
2019-03-06 18:55:26,633 INFO  Initialising service address for Submit
2019-03-06 18:55:26,634 INFO  Time before invoking service In SUPER:Wed Mar 06 18:55:26 IST 2019
2019-03-06 18:55:26,786 INFO  Time after invoking service In SUPER:Wed Mar 06 18:55:26 IST 2019
2019-03-06 18:55:26,787 INFO  Service responded successfully with required details
2019-03-06 18:55:26,787 INFO  User solution successfully submitted
2019-03-06 18:55:26,787 INFO  Displaying submission status
2019-03-06 18:55:26,787 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-06 18:55:38,382 INFO  Setting request parameters for VerifySolution
2019-03-06 18:55:38,383 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 18:55:38,383 INFO  Starting to parse the user solution
2019-03-06 18:55:38,383 INFO  Displaying user solution
2019-03-06 18:55:38,421 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-10\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass CallDetail:\r\n    def __init__(self,phoneno,called_no,duration,call_type):\r\n        self.__phoneno = phoneno\r\n        self.__called_no = called_no\r\n        self.__duration=duration\r\n        self.__call_type= call_type\r\n\r\nclass Util:\r\n    def __init__(self):\r\n        self.list_of_call_objects=None\r\n    \r\n        \r\n\r\n    def parse_customer(self,list_of_call_string):\r\n        for i in range(0,len(list_of_call_string)):\r\n           self.list_of_call_objects=list_of_call_string[i]\r\n        return self.list_of_call_objects\r\n\r\ncall='9990000001,9330000001,23,STD'\r\ncall2='9990000001,9330000002,54,Local'\r\ncall3='9990000001,9330000003,6,ISD'\r\n\r\nlist_of_call_string=[call,call2,call3]\r\nUtil().parse_customer(list_of_call_string)\r\n","asgnmtId":"10","SolutionFileName":"Assign10.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 18:55:38,421 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 18:55:38,421 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 18:55:38,421 INFO  Invoking the service to verify the user solution
2019-03-06 18:55:38,422 INFO  Time before invoking service:Wed Mar 06 18:55:38 IST 2019
2019-03-06 18:55:38,422 INFO  Initialising service address for VerifySolution
2019-03-06 18:55:38,422 INFO  Time before invoking service In SUPER:Wed Mar 06 18:55:38 IST 2019
2019-03-06 18:55:39,325 INFO  Time after invoking service In SUPER:Wed Mar 06 18:55:39 IST 2019
2019-03-06 18:55:39,326 INFO  Service responded successfully with required details
2019-03-06 18:55:39,326 INFO  Time after invoking service:Wed Mar 06 18:55:39 IST 2019
2019-03-06 18:55:39,326 INFO  User solution successfully verified
2019-03-06 18:55:39,326 INFO  Processing the response from verify service
2019-03-06 18:55:39,327 INFO  Starting to parse JSON response
2019-03-06 18:55:39,328 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:55:39,328 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:55:39,328 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 18:55:39,329 INFO  Successfully parsed JSON response
2019-03-06 18:55:39,329 INFO  In the process of generating verify response in HTML
2019-03-06 18:55:39,396 INFO  Successfully generated verify response in HTML
2019-03-06 18:55:39,397 INFO  Successfully processed the response from service
2019-03-06 19:01:15,219 INFO  Initiating to process and prepare Input for the submit service
2019-03-06 19:01:15,220 INFO  Displaying user solution
2019-03-06 19:01:15,221 INFO  Submission failed : Code not verified
->Please verify your code before submitting
2019-03-06 19:01:15,225 ERROR Exception occured while submitting the user solution
2019-03-06 19:01:18,785 INFO  Setting request parameters for VerifySolution
2019-03-06 19:01:18,785 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 19:01:18,785 INFO  Starting to parse the user solution
2019-03-06 19:01:18,786 INFO  Displaying user solution
2019-03-06 19:01:18,829 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-11\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Flower:\r\n    def __init__(self):\r\n        self.__flower_name = None\r\n        self.__price_per_kg = None\r\n        self.__stock_available = None\r\n    def get_flower_name(self):\r\n        return self.__flower_name\r\n\r\n\r\n    def get_price_per_kg(self):\r\n        return self.__price_per_kg\r\n\r\n\r\n    def get_stock_available(self):\r\n        return self.__stock_available\r\n\r\n\r\n    def set_flower_name(self, flower_name):\r\n        self.__flower_name = flower_name.upper()\r\n\r\n\r\n    def set_price_per_kg(self, price_per_kg):\r\n        self.__price_per_kg = price_per_kg\r\n\r\n\r\n    def set_stock_available(self, stock_available):\r\n        self.__stock_available =stock_available\r\n    def validate_flower(self):\r\n        if(self.get_flower_name()==\"ORCHID\" or self.get_flower_name()==\"ROSE\" or self.get_flower_name()==\"JASMINE\"):\r\n            return True\r\n        else:\r\n            return False\r\n    def validate_stock(self,required_quantity):\r\n        if(required_quantity<=self.get_stock_available()):\r\n            return True\r\n        else:\r\n            return False\r\n    def sell_flower(self,required_quantity):\r\n        if((self.get_flower_name()==\"ORCHID\" or self.get_flower_name()==\"ROSE\" or self.get_flower_name()==\"JASMINE\") and (required_quantity<self.get_stock_available())):\r\n            self.set_stock_available(self.get_stock_available()-required_quantity)\r\n            return self.get_stock_available()\r\n        \r\n    def check_level(self):\r\n        if(self.get_flower_name()==\"ORCHID\"):\r\n            if(self.get_stock_available()<15):\r\n                return True\r\n            else:\r\n                return False\r\n        elif(self.get_flower_name()==\"ROSE\"):\r\n            if(self.get_stock_available()<25):\r\n                return True\r\n            else:\r\n                return False\r\n        elif(self.get_flower_name()==\"JASMINE\"):\r\n            if(self.get_stock_available()<40):\r\n                return True\r\n            else:\r\n                return False\r\n        else:\r\n            return False\r\n            \r\n","asgnmtId":"11","SolutionFileName":"Assign11.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 19:01:18,829 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 19:01:18,829 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 19:01:18,829 INFO  Invoking the service to verify the user solution
2019-03-06 19:01:18,830 INFO  Time before invoking service:Wed Mar 06 19:01:18 IST 2019
2019-03-06 19:01:18,830 INFO  Initialising service address for VerifySolution
2019-03-06 19:01:18,830 INFO  Time before invoking service In SUPER:Wed Mar 06 19:01:18 IST 2019
2019-03-06 19:01:20,186 INFO  Time after invoking service In SUPER:Wed Mar 06 19:01:20 IST 2019
2019-03-06 19:01:20,186 INFO  Service responded successfully with required details
2019-03-06 19:01:20,187 INFO  Time after invoking service:Wed Mar 06 19:01:20 IST 2019
2019-03-06 19:01:20,187 INFO  User solution successfully verified
2019-03-06 19:01:20,187 INFO  Processing the response from verify service
2019-03-06 19:01:20,189 INFO  Starting to parse JSON response
2019-03-06 19:01:20,190 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 19:01:20,190 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 19:01:20,190 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 19:01:20,190 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 19:01:20,190 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 19:01:20,191 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 19:01:20,191 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 19:01:20,191 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 19:01:20,191 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 19:01:20,191 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 19:01:20,192 INFO  Successfully parsed JSON response
2019-03-06 19:01:20,193 INFO  In the process of generating verify response in HTML
2019-03-06 19:01:20,272 INFO  Successfully generated verify response in HTML
2019-03-06 19:01:20,272 INFO  Successfully processed the response from service
2019-03-06 19:20:09,389 INFO  Setting request parameters for VerifySolution
2019-03-06 19:20:09,389 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 19:20:09,389 INFO  Starting to parse the user solution
2019-03-06 19:20:09,389 INFO  Displaying user solution
2019-03-06 19:20:09,448 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-10\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass CallDetail:\r\n    def __init__(self,phoneno,called_no,duration,call_type):\r\n        self.__phoneno = phoneno\r\n        self.__called_no = called_no\r\n        self.__duration=duration\r\n        self.__call_type= call_type\r\n\r\nclass Util:\r\n    def __init__(self):\r\n        self.list_of_call_objects=None\r\n        \r\n    def parse_customer(self,list_of_call_string):\r\n        for i in range(0,len(list_of_call_string)):\r\n           self.list_of_call_objects=list_of_call_string[i]\r\n           \r\n        return CallDetail(self.list_of_call_objects)\r\n\r\ncall='9990000001,9330000001,23,STD'\r\ncall2='9990000001,9330000002,54,Local'\r\ncall3='9990000001,9330000003,6,ISD'\r\n\r\nlist_of_call_string=[call,call2,call3]\r\nUtil().parse_customer(list_of_call_string)\r\n","asgnmtId":"10","SolutionFileName":"Assign10.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 19:20:09,449 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 19:20:09,449 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 19:20:09,449 INFO  Invoking the service to verify the user solution
2019-03-06 19:20:09,449 INFO  Time before invoking service:Wed Mar 06 19:20:09 IST 2019
2019-03-06 19:20:09,449 INFO  Initialising service address for VerifySolution
2019-03-06 19:20:09,450 INFO  Time before invoking service In SUPER:Wed Mar 06 19:20:09 IST 2019
2019-03-06 19:20:10,384 INFO  Time after invoking service In SUPER:Wed Mar 06 19:20:10 IST 2019
2019-03-06 19:20:10,384 INFO  Service responded successfully with required details
2019-03-06 19:20:10,385 INFO  Time after invoking service:Wed Mar 06 19:20:10 IST 2019
2019-03-06 19:20:10,385 INFO  User solution successfully verified
2019-03-06 19:20:10,386 INFO  Processing the response from verify service
2019-03-06 19:20:10,390 INFO  Starting to parse JSON response
2019-03-06 19:20:10,392 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 19:20:10,392 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 19:20:10,392 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 19:20:10,393 INFO  Successfully parsed JSON response
2019-03-06 19:20:10,393 INFO  In the process of generating verify response in HTML
2019-03-06 19:20:10,483 INFO  Successfully generated verify response in HTML
2019-03-06 19:20:10,483 INFO  Successfully processed the response from service
2019-03-06 19:23:02,156 INFO  Setting request parameters for VerifySolution
2019-03-06 19:23:02,156 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 19:23:02,156 INFO  Starting to parse the user solution
2019-03-06 19:23:02,157 INFO  Displaying user solution
2019-03-06 19:23:02,203 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-10\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass CallDetail:\r\n    def __init__(self,phoneno,called_no,duration,call_type):\r\n        self.__phoneno = phoneno\r\n        self.__called_no = called_no\r\n        self.__duration=duration\r\n        self.__call_type= call_type\r\n\r\nclass Util:\r\n    def __init__(self):\r\n        self.list_of_call_objects=None\r\n        \r\n    def parse_customer(self,list_of_call_string):\r\n        for i in range(0,len(list_of_call_string)):\r\n           self.list_of_call_objects=list_of_call_string[i]\r\n           \r\n        return CallDetail(self.list_of_call_objects[0],self.list_of_call_objects[1],self.list_of_call_objects[2],self.list_of_call_objects[3])\r\n\r\ncall='9990000001,9330000001,23,STD'\r\ncall2='9990000001,9330000002,54,Local'\r\ncall3='9990000001,9330000003,6,ISD'\r\n\r\nlist_of_call_string=[call,call2,call3]\r\nUtil().parse_customer(list_of_call_string)\r\n","asgnmtId":"10","SolutionFileName":"Assign10.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 19:23:02,203 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 19:23:02,203 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 19:23:02,203 INFO  Invoking the service to verify the user solution
2019-03-06 19:23:02,204 INFO  Time before invoking service:Wed Mar 06 19:23:02 IST 2019
2019-03-06 19:23:02,204 INFO  Initialising service address for VerifySolution
2019-03-06 19:23:02,205 INFO  Time before invoking service In SUPER:Wed Mar 06 19:23:02 IST 2019
2019-03-06 19:23:03,216 INFO  Time after invoking service In SUPER:Wed Mar 06 19:23:03 IST 2019
2019-03-06 19:23:03,216 INFO  Service responded successfully with required details
2019-03-06 19:23:03,216 INFO  Time after invoking service:Wed Mar 06 19:23:03 IST 2019
2019-03-06 19:23:03,216 INFO  User solution successfully verified
2019-03-06 19:23:03,217 INFO  Processing the response from verify service
2019-03-06 19:23:03,219 INFO  Starting to parse JSON response
2019-03-06 19:23:03,220 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 19:23:03,220 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 19:23:03,220 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 19:23:03,222 INFO  Successfully parsed JSON response
2019-03-06 19:23:03,222 INFO  In the process of generating verify response in HTML
2019-03-06 19:23:03,292 INFO  Successfully generated verify response in HTML
2019-03-06 19:23:03,293 INFO  Successfully processed the response from service
2019-03-06 19:31:07,767 INFO  Setting request parameters for VerifySolution
2019-03-06 19:31:07,768 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 19:31:07,768 INFO  Starting to parse the user solution
2019-03-06 19:31:07,769 INFO  Displaying user solution
2019-03-06 19:31:07,822 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-10\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass CallDetail:\r\n    def __init__(self,phoneno,called_no,duration,call_type):\r\n        self.__phoneno = phoneno\r\n        self.__called_no = called_no\r\n        self.__duration=duration\r\n        self.__call_type= call_type\r\n\r\nclass Util:\r\n    def __init__(self):\r\n        self.list_of_call_objects=None\r\n        \r\n    def parse_customer(self,list_of_call_string):\r\n        for i in range(0,len(list_of_call_string)):\r\n           self.list_of_call_objects=list_of_call_string[i]\r\n           \r\n        return\r\n\r\ncall='9990000001,9330000001,23,STD'\r\ncall2='9990000001,9330000002,54,Local'\r\ncall3='9990000001,9330000003,6,ISD'\r\n\r\nlist_of_call_string=[call,call2,call3]\r\nUtil().parse_customer(list_of_call_string)\r\n","asgnmtId":"10","SolutionFileName":"Assign10.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 19:31:07,823 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 19:31:07,823 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 19:31:07,823 INFO  Invoking the service to verify the user solution
2019-03-06 19:31:07,823 INFO  Time before invoking service:Wed Mar 06 19:31:07 IST 2019
2019-03-06 19:31:07,823 INFO  Initialising service address for VerifySolution
2019-03-06 19:31:07,824 INFO  Time before invoking service In SUPER:Wed Mar 06 19:31:07 IST 2019
2019-03-06 19:31:08,944 INFO  Time after invoking service In SUPER:Wed Mar 06 19:31:08 IST 2019
2019-03-06 19:31:08,945 INFO  Service responded successfully with required details
2019-03-06 19:31:08,945 INFO  Time after invoking service:Wed Mar 06 19:31:08 IST 2019
2019-03-06 19:31:08,945 INFO  User solution successfully verified
2019-03-06 19:31:08,945 INFO  Processing the response from verify service
2019-03-06 19:31:08,950 INFO  Starting to parse JSON response
2019-03-06 19:31:08,952 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 19:31:08,952 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 19:31:08,952 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 19:31:08,953 INFO  Successfully parsed JSON response
2019-03-06 19:31:08,953 INFO  In the process of generating verify response in HTML
2019-03-06 19:31:09,040 INFO  Successfully generated verify response in HTML
2019-03-06 19:31:09,041 INFO  Successfully processed the response from service
2019-03-06 19:53:14,214 INFO  Setting request parameters for VerifySolution
2019-03-06 19:53:14,214 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 19:53:14,214 INFO  Starting to parse the user solution
2019-03-06 19:53:14,214 INFO  Displaying user solution
2019-03-06 19:53:14,300 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-10\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass CallDetail:\r\n    def __init__(self,phoneno,called_no,duration,call_type):\r\n        self.__phoneno = phoneno\r\n        self.__called_no = called_no\r\n        self.__duration=duration\r\n        self.__call_type= call_type\r\n        \r\n\r\nclass Util:\r\n    def __init__(self):\r\n        self.list_of_call_objects=None\r\n    def parse_customer(self,list_of_call_string):\r\n        for i in range(0,len(list_of_call_string)):\r\n            self.list_of_call_objects= list_of_call_string[i]\r\n        \r\n            \r\n\r\ncall='9990000001,9330000001,23,STD'\r\ncall2='9990000001,9330000002,54,Local'\r\ncall3='9990000001,9330000003,6,ISD'\r\n\r\nlist_of_call_string=[call,call2,call3]\r\nUtil().parse_customer(list_of_call_string)\r\n","asgnmtId":"10","SolutionFileName":"Assign10.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 19:53:14,301 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 19:53:14,301 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 19:53:14,301 INFO  Invoking the service to verify the user solution
2019-03-06 19:53:14,301 INFO  Time before invoking service:Wed Mar 06 19:53:14 IST 2019
2019-03-06 19:53:14,301 INFO  Initialising service address for VerifySolution
2019-03-06 19:53:14,302 INFO  Time before invoking service In SUPER:Wed Mar 06 19:53:14 IST 2019
2019-03-06 19:53:15,306 INFO  Time after invoking service In SUPER:Wed Mar 06 19:53:15 IST 2019
2019-03-06 19:53:15,307 INFO  Service responded successfully with required details
2019-03-06 19:53:15,307 INFO  Time after invoking service:Wed Mar 06 19:53:15 IST 2019
2019-03-06 19:53:15,307 INFO  User solution successfully verified
2019-03-06 19:53:15,307 INFO  Processing the response from verify service
2019-03-06 19:53:15,311 INFO  Starting to parse JSON response
2019-03-06 19:53:15,313 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 19:53:15,313 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 19:53:15,313 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 19:53:15,315 INFO  Successfully parsed JSON response
2019-03-06 19:53:15,315 INFO  In the process of generating verify response in HTML
2019-03-06 19:53:15,399 INFO  Successfully generated verify response in HTML
2019-03-06 19:53:15,399 INFO  Successfully processed the response from service
2019-03-06 19:56:07,088 INFO  Setting request parameters for VerifySolution
2019-03-06 19:56:07,088 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 19:56:07,088 INFO  Starting to parse the user solution
2019-03-06 19:56:07,089 INFO  Displaying user solution
2019-03-06 19:56:07,125 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-10\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass CallDetail:\r\n    def __init__(self,phoneno,called_no,duration,call_type):\r\n        self.__phoneno = phoneno\r\n        self.__called_no = called_no\r\n        self.__duration=duration\r\n        self.__call_type= call_type\r\n        \r\n\r\nclass Util:\r\n    def __init__(self):\r\n        self.list_of_call_objects=None\r\n    def parse_customer(self,list_of_call_string):\r\n        for i in range(0,len(list_of_call_string)):\r\n            self.list_of_call_objects= list_of_call_string[i]\r\n        return 1\r\n            \r\n\r\ncall='9990000001,9330000001,23,STD'\r\ncall2='9990000001,9330000002,54,Local'\r\ncall3='9990000001,9330000003,6,ISD'\r\n\r\nlist_of_call_string=[call,call2,call3]\r\nUtil().parse_customer(list_of_call_string)\r\n","asgnmtId":"10","SolutionFileName":"Assign10.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 19:56:07,125 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 19:56:07,125 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 19:56:07,125 INFO  Invoking the service to verify the user solution
2019-03-06 19:56:07,126 INFO  Time before invoking service:Wed Mar 06 19:56:07 IST 2019
2019-03-06 19:56:07,126 INFO  Initialising service address for VerifySolution
2019-03-06 19:56:07,126 INFO  Time before invoking service In SUPER:Wed Mar 06 19:56:07 IST 2019
2019-03-06 19:56:08,048 INFO  Time after invoking service In SUPER:Wed Mar 06 19:56:08 IST 2019
2019-03-06 19:56:08,049 INFO  Service responded successfully with required details
2019-03-06 19:56:08,049 INFO  Time after invoking service:Wed Mar 06 19:56:08 IST 2019
2019-03-06 19:56:08,049 INFO  User solution successfully verified
2019-03-06 19:56:08,049 INFO  Processing the response from verify service
2019-03-06 19:56:08,051 INFO  Starting to parse JSON response
2019-03-06 19:56:08,052 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 19:56:08,052 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 19:56:08,053 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 19:56:08,054 INFO  Successfully parsed JSON response
2019-03-06 19:56:08,054 INFO  In the process of generating verify response in HTML
2019-03-06 19:56:08,123 INFO  Successfully generated verify response in HTML
2019-03-06 19:56:08,123 INFO  Successfully processed the response from service
2019-03-06 20:07:52,142 INFO  Setting request parameters for VerifySolution
2019-03-06 20:07:52,142 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 20:07:52,142 INFO  Starting to parse the user solution
2019-03-06 20:07:52,142 INFO  Displaying user solution
2019-03-06 20:07:52,194 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-10\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass CallDetail:\r\n    def __init__(self,phoneno,called_no,duration,call_type):\r\n        self.__phoneno = phoneno\r\n        self.__called_no = called_no\r\n        self.__duration=duration\r\n        self.__call_type= call_type\r\n        \r\n\r\nclass Util:\r\n    def __init__(self):\r\n        self.list_of_call_objects=None\r\n    def parse_customer(self,list_of_call_string):\r\n        for i in range(0,len(list_of_call_string)):\r\n            self.list_of_call_objects= list_of_call_string[i]\r\n        \r\n        return \r\n            \r\n\r\ncall='9990000001,9330000001,23,STD'\r\ncall2='9990000001,9330000002,54,Local'\r\ncall3='9990000001,9330000003,6,ISD'\r\n\r\nlist_of_call_string=[call,call2,call3]\r\nUtil().parse_customer(list_of_call_string)\r\n","asgnmtId":"10","SolutionFileName":"Assign10.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 20:07:52,194 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 20:07:52,195 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 20:07:52,195 INFO  Invoking the service to verify the user solution
2019-03-06 20:07:52,195 INFO  Time before invoking service:Wed Mar 06 20:07:52 IST 2019
2019-03-06 20:07:52,195 INFO  Initialising service address for VerifySolution
2019-03-06 20:07:52,196 INFO  Time before invoking service In SUPER:Wed Mar 06 20:07:52 IST 2019
2019-03-06 20:07:53,162 INFO  Time after invoking service In SUPER:Wed Mar 06 20:07:53 IST 2019
2019-03-06 20:07:53,162 INFO  Service responded successfully with required details
2019-03-06 20:07:53,163 INFO  Time after invoking service:Wed Mar 06 20:07:53 IST 2019
2019-03-06 20:07:53,163 INFO  User solution successfully verified
2019-03-06 20:07:53,164 INFO  Processing the response from verify service
2019-03-06 20:07:53,168 INFO  Starting to parse JSON response
2019-03-06 20:07:53,169 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:07:53,169 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:07:53,170 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:07:53,170 INFO  Successfully parsed JSON response
2019-03-06 20:07:53,170 INFO  In the process of generating verify response in HTML
2019-03-06 20:07:53,249 INFO  Successfully generated verify response in HTML
2019-03-06 20:07:53,249 INFO  Successfully processed the response from service
2019-03-06 20:11:15,908 INFO  Setting request parameters for VerifySolution
2019-03-06 20:11:15,908 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 20:11:15,908 INFO  Starting to parse the user solution
2019-03-06 20:11:15,908 INFO  Displaying user solution
2019-03-06 20:11:15,953 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-10\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass CallDetail:\r\n    def __init__(self,phoneno,called_no,duration,call_type):\r\n        self.__phoneno = phoneno\r\n        self.__called_no = called_no\r\n        self.__duration=duration\r\n        self.__call_type= call_type\r\n        \r\n\r\nclass Util:\r\n    def __init__(self):\r\n        self.list_of_call_objects=None\r\n    def parse_customer(self,list_of_call_string):\r\n        self.list_of_call_objects=[]\r\n        for i in list_of_call_string:\r\n            list1=i.split(\",\")\r\n            self.list_of_call_objects.append(CallDetail(list1[0],list1[1],list1[2],list1[3]))\r\n\r\ncall='9990000001,9330000001,23,STD'\r\ncall2='9990000001,9330000002,54,Local'\r\ncall3='9990000001,9330000003,6,ISD'\r\n\r\nlist_of_call_string=[call,call2,call3]\r\nUtil().parse_customer(list_of_call_string)\r\n","asgnmtId":"10","SolutionFileName":"Assign10.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 20:11:15,953 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 20:11:15,953 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 20:11:15,953 INFO  Invoking the service to verify the user solution
2019-03-06 20:11:15,954 INFO  Time before invoking service:Wed Mar 06 20:11:15 IST 2019
2019-03-06 20:11:15,954 INFO  Initialising service address for VerifySolution
2019-03-06 20:11:15,954 INFO  Time before invoking service In SUPER:Wed Mar 06 20:11:15 IST 2019
2019-03-06 20:11:16,901 INFO  Time after invoking service In SUPER:Wed Mar 06 20:11:16 IST 2019
2019-03-06 20:11:16,901 INFO  Service responded successfully with required details
2019-03-06 20:11:16,901 INFO  Time after invoking service:Wed Mar 06 20:11:16 IST 2019
2019-03-06 20:11:16,902 INFO  User solution successfully verified
2019-03-06 20:11:16,902 INFO  Processing the response from verify service
2019-03-06 20:11:16,905 INFO  Starting to parse JSON response
2019-03-06 20:11:16,906 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:11:16,906 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:11:16,906 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:11:16,906 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:11:16,906 INFO  Successfully parsed JSON response
2019-03-06 20:11:16,907 INFO  In the process of generating verify response in HTML
2019-03-06 20:11:17,012 INFO  Successfully generated verify response in HTML
2019-03-06 20:11:17,012 INFO  Successfully processed the response from service
2019-03-06 20:17:25,225 INFO  Initiating to process and prepare Input for the submit service
2019-03-06 20:17:25,225 INFO  Displaying user solution
2019-03-06 20:17:25,235 INFO  Successfully processed and prepared the input for the submit service
2019-03-06 20:17:25,236 INFO  Invoking the service to submit the user solution
2019-03-06 20:17:25,236 INFO  Initialising service address for Submit
2019-03-06 20:17:25,237 INFO  Time before invoking service In SUPER:Wed Mar 06 20:17:25 IST 2019
2019-03-06 20:17:25,609 INFO  Time after invoking service In SUPER:Wed Mar 06 20:17:25 IST 2019
2019-03-06 20:17:25,609 INFO  Service responded successfully with required details
2019-03-06 20:17:25,610 INFO  User solution successfully submitted
2019-03-06 20:17:25,610 INFO  Displaying submission status
2019-03-06 20:17:25,610 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-06 20:17:28,180 INFO  Setting request parameters for VerifySolution
2019-03-06 20:17:28,180 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 20:17:28,180 INFO  Starting to parse the user solution
2019-03-06 20:17:28,181 INFO  Displaying user solution
2019-03-06 20:17:28,231 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-10\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass CallDetail:\r\n    def __init__(self,phoneno,called_no,duration,call_type):\r\n        self.__phoneno = phoneno\r\n        self.__called_no = called_no\r\n        self.__duration=duration\r\n        self.__call_type= call_type\r\n        \r\n\r\nclass Util:\r\n    def __init__(self):\r\n        self.list_of_call_objects=None\r\n    def parse_customer(self,list_of_call_string):\r\n        self.list_of_call_objects=[]\r\n        for i in list_of_call_string:\r\n            list1=i.split(\",\")\r\n            self.list_of_call_objects.append(CallDetail(list1[0],list1[1],list1[2],list1[3]))\r\n\r\ncall='9990000001,9330000001,23,STD'\r\ncall2='9990000001,9330000002,54,Local'\r\ncall3='9990000001,9330000003,6,ISD'\r\n\r\nlist_of_call_string=[call,call2,call3]\r\nUtil().parse_customer(list_of_call_string)\r\n","asgnmtId":"10","SolutionFileName":"Assign10.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 20:17:28,232 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 20:17:28,233 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 20:17:28,233 INFO  Invoking the service to verify the user solution
2019-03-06 20:17:28,234 INFO  Time before invoking service:Wed Mar 06 20:17:28 IST 2019
2019-03-06 20:17:28,234 INFO  Initialising service address for VerifySolution
2019-03-06 20:17:28,234 INFO  Time before invoking service In SUPER:Wed Mar 06 20:17:28 IST 2019
2019-03-06 20:17:29,033 INFO  Time after invoking service In SUPER:Wed Mar 06 20:17:29 IST 2019
2019-03-06 20:17:29,033 INFO  Service responded successfully with required details
2019-03-06 20:17:29,033 INFO  Time after invoking service:Wed Mar 06 20:17:29 IST 2019
2019-03-06 20:17:29,033 INFO  User solution successfully verified
2019-03-06 20:17:29,033 INFO  Processing the response from verify service
2019-03-06 20:17:29,036 INFO  Starting to parse JSON response
2019-03-06 20:17:29,037 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:17:29,037 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:17:29,037 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:17:29,037 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:17:29,038 INFO  Successfully parsed JSON response
2019-03-06 20:17:29,038 INFO  In the process of generating verify response in HTML
2019-03-06 20:17:29,102 INFO  Successfully generated verify response in HTML
2019-03-06 20:17:29,102 INFO  Successfully processed the response from service
2019-03-06 20:17:44,132 INFO  Setting request parameters for VerifySolution
2019-03-06 20:17:44,132 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 20:17:44,132 INFO  Starting to parse the user solution
2019-03-06 20:17:44,133 INFO  Displaying user solution
2019-03-06 20:17:44,176 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-10\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass CallDetail:\r\n    def __init__(self,phoneno,called_no,duration,call_type):\r\n        self.__phoneno = phoneno\r\n        self.__called_no = called_no\r\n        self.__duration=duration\r\n        self.__call_type= call_type\r\n        \r\n\r\nclass Util:\r\n    def __init__(self):\r\n        self.list_of_call_objects=None\r\n    def parse_customer(self,list_of_call_string):\r\n        self.list_of_call_objects=[]\r\n        for i in list_of_call_string:\r\n            list1=i.split(\",\")\r\n            self.list_of_call_objects.append(CallDetail(list1[0],\r\n                                                        list1[1],list1[2],list1[3]))\r\n\r\ncall='9990000001,9330000001,23,STD'\r\ncall2='9990000001,9330000002,54,Local'\r\ncall3='9990000001,9330000003,6,ISD'\r\n\r\nlist_of_call_string=[call,call2,call3]\r\nUtil().parse_customer(list_of_call_string)\r\n","asgnmtId":"10","SolutionFileName":"Assign10.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 20:17:44,176 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 20:17:44,176 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 20:17:44,176 INFO  Invoking the service to verify the user solution
2019-03-06 20:17:44,177 INFO  Time before invoking service:Wed Mar 06 20:17:44 IST 2019
2019-03-06 20:17:44,177 INFO  Initialising service address for VerifySolution
2019-03-06 20:17:44,177 INFO  Time before invoking service In SUPER:Wed Mar 06 20:17:44 IST 2019
2019-03-06 20:17:45,036 INFO  Time after invoking service In SUPER:Wed Mar 06 20:17:45 IST 2019
2019-03-06 20:17:45,036 INFO  Service responded successfully with required details
2019-03-06 20:17:45,036 INFO  Time after invoking service:Wed Mar 06 20:17:45 IST 2019
2019-03-06 20:17:45,036 INFO  User solution successfully verified
2019-03-06 20:17:45,036 INFO  Processing the response from verify service
2019-03-06 20:17:45,040 INFO  Starting to parse JSON response
2019-03-06 20:17:45,041 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:17:45,042 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:17:45,042 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:17:45,042 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:17:45,043 INFO  Successfully parsed JSON response
2019-03-06 20:17:45,043 INFO  In the process of generating verify response in HTML
2019-03-06 20:17:45,106 INFO  Successfully generated verify response in HTML
2019-03-06 20:17:45,106 INFO  Successfully processed the response from service
2019-03-06 20:17:51,497 INFO  Setting request parameters for VerifySolution
2019-03-06 20:17:51,497 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 20:17:51,497 INFO  Starting to parse the user solution
2019-03-06 20:17:51,498 INFO  Displaying user solution
2019-03-06 20:17:51,542 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-10\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass CallDetail:\r\n    def __init__(self,phoneno,called_no,duration,call_type):\r\n        self.__phoneno = phoneno\r\n        self.__called_no = called_no\r\n        self.__duration=duration\r\n        self.__call_type= call_type\r\n        \r\n\r\nclass Util:\r\n    def __init__(self):\r\n        self.list_of_call_objects=None\r\n    def parse_customer(self,list_of_call_string):\r\n        self.list_of_call_objects=[]\r\n        for i in list_of_call_string:\r\n            list1=i.split(\",\")\r\n            self.list_of_call_objects.append(CallDetail(list1[0],\r\n                                                        list1[1],list1[2],list1[3]))\r\n\r\ncall='9990000001,9330000001,23,STD'\r\ncall2='9990000001,9330000002,54,Local'\r\ncall3='9990000001,9330000003,6,ISD'\r\n\r\nlist_of_call_string=[call,call2,call3]\r\nUtil().parse_customer(list_of_call_string)\r\n","asgnmtId":"10","SolutionFileName":"Assign10.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 20:17:51,542 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 20:17:51,542 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 20:17:51,542 INFO  Invoking the service to verify the user solution
2019-03-06 20:17:51,543 INFO  Time before invoking service:Wed Mar 06 20:17:51 IST 2019
2019-03-06 20:17:51,543 INFO  Initialising service address for VerifySolution
2019-03-06 20:17:51,543 INFO  Time before invoking service In SUPER:Wed Mar 06 20:17:51 IST 2019
2019-03-06 20:17:52,401 INFO  Time after invoking service In SUPER:Wed Mar 06 20:17:52 IST 2019
2019-03-06 20:17:52,401 INFO  Service responded successfully with required details
2019-03-06 20:17:52,402 INFO  Time after invoking service:Wed Mar 06 20:17:52 IST 2019
2019-03-06 20:17:52,402 INFO  User solution successfully verified
2019-03-06 20:17:52,402 INFO  Processing the response from verify service
2019-03-06 20:17:52,404 INFO  Starting to parse JSON response
2019-03-06 20:17:52,404 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:17:52,405 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:17:52,405 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:17:52,405 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:17:52,406 INFO  Successfully parsed JSON response
2019-03-06 20:17:52,406 INFO  In the process of generating verify response in HTML
2019-03-06 20:17:52,467 INFO  Successfully generated verify response in HTML
2019-03-06 20:17:52,467 INFO  Successfully processed the response from service
2019-03-06 20:18:04,895 INFO  Setting request parameters for VerifySolution
2019-03-06 20:18:04,895 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 20:18:04,895 INFO  Starting to parse the user solution
2019-03-06 20:18:04,896 INFO  Displaying user solution
2019-03-06 20:18:04,941 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-10\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass CallDetail:\r\n    def __init__(self,phoneno,called_no,duration,call_type):\r\n        self.__phoneno = phoneno\r\n        self.__called_no = called_no\r\n        self.__duration=duration\r\n        self.__call_type= call_type\r\n        \r\n\r\nclass Util:\r\n    def __init__(self):\r\n        self.list_of_call_objects=None\r\n    def parse_customer(self,list_of_call_string):\r\n        self.list_of_call_objects=[]\r\n        for i in list_of_call_string:\r\n            list1=i.split(\",\")\r\n            self.list_of_call_objects.append(CallDetail(list1[0],\r\n                    list1[1],list1[2],list1[3]))\r\n\r\ncall='9990000001,9330000001,23,STD'\r\ncall2='9990000001,9330000002,54,Local'\r\ncall3='9990000001,9330000003,6,ISD'\r\n\r\nlist_of_call_string=[call,call2,call3]\r\nUtil().parse_customer(list_of_call_string)\r\n","asgnmtId":"10","SolutionFileName":"Assign10.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 20:18:04,941 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 20:18:04,942 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 20:18:04,942 INFO  Invoking the service to verify the user solution
2019-03-06 20:18:04,942 INFO  Time before invoking service:Wed Mar 06 20:18:04 IST 2019
2019-03-06 20:18:04,942 INFO  Initialising service address for VerifySolution
2019-03-06 20:18:04,943 INFO  Time before invoking service In SUPER:Wed Mar 06 20:18:04 IST 2019
2019-03-06 20:18:05,810 INFO  Time after invoking service In SUPER:Wed Mar 06 20:18:05 IST 2019
2019-03-06 20:18:05,811 INFO  Service responded successfully with required details
2019-03-06 20:18:05,811 INFO  Time after invoking service:Wed Mar 06 20:18:05 IST 2019
2019-03-06 20:18:05,811 INFO  User solution successfully verified
2019-03-06 20:18:05,812 INFO  Processing the response from verify service
2019-03-06 20:18:05,814 INFO  Starting to parse JSON response
2019-03-06 20:18:05,816 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:18:05,816 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:18:05,816 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:18:05,816 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:18:05,818 INFO  Successfully parsed JSON response
2019-03-06 20:18:05,818 INFO  In the process of generating verify response in HTML
2019-03-06 20:18:05,894 INFO  Successfully generated verify response in HTML
2019-03-06 20:18:05,894 INFO  Successfully processed the response from service
2019-03-06 20:18:13,101 INFO  Initiating to process and prepare Input for the submit service
2019-03-06 20:18:13,101 INFO  Displaying user solution
2019-03-06 20:18:13,110 INFO  Successfully processed and prepared the input for the submit service
2019-03-06 20:18:13,110 INFO  Invoking the service to submit the user solution
2019-03-06 20:18:13,110 INFO  Initialising service address for Submit
2019-03-06 20:18:13,111 INFO  Time before invoking service In SUPER:Wed Mar 06 20:18:13 IST 2019
2019-03-06 20:18:13,367 INFO  Time after invoking service In SUPER:Wed Mar 06 20:18:13 IST 2019
2019-03-06 20:18:13,368 INFO  Service responded successfully with required details
2019-03-06 20:18:13,368 INFO  User solution successfully submitted
2019-03-06 20:18:13,368 INFO  Displaying submission status
2019-03-06 20:18:13,368 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-06 20:18:49,180 INFO  Setting request parameters for VerifySolution
2019-03-06 20:18:49,180 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 20:18:49,180 INFO  Starting to parse the user solution
2019-03-06 20:18:49,180 INFO  Displaying user solution
2019-03-06 20:18:49,220 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-11\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Flower:\r\n    def __init__(self):\r\n        self.__flower_name = None\r\n        self.__price_per_kg = None\r\n        self.__stock_available = None\r\n    def get_flower_name(self):\r\n        return self.__flower_name\r\n\r\n\r\n    def get_price_per_kg(self):\r\n        return self.__price_per_kg\r\n\r\n\r\n    def get_stock_available(self):\r\n        return self.__stock_available\r\n\r\n\r\n    def set_flower_name(self, flower_name):\r\n        self.__flower_name = flower_name.upper()\r\n\r\n\r\n    def set_price_per_kg(self, price_per_kg):\r\n        self.__price_per_kg = price_per_kg\r\n\r\n\r\n    def set_stock_available(self, stock_available):\r\n        self.__stock_available =stock_available\r\n    def validate_flower(self):\r\n        if(self.get_flower_name()==\"ORCHID\" or self.get_flower_name()==\"ROSE\" or self.get_flower_name()==\"JASMINE\"):\r\n            return True\r\n        else:\r\n            return False\r\n    def validate_stock(self,required_quantity):\r\n        if(required_quantity<=self.get_stock_available()):\r\n            return True\r\n        else:\r\n            return False\r\n    def sell_flower(self,required_quantity):\r\n        if((self.get_flower_name()==\"ORCHID\" or self.get_flower_name()==\"ROSE\" \r\n            or self.get_flower_name()==\"JASMINE\") and (required_quantity<self.get_stock_available())):\r\n            self.set_stock_available(self.get_stock_available()-required_quantity)\r\n            return self.get_stock_available()\r\n        \r\n    def check_level(self):\r\n        if(self.get_flower_name()==\"ORCHID\"):\r\n            if(self.get_stock_available()<15):\r\n                return True\r\n            else:\r\n                return False\r\n        elif(self.get_flower_name()==\"ROSE\"):\r\n            if(self.get_stock_available()<25):\r\n                return True\r\n            else:\r\n                return False\r\n        elif(self.get_flower_name()==\"JASMINE\"):\r\n            if(self.get_stock_available()<40):\r\n                return True\r\n            else:\r\n                return False\r\n        else:\r\n            return False\r\n            \r\n","asgnmtId":"11","SolutionFileName":"Assign11.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 20:18:49,221 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 20:18:49,221 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 20:18:49,221 INFO  Invoking the service to verify the user solution
2019-03-06 20:18:49,221 INFO  Time before invoking service:Wed Mar 06 20:18:49 IST 2019
2019-03-06 20:18:49,221 INFO  Initialising service address for VerifySolution
2019-03-06 20:18:49,221 INFO  Time before invoking service In SUPER:Wed Mar 06 20:18:49 IST 2019
2019-03-06 20:18:50,343 INFO  Time after invoking service In SUPER:Wed Mar 06 20:18:50 IST 2019
2019-03-06 20:18:50,343 INFO  Service responded successfully with required details
2019-03-06 20:18:50,344 INFO  Time after invoking service:Wed Mar 06 20:18:50 IST 2019
2019-03-06 20:18:50,344 INFO  User solution successfully verified
2019-03-06 20:18:50,344 INFO  Processing the response from verify service
2019-03-06 20:18:50,345 INFO  Starting to parse JSON response
2019-03-06 20:18:50,346 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:18:50,346 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:18:50,346 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:18:50,346 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:18:50,346 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:18:50,346 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:18:50,346 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:18:50,347 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:18:50,347 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:18:50,347 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:18:50,348 INFO  Successfully parsed JSON response
2019-03-06 20:18:50,348 INFO  In the process of generating verify response in HTML
2019-03-06 20:18:50,414 INFO  Successfully generated verify response in HTML
2019-03-06 20:18:50,414 INFO  Successfully processed the response from service
2019-03-06 20:19:28,297 INFO  Setting request parameters for VerifySolution
2019-03-06 20:19:28,297 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 20:19:28,297 INFO  Starting to parse the user solution
2019-03-06 20:19:28,298 INFO  Displaying user solution
2019-03-06 20:19:28,345 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-11\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Flower:\r\n    def __init__(self):\r\n        self.__flower_name = None\r\n        self.__price_per_kg = None\r\n        self.__stock_available = None\r\n    def get_flower_name(self):\r\n        return self.__flower_name\r\n\r\n\r\n    def get_price_per_kg(self):\r\n        return self.__price_per_kg\r\n\r\n\r\n    def get_stock_available(self):\r\n        return self.__stock_available\r\n\r\n\r\n    def set_flower_name(self, flower_name):\r\n        self.__flower_name = flower_name.upper()\r\n\r\n\r\n    def set_price_per_kg(self, price_per_kg):\r\n        self.__price_per_kg = price_per_kg\r\n\r\n\r\n    def set_stock_available(self, stock_available):\r\n        self.__stock_available =stock_available\r\n    def validate_flower(self):\r\n        if(self.get_flower_name()==\"ORCHID\" or \r\n           self.get_flower_name()==\"ROSE\" or \r\n           self.get_flower_name()==\"JASMINE\"):\r\n            return True\r\n        else:\r\n            return False\r\n    def validate_stock(self,required_quantity):\r\n        if(required_quantity<=self.get_stock_available()):\r\n            return True\r\n        else:\r\n            return False\r\n    def sell_flower(self,required_quantity):\r\n        if((self.get_flower_name()==\"ORCHID\" or self.get_flower_name()==\"ROSE\" \r\n            or self.get_flower_name()==\"JASMINE\") and \r\n           (required_quantity<self.get_stock_available())):\r\n            self.set_stock_available(self.get_stock_available()-required_quantity)\r\n            return self.get_stock_available()\r\n        \r\n    def check_level(self):\r\n        if(self.get_flower_name()==\"ORCHID\"):\r\n            if(self.get_stock_available()<15):\r\n                return True\r\n            else:\r\n                return False\r\n        elif(self.get_flower_name()==\"ROSE\"):\r\n            if(self.get_stock_available()<25):\r\n                return True\r\n            else:\r\n                return False\r\n        elif(self.get_flower_name()==\"JASMINE\"):\r\n            if(self.get_stock_available()<40):\r\n                return True\r\n            else:\r\n                return False\r\n        else:\r\n            return False\r\n            \r\n","asgnmtId":"11","SolutionFileName":"Assign11.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 20:19:28,346 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 20:19:28,346 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 20:19:28,346 INFO  Invoking the service to verify the user solution
2019-03-06 20:19:28,347 INFO  Time before invoking service:Wed Mar 06 20:19:28 IST 2019
2019-03-06 20:19:28,347 INFO  Initialising service address for VerifySolution
2019-03-06 20:19:28,348 INFO  Time before invoking service In SUPER:Wed Mar 06 20:19:28 IST 2019
2019-03-06 20:19:29,631 INFO  Time after invoking service In SUPER:Wed Mar 06 20:19:29 IST 2019
2019-03-06 20:19:29,631 INFO  Service responded successfully with required details
2019-03-06 20:19:29,631 INFO  Time after invoking service:Wed Mar 06 20:19:29 IST 2019
2019-03-06 20:19:29,632 INFO  User solution successfully verified
2019-03-06 20:19:29,632 INFO  Processing the response from verify service
2019-03-06 20:19:29,634 INFO  Starting to parse JSON response
2019-03-06 20:19:29,635 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:19:29,635 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:19:29,635 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:19:29,635 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:19:29,635 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:19:29,635 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:19:29,635 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:19:29,635 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:19:29,635 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:19:29,635 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:19:29,636 INFO  Successfully parsed JSON response
2019-03-06 20:19:29,636 INFO  In the process of generating verify response in HTML
2019-03-06 20:19:29,700 INFO  Successfully generated verify response in HTML
2019-03-06 20:19:29,700 INFO  Successfully processed the response from service
2019-03-06 20:19:51,889 INFO  Setting request parameters for VerifySolution
2019-03-06 20:19:51,889 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 20:19:51,889 INFO  Starting to parse the user solution
2019-03-06 20:19:51,889 INFO  Displaying user solution
2019-03-06 20:19:51,924 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-11\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Flower:\r\n    def __init__(self):\r\n        self.__flower_name = None\r\n        self.__price_per_kg = None\r\n        self.__stock_available = None\r\n    def get_flower_name(self):\r\n        return self.__flower_name\r\n\r\n\r\n    def get_price_per_kg(self):\r\n        return self.__price_per_kg\r\n\r\n\r\n    def get_stock_available(self):\r\n        return self.__stock_available\r\n\r\n\r\n    def set_flower_name(self, flower_name):\r\n        self.__flower_name = flower_name.upper()\r\n\r\n\r\n    def set_price_per_kg(self, price_per_kg):\r\n        self.__price_per_kg = price_per_kg\r\n\r\n\r\n    def set_stock_available(self, stock_available):\r\n        self.__stock_available =stock_available\r\n    def validate_flower(self):\r\n        if(self.get_flower_name()==\"ORCHID\" or \r\n           self.get_flower_name()==\"ROSE\" or \r\n           self.get_flower_name()==\"JASMINE\"):\r\n            return True\r\n        else:\r\n            return False\r\n    def validate_stock(self,required_quantity):\r\n        if(required_quantity<=self.get_stock_available()):\r\n            return True\r\n        else:\r\n            return False\r\n    def sell_flower(self,required_quantity):\r\n        if((self.get_flower_name()==\"ORCHID\" or self.get_flower_name()==\"ROSE\" \r\n            or self.get_flower_name()==\"JASMINE\") and \r\n           (required_quantity<self.get_stock_available())):\r\n            self.set_stock_available(self.get_stock_available()-required_quantity)\r\n            return self.get_stock_available()\r\n        \r\n    def check_level(self):\r\n        if(self.get_flower_name()==\"ORCHID\"):\r\n            if(self.get_stock_available()<15):\r\n                return True\r\n            else:\r\n                return False\r\n        elif(self.get_flower_name()==\"ROSE\"):\r\n            if(self.get_stock_available()<25):\r\n                return True\r\n            else:\r\n                return False\r\n        elif(self.get_flower_name()==\"JASMINE\"):\r\n            if(self.get_stock_available()<40):\r\n                return True\r\n            else:\r\n                return False\r\n        else:\r\n            return False\r\n            \r\n","asgnmtId":"11","SolutionFileName":"Assign11.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 20:19:51,924 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 20:19:51,924 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 20:19:51,925 INFO  Invoking the service to verify the user solution
2019-03-06 20:19:51,925 INFO  Time before invoking service:Wed Mar 06 20:19:51 IST 2019
2019-03-06 20:19:51,925 INFO  Initialising service address for VerifySolution
2019-03-06 20:19:51,925 INFO  Time before invoking service In SUPER:Wed Mar 06 20:19:51 IST 2019
2019-03-06 20:19:53,100 INFO  Time after invoking service In SUPER:Wed Mar 06 20:19:53 IST 2019
2019-03-06 20:19:53,101 INFO  Service responded successfully with required details
2019-03-06 20:19:53,101 INFO  Time after invoking service:Wed Mar 06 20:19:53 IST 2019
2019-03-06 20:19:53,101 INFO  User solution successfully verified
2019-03-06 20:19:53,102 INFO  Processing the response from verify service
2019-03-06 20:19:53,103 INFO  Starting to parse JSON response
2019-03-06 20:19:53,104 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:19:53,104 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:19:53,104 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:19:53,104 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:19:53,104 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:19:53,104 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:19:53,104 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:19:53,104 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:19:53,104 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:19:53,104 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:19:53,105 INFO  Successfully parsed JSON response
2019-03-06 20:19:53,106 INFO  In the process of generating verify response in HTML
2019-03-06 20:19:53,171 INFO  Successfully generated verify response in HTML
2019-03-06 20:19:53,172 INFO  Successfully processed the response from service
2019-03-06 20:20:19,964 INFO  Setting request parameters for VerifySolution
2019-03-06 20:20:19,965 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 20:20:19,965 INFO  Starting to parse the user solution
2019-03-06 20:20:19,965 INFO  Displaying user solution
2019-03-06 20:20:20,016 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-11\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Flower:\r\n    def __init__(self):\r\n        self.__flower_name = None\r\n        self.__price_per_kg = None\r\n        self.__stock_available = None\r\n    def get_flower_name(self):\r\n        return self.__flower_name\r\n\r\n\r\n    def get_price_per_kg(self):\r\n        return self.__price_per_kg\r\n\r\n\r\n    def get_stock_available(self):\r\n        return self.__stock_available\r\n\r\n\r\n    def set_flower_name(self, flower_name):\r\n        self.__flower_name = flower_name.upper()\r\n\r\n\r\n    def set_price_per_kg(self, price_per_kg):\r\n        self.__price_per_kg = price_per_kg\r\n\r\n\r\n    def set_stock_available(self, stock_available):\r\n        self.__stock_available =stock_available\r\n    def validate_flower(self):\r\n        if(self.get_flower_name()==\"ORCHID\" or \r\n           self.get_flower_name()==\"ROSE\" or \r\n           self.get_flower_name()==\"JASMINE\"):\r\n            return True\r\n        else:\r\n            return False\r\n    def validate_stock(self,required_quantity):\r\n        if(required_quantity<=self.get_stock_available()):\r\n            return True\r\n        else:\r\n            return False\r\n    def sell_flower(self,required_quantity):\r\n        if((self.get_flower_name()==\"ORCHID\" or self.get_flower_name()==\"ROSE\" \r\n            or self.get_flower_name()==\"JASMINE\") and \r\n           (required_quantity<self.get_stock_available())):\r\n            self.set_stock_available(\r\n            self.get_stock_available()-required_quantity)\r\n            return self.get_stock_available()\r\n        \r\n    def check_level(self):\r\n        if(self.get_flower_name()==\"ORCHID\"):\r\n            if(self.get_stock_available()<15):\r\n                return True\r\n            else:\r\n                return False\r\n        elif(self.get_flower_name()==\"ROSE\"):\r\n            if(self.get_stock_available()<25):\r\n                return True\r\n            else:\r\n                return False\r\n        elif(self.get_flower_name()==\"JASMINE\"):\r\n            if(self.get_stock_available()<40):\r\n                return True\r\n            else:\r\n                return False\r\n        else:\r\n            return False\r\n            \r\n","asgnmtId":"11","SolutionFileName":"Assign11.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 20:20:20,017 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 20:20:20,017 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 20:20:20,017 INFO  Invoking the service to verify the user solution
2019-03-06 20:20:20,017 INFO  Time before invoking service:Wed Mar 06 20:20:20 IST 2019
2019-03-06 20:20:20,017 INFO  Initialising service address for VerifySolution
2019-03-06 20:20:20,019 INFO  Time before invoking service In SUPER:Wed Mar 06 20:20:20 IST 2019
2019-03-06 20:20:21,176 INFO  Time after invoking service In SUPER:Wed Mar 06 20:20:21 IST 2019
2019-03-06 20:20:21,176 INFO  Service responded successfully with required details
2019-03-06 20:20:21,176 INFO  Time after invoking service:Wed Mar 06 20:20:21 IST 2019
2019-03-06 20:20:21,177 INFO  User solution successfully verified
2019-03-06 20:20:21,177 INFO  Processing the response from verify service
2019-03-06 20:20:21,179 INFO  Starting to parse JSON response
2019-03-06 20:20:21,180 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:20:21,180 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:20:21,180 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:20:21,180 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:20:21,180 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:20:21,180 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:20:21,180 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:20:21,180 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:20:21,180 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:20:21,180 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:20:21,181 INFO  Successfully parsed JSON response
2019-03-06 20:20:21,181 INFO  In the process of generating verify response in HTML
2019-03-06 20:20:21,254 INFO  Successfully generated verify response in HTML
2019-03-06 20:20:21,254 INFO  Successfully processed the response from service
2019-03-06 20:20:41,624 INFO  Initiating to process and prepare Input for the submit service
2019-03-06 20:20:41,625 INFO  Displaying user solution
2019-03-06 20:20:41,633 INFO  Successfully processed and prepared the input for the submit service
2019-03-06 20:20:41,633 INFO  Invoking the service to submit the user solution
2019-03-06 20:20:41,633 INFO  Initialising service address for Submit
2019-03-06 20:20:41,634 INFO  Time before invoking service In SUPER:Wed Mar 06 20:20:41 IST 2019
2019-03-06 20:20:41,851 INFO  Time after invoking service In SUPER:Wed Mar 06 20:20:41 IST 2019
2019-03-06 20:20:41,851 INFO  Service responded successfully with required details
2019-03-06 20:20:41,851 INFO  User solution successfully submitted
2019-03-06 20:20:41,851 INFO  Displaying submission status
2019-03-06 20:20:41,851 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-06 20:20:44,815 INFO  Initiating to process and prepare Input for the submit service
2019-03-06 20:20:44,816 INFO  Displaying user solution
2019-03-06 20:20:44,824 INFO  Successfully processed and prepared the input for the submit service
2019-03-06 20:20:44,824 INFO  Invoking the service to submit the user solution
2019-03-06 20:20:44,824 INFO  Initialising service address for Submit
2019-03-06 20:20:44,825 INFO  Time before invoking service In SUPER:Wed Mar 06 20:20:44 IST 2019
2019-03-06 20:20:44,910 INFO  Time after invoking service In SUPER:Wed Mar 06 20:20:44 IST 2019
2019-03-06 20:20:44,910 INFO  Service responded successfully with required details
2019-03-06 20:20:44,910 INFO  User solution successfully submitted
2019-03-06 20:20:44,910 INFO  Displaying submission status
2019-03-06 20:20:44,910 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-06 20:30:05,822 INFO  Setting request parameters for VerifySolution
2019-03-06 20:30:05,822 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 20:30:05,823 INFO  Starting to parse the user solution
2019-03-06 20:30:05,823 INFO  Displaying user solution
2019-03-06 20:30:05,879 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-12\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Bill:\r\n    def __init__(self):\r\n        self.__bill_id=None\r\n        self.__patient_name = None\r\n        self.__bill_amount = None\r\n","asgnmtId":"12","SolutionFileName":"Assign12.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 20:30:05,879 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 20:30:05,879 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 20:30:05,879 INFO  Invoking the service to verify the user solution
2019-03-06 20:30:05,880 INFO  Time before invoking service:Wed Mar 06 20:30:05 IST 2019
2019-03-06 20:30:05,880 INFO  Initialising service address for VerifySolution
2019-03-06 20:30:05,880 INFO  Time before invoking service In SUPER:Wed Mar 06 20:30:05 IST 2019
2019-03-06 20:30:06,799 INFO  Time after invoking service In SUPER:Wed Mar 06 20:30:06 IST 2019
2019-03-06 20:30:06,799 INFO  Service responded successfully with required details
2019-03-06 20:30:06,799 INFO  Time after invoking service:Wed Mar 06 20:30:06 IST 2019
2019-03-06 20:30:06,800 INFO  User solution successfully verified
2019-03-06 20:30:06,800 INFO  Processing the response from verify service
2019-03-06 20:30:06,804 INFO  Starting to parse JSON response
2019-03-06 20:30:06,805 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:30:06,805 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:30:06,807 INFO  Successfully parsed JSON response
2019-03-06 20:30:06,807 INFO  In the process of generating verify response in HTML
2019-03-06 20:30:06,886 INFO  Successfully generated verify response in HTML
2019-03-06 20:30:06,887 INFO  Successfully processed the response from service
2019-03-06 20:36:24,023 INFO  Setting request parameters for VerifySolution
2019-03-06 20:36:24,023 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 20:36:24,023 INFO  Starting to parse the user solution
2019-03-06 20:36:24,023 INFO  Displaying user solution
2019-03-06 20:36:24,065 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-12\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Bill:\r\n    def __init__(self,bill_id,patient_name):\r\n        self.__bill_id=bill_id\r\n        self.__patient_name =patient_name\r\n        self.__bill_amount = None\r\n\r\n    def get_bill_id(self):\r\n        return self.__bill_id\r\n\r\n\r\n    def get_patient_name(self):\r\n        return self.__patient_name\r\n\r\n\r\n    def get_bill_amount(self):\r\n        return self.__bill_amount\r\n\r\n   \r\n        \r\n","asgnmtId":"12","SolutionFileName":"Assign12.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 20:36:24,065 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 20:36:24,065 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 20:36:24,065 INFO  Invoking the service to verify the user solution
2019-03-06 20:36:24,066 INFO  Time before invoking service:Wed Mar 06 20:36:24 IST 2019
2019-03-06 20:36:24,066 INFO  Initialising service address for VerifySolution
2019-03-06 20:36:24,066 INFO  Time before invoking service In SUPER:Wed Mar 06 20:36:24 IST 2019
2019-03-06 20:36:24,935 INFO  Time after invoking service In SUPER:Wed Mar 06 20:36:24 IST 2019
2019-03-06 20:36:24,935 INFO  Service responded successfully with required details
2019-03-06 20:36:24,936 INFO  Time after invoking service:Wed Mar 06 20:36:24 IST 2019
2019-03-06 20:36:24,936 INFO  User solution successfully verified
2019-03-06 20:36:24,936 INFO  Processing the response from verify service
2019-03-06 20:36:24,938 INFO  Starting to parse JSON response
2019-03-06 20:36:24,939 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:36:24,939 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:36:24,940 INFO  Successfully parsed JSON response
2019-03-06 20:36:24,941 INFO  In the process of generating verify response in HTML
2019-03-06 20:36:25,016 INFO  Successfully generated verify response in HTML
2019-03-06 20:36:25,016 INFO  Successfully processed the response from service
2019-03-06 20:46:42,870 INFO  Setting request parameters for VerifySolution
2019-03-06 20:46:42,870 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 20:46:42,870 INFO  Starting to parse the user solution
2019-03-06 20:46:42,870 INFO  Displaying user solution
2019-03-06 20:46:42,943 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-12\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Bill:\r\n    def __init__(self,bill_id,patient_name):\r\n        self.__bill_id=bill_id\r\n        self.__patient_name =patient_name\r\n        self.__bill_amount = None\r\n\r\n    def get_bill_id(self):\r\n        return self.__bill_id\r\n\r\n\r\n    def get_patient_name(self):\r\n        return self.__patient_name\r\n\r\n\r\n    def get_bill_amount(self):\r\n        return self.__bill_amount\r\n\r\n    def calculate_bill_amount(self,consultation_fees, quantity_list, price_list):\r\n        total_bill_amount = 0\r\n        for i in range(0,len(quantity_list)):\r\n          \r\n          total_bill_amount = total_bill_amount+quantity_list[i]*price_list[i]\r\n        total_bill_amount = total_bill_amount+consultation_fees\r\n        self.__bill_amount = total_bill_amount\r\n        return self.__bill_amount\r\n        \r\n","asgnmtId":"12","SolutionFileName":"Assign12.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 20:46:42,943 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 20:46:42,944 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 20:46:42,944 INFO  Invoking the service to verify the user solution
2019-03-06 20:46:42,944 INFO  Time before invoking service:Wed Mar 06 20:46:42 IST 2019
2019-03-06 20:46:42,944 INFO  Initialising service address for VerifySolution
2019-03-06 20:46:42,945 INFO  Time before invoking service In SUPER:Wed Mar 06 20:46:42 IST 2019
2019-03-06 20:46:43,798 INFO  Time after invoking service In SUPER:Wed Mar 06 20:46:43 IST 2019
2019-03-06 20:46:43,799 INFO  Service responded successfully with required details
2019-03-06 20:46:43,799 INFO  Time after invoking service:Wed Mar 06 20:46:43 IST 2019
2019-03-06 20:46:43,799 INFO  User solution successfully verified
2019-03-06 20:46:43,799 INFO  Processing the response from verify service
2019-03-06 20:46:43,802 INFO  Starting to parse JSON response
2019-03-06 20:46:43,804 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:46:43,804 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:46:43,805 INFO  Successfully parsed JSON response
2019-03-06 20:46:43,805 INFO  In the process of generating verify response in HTML
2019-03-06 20:46:43,875 INFO  Successfully generated verify response in HTML
2019-03-06 20:46:43,876 INFO  Successfully processed the response from service
2019-03-06 20:47:05,725 INFO  Setting request parameters for VerifySolution
2019-03-06 20:47:05,725 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 20:47:05,725 INFO  Starting to parse the user solution
2019-03-06 20:47:05,726 INFO  Displaying user solution
2019-03-06 20:47:05,773 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-12\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Bill:\r\n    def __init__(self,bill_id,patient_name):\r\n        self.__bill_id=bill_id\r\n        self.__patient_name =patient_name\r\n        self.__bill_amount = None\r\n\r\n    def get_bill_id(self):\r\n        return self.__bill_id\r\n\r\n\r\n    def get_patient_name(self):\r\n        return self.__patient_name\r\n\r\n\r\n    def get_bill_amount(self):\r\n        return self.__bill_amount\r\n\r\n    def calculate_bill_amount(self,consultation_fees, \r\n                    quantity_list, price_list):\r\n        total_bill_amount = 0\r\n        for i in range(0,len(quantity_list)):\r\n          \r\n          total_bill_amount = total_bill_amount+quantity_list[i]*price_list[i]\r\n        total_bill_amount = total_bill_amount+consultation_fees\r\n        self.__bill_amount = total_bill_amount\r\n        return self.__bill_amount\r\n        \r\n","asgnmtId":"12","SolutionFileName":"Assign12.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 20:47:05,773 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 20:47:05,773 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 20:47:05,773 INFO  Invoking the service to verify the user solution
2019-03-06 20:47:05,774 INFO  Time before invoking service:Wed Mar 06 20:47:05 IST 2019
2019-03-06 20:47:05,774 INFO  Initialising service address for VerifySolution
2019-03-06 20:47:05,774 INFO  Time before invoking service In SUPER:Wed Mar 06 20:47:05 IST 2019
2019-03-06 20:47:06,734 INFO  Time after invoking service In SUPER:Wed Mar 06 20:47:06 IST 2019
2019-03-06 20:47:06,734 INFO  Service responded successfully with required details
2019-03-06 20:47:06,734 INFO  Time after invoking service:Wed Mar 06 20:47:06 IST 2019
2019-03-06 20:47:06,734 INFO  User solution successfully verified
2019-03-06 20:47:06,735 INFO  Processing the response from verify service
2019-03-06 20:47:06,736 INFO  Starting to parse JSON response
2019-03-06 20:47:06,737 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:47:06,737 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:47:06,738 INFO  Successfully parsed JSON response
2019-03-06 20:47:06,738 INFO  In the process of generating verify response in HTML
2019-03-06 20:47:06,802 INFO  Successfully generated verify response in HTML
2019-03-06 20:47:06,802 INFO  Successfully processed the response from service
2019-03-06 20:47:13,924 INFO  Setting request parameters for VerifySolution
2019-03-06 20:47:13,925 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 20:47:13,925 INFO  Starting to parse the user solution
2019-03-06 20:47:13,925 INFO  Displaying user solution
2019-03-06 20:47:13,975 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-12\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Bill:\r\n    def __init__(self,bill_id,patient_name):\r\n        self.__bill_id=bill_id\r\n        self.__patient_name =patient_name\r\n        self.__bill_amount = None\r\n\r\n    def get_bill_id(self):\r\n        return self.__bill_id\r\n\r\n\r\n    def get_patient_name(self):\r\n        return self.__patient_name\r\n\r\n\r\n    def get_bill_amount(self):\r\n        return self.__bill_amount\r\n\r\n    def calculate_bill_amount(self,consultation_fees, \r\n                    quantity_list, price_list):\r\n        total_bill_amount = 0\r\n        for i in range(0,len(quantity_list)):\r\n          \r\n          total_bill_amount = total_bill_amount+quantity_list[i]*price_list[i]\r\n        total_bill_amount = total_bill_amount+consultation_fees\r\n        self.__bill_amount = total_bill_amount\r\n        return self.__bill_amount\r\n        \r\n","asgnmtId":"12","SolutionFileName":"Assign12.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 20:47:13,976 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 20:47:13,976 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 20:47:13,976 INFO  Invoking the service to verify the user solution
2019-03-06 20:47:13,980 INFO  Time before invoking service:Wed Mar 06 20:47:13 IST 2019
2019-03-06 20:47:13,980 INFO  Initialising service address for VerifySolution
2019-03-06 20:47:13,981 INFO  Time before invoking service In SUPER:Wed Mar 06 20:47:13 IST 2019
2019-03-06 20:47:14,812 INFO  Time after invoking service In SUPER:Wed Mar 06 20:47:14 IST 2019
2019-03-06 20:47:14,812 INFO  Service responded successfully with required details
2019-03-06 20:47:14,812 INFO  Time after invoking service:Wed Mar 06 20:47:14 IST 2019
2019-03-06 20:47:14,812 INFO  User solution successfully verified
2019-03-06 20:47:14,813 INFO  Processing the response from verify service
2019-03-06 20:47:14,814 INFO  Starting to parse JSON response
2019-03-06 20:47:14,815 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:47:14,815 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 20:47:14,816 INFO  Successfully parsed JSON response
2019-03-06 20:47:14,816 INFO  In the process of generating verify response in HTML
2019-03-06 20:47:14,884 INFO  Successfully generated verify response in HTML
2019-03-06 20:47:14,884 INFO  Successfully processed the response from service
2019-03-06 20:47:29,947 INFO  Initiating to process and prepare Input for the submit service
2019-03-06 20:47:29,948 INFO  Displaying user solution
2019-03-06 20:47:29,956 INFO  Successfully processed and prepared the input for the submit service
2019-03-06 20:47:29,956 INFO  Invoking the service to submit the user solution
2019-03-06 20:47:29,956 INFO  Initialising service address for Submit
2019-03-06 20:47:29,956 INFO  Time before invoking service In SUPER:Wed Mar 06 20:47:29 IST 2019
2019-03-06 20:47:30,193 INFO  Time after invoking service In SUPER:Wed Mar 06 20:47:30 IST 2019
2019-03-06 20:47:30,193 INFO  Service responded successfully with required details
2019-03-06 20:47:30,193 INFO  User solution successfully submitted
2019-03-06 20:47:30,194 INFO  Displaying submission status
2019-03-06 20:47:30,194 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-06 20:47:39,570 INFO  Initiating to process and prepare Input for the submit service
2019-03-06 20:47:39,570 INFO  Displaying user solution
2019-03-06 20:47:39,578 INFO  Successfully processed and prepared the input for the submit service
2019-03-06 20:47:39,578 INFO  Invoking the service to submit the user solution
2019-03-06 20:47:39,578 INFO  Initialising service address for Submit
2019-03-06 20:47:39,579 INFO  Time before invoking service In SUPER:Wed Mar 06 20:47:39 IST 2019
2019-03-06 20:47:39,716 INFO  Time after invoking service In SUPER:Wed Mar 06 20:47:39 IST 2019
2019-03-06 20:47:39,716 INFO  Service responded successfully with required details
2019-03-06 20:47:39,716 INFO  User solution successfully submitted
2019-03-06 20:47:39,717 INFO  Displaying submission status
2019-03-06 20:47:39,717 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-06 21:05:40,443 INFO  Setting request parameters for VerifySolution
2019-03-06 21:05:40,443 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 21:05:40,443 INFO  Starting to parse the user solution
2019-03-06 21:05:40,443 INFO  Displaying user solution
2019-03-06 21:05:40,500 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-13\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Classroom:\r\n    classroom_list = []\r\n    @staticmethod\r\n    search_classroom(class_room):\r\n      \r\n","asgnmtId":"13","SolutionFileName":"Assign13.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 21:05:40,500 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 21:05:40,500 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 21:05:40,500 INFO  Invoking the service to verify the user solution
2019-03-06 21:05:40,501 INFO  Time before invoking service:Wed Mar 06 21:05:40 IST 2019
2019-03-06 21:05:40,501 INFO  Initialising service address for VerifySolution
2019-03-06 21:05:40,501 INFO  Time before invoking service In SUPER:Wed Mar 06 21:05:40 IST 2019
2019-03-06 21:05:41,366 INFO  Time after invoking service In SUPER:Wed Mar 06 21:05:41 IST 2019
2019-03-06 21:05:41,367 INFO  Service responded successfully with required details
2019-03-06 21:05:41,367 INFO  Time after invoking service:Wed Mar 06 21:05:41 IST 2019
2019-03-06 21:05:41,367 INFO  User solution successfully verified
2019-03-06 21:05:41,367 INFO  Processing the response from verify service
2019-03-06 21:05:41,372 INFO  Starting to parse JSON response
2019-03-06 21:05:41,374 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 21:05:41,374 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 21:05:41,375 INFO  Successfully parsed JSON response
2019-03-06 21:05:41,375 INFO  In the process of generating verify response in HTML
2019-03-06 21:05:41,448 INFO  Successfully generated verify response in HTML
2019-03-06 21:05:41,448 INFO  Successfully processed the response from service
2019-03-06 21:08:59,232 INFO  Setting request parameters for VerifySolution
2019-03-06 21:08:59,233 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 21:08:59,233 INFO  Starting to parse the user solution
2019-03-06 21:08:59,233 INFO  Displaying user solution
2019-03-06 21:08:59,282 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-13\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Classroom:\r\n    classroom_list = []\r\n    @staticmethod\r\n    def search_classroom(class_room):\r\n      if(class_room in Classroom.classroom_list):\r\n          return True\r\n      else:\r\n          return False\r\n          \r\n","asgnmtId":"13","SolutionFileName":"Assign13.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 21:08:59,282 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 21:08:59,282 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 21:08:59,282 INFO  Invoking the service to verify the user solution
2019-03-06 21:08:59,282 INFO  Time before invoking service:Wed Mar 06 21:08:59 IST 2019
2019-03-06 21:08:59,282 INFO  Initialising service address for VerifySolution
2019-03-06 21:08:59,283 INFO  Time before invoking service In SUPER:Wed Mar 06 21:08:59 IST 2019
2019-03-06 21:09:00,172 INFO  Time after invoking service In SUPER:Wed Mar 06 21:09:00 IST 2019
2019-03-06 21:09:00,172 INFO  Service responded successfully with required details
2019-03-06 21:09:00,173 INFO  Time after invoking service:Wed Mar 06 21:09:00 IST 2019
2019-03-06 21:09:00,173 INFO  User solution successfully verified
2019-03-06 21:09:00,173 INFO  Processing the response from verify service
2019-03-06 21:09:00,174 INFO  Starting to parse JSON response
2019-03-06 21:09:00,175 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 21:09:00,176 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 21:09:00,177 INFO  Successfully parsed JSON response
2019-03-06 21:09:00,177 INFO  In the process of generating verify response in HTML
2019-03-06 21:09:00,251 INFO  Successfully generated verify response in HTML
2019-03-06 21:09:00,252 INFO  Successfully processed the response from service
2019-03-06 21:12:05,178 INFO  Setting request parameters for VerifySolution
2019-03-06 21:12:05,179 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 21:12:05,179 INFO  Starting to parse the user solution
2019-03-06 21:12:05,179 INFO  Displaying user solution
2019-03-06 21:12:05,235 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-13\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Classroom:\r\n    classroom_list = list()\r\n    @staticmethod\r\n    def search_classroom(class_room):\r\n      if(class_room in Classroom.classroom_list):\r\n          return True\r\n      else:\r\n          return False\r\n          \r\n","asgnmtId":"13","SolutionFileName":"Assign13.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 21:12:05,235 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 21:12:05,235 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 21:12:05,235 INFO  Invoking the service to verify the user solution
2019-03-06 21:12:05,236 INFO  Time before invoking service:Wed Mar 06 21:12:05 IST 2019
2019-03-06 21:12:05,236 INFO  Initialising service address for VerifySolution
2019-03-06 21:12:05,236 INFO  Time before invoking service In SUPER:Wed Mar 06 21:12:05 IST 2019
2019-03-06 21:12:06,127 INFO  Time after invoking service In SUPER:Wed Mar 06 21:12:06 IST 2019
2019-03-06 21:12:06,127 INFO  Service responded successfully with required details
2019-03-06 21:12:06,127 INFO  Time after invoking service:Wed Mar 06 21:12:06 IST 2019
2019-03-06 21:12:06,128 INFO  User solution successfully verified
2019-03-06 21:12:06,128 INFO  Processing the response from verify service
2019-03-06 21:12:06,132 INFO  Starting to parse JSON response
2019-03-06 21:12:06,133 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 21:12:06,133 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 21:12:06,135 INFO  Successfully parsed JSON response
2019-03-06 21:12:06,135 INFO  In the process of generating verify response in HTML
2019-03-06 21:12:06,202 INFO  Successfully generated verify response in HTML
2019-03-06 21:12:06,202 INFO  Successfully processed the response from service
2019-03-06 21:13:10,282 INFO  Setting request parameters for VerifySolution
2019-03-06 21:13:10,282 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 21:13:10,282 INFO  Starting to parse the user solution
2019-03-06 21:13:10,283 INFO  Displaying user solution
2019-03-06 21:13:10,324 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-13\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Classroom:\r\n    classroom_list = list()\r\n    @staticmethod\r\n    def search_classroom(class_room):\r\n      if(class_room in Classroom.classroom_list):\r\n          return True\r\n      else:\r\n          return False\r\n          \r\n","asgnmtId":"13","SolutionFileName":"Assign13.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 21:13:10,324 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 21:13:10,324 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 21:13:10,324 INFO  Invoking the service to verify the user solution
2019-03-06 21:13:10,325 INFO  Time before invoking service:Wed Mar 06 21:13:10 IST 2019
2019-03-06 21:13:10,325 INFO  Initialising service address for VerifySolution
2019-03-06 21:13:10,327 INFO  Time before invoking service In SUPER:Wed Mar 06 21:13:10 IST 2019
2019-03-06 21:13:11,181 INFO  Time after invoking service In SUPER:Wed Mar 06 21:13:11 IST 2019
2019-03-06 21:13:11,181 INFO  Service responded successfully with required details
2019-03-06 21:13:11,182 INFO  Time after invoking service:Wed Mar 06 21:13:11 IST 2019
2019-03-06 21:13:11,182 INFO  User solution successfully verified
2019-03-06 21:13:11,182 INFO  Processing the response from verify service
2019-03-06 21:13:11,183 INFO  Starting to parse JSON response
2019-03-06 21:13:11,184 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 21:13:11,184 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 21:13:11,185 INFO  Successfully parsed JSON response
2019-03-06 21:13:11,185 INFO  In the process of generating verify response in HTML
2019-03-06 21:13:11,250 INFO  Successfully generated verify response in HTML
2019-03-06 21:13:11,251 INFO  Successfully processed the response from service
2019-03-06 21:13:20,513 INFO  Setting request parameters for VerifySolution
2019-03-06 21:13:20,514 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 21:13:20,514 INFO  Starting to parse the user solution
2019-03-06 21:13:20,514 INFO  Displaying user solution
2019-03-06 21:13:20,564 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-13\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Classroom:\r\n    classroom_list = list()\r\n    @staticmethod\r\n    def search_classroom(class_room):\r\n      if(class_room in Classroom.classroom_list):\r\n          return \"Found\"\r\n      else:\r\n          return -1\r\n          \r\n","asgnmtId":"13","SolutionFileName":"Assign13.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 21:13:20,564 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 21:13:20,564 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 21:13:20,564 INFO  Invoking the service to verify the user solution
2019-03-06 21:13:20,564 INFO  Time before invoking service:Wed Mar 06 21:13:20 IST 2019
2019-03-06 21:13:20,564 INFO  Initialising service address for VerifySolution
2019-03-06 21:13:20,565 INFO  Time before invoking service In SUPER:Wed Mar 06 21:13:20 IST 2019
2019-03-06 21:13:21,476 INFO  Time after invoking service In SUPER:Wed Mar 06 21:13:21 IST 2019
2019-03-06 21:13:21,476 INFO  Service responded successfully with required details
2019-03-06 21:13:21,476 INFO  Time after invoking service:Wed Mar 06 21:13:21 IST 2019
2019-03-06 21:13:21,476 INFO  User solution successfully verified
2019-03-06 21:13:21,477 INFO  Processing the response from verify service
2019-03-06 21:13:21,478 INFO  Starting to parse JSON response
2019-03-06 21:13:21,478 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 21:13:21,479 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 21:13:21,480 INFO  Successfully parsed JSON response
2019-03-06 21:13:21,480 INFO  In the process of generating verify response in HTML
2019-03-06 21:13:21,542 INFO  Successfully generated verify response in HTML
2019-03-06 21:13:21,542 INFO  Successfully processed the response from service
2019-03-06 21:15:30,228 INFO  Setting request parameters for VerifySolution
2019-03-06 21:15:30,228 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 21:15:30,228 INFO  Starting to parse the user solution
2019-03-06 21:15:30,228 INFO  Displaying user solution
2019-03-06 21:15:30,272 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-13\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Classroom:\r\n    classroom_list = ['G015', 'G066', 'L123', 'L135', 'L143', 'L13']\r\n    @staticmethod\r\n    def search_classroom(class_room):\r\n      if(class_room in Classroom.classroom_list):\r\n          return \"Found\"\r\n      else:\r\n          return -1\r\n\r\n    print(search_classroom('L13'))         \r\n","asgnmtId":"13","SolutionFileName":"Assign13.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 21:15:30,272 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 21:15:30,272 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 21:15:30,272 INFO  Invoking the service to verify the user solution
2019-03-06 21:15:30,272 INFO  Time before invoking service:Wed Mar 06 21:15:30 IST 2019
2019-03-06 21:15:30,272 INFO  Initialising service address for VerifySolution
2019-03-06 21:15:30,273 INFO  Time before invoking service In SUPER:Wed Mar 06 21:15:30 IST 2019
2019-03-06 21:15:31,144 INFO  Time after invoking service In SUPER:Wed Mar 06 21:15:31 IST 2019
2019-03-06 21:15:31,144 INFO  Service responded successfully with required details
2019-03-06 21:15:31,145 INFO  Time after invoking service:Wed Mar 06 21:15:31 IST 2019
2019-03-06 21:15:31,145 INFO  User solution successfully verified
2019-03-06 21:15:31,145 INFO  Processing the response from verify service
2019-03-06 21:15:31,146 INFO  Starting to parse JSON response
2019-03-06 21:15:31,147 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 21:15:31,147 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 21:15:31,148 INFO  Successfully parsed JSON response
2019-03-06 21:15:31,148 INFO  In the process of generating verify response in HTML
2019-03-06 21:15:31,217 INFO  Successfully generated verify response in HTML
2019-03-06 21:15:31,217 INFO  Successfully processed the response from service
2019-03-06 21:16:12,526 INFO  Setting request parameters for VerifySolution
2019-03-06 21:16:12,526 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 21:16:12,526 INFO  Starting to parse the user solution
2019-03-06 21:16:12,526 INFO  Displaying user solution
2019-03-06 21:16:12,582 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-13\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Classroom:\r\n    classroom_list = ['G015', 'G066', 'L123', 'L135', 'L143', 'L13']\r\n    @staticmethod\r\n    def search_classroom(class_room):\r\n      if(class_room in Classroom.classroom_list):\r\n          return \"Found\"\r\n      else:\r\n          return -1\r\n\r\n            \r\n","asgnmtId":"13","SolutionFileName":"Assign13.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 21:16:12,582 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 21:16:12,582 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 21:16:12,582 INFO  Invoking the service to verify the user solution
2019-03-06 21:16:12,583 INFO  Time before invoking service:Wed Mar 06 21:16:12 IST 2019
2019-03-06 21:16:12,583 INFO  Initialising service address for VerifySolution
2019-03-06 21:16:12,583 INFO  Time before invoking service In SUPER:Wed Mar 06 21:16:12 IST 2019
2019-03-06 21:16:13,499 INFO  Time after invoking service In SUPER:Wed Mar 06 21:16:13 IST 2019
2019-03-06 21:16:13,499 INFO  Service responded successfully with required details
2019-03-06 21:16:13,500 INFO  Time after invoking service:Wed Mar 06 21:16:13 IST 2019
2019-03-06 21:16:13,500 INFO  User solution successfully verified
2019-03-06 21:16:13,500 INFO  Processing the response from verify service
2019-03-06 21:16:13,503 INFO  Starting to parse JSON response
2019-03-06 21:16:13,504 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 21:16:13,504 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 21:16:13,505 INFO  Successfully parsed JSON response
2019-03-06 21:16:13,505 INFO  In the process of generating verify response in HTML
2019-03-06 21:16:13,619 INFO  Successfully generated verify response in HTML
2019-03-06 21:16:13,619 INFO  Successfully processed the response from service
2019-03-06 21:17:55,331 INFO  Setting request parameters for VerifySolution
2019-03-06 21:17:55,331 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 21:17:55,331 INFO  Starting to parse the user solution
2019-03-06 21:17:55,332 INFO  Displaying user solution
2019-03-06 21:17:55,379 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-13\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Classroom:\r\n    classroom_list = ['G015', 'G066', 'L123', 'L135', 'L143', 'L13']\r\n    @staticmethod\r\n    def search_classroom(class_room):\r\n      if(class_room == Classroom.classroom_list):\r\n          return \"Found\"\r\n      else:\r\n          return -1\r\n\r\n            \r\n","asgnmtId":"13","SolutionFileName":"Assign13.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 21:17:55,379 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 21:17:55,379 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 21:17:55,379 INFO  Invoking the service to verify the user solution
2019-03-06 21:17:55,380 INFO  Time before invoking service:Wed Mar 06 21:17:55 IST 2019
2019-03-06 21:17:55,380 INFO  Initialising service address for VerifySolution
2019-03-06 21:17:55,380 INFO  Time before invoking service In SUPER:Wed Mar 06 21:17:55 IST 2019
2019-03-06 21:17:56,199 INFO  Time after invoking service In SUPER:Wed Mar 06 21:17:56 IST 2019
2019-03-06 21:17:56,199 INFO  Service responded successfully with required details
2019-03-06 21:17:56,199 INFO  Time after invoking service:Wed Mar 06 21:17:56 IST 2019
2019-03-06 21:17:56,199 INFO  User solution successfully verified
2019-03-06 21:17:56,200 INFO  Processing the response from verify service
2019-03-06 21:17:56,201 INFO  Starting to parse JSON response
2019-03-06 21:17:56,202 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 21:17:56,202 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 21:17:56,203 INFO  Successfully parsed JSON response
2019-03-06 21:17:56,203 INFO  In the process of generating verify response in HTML
2019-03-06 21:17:56,274 INFO  Successfully generated verify response in HTML
2019-03-06 21:17:56,274 INFO  Successfully processed the response from service
2019-03-06 21:19:34,547 INFO  Setting request parameters for VerifySolution
2019-03-06 21:19:34,547 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 21:19:34,547 INFO  Starting to parse the user solution
2019-03-06 21:19:34,548 INFO  Displaying user solution
2019-03-06 21:19:34,595 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-13\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Classroom:\r\n    classroom_list = ['G015', 'G066', 'L123', 'L135', 'L143', 'L13']\r\n    @staticmethod\r\n    def search_classroom(class_room):\r\n        for i in Classroom.classroom_list:\r\n            \r\n           if(class_room == i):\r\n             return \"Found\"\r\n           else:\r\n             return -1\r\n\r\n            \r\n","asgnmtId":"13","SolutionFileName":"Assign13.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 21:19:34,595 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 21:19:34,595 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 21:19:34,595 INFO  Invoking the service to verify the user solution
2019-03-06 21:19:34,596 INFO  Time before invoking service:Wed Mar 06 21:19:34 IST 2019
2019-03-06 21:19:34,596 INFO  Initialising service address for VerifySolution
2019-03-06 21:19:34,596 INFO  Time before invoking service In SUPER:Wed Mar 06 21:19:34 IST 2019
2019-03-06 21:19:35,516 INFO  Time after invoking service In SUPER:Wed Mar 06 21:19:35 IST 2019
2019-03-06 21:19:35,516 INFO  Service responded successfully with required details
2019-03-06 21:19:35,516 INFO  Time after invoking service:Wed Mar 06 21:19:35 IST 2019
2019-03-06 21:19:35,517 INFO  User solution successfully verified
2019-03-06 21:19:35,517 INFO  Processing the response from verify service
2019-03-06 21:19:35,518 INFO  Starting to parse JSON response
2019-03-06 21:19:35,518 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 21:19:35,518 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 21:19:35,519 INFO  Successfully parsed JSON response
2019-03-06 21:19:35,519 INFO  In the process of generating verify response in HTML
2019-03-06 21:19:35,599 INFO  Successfully generated verify response in HTML
2019-03-06 21:19:35,600 INFO  Successfully processed the response from service
2019-03-06 21:19:58,682 INFO  Setting request parameters for VerifySolution
2019-03-06 21:19:58,682 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 21:19:58,682 INFO  Starting to parse the user solution
2019-03-06 21:19:58,683 INFO  Displaying user solution
2019-03-06 21:19:58,736 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-13\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Classroom:\r\n    classroom_list = list()\r\n    @staticmethod\r\n    def search_classroom(class_room):\r\n        for i in Classroom.classroom_list:\r\n            \r\n           if(class_room == i):\r\n             return \"Found\"\r\n           else:\r\n             return -1\r\n\r\n            \r\n","asgnmtId":"13","SolutionFileName":"Assign13.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 21:19:58,737 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 21:19:58,737 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 21:19:58,737 INFO  Invoking the service to verify the user solution
2019-03-06 21:19:58,737 INFO  Time before invoking service:Wed Mar 06 21:19:58 IST 2019
2019-03-06 21:19:58,737 INFO  Initialising service address for VerifySolution
2019-03-06 21:19:58,738 INFO  Time before invoking service In SUPER:Wed Mar 06 21:19:58 IST 2019
2019-03-06 21:19:59,613 INFO  Time after invoking service In SUPER:Wed Mar 06 21:19:59 IST 2019
2019-03-06 21:19:59,613 INFO  Service responded successfully with required details
2019-03-06 21:19:59,613 INFO  Time after invoking service:Wed Mar 06 21:19:59 IST 2019
2019-03-06 21:19:59,613 INFO  User solution successfully verified
2019-03-06 21:19:59,614 INFO  Processing the response from verify service
2019-03-06 21:19:59,618 INFO  Starting to parse JSON response
2019-03-06 21:19:59,621 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 21:19:59,621 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 21:19:59,624 INFO  Successfully parsed JSON response
2019-03-06 21:19:59,624 INFO  In the process of generating verify response in HTML
2019-03-06 21:19:59,695 INFO  Successfully generated verify response in HTML
2019-03-06 21:19:59,696 INFO  Successfully processed the response from service
2019-03-06 21:21:01,707 INFO  Setting request parameters for VerifySolution
2019-03-06 21:21:01,707 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 21:21:01,707 INFO  Starting to parse the user solution
2019-03-06 21:21:01,708 INFO  Displaying user solution
2019-03-06 21:21:01,752 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-13\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Classroom:\r\n    classroom_list = list()\r\n    @staticmethod\r\n    def search_classroom(class_room):\r\n        for i in Classroom.classroom_list:\r\n            if(class_room == i):\r\n                return \"Found\"\r\n            else:\r\n                return -1\r\n\r\n            \r\n","asgnmtId":"13","SolutionFileName":"Assign13.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 21:21:01,753 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 21:21:01,753 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 21:21:01,753 INFO  Invoking the service to verify the user solution
2019-03-06 21:21:01,753 INFO  Time before invoking service:Wed Mar 06 21:21:01 IST 2019
2019-03-06 21:21:01,753 INFO  Initialising service address for VerifySolution
2019-03-06 21:21:01,754 INFO  Time before invoking service In SUPER:Wed Mar 06 21:21:01 IST 2019
2019-03-06 21:21:02,617 INFO  Time after invoking service In SUPER:Wed Mar 06 21:21:02 IST 2019
2019-03-06 21:21:02,618 INFO  Service responded successfully with required details
2019-03-06 21:21:02,618 INFO  Time after invoking service:Wed Mar 06 21:21:02 IST 2019
2019-03-06 21:21:02,618 INFO  User solution successfully verified
2019-03-06 21:21:02,619 INFO  Processing the response from verify service
2019-03-06 21:21:02,619 INFO  Starting to parse JSON response
2019-03-06 21:21:02,620 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 21:21:02,620 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 21:21:02,621 INFO  Successfully parsed JSON response
2019-03-06 21:21:02,621 INFO  In the process of generating verify response in HTML
2019-03-06 21:21:02,692 INFO  Successfully generated verify response in HTML
2019-03-06 21:21:02,692 INFO  Successfully processed the response from service
2019-03-06 21:23:06,654 INFO  Setting request parameters for VerifySolution
2019-03-06 21:23:06,654 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 21:23:06,654 INFO  Starting to parse the user solution
2019-03-06 21:23:06,655 INFO  Displaying user solution
2019-03-06 21:23:06,695 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-13\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Classroom:\r\n    classroom_list = []\r\n    @staticmethod\r\n    def search_classroom(class_room):\r\n        for i in Classroom.classroom_list:\r\n            if(class_room == i):\r\n                return \"Found\"\r\n            else:\r\n                return -1\r\n\r\n            \r\n","asgnmtId":"13","SolutionFileName":"Assign13.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 21:23:06,695 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 21:23:06,695 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 21:23:06,695 INFO  Invoking the service to verify the user solution
2019-03-06 21:23:06,696 INFO  Time before invoking service:Wed Mar 06 21:23:06 IST 2019
2019-03-06 21:23:06,696 INFO  Initialising service address for VerifySolution
2019-03-06 21:23:06,696 INFO  Time before invoking service In SUPER:Wed Mar 06 21:23:06 IST 2019
2019-03-06 21:23:07,676 INFO  Time after invoking service In SUPER:Wed Mar 06 21:23:07 IST 2019
2019-03-06 21:23:07,676 INFO  Service responded successfully with required details
2019-03-06 21:23:07,677 INFO  Time after invoking service:Wed Mar 06 21:23:07 IST 2019
2019-03-06 21:23:07,677 INFO  User solution successfully verified
2019-03-06 21:23:07,677 INFO  Processing the response from verify service
2019-03-06 21:23:07,678 INFO  Starting to parse JSON response
2019-03-06 21:23:07,679 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 21:23:07,679 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 21:23:07,682 INFO  Successfully parsed JSON response
2019-03-06 21:23:07,683 INFO  In the process of generating verify response in HTML
2019-03-06 21:23:07,745 INFO  Successfully generated verify response in HTML
2019-03-06 21:23:07,745 INFO  Successfully processed the response from service
2019-03-06 21:24:26,350 INFO  Setting request parameters for VerifySolution
2019-03-06 21:24:26,350 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 21:24:26,350 INFO  Starting to parse the user solution
2019-03-06 21:24:26,359 INFO  Displaying user solution
2019-03-06 21:24:26,404 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-13\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Classroom:\r\n    classroom_list = []\r\n    @staticmethod\r\n    def search_classroom(class_room):\r\n        if(class_room in Classroom.classroom_list):\r\n            return \"Found\"\r\n        else:\r\n            return -1\r\n\r\n            \r\n","asgnmtId":"13","SolutionFileName":"Assign13.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 21:24:26,404 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 21:24:26,404 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 21:24:26,404 INFO  Invoking the service to verify the user solution
2019-03-06 21:24:26,405 INFO  Time before invoking service:Wed Mar 06 21:24:26 IST 2019
2019-03-06 21:24:26,405 INFO  Initialising service address for VerifySolution
2019-03-06 21:24:26,405 INFO  Time before invoking service In SUPER:Wed Mar 06 21:24:26 IST 2019
2019-03-06 21:24:27,287 INFO  Time after invoking service In SUPER:Wed Mar 06 21:24:27 IST 2019
2019-03-06 21:24:27,288 INFO  Service responded successfully with required details
2019-03-06 21:24:27,288 INFO  Time after invoking service:Wed Mar 06 21:24:27 IST 2019
2019-03-06 21:24:27,288 INFO  User solution successfully verified
2019-03-06 21:24:27,288 INFO  Processing the response from verify service
2019-03-06 21:24:27,288 INFO  Starting to parse JSON response
2019-03-06 21:24:27,289 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 21:24:27,289 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 21:24:27,290 INFO  Successfully parsed JSON response
2019-03-06 21:24:27,290 INFO  In the process of generating verify response in HTML
2019-03-06 21:24:27,358 INFO  Successfully generated verify response in HTML
2019-03-06 21:24:27,358 INFO  Successfully processed the response from service
2019-03-06 21:25:22,253 INFO  Setting request parameters for VerifySolution
2019-03-06 21:25:22,253 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 21:25:22,253 INFO  Starting to parse the user solution
2019-03-06 21:25:22,255 INFO  Displaying user solution
2019-03-06 21:25:22,304 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-13\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Classroom:\r\n    classroom_list = []\r\n    @staticmethod\r\n    def search_classroom(class_room):\r\n        if(class_room in Classroom.classroom_list):\r\n            return \"Found\"\r\n        else:\r\n            return -1\r\n\r\n            \r\n","asgnmtId":"13","SolutionFileName":"Assign13.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 21:25:22,305 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 21:25:22,305 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 21:25:22,305 INFO  Invoking the service to verify the user solution
2019-03-06 21:25:22,305 INFO  Time before invoking service:Wed Mar 06 21:25:22 IST 2019
2019-03-06 21:25:22,305 INFO  Initialising service address for VerifySolution
2019-03-06 21:25:22,306 INFO  Time before invoking service In SUPER:Wed Mar 06 21:25:22 IST 2019
2019-03-06 21:25:23,138 INFO  Time after invoking service In SUPER:Wed Mar 06 21:25:23 IST 2019
2019-03-06 21:25:23,138 INFO  Service responded successfully with required details
2019-03-06 21:25:23,139 INFO  Time after invoking service:Wed Mar 06 21:25:23 IST 2019
2019-03-06 21:25:23,139 INFO  User solution successfully verified
2019-03-06 21:25:23,139 INFO  Processing the response from verify service
2019-03-06 21:25:23,142 INFO  Starting to parse JSON response
2019-03-06 21:25:23,143 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 21:25:23,143 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 21:25:23,145 INFO  Successfully parsed JSON response
2019-03-06 21:25:23,145 INFO  In the process of generating verify response in HTML
2019-03-06 21:25:23,216 INFO  Successfully generated verify response in HTML
2019-03-06 21:25:23,216 INFO  Successfully processed the response from service
2019-03-06 21:29:10,348 INFO  Setting request parameters for VerifySolution
2019-03-06 21:29:10,348 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 21:29:10,348 INFO  Starting to parse the user solution
2019-03-06 21:29:10,348 INFO  Displaying user solution
2019-03-06 21:29:10,399 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-13\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Classroom:\r\n    classroom_list = []\r\n    @staticmethod\r\n    def search_classroom(class_room):\r\n        if(class_room in Classroom.classroom_list):\r\n            return \"Found\"\r\n        else:\r\n            return -1\r\n\r\nclassroom_list=['G015', 'G066', 'L123', 'L135', 'L143', 'L13'] \r\nClassroom.search_classroom('L123')          \r\n","asgnmtId":"13","SolutionFileName":"Assign13.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 21:29:10,400 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 21:29:10,400 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 21:29:10,400 INFO  Invoking the service to verify the user solution
2019-03-06 21:29:10,401 INFO  Time before invoking service:Wed Mar 06 21:29:10 IST 2019
2019-03-06 21:29:10,401 INFO  Initialising service address for VerifySolution
2019-03-06 21:29:10,402 INFO  Time before invoking service In SUPER:Wed Mar 06 21:29:10 IST 2019
2019-03-06 21:29:11,223 INFO  Time after invoking service In SUPER:Wed Mar 06 21:29:11 IST 2019
2019-03-06 21:29:11,223 INFO  Service responded successfully with required details
2019-03-06 21:29:11,224 INFO  Time after invoking service:Wed Mar 06 21:29:11 IST 2019
2019-03-06 21:29:11,224 INFO  User solution successfully verified
2019-03-06 21:29:11,224 INFO  Processing the response from verify service
2019-03-06 21:29:11,226 INFO  Starting to parse JSON response
2019-03-06 21:29:11,226 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 21:29:11,226 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 21:29:11,228 INFO  Successfully parsed JSON response
2019-03-06 21:29:11,228 INFO  In the process of generating verify response in HTML
2019-03-06 21:29:11,295 INFO  Successfully generated verify response in HTML
2019-03-06 21:29:11,295 INFO  Successfully processed the response from service
2019-03-06 21:30:36,002 INFO  Setting request parameters for VerifySolution
2019-03-06 21:30:36,002 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 21:30:36,002 INFO  Starting to parse the user solution
2019-03-06 21:30:36,002 INFO  Displaying user solution
2019-03-06 21:30:36,057 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-13\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Classroom:\r\n    classroom_list = []\r\n    @staticmethod\r\n    def search_classroom(class_room):\r\n        for i in Classroom.classroom_list:\r\n            if(i==class_room):\r\n             return \"Found\"\r\n            else:\r\n             return -1\r\n\r\nclassroom_list=['G015', 'G066', 'L123', 'L135', 'L143', 'L13'] \r\nClassroom.search_classroom('L123')          \r\n","asgnmtId":"13","SolutionFileName":"Assign13.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 21:30:36,057 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 21:30:36,057 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 21:30:36,057 INFO  Invoking the service to verify the user solution
2019-03-06 21:30:36,058 INFO  Time before invoking service:Wed Mar 06 21:30:36 IST 2019
2019-03-06 21:30:36,058 INFO  Initialising service address for VerifySolution
2019-03-06 21:30:36,058 INFO  Time before invoking service In SUPER:Wed Mar 06 21:30:36 IST 2019
2019-03-06 21:30:36,878 INFO  Time after invoking service In SUPER:Wed Mar 06 21:30:36 IST 2019
2019-03-06 21:30:36,878 INFO  Service responded successfully with required details
2019-03-06 21:30:36,878 INFO  Time after invoking service:Wed Mar 06 21:30:36 IST 2019
2019-03-06 21:30:36,878 INFO  User solution successfully verified
2019-03-06 21:30:36,878 INFO  Processing the response from verify service
2019-03-06 21:30:36,881 INFO  Starting to parse JSON response
2019-03-06 21:30:36,883 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 21:30:36,883 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 21:30:36,884 INFO  Successfully parsed JSON response
2019-03-06 21:30:36,884 INFO  In the process of generating verify response in HTML
2019-03-06 21:30:36,958 INFO  Successfully generated verify response in HTML
2019-03-06 21:30:36,959 INFO  Successfully processed the response from service
2019-03-06 21:32:42,216 INFO  Setting request parameters for VerifySolution
2019-03-06 21:32:42,216 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 21:32:42,216 INFO  Starting to parse the user solution
2019-03-06 21:32:42,217 INFO  Displaying user solution
2019-03-06 21:32:42,272 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-13\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Classroom:\r\n    classroom_list = []\r\n    @staticmethod\r\n    def search_classroom(class_room):\r\n        for i in range(0,len(Classroom.classroom_list)):\r\n            if(Classroom.classroom_list[i]==class_room):\r\n             return \"Found\"\r\n            else:\r\n             return -1\r\n\r\nclassroom_list=['G015', 'G066', 'L123', 'L135', 'L143', 'L13'] \r\nClassroom.search_classroom('L123')          \r\n","asgnmtId":"13","SolutionFileName":"Assign13.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 21:32:42,272 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 21:32:42,273 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 21:32:42,273 INFO  Invoking the service to verify the user solution
2019-03-06 21:32:42,273 INFO  Time before invoking service:Wed Mar 06 21:32:42 IST 2019
2019-03-06 21:32:42,273 INFO  Initialising service address for VerifySolution
2019-03-06 21:32:42,273 INFO  Time before invoking service In SUPER:Wed Mar 06 21:32:42 IST 2019
2019-03-06 21:32:43,145 INFO  Time after invoking service In SUPER:Wed Mar 06 21:32:43 IST 2019
2019-03-06 21:32:43,146 INFO  Service responded successfully with required details
2019-03-06 21:32:43,146 INFO  Time after invoking service:Wed Mar 06 21:32:43 IST 2019
2019-03-06 21:32:43,146 INFO  User solution successfully verified
2019-03-06 21:32:43,146 INFO  Processing the response from verify service
2019-03-06 21:32:43,147 INFO  Starting to parse JSON response
2019-03-06 21:32:43,148 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 21:32:43,148 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 21:32:43,149 INFO  Successfully parsed JSON response
2019-03-06 21:32:43,149 INFO  In the process of generating verify response in HTML
2019-03-06 21:32:43,219 INFO  Successfully generated verify response in HTML
2019-03-06 21:32:43,220 INFO  Successfully processed the response from service
2019-03-06 21:34:40,609 INFO  Setting request parameters for VerifySolution
2019-03-06 21:34:40,609 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 21:34:40,609 INFO  Starting to parse the user solution
2019-03-06 21:34:40,610 INFO  Displaying user solution
2019-03-06 21:34:40,664 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-13\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Classroom:\r\n    classroom_list = []\r\n    @staticmethod\r\n    def search_classroom(class_room):\r\n        if(class_room in Classroom.classroom_list==class_room):\r\n            return \"Found\"\r\n        else:\r\n            return -1\r\n\r\nclassroom_list=['G015', 'G066', 'L123', 'L135', 'L143', 'L13'] \r\nClassroom.search_classroom('L123')          \r\n","asgnmtId":"13","SolutionFileName":"Assign13.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 21:34:40,664 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 21:34:40,664 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 21:34:40,664 INFO  Invoking the service to verify the user solution
2019-03-06 21:34:40,664 INFO  Time before invoking service:Wed Mar 06 21:34:40 IST 2019
2019-03-06 21:34:40,664 INFO  Initialising service address for VerifySolution
2019-03-06 21:34:40,665 INFO  Time before invoking service In SUPER:Wed Mar 06 21:34:40 IST 2019
2019-03-06 21:34:41,632 INFO  Time after invoking service In SUPER:Wed Mar 06 21:34:41 IST 2019
2019-03-06 21:34:41,632 INFO  Service responded successfully with required details
2019-03-06 21:34:41,632 INFO  Time after invoking service:Wed Mar 06 21:34:41 IST 2019
2019-03-06 21:34:41,633 INFO  User solution successfully verified
2019-03-06 21:34:41,633 INFO  Processing the response from verify service
2019-03-06 21:34:41,634 INFO  Starting to parse JSON response
2019-03-06 21:34:41,635 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 21:34:41,635 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 21:34:41,637 INFO  Successfully parsed JSON response
2019-03-06 21:34:41,637 INFO  In the process of generating verify response in HTML
2019-03-06 21:34:41,704 INFO  Successfully generated verify response in HTML
2019-03-06 21:34:41,704 INFO  Successfully processed the response from service
2019-03-06 21:34:53,325 INFO  Setting request parameters for VerifySolution
2019-03-06 21:34:53,325 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 21:34:53,325 INFO  Starting to parse the user solution
2019-03-06 21:34:53,325 INFO  Displaying user solution
2019-03-06 21:34:53,371 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-13\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Classroom:\r\n    classroom_list = []\r\n    @staticmethod\r\n    def search_classroom(class_room):\r\n        if(class_room in Classroom.classroom_list==class_room):\r\n            return \"Found\"\r\n        else:\r\n            return -1\r\n\r\nclassroom_list=['G015', 'G066', 'L123', 'L135', 'L143', 'L13'] \r\nClassroom.search_classroom('L123')          \r\n","asgnmtId":"13","SolutionFileName":"Assign13.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 21:34:53,371 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 21:34:53,371 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 21:34:53,371 INFO  Invoking the service to verify the user solution
2019-03-06 21:34:53,372 INFO  Time before invoking service:Wed Mar 06 21:34:53 IST 2019
2019-03-06 21:34:53,372 INFO  Initialising service address for VerifySolution
2019-03-06 21:34:53,372 INFO  Time before invoking service In SUPER:Wed Mar 06 21:34:53 IST 2019
2019-03-06 21:34:54,177 INFO  Time after invoking service In SUPER:Wed Mar 06 21:34:54 IST 2019
2019-03-06 21:34:54,177 INFO  Service responded successfully with required details
2019-03-06 21:34:54,177 INFO  Time after invoking service:Wed Mar 06 21:34:54 IST 2019
2019-03-06 21:34:54,178 INFO  User solution successfully verified
2019-03-06 21:34:54,178 INFO  Processing the response from verify service
2019-03-06 21:34:54,179 INFO  Starting to parse JSON response
2019-03-06 21:34:54,180 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 21:34:54,180 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 21:34:54,181 INFO  Successfully parsed JSON response
2019-03-06 21:34:54,181 INFO  In the process of generating verify response in HTML
2019-03-06 21:34:54,252 INFO  Successfully generated verify response in HTML
2019-03-06 21:34:54,252 INFO  Successfully processed the response from service
2019-03-06 21:35:11,038 INFO  Setting request parameters for VerifySolution
2019-03-06 21:35:11,039 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 21:35:11,039 INFO  Starting to parse the user solution
2019-03-06 21:35:11,039 INFO  Displaying user solution
2019-03-06 21:35:11,081 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-13\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Classroom:\r\n    classroom_list = []\r\n    @staticmethod\r\n    def search_classroom(class_room):\r\n        if(class_room in Classroom.classroom_list==\"\"):\r\n            return \"Found\"\r\n        else:\r\n            return -1\r\n\r\nclassroom_list=['G015', 'G066', 'L123', 'L135', 'L143', 'L13'] \r\nClassroom.search_classroom('L123')          \r\n","asgnmtId":"13","SolutionFileName":"Assign13.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 21:35:11,082 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 21:35:11,082 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 21:35:11,082 INFO  Invoking the service to verify the user solution
2019-03-06 21:35:11,082 INFO  Time before invoking service:Wed Mar 06 21:35:11 IST 2019
2019-03-06 21:35:11,082 INFO  Initialising service address for VerifySolution
2019-03-06 21:35:11,083 INFO  Time before invoking service In SUPER:Wed Mar 06 21:35:11 IST 2019
2019-03-06 21:35:11,961 INFO  Time after invoking service In SUPER:Wed Mar 06 21:35:11 IST 2019
2019-03-06 21:35:11,961 INFO  Service responded successfully with required details
2019-03-06 21:35:11,961 INFO  Time after invoking service:Wed Mar 06 21:35:11 IST 2019
2019-03-06 21:35:11,961 INFO  User solution successfully verified
2019-03-06 21:35:11,961 INFO  Processing the response from verify service
2019-03-06 21:35:11,965 INFO  Starting to parse JSON response
2019-03-06 21:35:11,966 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 21:35:11,967 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 21:35:11,968 INFO  Successfully parsed JSON response
2019-03-06 21:35:11,968 INFO  In the process of generating verify response in HTML
2019-03-06 21:35:12,037 INFO  Successfully generated verify response in HTML
2019-03-06 21:35:12,037 INFO  Successfully processed the response from service
2019-03-06 21:36:47,908 INFO  Setting request parameters for VerifySolution
2019-03-06 21:36:47,908 INFO  Initiating to process and prepare Input for the verify service
2019-03-06 21:36:47,908 INFO  Starting to parse the user solution
2019-03-06 21:36:47,909 INFO  Displaying user solution
2019-03-06 21:36:47,975 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-13\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Classroom:\r\n    classroom_list = []\r\n    @staticmethod\r\n    def search_classroom(class_room):\r\n        i=\" \"\r\n        if(i in Classroom.classroom_list==class_room):\r\n            return \"Found\"\r\n        else:\r\n            return -1\r\n\r\nclassroom_list=['G015', 'G066', 'L123', 'L135', 'L143', 'L13'] \r\nClassroom.search_classroom('L123')          \r\n","asgnmtId":"13","SolutionFileName":"Assign13.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-06 21:36:47,975 INFO  Successfully processed and prepared the input for the verify service
2019-03-06 21:36:47,975 INFO  Successfully set the request parameters for VerifySolution
2019-03-06 21:36:47,975 INFO  Invoking the service to verify the user solution
2019-03-06 21:36:47,976 INFO  Time before invoking service:Wed Mar 06 21:36:47 IST 2019
2019-03-06 21:36:47,976 INFO  Initialising service address for VerifySolution
2019-03-06 21:36:47,976 INFO  Time before invoking service In SUPER:Wed Mar 06 21:36:47 IST 2019
2019-03-06 21:36:48,800 INFO  Time after invoking service In SUPER:Wed Mar 06 21:36:48 IST 2019
2019-03-06 21:36:48,800 INFO  Service responded successfully with required details
2019-03-06 21:36:48,801 INFO  Time after invoking service:Wed Mar 06 21:36:48 IST 2019
2019-03-06 21:36:48,801 INFO  User solution successfully verified
2019-03-06 21:36:48,801 INFO  Processing the response from verify service
2019-03-06 21:36:48,802 INFO  Starting to parse JSON response
2019-03-06 21:36:48,803 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 21:36:48,803 ERROR Keys used to parse test result JSON might be incorrect
2019-03-06 21:36:48,804 INFO  Successfully parsed JSON response
2019-03-06 21:36:48,804 INFO  In the process of generating verify response in HTML
2019-03-06 21:36:48,878 INFO  Successfully generated verify response in HTML
2019-03-06 21:36:48,878 INFO  Successfully processed the response from service
