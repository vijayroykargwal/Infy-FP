2019-02-21 14:58:01,351 INFO  Loading Baseframework Plugin
2019-02-21 14:58:01,354 INFO  Initializing the platform to load the Menu - HandsOn
2019-02-21 14:58:01,360 INFO  Loading the Menu - HandsOn
2019-02-21 14:58:01,392 INFO  Successfully loaded the Menu - HandsOn
2019-02-21 15:15:52,537 INFO  Loading Programming Assignment Plugin
2019-02-21 15:15:52,538 INFO  Creating Layout for the perspective : 
2019-02-21 15:15:52,541 INFO  Creating Layout for the perspective : Programming Assignment V4.1
2019-02-21 15:15:52,546 INFO  Successfully created Layout for the perspective : Programming Assignment V4.1
2019-02-21 15:15:52,546 INFO  Successfully created Layout for the perspective : 
2019-02-21 15:17:54,453 INFO  Verification Failed : Incorrect #tag
->Please provide the correct #tag in thefirst line as per ILP starter code
2019-02-21 15:18:42,456 INFO  Verification Failed : Incorrect #tag
->Please provide the correct #tag in thefirst line as per ILP starter code
2019-02-21 15:18:57,675 INFO  Verification Failed : Incorrect #tag
->Please provide the correct #tag in thefirst line as per ILP starter code
2019-02-21 15:36:15,424 INFO  Setting request parameters for VerifySolution
2019-02-21 15:36:15,424 INFO  Initiating to process and prepare Input for the verify service
2019-02-21 15:36:15,429 INFO  Starting to parse the user solution
2019-02-21 15:36:15,431 INFO  Displaying user solution
2019-02-21 15:36:15,536 INFO  Successfully parsed the user solution{"CourseShortName":"PF","UserSolution":"#PF-Assgn-15\r\ndef find_product(num1,num2,num3):\r\n    product=0\r\n    if(num1==7):\r\n        product = num2*num3\r\n    elif(num2==7):\r\n        product = num3\r\n    \r\n    elif(num3==7):\r\n         product = -1\r\n   \r\n    else:\r\n        product = num1*num2*num3    \r\n    \r\n    return product\r\n\r\n#Provide different values for num1, num2, num3 and test your program\r\nproduct=find_product(7,6,2)\r\nprint(product)\r\n","asgnmtId":"15","SolutionFileName":"sample.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-02-21 15:36:15,536 INFO  Successfully processed and prepared the input for the verify service
2019-02-21 15:36:15,536 INFO  Successfully set the request parameters for VerifySolution
2019-02-21 15:36:15,536 INFO  Invoking the service to verify the user solution
2019-02-21 15:36:15,537 INFO  Time before invoking service:Thu Feb 21 15:36:15 IST 2019
2019-02-21 15:36:15,538 INFO  Initialising service address for VerifySolution
2019-02-21 15:36:15,538 INFO  Time before invoking service In SUPER:Thu Feb 21 15:36:15 IST 2019
2019-02-21 15:36:16,517 INFO  Time after invoking service In SUPER:Thu Feb 21 15:36:16 IST 2019
2019-02-21 15:36:16,517 INFO  Service responded successfully with required details
2019-02-21 15:36:16,517 INFO  Time after invoking service:Thu Feb 21 15:36:16 IST 2019
2019-02-21 15:36:16,518 INFO  User solution successfully verified
2019-02-21 15:36:16,518 INFO  Processing the response from verify service
2019-02-21 15:36:16,524 INFO  Starting to parse JSON response
2019-02-21 15:36:16,528 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 15:36:16,528 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 15:36:16,528 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 15:36:16,528 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 15:36:16,532 INFO  Successfully parsed JSON response
2019-02-21 15:36:16,533 INFO  In the process of generating verify response in HTML
2019-02-21 15:36:16,631 INFO  Successfully generated verify response in HTML
2019-02-21 15:36:16,631 INFO  Successfully processed the response from service
2019-02-21 15:36:41,840 INFO  Initiating to process and prepare Input for the submit service
2019-02-21 15:36:41,843 INFO  Displaying user solution
2019-02-21 15:36:41,856 INFO  Successfully processed and prepared the input for the submit service
2019-02-21 15:36:41,856 INFO  Invoking the service to submit the user solution
2019-02-21 15:36:41,856 INFO  Initialising service address for Submit
2019-02-21 15:36:41,857 INFO  Time before invoking service In SUPER:Thu Feb 21 15:36:41 IST 2019
2019-02-21 15:36:42,207 INFO  Time after invoking service In SUPER:Thu Feb 21 15:36:42 IST 2019
2019-02-21 15:36:42,207 INFO  Service responded successfully with required details
2019-02-21 15:36:42,208 INFO  User solution successfully submitted
2019-02-21 15:36:42,208 INFO  Displaying submission status
2019-02-21 15:36:42,208 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-02-21 15:38:20,612 INFO  Setting request parameters for VerifySolution
2019-02-21 15:38:20,612 INFO  Initiating to process and prepare Input for the verify service
2019-02-21 15:38:20,612 INFO  Starting to parse the user solution
2019-02-21 15:38:20,613 INFO  Displaying user solution
2019-02-21 15:38:20,649 INFO  Successfully parsed the user solution{"CourseShortName":"PF","UserSolution":"#PF-Assgn-15\r\ndef find_product(num1,num2,num3):\r\n    product=0\r\n    if(num1==7):\r\n        product = num2*num3\r\n    elif(num2==7):\r\n        product = num3\r\n    \r\n    elif(num3==7):\r\n         product = -1\r\n   \r\n    else:\r\n        product = num1*num2*num3    \r\n    \r\n    return product\r\n\r\n#Provide different values for num1, num2, num3 and test your program\r\nproduct=find_product(7,6,2)\r\nprint(product)\r\n","asgnmtId":"15","SolutionFileName":"sample.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-02-21 15:38:20,650 INFO  Successfully processed and prepared the input for the verify service
2019-02-21 15:38:20,650 INFO  Successfully set the request parameters for VerifySolution
2019-02-21 15:38:20,650 INFO  Invoking the service to verify the user solution
2019-02-21 15:38:20,650 INFO  Time before invoking service:Thu Feb 21 15:38:20 IST 2019
2019-02-21 15:38:20,650 INFO  Initialising service address for VerifySolution
2019-02-21 15:38:20,651 INFO  Time before invoking service In SUPER:Thu Feb 21 15:38:20 IST 2019
2019-02-21 15:38:21,539 INFO  Time after invoking service In SUPER:Thu Feb 21 15:38:21 IST 2019
2019-02-21 15:38:21,540 INFO  Service responded successfully with required details
2019-02-21 15:38:21,540 INFO  Time after invoking service:Thu Feb 21 15:38:21 IST 2019
2019-02-21 15:38:21,541 INFO  User solution successfully verified
2019-02-21 15:38:21,541 INFO  Processing the response from verify service
2019-02-21 15:38:21,542 INFO  Starting to parse JSON response
2019-02-21 15:38:21,596 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 15:38:21,597 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 15:38:21,597 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 15:38:21,597 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 15:38:21,599 INFO  Successfully parsed JSON response
2019-02-21 15:38:21,599 INFO  In the process of generating verify response in HTML
2019-02-21 15:38:21,669 INFO  Successfully generated verify response in HTML
2019-02-21 15:38:21,669 INFO  Successfully processed the response from service
2019-02-21 15:38:27,279 INFO  Initiating to process and prepare Input for the submit service
2019-02-21 15:38:27,280 INFO  Displaying user solution
2019-02-21 15:38:27,290 INFO  Successfully processed and prepared the input for the submit service
2019-02-21 15:38:27,290 INFO  Invoking the service to submit the user solution
2019-02-21 15:38:27,290 INFO  Initialising service address for Submit
2019-02-21 15:38:27,291 INFO  Time before invoking service In SUPER:Thu Feb 21 15:38:27 IST 2019
2019-02-21 15:38:27,679 INFO  Time after invoking service In SUPER:Thu Feb 21 15:38:27 IST 2019
2019-02-21 15:38:27,679 INFO  Service responded successfully with required details
2019-02-21 15:38:27,679 INFO  User solution successfully submitted
2019-02-21 15:38:27,680 INFO  Displaying submission status
2019-02-21 15:38:27,680 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-02-21 15:40:11,716 INFO  Setting request parameters for VerifySolution
2019-02-21 15:40:11,716 INFO  Initiating to process and prepare Input for the verify service
2019-02-21 15:40:11,716 INFO  Starting to parse the user solution
2019-02-21 15:40:11,716 INFO  Displaying user solution
2019-02-21 15:40:11,749 INFO  Successfully parsed the user solution{"CourseShortName":"PF","UserSolution":"#PF-Assgn-15\r\ndef find_product(num1,num2,num3):\r\n    product=0\r\n    if(num1==7):\r\n        product = num2*num3\r\n    elif(num2==7):\r\n        product = num3\r\n    \r\n    elif(num3==7):\r\n         product = 0\r\n   \r\n    else:\r\n        product = num1*num2*num3    \r\n    \r\n    return product\r\n\r\n#Provide different values for num1, num2, num3 and test your program\r\nproduct=find_product(7,6,2)\r\nprint(product)\r\n","asgnmtId":"15","SolutionFileName":"sample.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-02-21 15:40:11,749 INFO  Successfully processed and prepared the input for the verify service
2019-02-21 15:40:11,750 INFO  Successfully set the request parameters for VerifySolution
2019-02-21 15:40:11,750 INFO  Invoking the service to verify the user solution
2019-02-21 15:40:11,750 INFO  Time before invoking service:Thu Feb 21 15:40:11 IST 2019
2019-02-21 15:40:11,750 INFO  Initialising service address for VerifySolution
2019-02-21 15:40:11,751 INFO  Time before invoking service In SUPER:Thu Feb 21 15:40:11 IST 2019
2019-02-21 15:40:12,683 INFO  Time after invoking service In SUPER:Thu Feb 21 15:40:12 IST 2019
2019-02-21 15:40:12,684 INFO  Service responded successfully with required details
2019-02-21 15:40:12,684 INFO  Time after invoking service:Thu Feb 21 15:40:12 IST 2019
2019-02-21 15:40:12,684 INFO  User solution successfully verified
2019-02-21 15:40:12,684 INFO  Processing the response from verify service
2019-02-21 15:40:12,685 INFO  Starting to parse JSON response
2019-02-21 15:40:12,686 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 15:40:12,686 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 15:40:12,686 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 15:40:12,687 INFO  Successfully parsed JSON response
2019-02-21 15:40:12,687 INFO  In the process of generating verify response in HTML
2019-02-21 15:40:12,758 INFO  Successfully generated verify response in HTML
2019-02-21 15:40:12,759 INFO  Successfully processed the response from service
2019-02-21 15:40:55,119 INFO  Setting request parameters for VerifySolution
2019-02-21 15:40:55,120 INFO  Initiating to process and prepare Input for the verify service
2019-02-21 15:40:55,120 INFO  Starting to parse the user solution
2019-02-21 15:40:55,120 INFO  Displaying user solution
2019-02-21 15:40:55,144 INFO  Successfully parsed the user solution{"CourseShortName":"PF","UserSolution":"#PF-Assgn-15\r\ndef find_product(num1,num2,num3):\r\n    product=0\r\n    if(num1==7):\r\n        product = num2*num3\r\n    elif(num2==7):\r\n        product = num3\r\n    \r\n    elif(num3==7):\r\n         product = none\r\n   \r\n    else:\r\n        product = num1*num2*num3    \r\n    \r\n    return product\r\n\r\n#Provide different values for num1, num2, num3 and test your program\r\nproduct=find_product(7,6,2)\r\nprint(product)\r\n","asgnmtId":"15","SolutionFileName":"sample.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-02-21 15:40:55,144 INFO  Successfully processed and prepared the input for the verify service
2019-02-21 15:40:55,144 INFO  Successfully set the request parameters for VerifySolution
2019-02-21 15:40:55,145 INFO  Invoking the service to verify the user solution
2019-02-21 15:40:55,145 INFO  Time before invoking service:Thu Feb 21 15:40:55 IST 2019
2019-02-21 15:40:55,145 INFO  Initialising service address for VerifySolution
2019-02-21 15:40:55,146 INFO  Time before invoking service In SUPER:Thu Feb 21 15:40:55 IST 2019
2019-02-21 15:40:56,064 INFO  Time after invoking service In SUPER:Thu Feb 21 15:40:56 IST 2019
2019-02-21 15:40:56,064 INFO  Service responded successfully with required details
2019-02-21 15:40:56,064 INFO  Time after invoking service:Thu Feb 21 15:40:56 IST 2019
2019-02-21 15:40:56,064 INFO  User solution successfully verified
2019-02-21 15:40:56,064 INFO  Processing the response from verify service
2019-02-21 15:40:56,065 INFO  Starting to parse JSON response
2019-02-21 15:40:56,065 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 15:40:56,065 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 15:40:56,066 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 15:40:56,067 INFO  Successfully parsed JSON response
2019-02-21 15:40:56,067 INFO  In the process of generating verify response in HTML
2019-02-21 15:40:56,147 INFO  Successfully generated verify response in HTML
2019-02-21 15:40:56,147 INFO  Successfully processed the response from service
2019-02-21 15:41:16,160 INFO  Setting request parameters for VerifySolution
2019-02-21 15:41:16,160 INFO  Initiating to process and prepare Input for the verify service
2019-02-21 15:41:16,160 INFO  Starting to parse the user solution
2019-02-21 15:41:16,161 INFO  Displaying user solution
2019-02-21 15:41:16,195 INFO  Successfully parsed the user solution{"CourseShortName":"PF","UserSolution":"#PF-Assgn-15\r\ndef find_product(num1,num2,num3):\r\n    product=0\r\n    if(num1==7):\r\n        product = num2*num3\r\n    elif(num2==7):\r\n        product = num3\r\n    \r\n    elif(num3==7):\r\n         product = -1\r\n   \r\n    else:\r\n        product = num1*num2*num3    \r\n    \r\n    return product\r\n\r\n#Provide different values for num1, num2, num3 and test your program\r\nproduct=find_product(7,6,2)\r\nprint(product)\r\n","asgnmtId":"15","SolutionFileName":"sample.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-02-21 15:41:16,197 INFO  Successfully processed and prepared the input for the verify service
2019-02-21 15:41:16,197 INFO  Successfully set the request parameters for VerifySolution
2019-02-21 15:41:16,197 INFO  Invoking the service to verify the user solution
2019-02-21 15:41:16,198 INFO  Time before invoking service:Thu Feb 21 15:41:16 IST 2019
2019-02-21 15:41:16,198 INFO  Initialising service address for VerifySolution
2019-02-21 15:41:16,200 INFO  Time before invoking service In SUPER:Thu Feb 21 15:41:16 IST 2019
2019-02-21 15:41:17,152 INFO  Time after invoking service In SUPER:Thu Feb 21 15:41:17 IST 2019
2019-02-21 15:41:17,152 INFO  Service responded successfully with required details
2019-02-21 15:41:17,153 INFO  Time after invoking service:Thu Feb 21 15:41:17 IST 2019
2019-02-21 15:41:17,153 INFO  User solution successfully verified
2019-02-21 15:41:17,153 INFO  Processing the response from verify service
2019-02-21 15:41:17,157 INFO  Starting to parse JSON response
2019-02-21 15:41:17,159 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 15:41:17,159 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 15:41:17,159 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 15:41:17,159 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 15:41:17,161 INFO  Successfully parsed JSON response
2019-02-21 15:41:17,161 INFO  In the process of generating verify response in HTML
2019-02-21 15:41:17,248 INFO  Successfully generated verify response in HTML
2019-02-21 15:41:17,248 INFO  Successfully processed the response from service
2019-02-21 15:41:33,369 INFO  Setting request parameters for VerifySolution
2019-02-21 15:41:33,370 INFO  Initiating to process and prepare Input for the verify service
2019-02-21 15:41:33,370 INFO  Starting to parse the user solution
2019-02-21 15:41:33,370 INFO  Displaying user solution
2019-02-21 15:41:33,399 INFO  Successfully parsed the user solution{"CourseShortName":"PF","UserSolution":"#PF-Assgn-15\r\ndef find_product(num1,num2,num3):\r\n    product=0\r\n    if(num1==7):\r\n        product = num2*num3\r\n    elif(num2==7):\r\n        product = num3\r\n    \r\n    elif(num3==7):\r\n         product = -1\r\n   \r\n    else:\r\n        product = num1*num2*num3    \r\n    \r\n    return product\r\n\r\n#Provide different values for num1, num2, num3 and test your program\r\nproduct=find_product(7,6,2)\r\nprint(product)\r\n","asgnmtId":"15","SolutionFileName":"sample.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-02-21 15:41:33,400 INFO  Successfully processed and prepared the input for the verify service
2019-02-21 15:41:33,400 INFO  Successfully set the request parameters for VerifySolution
2019-02-21 15:41:33,400 INFO  Invoking the service to verify the user solution
2019-02-21 15:41:33,400 INFO  Time before invoking service:Thu Feb 21 15:41:33 IST 2019
2019-02-21 15:41:33,401 INFO  Initialising service address for VerifySolution
2019-02-21 15:41:33,401 INFO  Time before invoking service In SUPER:Thu Feb 21 15:41:33 IST 2019
2019-02-21 15:41:34,781 INFO  Time after invoking service In SUPER:Thu Feb 21 15:41:34 IST 2019
2019-02-21 15:41:34,781 INFO  Service responded successfully with required details
2019-02-21 15:41:34,782 INFO  Time after invoking service:Thu Feb 21 15:41:34 IST 2019
2019-02-21 15:41:34,782 INFO  User solution successfully verified
2019-02-21 15:41:34,782 INFO  Processing the response from verify service
2019-02-21 15:41:34,783 INFO  Starting to parse JSON response
2019-02-21 15:41:34,784 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 15:41:34,784 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 15:41:34,784 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 15:41:34,784 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 15:41:34,785 INFO  Successfully parsed JSON response
2019-02-21 15:41:34,786 INFO  In the process of generating verify response in HTML
2019-02-21 15:41:34,866 INFO  Successfully generated verify response in HTML
2019-02-21 15:41:34,866 INFO  Successfully processed the response from service
2019-02-21 15:41:37,912 INFO  Initiating to process and prepare Input for the submit service
2019-02-21 15:41:37,913 INFO  Displaying user solution
2019-02-21 15:41:37,922 INFO  Successfully processed and prepared the input for the submit service
2019-02-21 15:41:37,922 INFO  Invoking the service to submit the user solution
2019-02-21 15:41:37,922 INFO  Initialising service address for Submit
2019-02-21 15:41:37,923 INFO  Time before invoking service In SUPER:Thu Feb 21 15:41:37 IST 2019
2019-02-21 15:41:38,060 INFO  Time after invoking service In SUPER:Thu Feb 21 15:41:38 IST 2019
2019-02-21 15:41:38,061 INFO  Service responded successfully with required details
2019-02-21 15:41:38,061 INFO  User solution successfully submitted
2019-02-21 15:41:38,061 INFO  Displaying submission status
2019-02-21 15:41:38,061 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-02-21 16:08:35,026 INFO  Verification Failed : Incorrect #tag
->Please provide the correct #tag in thefirst line as per ILP starter code
2019-02-21 16:08:47,889 INFO  Verification Failed : Incorrect #tag
->Please provide the correct #tag in thefirst line as per ILP starter code
2019-02-21 16:08:53,029 INFO  Setting request parameters for VerifySolution
2019-02-21 16:08:53,029 INFO  Initiating to process and prepare Input for the verify service
2019-02-21 16:08:53,029 INFO  Starting to parse the user solution
2019-02-21 16:08:53,030 INFO  Displaying user solution
2019-02-21 16:08:53,080 INFO  Successfully parsed the user solution{"CourseShortName":"PF","UserSolution":"#PF-Assgn-16\r\n'''\r\nCreated on Feb 21, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\ndef make_amount(rupees_to_make,no_of_five,no_of_one):\r\n    five_needed=0\r\n    one_needed=0\r\n\r\n    #Start writing your code here\r\n    five_needed =int (rupees_to_make/5)\r\n    one_needed = (rupees_to_make%5)\r\n    #Populate the variables: five_needed and one_needed\r\n\r\n\r\n    # Use the below given print statements to display the output\r\n    # Also, do not modify them for verification to work\r\n    if (no_of_five>=five_needed and no_of_one>=one_needed):\r\n     print(\"No. of Five needed :\", five_needed)\r\n     print(\"No. of One needed  :\", one_needed)\r\n    else:\r\n     print(-1)\r\n\r\n\r\n#Provide different values for rupees_to_make,no_of_five,no_of_one and test your program\r\nmake_amount(19,3,3)\r\n","asgnmtId":"16","SolutionFileName":"Assignment16.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-02-21 16:08:53,081 INFO  Successfully processed and prepared the input for the verify service
2019-02-21 16:08:53,081 INFO  Successfully set the request parameters for VerifySolution
2019-02-21 16:08:53,081 INFO  Invoking the service to verify the user solution
2019-02-21 16:08:53,081 INFO  Time before invoking service:Thu Feb 21 16:08:53 IST 2019
2019-02-21 16:08:53,081 INFO  Initialising service address for VerifySolution
2019-02-21 16:08:53,082 INFO  Time before invoking service In SUPER:Thu Feb 21 16:08:53 IST 2019
2019-02-21 16:08:53,984 INFO  Time after invoking service In SUPER:Thu Feb 21 16:08:53 IST 2019
2019-02-21 16:08:53,985 INFO  Service responded successfully with required details
2019-02-21 16:08:53,985 INFO  Time after invoking service:Thu Feb 21 16:08:53 IST 2019
2019-02-21 16:08:53,985 INFO  User solution successfully verified
2019-02-21 16:08:53,986 INFO  Processing the response from verify service
2019-02-21 16:08:53,989 INFO  Starting to parse JSON response
2019-02-21 16:08:53,991 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 16:08:53,991 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 16:08:53,991 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 16:08:53,991 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 16:08:53,991 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 16:08:53,991 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 16:08:53,991 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 16:08:53,991 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 16:08:53,991 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 16:08:53,992 INFO  Successfully parsed JSON response
2019-02-21 16:08:53,993 INFO  In the process of generating verify response in HTML
2019-02-21 16:08:54,076 INFO  Successfully generated verify response in HTML
2019-02-21 16:08:54,076 INFO  Successfully processed the response from service
2019-02-21 16:13:47,825 INFO  Setting request parameters for VerifySolution
2019-02-21 16:13:47,825 INFO  Initiating to process and prepare Input for the verify service
2019-02-21 16:13:47,825 INFO  Starting to parse the user solution
2019-02-21 16:13:47,826 INFO  Displaying user solution
2019-02-21 16:13:47,863 INFO  Successfully parsed the user solution{"CourseShortName":"PF","UserSolution":"#PF-Assgn-16\r\n'''\r\nCreated on Feb 21, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\ndef make_amount(rupees_to_make,no_of_five,no_of_one):\r\n    five_needed=0\r\n    one_needed=0\r\n\r\n    #Start writing your code here\r\n    if(no_of_five>0 and no_of_one>0):\r\n     five_needed =int (rupees_to_make/5)\r\n     one_needed = (rupees_to_make%5)\r\n    #Populate the variables: five_needed and one_needed\r\n\r\n\r\n    # Use the below given print statements to display the output\r\n    # Also, do not modify them for verification to work\r\n\r\n    if (no_of_five>=five_needed and no_of_one>=one_needed):\r\n     print(\"No. of Five needed :\", five_needed)\r\n     print(\"No. of One needed  :\", one_needed)\r\n    else:\r\n     print(-1)\r\n\r\n\r\n#Provide different values for rupees_to_make,no_of_five,no_of_one and test your program\r\nmake_amount(19,3,3)\r\n","asgnmtId":"16","SolutionFileName":"Assignment16.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-02-21 16:13:47,864 INFO  Successfully processed and prepared the input for the verify service
2019-02-21 16:13:47,864 INFO  Successfully set the request parameters for VerifySolution
2019-02-21 16:13:47,864 INFO  Invoking the service to verify the user solution
2019-02-21 16:13:47,864 INFO  Time before invoking service:Thu Feb 21 16:13:47 IST 2019
2019-02-21 16:13:47,864 INFO  Initialising service address for VerifySolution
2019-02-21 16:13:47,865 INFO  Time before invoking service In SUPER:Thu Feb 21 16:13:47 IST 2019
2019-02-21 16:13:48,877 INFO  Time after invoking service In SUPER:Thu Feb 21 16:13:48 IST 2019
2019-02-21 16:13:48,878 INFO  Service responded successfully with required details
2019-02-21 16:13:48,878 INFO  Time after invoking service:Thu Feb 21 16:13:48 IST 2019
2019-02-21 16:13:48,878 INFO  User solution successfully verified
2019-02-21 16:13:48,878 INFO  Processing the response from verify service
2019-02-21 16:13:48,883 INFO  Starting to parse JSON response
2019-02-21 16:13:48,884 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 16:13:48,884 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 16:13:48,884 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 16:13:48,884 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 16:13:48,884 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 16:13:48,884 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 16:13:48,884 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 16:13:48,885 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 16:13:48,885 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 16:13:48,885 INFO  Successfully parsed JSON response
2019-02-21 16:13:48,885 INFO  In the process of generating verify response in HTML
2019-02-21 16:13:48,959 INFO  Successfully generated verify response in HTML
2019-02-21 16:13:48,959 INFO  Successfully processed the response from service
2019-02-21 16:15:26,260 INFO  Setting request parameters for VerifySolution
2019-02-21 16:15:26,260 INFO  Initiating to process and prepare Input for the verify service
2019-02-21 16:15:26,260 INFO  Starting to parse the user solution
2019-02-21 16:15:26,261 INFO  Displaying user solution
2019-02-21 16:15:26,296 INFO  Successfully parsed the user solution{"CourseShortName":"PF","UserSolution":"#PF-Assgn-16\r\n'''\r\nCreated on Feb 21, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\ndef make_amount(rupees_to_make,no_of_five,no_of_one):\r\n    five_needed=0\r\n    one_needed=0\r\n\r\n    #Start writing your code here\r\n    if(no_of_five>0 and no_of_one>0):\r\n     five_needed =int (rupees_to_make/5)\r\n     one_needed = (rupees_to_make%5)\r\n    #Populate the variables: five_needed and one_needed\r\n\r\n\r\n    # Use the below given print statements to display the output\r\n    # Also, do not modify them for verification to work\r\n\r\n    if (no_of_five>=five_needed and no_of_one>=one_needed):\r\n     print(\"No. of Five needed :\", five_needed)\r\n     print(\"No. of One needed  :\", one_needed)\r\n    else:\r\n     print(-1)\r\n\r\n\r\n#Provide different values for rupees_to_make,no_of_five,no_of_one and test your program\r\nmake_amount(19,3,3)\r\n","asgnmtId":"16","SolutionFileName":"Assignment16.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-02-21 16:15:26,297 INFO  Successfully processed and prepared the input for the verify service
2019-02-21 16:15:26,297 INFO  Successfully set the request parameters for VerifySolution
2019-02-21 16:15:26,297 INFO  Invoking the service to verify the user solution
2019-02-21 16:15:26,297 INFO  Time before invoking service:Thu Feb 21 16:15:26 IST 2019
2019-02-21 16:15:26,297 INFO  Initialising service address for VerifySolution
2019-02-21 16:15:26,298 INFO  Time before invoking service In SUPER:Thu Feb 21 16:15:26 IST 2019
2019-02-21 16:15:27,138 INFO  Time after invoking service In SUPER:Thu Feb 21 16:15:27 IST 2019
2019-02-21 16:15:27,139 INFO  Service responded successfully with required details
2019-02-21 16:15:27,139 INFO  Time after invoking service:Thu Feb 21 16:15:27 IST 2019
2019-02-21 16:15:27,139 INFO  User solution successfully verified
2019-02-21 16:15:27,139 INFO  Processing the response from verify service
2019-02-21 16:15:27,142 INFO  Starting to parse JSON response
2019-02-21 16:15:27,143 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 16:15:27,143 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 16:15:27,143 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 16:15:27,143 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 16:15:27,143 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 16:15:27,143 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 16:15:27,143 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 16:15:27,143 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 16:15:27,143 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 16:15:27,145 INFO  Successfully parsed JSON response
2019-02-21 16:15:27,146 INFO  In the process of generating verify response in HTML
2019-02-21 16:15:27,218 INFO  Successfully generated verify response in HTML
2019-02-21 16:15:27,218 INFO  Successfully processed the response from service
2019-02-21 16:15:50,862 INFO  Setting request parameters for VerifySolution
2019-02-21 16:15:50,862 INFO  Initiating to process and prepare Input for the verify service
2019-02-21 16:15:50,862 INFO  Starting to parse the user solution
2019-02-21 16:15:50,863 INFO  Displaying user solution
2019-02-21 16:15:50,894 INFO  Successfully parsed the user solution{"CourseShortName":"PF","UserSolution":"#PF-Assgn-16\r\n'''\r\nCreated on Feb 21, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\ndef make_amount(rupees_to_make,no_of_five,no_of_one):\r\n    five_needed=0\r\n    one_needed=0\r\n\r\n    #Start writing your code here\r\n    if(no_of_five>0 and no_of_one>0):\r\n     five_needed =int (rupees_to_make/5)\r\n     one_needed = (rupees_to_make%5)\r\n    #Populate the variables: five_needed and one_needed\r\n\r\n\r\n    # Use the below given print statements to display the output\r\n    # Also, do not modify them for verification to work\r\n\r\n    if (no_of_five>=five_needed and no_of_one>=one_needed):\r\n     print(\"No. of Five needed :\", five_needed)\r\n     print(\"No. of One needed  :\", one_needed)\r\n    else:\r\n     print(-1)\r\n\r\n\r\n\r\nmake_amount(19,3,3)\r\n","asgnmtId":"16","SolutionFileName":"Assignment16.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-02-21 16:15:50,894 INFO  Successfully processed and prepared the input for the verify service
2019-02-21 16:15:50,895 INFO  Successfully set the request parameters for VerifySolution
2019-02-21 16:15:50,895 INFO  Invoking the service to verify the user solution
2019-02-21 16:15:50,895 INFO  Time before invoking service:Thu Feb 21 16:15:50 IST 2019
2019-02-21 16:15:50,895 INFO  Initialising service address for VerifySolution
2019-02-21 16:15:50,896 INFO  Time before invoking service In SUPER:Thu Feb 21 16:15:50 IST 2019
2019-02-21 16:15:51,799 INFO  Time after invoking service In SUPER:Thu Feb 21 16:15:51 IST 2019
2019-02-21 16:15:51,799 INFO  Service responded successfully with required details
2019-02-21 16:15:51,799 INFO  Time after invoking service:Thu Feb 21 16:15:51 IST 2019
2019-02-21 16:15:51,799 INFO  User solution successfully verified
2019-02-21 16:15:51,800 INFO  Processing the response from verify service
2019-02-21 16:15:51,801 INFO  Starting to parse JSON response
2019-02-21 16:15:51,802 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 16:15:51,802 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 16:15:51,802 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 16:15:51,802 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 16:15:51,802 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 16:15:51,802 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 16:15:51,802 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 16:15:51,802 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 16:15:51,802 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 16:15:51,803 INFO  Successfully parsed JSON response
2019-02-21 16:15:51,803 INFO  In the process of generating verify response in HTML
2019-02-21 16:15:51,879 INFO  Successfully generated verify response in HTML
2019-02-21 16:15:51,880 INFO  Successfully processed the response from service
2019-02-21 17:11:18,232 INFO  Setting request parameters for VerifySolution
2019-02-21 17:11:18,232 INFO  Initiating to process and prepare Input for the verify service
2019-02-21 17:11:18,232 INFO  Starting to parse the user solution
2019-02-21 17:11:18,233 INFO  Displaying user solution
2019-02-21 17:11:18,325 INFO  Successfully parsed the user solution{"CourseShortName":"PF","UserSolution":"#PF-Assgn-16\r\n'''\r\nCreated on Feb 21, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\ndef make_amount(rupees_to_make,no_of_five,no_of_one):\r\n    five_needed=0\r\n    one_needed=0\r\n    five_needed = rupees_to_make//5\r\n    one_needed = rupees_to_make%5\r\n    if(five_needed<=no_of_five and one_needed<=no_of_one):\r\n       print(\"No. of Five needed :\", five_needed)\r\n       print(\"No. of One needed  :\", one_needed)\r\n    elif(five_needed>no_of_five):\r\n      print(\"No. of Five needed :\", no_of_five )\r\n      print(\"No. of One needed  :\", one_needed + (five_needed-no_of_five))\r\n    elif(one_needed>no_of_one):\r\n        extra = one_needed - no_of_one\r\n        print(\"No. of Five needed :\", five_needed + (extra/5))\r\n        print(\"No. of One needed  :\", no_of_one)\r\n    else:\r\n        print(-1)\r\n    #Start writing your code here\r\n    #Populate the variables: five_needed and one_needed\r\n\r\n\r\n    # Use the below given print statements to display the output\r\n    # Also, do not modify them for verification to work\r\n\r\n    #print(\"No. of Five needed :\", five_needed)\r\n    #print(\"No. of One needed  :\", one_needed)\r\n    #print(-1)\r\nmake_amount(28,8,5)\r\n","asgnmtId":"16","SolutionFileName":"Assignment16.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-02-21 17:11:18,325 INFO  Successfully processed and prepared the input for the verify service
2019-02-21 17:11:18,325 INFO  Successfully set the request parameters for VerifySolution
2019-02-21 17:11:18,325 INFO  Invoking the service to verify the user solution
2019-02-21 17:11:18,326 INFO  Time before invoking service:Thu Feb 21 17:11:18 IST 2019
2019-02-21 17:11:18,326 INFO  Initialising service address for VerifySolution
2019-02-21 17:11:18,326 INFO  Time before invoking service In SUPER:Thu Feb 21 17:11:18 IST 2019
2019-02-21 17:11:19,296 INFO  Time after invoking service In SUPER:Thu Feb 21 17:11:19 IST 2019
2019-02-21 17:11:19,296 INFO  Service responded successfully with required details
2019-02-21 17:11:19,296 INFO  Time after invoking service:Thu Feb 21 17:11:19 IST 2019
2019-02-21 17:11:19,296 INFO  User solution successfully verified
2019-02-21 17:11:19,296 INFO  Processing the response from verify service
2019-02-21 17:11:19,299 INFO  Starting to parse JSON response
2019-02-21 17:11:19,300 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:11:19,300 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:11:19,300 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:11:19,300 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:11:19,300 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:11:19,301 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:11:19,301 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:11:19,301 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:11:19,301 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:11:19,301 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:11:19,302 INFO  Successfully parsed JSON response
2019-02-21 17:11:19,302 INFO  In the process of generating verify response in HTML
2019-02-21 17:11:19,415 INFO  Successfully generated verify response in HTML
2019-02-21 17:11:19,416 INFO  Successfully processed the response from service
2019-02-21 17:13:27,646 INFO  Setting request parameters for VerifySolution
2019-02-21 17:13:27,646 INFO  Initiating to process and prepare Input for the verify service
2019-02-21 17:13:27,646 INFO  Starting to parse the user solution
2019-02-21 17:13:27,647 INFO  Displaying user solution
2019-02-21 17:13:27,683 INFO  Successfully parsed the user solution{"CourseShortName":"PF","UserSolution":"#PF-Assgn-16\r\n'''\r\nCreated on Feb 21, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\ndef make_amount(rupees_to_make,no_of_five,no_of_one):\r\n    five_needed=0\r\n    one_needed=0\r\n    five_needed = rupees_to_make//5\r\n    one_needed = rupees_to_make%5\r\n    if(five_needed<=no_of_five and one_needed<=no_of_one):\r\n       print(\"No. of Five needed :\", five_needed)\r\n       print(\"No. of One needed  :\", one_needed)\r\n    elif(five_needed>no_of_five):\r\n      print(\"No. of Five needed :\", no_of_five )\r\n      print(\"No. of One needed  :\", one_needed + (five_needed-no_of_five))\r\n    elif(one_needed>no_of_one):\r\n         \r\n        print(\"No. of Five needed :\", five_needed + one_needed - no_of_one)\r\n        print(\"No. of One needed  :\", no_of_one)\r\n    else:\r\n        print(-1)\r\n    #Start writing your code here\r\n    #Populate the variables: five_needed and one_needed\r\n\r\n\r\n    # Use the below given print statements to display the output\r\n    # Also, do not modify them for verification to work\r\n\r\n    #print(\"No. of Five needed :\", five_needed)\r\n    #print(\"No. of One needed  :\", one_needed)\r\n    #print(-1)\r\nmake_amount(28,8,5)\r\n","asgnmtId":"16","SolutionFileName":"Assignment16.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-02-21 17:13:27,683 INFO  Successfully processed and prepared the input for the verify service
2019-02-21 17:13:27,683 INFO  Successfully set the request parameters for VerifySolution
2019-02-21 17:13:27,683 INFO  Invoking the service to verify the user solution
2019-02-21 17:13:27,684 INFO  Time before invoking service:Thu Feb 21 17:13:27 IST 2019
2019-02-21 17:13:27,684 INFO  Initialising service address for VerifySolution
2019-02-21 17:13:27,684 INFO  Time before invoking service In SUPER:Thu Feb 21 17:13:27 IST 2019
2019-02-21 17:13:28,765 INFO  Time after invoking service In SUPER:Thu Feb 21 17:13:28 IST 2019
2019-02-21 17:13:28,765 INFO  Service responded successfully with required details
2019-02-21 17:13:28,765 INFO  Time after invoking service:Thu Feb 21 17:13:28 IST 2019
2019-02-21 17:13:28,765 INFO  User solution successfully verified
2019-02-21 17:13:28,766 INFO  Processing the response from verify service
2019-02-21 17:13:28,768 INFO  Starting to parse JSON response
2019-02-21 17:13:28,770 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:13:28,770 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:13:28,770 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:13:28,770 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:13:28,770 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:13:28,770 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:13:28,770 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:13:28,770 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:13:28,770 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:13:28,770 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:13:28,771 INFO  Successfully parsed JSON response
2019-02-21 17:13:28,771 INFO  In the process of generating verify response in HTML
2019-02-21 17:13:28,842 INFO  Successfully generated verify response in HTML
2019-02-21 17:13:28,843 INFO  Successfully processed the response from service
2019-02-21 17:14:37,954 INFO  Setting request parameters for VerifySolution
2019-02-21 17:14:37,954 INFO  Initiating to process and prepare Input for the verify service
2019-02-21 17:14:37,955 INFO  Starting to parse the user solution
2019-02-21 17:14:37,955 INFO  Displaying user solution
2019-02-21 17:14:37,989 INFO  Successfully parsed the user solution{"CourseShortName":"PF","UserSolution":"#PF-Assgn-16\r\n'''\r\nCreated on Feb 21, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\ndef make_amount(rupees_to_make,no_of_five,no_of_one):\r\n    five_needed=0\r\n    one_needed=0\r\n    five_needed = rupees_to_make//5\r\n    one_needed = rupees_to_make%5\r\n    if(five_needed<=no_of_five and one_needed<=no_of_one):\r\n       print(\"No. of Five needed :\", five_needed)\r\n       print(\"No. of One needed  :\", one_needed)\r\n    elif(one_needed>no_of_five):\r\n      print(\"No. of Five needed :\", no_of_five )\r\n      print(\"No. of One needed  :\", one_needed + (five_needed-no_of_five))\r\n    elif(one_needed>no_of_one):\r\n         \r\n        print(\"No. of Five needed :\", five_needed + one_needed - no_of_one)\r\n        print(\"No. of One needed  :\", no_of_one)\r\n    else:\r\n        print(-1)\r\n    #Start writing your code here\r\n    #Populate the variables: five_needed and one_needed\r\n\r\n\r\n    # Use the below given print statements to display the output\r\n    # Also, do not modify them for verification to work\r\n\r\n    #print(\"No. of Five needed :\", five_needed)\r\n    #print(\"No. of One needed  :\", one_needed)\r\n    #print(-1)\r\nmake_amount(28,8,5)\r\n","asgnmtId":"16","SolutionFileName":"Assignment16.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-02-21 17:14:37,990 INFO  Successfully processed and prepared the input for the verify service
2019-02-21 17:14:37,990 INFO  Successfully set the request parameters for VerifySolution
2019-02-21 17:14:37,990 INFO  Invoking the service to verify the user solution
2019-02-21 17:14:37,991 INFO  Time before invoking service:Thu Feb 21 17:14:37 IST 2019
2019-02-21 17:14:37,991 INFO  Initialising service address for VerifySolution
2019-02-21 17:14:37,992 INFO  Time before invoking service In SUPER:Thu Feb 21 17:14:37 IST 2019
2019-02-21 17:14:38,999 INFO  Time after invoking service In SUPER:Thu Feb 21 17:14:38 IST 2019
2019-02-21 17:14:38,999 INFO  Service responded successfully with required details
2019-02-21 17:14:38,999 INFO  Time after invoking service:Thu Feb 21 17:14:38 IST 2019
2019-02-21 17:14:38,999 INFO  User solution successfully verified
2019-02-21 17:14:38,999 INFO  Processing the response from verify service
2019-02-21 17:14:39,002 INFO  Starting to parse JSON response
2019-02-21 17:14:39,004 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:14:39,004 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:14:39,004 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:14:39,004 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:14:39,004 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:14:39,004 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:14:39,004 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:14:39,004 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:14:39,004 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:14:39,004 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:14:39,005 INFO  Successfully parsed JSON response
2019-02-21 17:14:39,005 INFO  In the process of generating verify response in HTML
2019-02-21 17:14:39,073 INFO  Successfully generated verify response in HTML
2019-02-21 17:14:39,074 INFO  Successfully processed the response from service
2019-02-21 17:15:06,452 INFO  Setting request parameters for VerifySolution
2019-02-21 17:15:06,452 INFO  Initiating to process and prepare Input for the verify service
2019-02-21 17:15:06,452 INFO  Starting to parse the user solution
2019-02-21 17:15:06,453 INFO  Displaying user solution
2019-02-21 17:15:06,481 INFO  Successfully parsed the user solution{"CourseShortName":"PF","UserSolution":"#PF-Assgn-16\r\n'''\r\nCreated on Feb 21, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\ndef make_amount(rupees_to_make,no_of_five,no_of_one):\r\n    five_needed=0\r\n    one_needed=0\r\n    five_needed = rupees_to_make//5\r\n    one_needed = rupees_to_make%5\r\n    if(five_needed<=no_of_five and one_needed<=no_of_one):\r\n       print(\"No. of Five needed :\", five_needed)\r\n       print(\"No. of One needed  :\", one_needed)\r\n    elif(one_needed>no_of_five):\r\n      print(\"No. of Five needed :\", no_of_five )\r\n      print(\"No. of One needed  :\", one_needed + (five_needed-no_of_five))\r\n    elif(five_needed>no_of_one):\r\n         \r\n        print(\"No. of Five needed :\", five_needed + one_needed - no_of_one)\r\n        print(\"No. of One needed  :\", no_of_one)\r\n    else:\r\n        print(-1)\r\n    #Start writing your code here\r\n    #Populate the variables: five_needed and one_needed\r\n\r\n\r\n    # Use the below given print statements to display the output\r\n    # Also, do not modify them for verification to work\r\n\r\n    #print(\"No. of Five needed :\", five_needed)\r\n    #print(\"No. of One needed  :\", one_needed)\r\n    #print(-1)\r\nmake_amount(28,8,5)\r\n","asgnmtId":"16","SolutionFileName":"Assignment16.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-02-21 17:15:06,481 INFO  Successfully processed and prepared the input for the verify service
2019-02-21 17:15:06,482 INFO  Successfully set the request parameters for VerifySolution
2019-02-21 17:15:06,482 INFO  Invoking the service to verify the user solution
2019-02-21 17:15:06,482 INFO  Time before invoking service:Thu Feb 21 17:15:06 IST 2019
2019-02-21 17:15:06,482 INFO  Initialising service address for VerifySolution
2019-02-21 17:15:06,483 INFO  Time before invoking service In SUPER:Thu Feb 21 17:15:06 IST 2019
2019-02-21 17:15:07,489 INFO  Time after invoking service In SUPER:Thu Feb 21 17:15:07 IST 2019
2019-02-21 17:15:07,489 INFO  Service responded successfully with required details
2019-02-21 17:15:07,489 INFO  Time after invoking service:Thu Feb 21 17:15:07 IST 2019
2019-02-21 17:15:07,489 INFO  User solution successfully verified
2019-02-21 17:15:07,490 INFO  Processing the response from verify service
2019-02-21 17:15:07,491 INFO  Starting to parse JSON response
2019-02-21 17:15:07,492 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:15:07,492 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:15:07,492 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:15:07,492 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:15:07,492 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:15:07,492 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:15:07,492 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:15:07,492 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:15:07,492 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:15:07,492 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:15:07,493 INFO  Successfully parsed JSON response
2019-02-21 17:15:07,493 INFO  In the process of generating verify response in HTML
2019-02-21 17:15:07,567 INFO  Successfully generated verify response in HTML
2019-02-21 17:15:07,567 INFO  Successfully processed the response from service
2019-02-21 17:16:00,589 INFO  Setting request parameters for VerifySolution
2019-02-21 17:16:00,589 INFO  Initiating to process and prepare Input for the verify service
2019-02-21 17:16:00,589 INFO  Starting to parse the user solution
2019-02-21 17:16:00,590 INFO  Displaying user solution
2019-02-21 17:16:00,626 INFO  Successfully parsed the user solution{"CourseShortName":"PF","UserSolution":"#PF-Assgn-16\r\n'''\r\nCreated on Feb 21, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\ndef make_amount(rupees_to_make,no_of_five,no_of_one):\r\n    five_needed=0\r\n    one_needed=0\r\n    five_needed = rupees_to_make//5\r\n    one_needed = rupees_to_make%5\r\n    if(five_needed<=no_of_five and one_needed<=no_of_one):\r\n       print(\"No. of Five needed :\", five_needed)\r\n       print(\"No. of One needed  :\", one_needed)\r\n    elif(one_needed>no_of_five):\r\n      print(\"No. of Five needed :\", no_of_five )\r\n      print(\"No. of One needed  :\", one_needed + (five_needed-no_of_five))\r\n    elif(five_needed>no_of_one):\r\n         \r\n        print(\"No. of Five needed :\", five_needed)\r\n        print(\"No. of One needed  :\", no_of_one)\r\n    else:\r\n        print(-1)\r\n    #Start writing your code here\r\n    #Populate the variables: five_needed and one_needed\r\n\r\n\r\n    # Use the below given print statements to display the output\r\n    # Also, do not modify them for verification to work\r\n\r\n    #print(\"No. of Five needed :\", five_needed)\r\n    #print(\"No. of One needed  :\", one_needed)\r\n    #print(-1)\r\nmake_amount(28,8,5)\r\n","asgnmtId":"16","SolutionFileName":"Assignment16.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-02-21 17:16:00,626 INFO  Successfully processed and prepared the input for the verify service
2019-02-21 17:16:00,626 INFO  Successfully set the request parameters for VerifySolution
2019-02-21 17:16:00,627 INFO  Invoking the service to verify the user solution
2019-02-21 17:16:00,627 INFO  Time before invoking service:Thu Feb 21 17:16:00 IST 2019
2019-02-21 17:16:00,627 INFO  Initialising service address for VerifySolution
2019-02-21 17:16:00,627 INFO  Time before invoking service In SUPER:Thu Feb 21 17:16:00 IST 2019
2019-02-21 17:16:01,720 INFO  Time after invoking service In SUPER:Thu Feb 21 17:16:01 IST 2019
2019-02-21 17:16:01,720 INFO  Service responded successfully with required details
2019-02-21 17:16:01,720 INFO  Time after invoking service:Thu Feb 21 17:16:01 IST 2019
2019-02-21 17:16:01,720 INFO  User solution successfully verified
2019-02-21 17:16:01,720 INFO  Processing the response from verify service
2019-02-21 17:16:01,722 INFO  Starting to parse JSON response
2019-02-21 17:16:01,723 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:16:01,723 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:16:01,723 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:16:01,723 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:16:01,723 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:16:01,723 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:16:01,724 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:16:01,724 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:16:01,724 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:16:01,724 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:16:01,724 INFO  Successfully parsed JSON response
2019-02-21 17:16:01,725 INFO  In the process of generating verify response in HTML
2019-02-21 17:16:01,800 INFO  Successfully generated verify response in HTML
2019-02-21 17:16:01,800 INFO  Successfully processed the response from service
2019-02-21 17:16:07,532 INFO  Setting request parameters for VerifySolution
2019-02-21 17:16:07,532 INFO  Initiating to process and prepare Input for the verify service
2019-02-21 17:16:07,532 INFO  Starting to parse the user solution
2019-02-21 17:16:07,533 INFO  Displaying user solution
2019-02-21 17:16:07,562 INFO  Successfully parsed the user solution{"CourseShortName":"PF","UserSolution":"#PF-Assgn-16\r\n'''\r\nCreated on Feb 21, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\ndef make_amount(rupees_to_make,no_of_five,no_of_one):\r\n    five_needed=0\r\n    one_needed=0\r\n    five_needed = rupees_to_make//5\r\n    one_needed = rupees_to_make%5\r\n    if(five_needed<=no_of_five and one_needed<=no_of_one):\r\n       print(\"No. of Five needed :\", five_needed)\r\n       print(\"No. of One needed  :\", one_needed)\r\n    elif(one_needed>no_of_five):\r\n      print(\"No. of Five needed :\", no_of_five )\r\n      print(\"No. of One needed  :\", one_needed + (five_needed-no_of_five))\r\n    elif(five_needed>no_of_one):\r\n         \r\n        print(\"No. of Five needed :\", five_needed)\r\n        print(\"No. of One needed  :\", no_of_one)\r\n    else:\r\n        print(-1)\r\n    #Start writing your code here\r\n    #Populate the variables: five_needed and one_needed\r\n\r\n\r\n    # Use the below given print statements to display the output\r\n    # Also, do not modify them for verification to work\r\n\r\n    #print(\"No. of Five needed :\", five_needed)\r\n    #print(\"No. of One needed  :\", one_needed)\r\n    #print(-1)\r\nmake_amount(28,8,5)\r\n","asgnmtId":"16","SolutionFileName":"Assignment16.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-02-21 17:16:07,562 INFO  Successfully processed and prepared the input for the verify service
2019-02-21 17:16:07,563 INFO  Successfully set the request parameters for VerifySolution
2019-02-21 17:16:07,563 INFO  Invoking the service to verify the user solution
2019-02-21 17:16:07,563 INFO  Time before invoking service:Thu Feb 21 17:16:07 IST 2019
2019-02-21 17:16:07,563 INFO  Initialising service address for VerifySolution
2019-02-21 17:16:07,564 INFO  Time before invoking service In SUPER:Thu Feb 21 17:16:07 IST 2019
2019-02-21 17:16:08,433 INFO  Time after invoking service In SUPER:Thu Feb 21 17:16:08 IST 2019
2019-02-21 17:16:08,433 INFO  Service responded successfully with required details
2019-02-21 17:16:08,434 INFO  Time after invoking service:Thu Feb 21 17:16:08 IST 2019
2019-02-21 17:16:08,434 INFO  User solution successfully verified
2019-02-21 17:16:08,434 INFO  Processing the response from verify service
2019-02-21 17:16:08,436 INFO  Starting to parse JSON response
2019-02-21 17:16:08,438 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:16:08,438 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:16:08,438 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:16:08,438 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:16:08,438 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:16:08,438 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:16:08,438 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:16:08,438 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:16:08,438 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:16:08,438 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:16:08,439 INFO  Successfully parsed JSON response
2019-02-21 17:16:08,439 INFO  In the process of generating verify response in HTML
2019-02-21 17:16:08,522 INFO  Successfully generated verify response in HTML
2019-02-21 17:16:08,522 INFO  Successfully processed the response from service
2019-02-21 17:19:30,081 INFO  Setting request parameters for VerifySolution
2019-02-21 17:19:30,081 INFO  Initiating to process and prepare Input for the verify service
2019-02-21 17:19:30,081 INFO  Starting to parse the user solution
2019-02-21 17:19:30,082 INFO  Displaying user solution
2019-02-21 17:19:30,112 INFO  Successfully parsed the user solution{"CourseShortName":"PF","UserSolution":"#PF-Assgn-16\r\n'''\r\nCreated on Feb 21, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\ndef make_amount(rupees_to_make,no_of_five,no_of_one):\r\n    five_needed=0\r\n    one_needed=0\r\n    rupees_to_make=no_of_five*5+no_of_one*1\r\n    if(rupees_to_make//5<=no_of_five):\r\n        five_needed=rupees_to_make//5 \r\n        print(five_needed)\r\n        one_needed=rupees_to_make-(5*five_needed)\r\n        print(one_needed)\r\n    else:\r\n        print(\"-1\")\r\n\r\n    #Start writing your code here\r\n    #Populate the variables: five_needed and one_needed\r\n\r\n\r\n    # Use the below given print statements to display the output\r\n    # Also, do not modify them for verification to work\r\n\r\n    #print(\"No. of Five needed :\", five_needed)\r\n    #print(\"No. of One needed  :\", one_needed)\r\n    #print(-1)\r\nmake_amount(28,8,5)\r\n","asgnmtId":"16","SolutionFileName":"Assignment16.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-02-21 17:19:30,113 INFO  Successfully processed and prepared the input for the verify service
2019-02-21 17:19:30,113 INFO  Successfully set the request parameters for VerifySolution
2019-02-21 17:19:30,113 INFO  Invoking the service to verify the user solution
2019-02-21 17:19:30,113 INFO  Time before invoking service:Thu Feb 21 17:19:30 IST 2019
2019-02-21 17:19:30,113 INFO  Initialising service address for VerifySolution
2019-02-21 17:19:30,114 INFO  Time before invoking service In SUPER:Thu Feb 21 17:19:30 IST 2019
2019-02-21 17:19:30,775 INFO  Time after invoking service In SUPER:Thu Feb 21 17:19:30 IST 2019
2019-02-21 17:19:30,775 INFO  Service responded successfully with required details
2019-02-21 17:19:30,776 INFO  Time after invoking service:Thu Feb 21 17:19:30 IST 2019
2019-02-21 17:19:30,776 INFO  User solution successfully verified
2019-02-21 17:19:30,776 INFO  Processing the response from verify service
2019-02-21 17:19:30,780 INFO  Starting to parse JSON response
2019-02-21 17:19:30,782 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:19:30,782 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:19:30,782 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:19:30,782 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:19:30,782 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:19:30,782 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:19:30,782 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:19:30,783 INFO  Successfully parsed JSON response
2019-02-21 17:19:30,783 INFO  In the process of generating verify response in HTML
2019-02-21 17:19:30,870 INFO  Successfully generated verify response in HTML
2019-02-21 17:19:30,870 INFO  Successfully processed the response from service
2019-02-21 17:27:24,104 INFO  Setting request parameters for VerifySolution
2019-02-21 17:27:24,104 INFO  Initiating to process and prepare Input for the verify service
2019-02-21 17:27:24,104 INFO  Starting to parse the user solution
2019-02-21 17:27:24,105 INFO  Displaying user solution
2019-02-21 17:27:24,148 INFO  Successfully parsed the user solution{"CourseShortName":"PF","UserSolution":"#PF-Assgn-16\r\n'''\r\nCreated on Feb 21, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\ndef make_amount(rupees_to_make,no_of_five,no_of_one):\r\n    five_needed=0\r\n    one_needed=0\r\n    five_needed = rupees_to_make//5\r\n    one_needed = rupees_to_make%5\r\n    if(five_needed<=no_of_five and one_needed<=no_of_one):\r\n       print(\"No. of Five needed :\", five_needed)\r\n       print(\"No. of One needed  :\", one_needed)\r\n    elif(five_needed>no_of_five):\r\n      print(\"No. of Five needed :\", no_of_five )\r\n      print(\"No. of One needed  :\", one_needed + (five_needed-no_of_five))\r\n    elif(one_needed>no_of_one):\r\n         \r\n        print(\"No. of Five needed :\", five_needed)\r\n        print(\"No. of One needed  :\", no_of_one)\r\n    else:\r\n        print(-1)\r\n    #Start writing your code here\r\n    #Populate the variables: five_needed and one_needed\r\n\r\n\r\n    # Use the below given print statements to display the output\r\n    # Also, do not modify them for verification to work\r\n\r\n    #print(\"No. of Five needed :\", five_needed)\r\n    #print(\"No. of One needed  :\", one_needed)\r\n    #print(-1)\r\nmake_amount(28,8,5)\r\n","asgnmtId":"16","SolutionFileName":"Assignment16.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-02-21 17:27:24,149 INFO  Successfully processed and prepared the input for the verify service
2019-02-21 17:27:24,149 INFO  Successfully set the request parameters for VerifySolution
2019-02-21 17:27:24,149 INFO  Invoking the service to verify the user solution
2019-02-21 17:27:24,149 INFO  Time before invoking service:Thu Feb 21 17:27:24 IST 2019
2019-02-21 17:27:24,149 INFO  Initialising service address for VerifySolution
2019-02-21 17:27:24,150 INFO  Time before invoking service In SUPER:Thu Feb 21 17:27:24 IST 2019
2019-02-21 17:27:25,140 INFO  Time after invoking service In SUPER:Thu Feb 21 17:27:25 IST 2019
2019-02-21 17:27:25,141 INFO  Service responded successfully with required details
2019-02-21 17:27:25,141 INFO  Time after invoking service:Thu Feb 21 17:27:25 IST 2019
2019-02-21 17:27:25,141 INFO  User solution successfully verified
2019-02-21 17:27:25,142 INFO  Processing the response from verify service
2019-02-21 17:27:25,146 INFO  Starting to parse JSON response
2019-02-21 17:27:25,147 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:27:25,147 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:27:25,147 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:27:25,147 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:27:25,147 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:27:25,147 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:27:25,147 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:27:25,147 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:27:25,147 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:27:25,147 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:27:25,149 INFO  Successfully parsed JSON response
2019-02-21 17:27:25,149 INFO  In the process of generating verify response in HTML
2019-02-21 17:27:25,232 INFO  Successfully generated verify response in HTML
2019-02-21 17:27:25,232 INFO  Successfully processed the response from service
2019-02-21 17:28:47,304 INFO  Setting request parameters for VerifySolution
2019-02-21 17:28:47,304 INFO  Initiating to process and prepare Input for the verify service
2019-02-21 17:28:47,304 INFO  Starting to parse the user solution
2019-02-21 17:28:47,305 INFO  Displaying user solution
2019-02-21 17:28:47,331 INFO  Successfully parsed the user solution{"CourseShortName":"PF","UserSolution":"#PF-Assgn-16\r\n'''\r\nCreated on Feb 21, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\ndef make_amount(rupees_to_make,no_of_five,no_of_one):\r\n    five_needed=0\r\n    one_needed=0\r\n    five_needed = rupees_to_make//5\r\n    one_needed = rupees_to_make%5\r\n    if(five_needed<=no_of_five and one_needed<=no_of_one):\r\n       print(\"No. of Five needed :\", five_needed)\r\n       print(\"No. of One needed  :\", one_needed)\r\n    elif(five_needed>no_of_five):\r\n      print(\"No. of Five needed :\", no_of_five )\r\n      print(\"No. of One needed  :\", one_needed + (five_needed-no_of_five))\r\n    elif(one_needed>no_of_one):\r\n         \r\n        print(\"No. of Five needed :\", five_needed+one_needed-no_of_one)\r\n        print(\"No. of One needed  :\", no_of_one)\r\n    else:\r\n        print(-1)\r\n    #Start writing your code here\r\n    #Populate the variables: five_needed and one_needed\r\n\r\n\r\n    # Use the below given print statements to display the output\r\n    # Also, do not modify them for verification to work\r\n\r\n    #print(\"No. of Five needed :\", five_needed)\r\n    #print(\"No. of One needed  :\", one_needed)\r\n    #print(-1)\r\nmake_amount(28,8,5)\r\n","asgnmtId":"16","SolutionFileName":"Assignment16.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-02-21 17:28:47,332 INFO  Successfully processed and prepared the input for the verify service
2019-02-21 17:28:47,332 INFO  Successfully set the request parameters for VerifySolution
2019-02-21 17:28:47,332 INFO  Invoking the service to verify the user solution
2019-02-21 17:28:47,333 INFO  Time before invoking service:Thu Feb 21 17:28:47 IST 2019
2019-02-21 17:28:47,333 INFO  Initialising service address for VerifySolution
2019-02-21 17:28:47,333 INFO  Time before invoking service In SUPER:Thu Feb 21 17:28:47 IST 2019
2019-02-21 17:28:48,300 INFO  Time after invoking service In SUPER:Thu Feb 21 17:28:48 IST 2019
2019-02-21 17:28:48,301 INFO  Service responded successfully with required details
2019-02-21 17:28:48,301 INFO  Time after invoking service:Thu Feb 21 17:28:48 IST 2019
2019-02-21 17:28:48,301 INFO  User solution successfully verified
2019-02-21 17:28:48,302 INFO  Processing the response from verify service
2019-02-21 17:28:48,303 INFO  Starting to parse JSON response
2019-02-21 17:28:48,305 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:28:48,305 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:28:48,305 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:28:48,305 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:28:48,305 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:28:48,305 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:28:48,305 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:28:48,305 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:28:48,305 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:28:48,305 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:28:48,306 INFO  Successfully parsed JSON response
2019-02-21 17:28:48,306 INFO  In the process of generating verify response in HTML
2019-02-21 17:28:48,387 INFO  Successfully generated verify response in HTML
2019-02-21 17:28:48,387 INFO  Successfully processed the response from service
2019-02-21 17:31:29,987 INFO  Setting request parameters for VerifySolution
2019-02-21 17:31:29,987 INFO  Initiating to process and prepare Input for the verify service
2019-02-21 17:31:29,987 INFO  Starting to parse the user solution
2019-02-21 17:31:29,988 INFO  Displaying user solution
2019-02-21 17:31:30,024 INFO  Successfully parsed the user solution{"CourseShortName":"PF","UserSolution":"#PF-Assgn-16\r\n'''\r\nCreated on Feb 21, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\ndef make_amount(rupees_to_make,no_of_five,no_of_one):\r\n    five_needed=0\r\n    one_needed=0\r\n    five_needed = rupees_to_make//5\r\n    one_needed = rupees_to_make%5\r\n    if(five_needed<=no_of_five and one_needed<=no_of_one):\r\n       print(\"No. of Five needed :\", five_needed)\r\n       print(\"No. of One needed  :\", one_needed)\r\n    elif(five_needed>no_of_five):\r\n      print(\"No. of Five needed :\", no_of_five )\r\n      print(\"No. of One needed  :\", one_needed + (five_needed-no_of_five))\r\n    elif(one_needed>no_of_one):\r\n         \r\n        print(\"No. of Five needed :\", five_needed+one_needed-no_of_one)\r\n        print(\"No. of One needed  :\", no_of_one)\r\n    \r\n    else:\r\n        print(-1)\r\n    #Start writing your code here\r\n    #Populate the variables: five_needed and one_needed\r\n\r\n\r\n    # Use the below given print statements to display the output\r\n    # Also, do not modify them for verification to work\r\n\r\n    #print(\"No. of Five needed :\", five_needed)\r\n    #print(\"No. of One needed  :\", one_needed)\r\n    #print(-1)\r\nmake_amount(28,8,5)\r\n","asgnmtId":"16","SolutionFileName":"Assignment16.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-02-21 17:31:30,024 INFO  Successfully processed and prepared the input for the verify service
2019-02-21 17:31:30,025 INFO  Successfully set the request parameters for VerifySolution
2019-02-21 17:31:30,025 INFO  Invoking the service to verify the user solution
2019-02-21 17:31:30,025 INFO  Time before invoking service:Thu Feb 21 17:31:30 IST 2019
2019-02-21 17:31:30,025 INFO  Initialising service address for VerifySolution
2019-02-21 17:31:30,025 INFO  Time before invoking service In SUPER:Thu Feb 21 17:31:30 IST 2019
2019-02-21 17:31:31,061 INFO  Time after invoking service In SUPER:Thu Feb 21 17:31:31 IST 2019
2019-02-21 17:31:31,061 INFO  Service responded successfully with required details
2019-02-21 17:31:31,062 INFO  Time after invoking service:Thu Feb 21 17:31:31 IST 2019
2019-02-21 17:31:31,062 INFO  User solution successfully verified
2019-02-21 17:31:31,063 INFO  Processing the response from verify service
2019-02-21 17:31:31,064 INFO  Starting to parse JSON response
2019-02-21 17:31:31,066 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:31:31,066 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:31:31,066 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:31:31,066 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:31:31,066 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:31:31,066 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:31:31,066 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:31:31,066 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:31:31,066 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:31:31,066 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:31:31,068 INFO  Successfully parsed JSON response
2019-02-21 17:31:31,068 INFO  In the process of generating verify response in HTML
2019-02-21 17:31:31,149 INFO  Successfully generated verify response in HTML
2019-02-21 17:31:31,149 INFO  Successfully processed the response from service
2019-02-21 17:36:33,106 INFO  Setting request parameters for VerifySolution
2019-02-21 17:36:33,106 INFO  Initiating to process and prepare Input for the verify service
2019-02-21 17:36:33,107 INFO  Starting to parse the user solution
2019-02-21 17:36:33,107 INFO  Displaying user solution
2019-02-21 17:36:33,141 INFO  Successfully parsed the user solution{"CourseShortName":"PF","UserSolution":"#PF-Assgn-16\r\n'''\r\nCreated on Feb 21, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\ndef make_amount(rupees_to_make,no_of_five,no_of_one):\r\n    five_needed=0\r\n    one_needed=0\r\n    five_needed = rupees_to_make//5\r\n    one_needed = rupees_to_make-five_needed\r\n    if(five_needed<=no_of_five and one_needed<=no_of_one):\r\n       print(\"No. of Five needed :\", five_needed)\r\n       print(\"No. of One needed  :\", one_needed)\r\n    \r\n    else:\r\n        print(-1)\r\n    #Start writing your code here\r\n    #Populate the variables: five_needed and one_needed\r\n\r\n\r\n    # Use the below given print statements to display the output\r\n    # Also, do not modify them for verification to work\r\n\r\n    #print(\"No. of Five needed :\", five_needed)\r\n    #print(\"No. of One needed  :\", one_needed)\r\n    #print(-1)\r\nmake_amount(21,4,2)\r\n","asgnmtId":"16","SolutionFileName":"Assignment16.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-02-21 17:36:33,142 INFO  Successfully processed and prepared the input for the verify service
2019-02-21 17:36:33,142 INFO  Successfully set the request parameters for VerifySolution
2019-02-21 17:36:33,142 INFO  Invoking the service to verify the user solution
2019-02-21 17:36:33,142 INFO  Time before invoking service:Thu Feb 21 17:36:33 IST 2019
2019-02-21 17:36:33,142 INFO  Initialising service address for VerifySolution
2019-02-21 17:36:33,143 INFO  Time before invoking service In SUPER:Thu Feb 21 17:36:33 IST 2019
2019-02-21 17:36:34,027 INFO  Time after invoking service In SUPER:Thu Feb 21 17:36:34 IST 2019
2019-02-21 17:36:34,027 INFO  Service responded successfully with required details
2019-02-21 17:36:34,027 INFO  Time after invoking service:Thu Feb 21 17:36:34 IST 2019
2019-02-21 17:36:34,028 INFO  User solution successfully verified
2019-02-21 17:36:34,028 INFO  Processing the response from verify service
2019-02-21 17:36:34,031 INFO  Starting to parse JSON response
2019-02-21 17:36:34,032 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:36:34,032 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:36:34,032 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:36:34,032 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:36:34,032 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:36:34,033 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:36:34,033 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:36:34,033 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:36:34,033 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:36:34,033 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:36:34,034 INFO  Successfully parsed JSON response
2019-02-21 17:36:34,034 INFO  In the process of generating verify response in HTML
2019-02-21 17:36:34,102 INFO  Successfully generated verify response in HTML
2019-02-21 17:36:34,102 INFO  Successfully processed the response from service
2019-02-21 17:38:58,624 INFO  Setting request parameters for VerifySolution
2019-02-21 17:38:58,624 INFO  Initiating to process and prepare Input for the verify service
2019-02-21 17:38:58,625 INFO  Starting to parse the user solution
2019-02-21 17:38:58,625 INFO  Displaying user solution
2019-02-21 17:38:58,657 INFO  Successfully parsed the user solution{"CourseShortName":"PF","UserSolution":"#PF-Assgn-16\r\n'''\r\nCreated on Feb 21, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\ndef make_amount(rupees_to_make,no_of_five,no_of_one):\r\n    five_needed=rupees_to_make//5\r\n    one_needed=rupees_to_make%5\r\n    if(five_needed<=no_of_five and one_needed<=no_of_one):\r\n        print(\"No. of Five needed :\", five_needed)\r\n        print(\"No. of One needed  :\", one_needed)\r\n    elif(five_needed>no_of_five):\r\n        eone=5*(five_needed-no_of_five)\r\n        if(eone<=no_of_one):\r\n            print(\"No. of Five needed :\", no_of_five)\r\n            one2=one_needed+eone\r\n            print(\"No. of One needed  :\", one2)\r\n        else:\r\n            print(-1)\r\n    else:\r\n        print(-1)\r\n\r\n\r\n\r\n    #Start writing your code here\r\n    #Populate the variables: five_needed and one_needed\r\n\r\n\r\n    # Use the below given print statements to display the output\r\n    # Also, do not modify them for verification to work\r\n\r\n    #print(\"No. of Five needed :\", five_needed)\r\n    #print(\"No. of One needed  :\", one_needed)\r\n    #print(-1)\r\nmake_amount(105,20,5)\r\n","asgnmtId":"16","SolutionFileName":"Assignment16.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-02-21 17:38:58,657 INFO  Successfully processed and prepared the input for the verify service
2019-02-21 17:38:58,657 INFO  Successfully set the request parameters for VerifySolution
2019-02-21 17:38:58,657 INFO  Invoking the service to verify the user solution
2019-02-21 17:38:58,658 INFO  Time before invoking service:Thu Feb 21 17:38:58 IST 2019
2019-02-21 17:38:58,658 INFO  Initialising service address for VerifySolution
2019-02-21 17:38:58,658 INFO  Time before invoking service In SUPER:Thu Feb 21 17:38:58 IST 2019
2019-02-21 17:38:59,527 INFO  Time after invoking service In SUPER:Thu Feb 21 17:38:59 IST 2019
2019-02-21 17:38:59,527 INFO  Service responded successfully with required details
2019-02-21 17:38:59,528 INFO  Time after invoking service:Thu Feb 21 17:38:59 IST 2019
2019-02-21 17:38:59,528 INFO  User solution successfully verified
2019-02-21 17:38:59,528 INFO  Processing the response from verify service
2019-02-21 17:38:59,531 INFO  Starting to parse JSON response
2019-02-21 17:38:59,532 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:38:59,532 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:38:59,532 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:38:59,532 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:38:59,532 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:38:59,532 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:38:59,533 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:38:59,533 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:38:59,533 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:38:59,533 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:38:59,534 INFO  Successfully parsed JSON response
2019-02-21 17:38:59,535 INFO  In the process of generating verify response in HTML
2019-02-21 17:38:59,623 INFO  Successfully generated verify response in HTML
2019-02-21 17:38:59,623 INFO  Successfully processed the response from service
2019-02-21 17:42:53,212 INFO  Setting request parameters for VerifySolution
2019-02-21 17:42:53,212 INFO  Initiating to process and prepare Input for the verify service
2019-02-21 17:42:53,212 INFO  Starting to parse the user solution
2019-02-21 17:42:53,214 INFO  Displaying user solution
2019-02-21 17:42:53,248 INFO  Successfully parsed the user solution{"CourseShortName":"PF","UserSolution":"#PF-Assgn-16\r\n'''\r\nCreated on Feb 21, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\ndef make_amount(rupees_to_make,no_of_five,no_of_one):\r\n    five_needed=rupees_to_make//5\r\n    one_needed=rupees_to_make%5\r\n    if(five_needed<=no_of_five and one_needed<=no_of_one):\r\n        print(\"No. of Five needed :\", five_needed)\r\n        print(\"No. of One needed  :\", one_needed)\r\n    elif(five_needed>no_of_five):\r\n        error=5*(five_needed-no_of_five)\r\n        if(error<=no_of_one):\r\n            print(\"No. of Five needed :\", no_of_five)\r\n            print(\"No. of One needed  :\", one_needed+error)\r\n        else:\r\n            print(-1)\r\n    else:\r\n        print(-1)\r\n\r\n\r\n\r\n    #Start writing your code here\r\n    #Populate the variables: five_needed and one_needed\r\n\r\n\r\n    # Use the below given print statements to display the output\r\n    # Also, do not modify them for verification to work\r\n\r\n    #print(\"No. of Five needed :\", five_needed)\r\n    #print(\"No. of One needed  :\", one_needed)\r\n    #print(-1)\r\nmake_amount(28,8,5)\r\n","asgnmtId":"16","SolutionFileName":"Assignment16.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-02-21 17:42:53,249 INFO  Successfully processed and prepared the input for the verify service
2019-02-21 17:42:53,249 INFO  Successfully set the request parameters for VerifySolution
2019-02-21 17:42:53,249 INFO  Invoking the service to verify the user solution
2019-02-21 17:42:53,250 INFO  Time before invoking service:Thu Feb 21 17:42:53 IST 2019
2019-02-21 17:42:53,250 INFO  Initialising service address for VerifySolution
2019-02-21 17:42:53,250 INFO  Time before invoking service In SUPER:Thu Feb 21 17:42:53 IST 2019
2019-02-21 17:42:54,141 INFO  Time after invoking service In SUPER:Thu Feb 21 17:42:54 IST 2019
2019-02-21 17:42:54,141 INFO  Service responded successfully with required details
2019-02-21 17:42:54,142 INFO  Time after invoking service:Thu Feb 21 17:42:54 IST 2019
2019-02-21 17:42:54,142 INFO  User solution successfully verified
2019-02-21 17:42:54,142 INFO  Processing the response from verify service
2019-02-21 17:42:54,146 INFO  Starting to parse JSON response
2019-02-21 17:42:54,148 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:42:54,148 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:42:54,148 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:42:54,148 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:42:54,149 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:42:54,149 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:42:54,149 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:42:54,149 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:42:54,149 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:42:54,149 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:42:54,150 INFO  Successfully parsed JSON response
2019-02-21 17:42:54,151 INFO  In the process of generating verify response in HTML
2019-02-21 17:42:54,225 INFO  Successfully generated verify response in HTML
2019-02-21 17:42:54,225 INFO  Successfully processed the response from service
2019-02-21 17:48:49,962 INFO  Setting request parameters for VerifySolution
2019-02-21 17:48:49,962 INFO  Initiating to process and prepare Input for the verify service
2019-02-21 17:48:49,962 INFO  Starting to parse the user solution
2019-02-21 17:48:49,962 INFO  Displaying user solution
2019-02-21 17:48:49,998 INFO  Successfully parsed the user solution{"CourseShortName":"PF","UserSolution":"#PF-Assgn-16\r\n'''\r\nCreated on Feb 21, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\ndef make_amount(rupees_to_make,no_of_five,no_of_one):\r\n    five_needed=rupees_to_make//5\r\n    one_needed=rupees_to_make%5\r\n    if(five_needed<=no_of_five and one_needed<=no_of_one):\r\n        print(\"No. of Five needed :\", five_needed)\r\n        print(\"No. of One needed  :\", one_needed)\r\n    elif(five_needed>no_of_five):\r\n        error=5*(five_needed-no_of_five)\r\n        if(error<=no_of_one):\r\n            print(\"No. of Five needed :\", no_of_five)\r\n            print(\"No. of One needed  :\", one_needed+error)\r\n        else:\r\n            print(-1)\r\n    elif(one_needed>no_of_one):\r\n        error = (one_needed - no_of_one)//5\r\n        if(error<=no_of_five):\r\n          print(\"No. of Five needed :\", five_needed+error)\r\n          print(\"No. of One needed  :\", no_of_one)\r\n        else:\r\n            print(-1)  \r\n    else:\r\n        print(-1)\r\n\r\n\r\n\r\n    #Start writing your code here\r\n    #Populate the variables: five_needed and one_needed\r\n\r\n\r\n    # Use the below given print statements to display the output\r\n    # Also, do not modify them for verification to work\r\n\r\n    #print(\"No. of Five needed :\", five_needed)\r\n    #print(\"No. of One needed  :\", one_needed)\r\n    #print(-1)\r\nmake_amount(28,8,5)\r\n","asgnmtId":"16","SolutionFileName":"Assignment16.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-02-21 17:48:49,998 INFO  Successfully processed and prepared the input for the verify service
2019-02-21 17:48:49,998 INFO  Successfully set the request parameters for VerifySolution
2019-02-21 17:48:49,998 INFO  Invoking the service to verify the user solution
2019-02-21 17:48:49,999 INFO  Time before invoking service:Thu Feb 21 17:48:49 IST 2019
2019-02-21 17:48:49,999 INFO  Initialising service address for VerifySolution
2019-02-21 17:48:49,999 INFO  Time before invoking service In SUPER:Thu Feb 21 17:48:49 IST 2019
2019-02-21 17:48:50,904 INFO  Time after invoking service In SUPER:Thu Feb 21 17:48:50 IST 2019
2019-02-21 17:48:50,904 INFO  Service responded successfully with required details
2019-02-21 17:48:50,904 INFO  Time after invoking service:Thu Feb 21 17:48:50 IST 2019
2019-02-21 17:48:50,905 INFO  User solution successfully verified
2019-02-21 17:48:50,905 INFO  Processing the response from verify service
2019-02-21 17:48:50,908 INFO  Starting to parse JSON response
2019-02-21 17:48:50,910 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:48:50,910 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:48:50,910 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:48:50,910 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:48:50,910 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:48:50,910 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:48:50,910 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:48:50,911 INFO  Successfully parsed JSON response
2019-02-21 17:48:50,911 INFO  In the process of generating verify response in HTML
2019-02-21 17:48:50,991 INFO  Successfully generated verify response in HTML
2019-02-21 17:48:50,991 INFO  Successfully processed the response from service
2019-02-21 17:49:57,524 INFO  Setting request parameters for VerifySolution
2019-02-21 17:49:57,525 INFO  Initiating to process and prepare Input for the verify service
2019-02-21 17:49:57,525 INFO  Starting to parse the user solution
2019-02-21 17:49:57,526 INFO  Displaying user solution
2019-02-21 17:49:57,556 INFO  Successfully parsed the user solution{"CourseShortName":"PF","UserSolution":"#PF-Assgn-16\r\n'''\r\nCreated on Feb 21, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\ndef make_amount(rupees_to_make,no_of_five,no_of_one):\r\n    five_needed=rupees_to_make//5\r\n    one_needed=rupees_to_make%5\r\n    if(five_needed<=no_of_five and one_needed<=no_of_one):\r\n        print(\"No. of Five needed :\", five_needed)\r\n        print(\"No. of One needed  :\", one_needed)\r\n    elif(five_needed>no_of_five):\r\n        error=5*(five_needed-no_of_five)\r\n        if(error<=no_of_one):\r\n            print(\"No. of Five needed :\", no_of_five)\r\n            print(\"No. of One needed  :\", one_needed+error)\r\n        else:\r\n            print(-1)\r\n    \r\n    else:\r\n        print(-1)\r\n\r\n\r\n\r\n    #Start writing your code here\r\n    #Populate the variables: five_needed and one_needed\r\n\r\n\r\n    # Use the below given print statements to display the output\r\n    # Also, do not modify them for verification to work\r\n\r\n    #print(\"No. of Five needed :\", five_needed)\r\n    #print(\"No. of One needed  :\", one_needed)\r\n    #print(-1)\r\nmake_amount(28,8,5)\r\n","asgnmtId":"16","SolutionFileName":"Assignment16.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-02-21 17:49:57,557 INFO  Successfully processed and prepared the input for the verify service
2019-02-21 17:49:57,557 INFO  Successfully set the request parameters for VerifySolution
2019-02-21 17:49:57,557 INFO  Invoking the service to verify the user solution
2019-02-21 17:49:57,558 INFO  Time before invoking service:Thu Feb 21 17:49:57 IST 2019
2019-02-21 17:49:57,558 INFO  Initialising service address for VerifySolution
2019-02-21 17:49:57,558 INFO  Time before invoking service In SUPER:Thu Feb 21 17:49:57 IST 2019
2019-02-21 17:49:58,433 INFO  Time after invoking service In SUPER:Thu Feb 21 17:49:58 IST 2019
2019-02-21 17:49:58,434 INFO  Service responded successfully with required details
2019-02-21 17:49:58,434 INFO  Time after invoking service:Thu Feb 21 17:49:58 IST 2019
2019-02-21 17:49:58,434 INFO  User solution successfully verified
2019-02-21 17:49:58,435 INFO  Processing the response from verify service
2019-02-21 17:49:58,436 INFO  Starting to parse JSON response
2019-02-21 17:49:58,437 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:49:58,437 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:49:58,438 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:49:58,438 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:49:58,438 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:49:58,438 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:49:58,438 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:49:58,438 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:49:58,438 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:49:58,439 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:49:58,439 INFO  Successfully parsed JSON response
2019-02-21 17:49:58,440 INFO  In the process of generating verify response in HTML
2019-02-21 17:49:58,502 INFO  Successfully generated verify response in HTML
2019-02-21 17:49:58,502 INFO  Successfully processed the response from service
2019-02-21 17:50:11,928 INFO  Setting request parameters for VerifySolution
2019-02-21 17:50:11,928 INFO  Initiating to process and prepare Input for the verify service
2019-02-21 17:50:11,928 INFO  Starting to parse the user solution
2019-02-21 17:50:11,928 INFO  Displaying user solution
2019-02-21 17:50:11,959 INFO  Successfully parsed the user solution{"CourseShortName":"PF","UserSolution":"#PF-Assgn-16\r\n'''\r\nCreated on Feb 21, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\ndef make_amount(rupees_to_make,no_of_five,no_of_one):\r\n    five_needed=rupees_to_make//5\r\n    one_needed=rupees_to_make%5\r\n    if(five_needed<=no_of_five and one_needed<=no_of_one):\r\n        print(\"No. of Five needed :\", five_needed)\r\n        print(\"No. of One needed  :\", one_needed)\r\n    elif(five_needed>no_of_five):\r\n        error=5*(five_needed-no_of_five)\r\n        if(error<=no_of_one):\r\n            print(\"No. of Five needed :\", no_of_five)\r\n            print(\"No. of One needed  :\", one_needed+error)\r\n        else:\r\n            print(-1)\r\n    \r\n    else:\r\n        print(-1)\r\n\r\n\r\n\r\n    #Start writing your code here\r\n    #Populate the variables: five_needed and one_needed\r\n\r\n\r\n    # Use the below given print statements to display the output\r\n    # Also, do not modify them for verification to work\r\n\r\n    #print(\"No. of Five needed :\", five_needed)\r\n    #print(\"No. of One needed  :\", one_needed)\r\n    #print(-1)\r\nmake_amount(28,8,5)\r\n","asgnmtId":"16","SolutionFileName":"Assignment16.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-02-21 17:50:11,960 INFO  Successfully processed and prepared the input for the verify service
2019-02-21 17:50:11,960 INFO  Successfully set the request parameters for VerifySolution
2019-02-21 17:50:11,960 INFO  Invoking the service to verify the user solution
2019-02-21 17:50:11,960 INFO  Time before invoking service:Thu Feb 21 17:50:11 IST 2019
2019-02-21 17:50:11,960 INFO  Initialising service address for VerifySolution
2019-02-21 17:50:11,961 INFO  Time before invoking service In SUPER:Thu Feb 21 17:50:11 IST 2019
2019-02-21 17:50:12,815 INFO  Time after invoking service In SUPER:Thu Feb 21 17:50:12 IST 2019
2019-02-21 17:50:12,816 INFO  Service responded successfully with required details
2019-02-21 17:50:12,816 INFO  Time after invoking service:Thu Feb 21 17:50:12 IST 2019
2019-02-21 17:50:12,816 INFO  User solution successfully verified
2019-02-21 17:50:12,816 INFO  Processing the response from verify service
2019-02-21 17:50:12,819 INFO  Starting to parse JSON response
2019-02-21 17:50:12,820 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:50:12,820 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:50:12,820 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:50:12,820 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:50:12,820 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:50:12,820 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:50:12,820 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:50:12,820 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:50:12,820 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:50:12,820 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 17:50:12,822 INFO  Successfully parsed JSON response
2019-02-21 17:50:12,822 INFO  In the process of generating verify response in HTML
2019-02-21 17:50:12,897 INFO  Successfully generated verify response in HTML
2019-02-21 17:50:12,898 INFO  Successfully processed the response from service
2019-02-21 17:50:23,124 INFO  Initiating to process and prepare Input for the submit service
2019-02-21 17:50:23,125 INFO  Displaying user solution
2019-02-21 17:50:23,134 INFO  Successfully processed and prepared the input for the submit service
2019-02-21 17:50:23,135 INFO  Invoking the service to submit the user solution
2019-02-21 17:50:23,135 INFO  Initialising service address for Submit
2019-02-21 17:50:23,136 INFO  Time before invoking service In SUPER:Thu Feb 21 17:50:23 IST 2019
2019-02-21 17:50:23,434 INFO  Time after invoking service In SUPER:Thu Feb 21 17:50:23 IST 2019
2019-02-21 17:50:23,435 INFO  Service responded successfully with required details
2019-02-21 17:50:23,435 INFO  User solution successfully submitted
2019-02-21 17:50:23,435 INFO  Displaying submission status
2019-02-21 17:50:23,435 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-02-21 17:50:27,860 INFO  Initiating to process and prepare Input for the submit service
2019-02-21 17:50:27,860 INFO  Displaying user solution
2019-02-21 17:50:27,868 INFO  Successfully processed and prepared the input for the submit service
2019-02-21 17:50:27,868 INFO  Invoking the service to submit the user solution
2019-02-21 17:50:27,868 INFO  Initialising service address for Submit
2019-02-21 17:50:27,869 INFO  Time before invoking service In SUPER:Thu Feb 21 17:50:27 IST 2019
2019-02-21 17:50:28,037 INFO  Time after invoking service In SUPER:Thu Feb 21 17:50:28 IST 2019
2019-02-21 17:50:28,037 INFO  Service responded successfully with required details
2019-02-21 17:50:28,037 INFO  User solution successfully submitted
2019-02-21 17:50:28,037 INFO  Displaying submission status
2019-02-21 17:50:28,037 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-02-21 17:59:48,455 INFO  Verification Failed : Incorrect #tag
->Please provide the correct #tag in thefirst line as per ILP starter code
2019-02-21 18:00:22,541 INFO  Verification Failed : Incorrect #tag
->Please provide the correct #tag in thefirst line as per ILP starter code
2019-02-21 18:00:26,881 INFO  Setting request parameters for VerifySolution
2019-02-21 18:00:26,882 INFO  Initiating to process and prepare Input for the verify service
2019-02-21 18:00:26,882 INFO  Starting to parse the user solution
2019-02-21 18:00:26,882 INFO  Displaying user solution
2019-02-21 18:00:26,943 INFO  Successfully parsed the user solution{"CourseShortName":"PF","UserSolution":"#PF-Assgn-17\r\n'''\r\nCreated on Feb 21, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\ndef find_new_salary(current_salary,job_level):\r\n    # write your logic here\r\n    if(job_level==3):\r\n        new_salary = 0.15*current_salary + current_salary\r\n    elif(job_level==4):\r\n        new_salary = 0.07*current_salary + current_salary\r\n    elif(job_level==5):\r\n        new_salary = 0.05*current_salary + current_salary\r\n    else:\r\n        new_salary = 0\r\n    return new_salary\r\n\r\n# provide different values for current_salary and job_level and test yor program\r\nnew_salary=find_new_salary(10000,3)\r\nprint(new_salary)\r\n","asgnmtId":"17","SolutionFileName":"Assignment17.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-02-21 18:00:26,943 INFO  Successfully processed and prepared the input for the verify service
2019-02-21 18:00:26,943 INFO  Successfully set the request parameters for VerifySolution
2019-02-21 18:00:26,944 INFO  Invoking the service to verify the user solution
2019-02-21 18:00:26,944 INFO  Time before invoking service:Thu Feb 21 18:00:26 IST 2019
2019-02-21 18:00:26,944 INFO  Initialising service address for VerifySolution
2019-02-21 18:00:26,945 INFO  Time before invoking service In SUPER:Thu Feb 21 18:00:26 IST 2019
2019-02-21 18:00:27,130 INFO  Time after invoking service In SUPER:Thu Feb 21 18:00:27 IST 2019
2019-02-21 18:00:27,130 INFO  Service responded successfully with required details
2019-02-21 18:00:27,131 INFO  Time after invoking service:Thu Feb 21 18:00:27 IST 2019
2019-02-21 18:00:27,131 INFO  User solution successfully verified
2019-02-21 18:00:27,131 INFO  Processing the response from verify service
2019-02-21 18:00:27,134 INFO  Verification Failed : Data unavailable
->Please provide the correct assignment number in the first line
->Verification is not enabled for tryouts!
->Please contact educator if the issue persist
(error code:-56)
2019-02-21 18:00:40,271 INFO  Setting request parameters for VerifySolution
2019-02-21 18:00:40,271 INFO  Initiating to process and prepare Input for the verify service
2019-02-21 18:00:40,271 INFO  Starting to parse the user solution
2019-02-21 18:00:40,272 INFO  Displaying user solution
2019-02-21 18:00:40,311 INFO  Successfully parsed the user solution{"CourseShortName":"PF","UserSolution":"#PF-Assgn-17\r\n'''\r\nCreated on Feb 21, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\ndef find_new_salary(current_salary,job_level):\r\n    # write your logic here\r\n    if(job_level==3):\r\n        new_salary = 0.15*current_salary + current_salary\r\n    elif(job_level==4):\r\n        new_salary = 0.07*current_salary + current_salary\r\n    elif(job_level==5):\r\n        new_salary = 0.05*current_salary + current_salary\r\n    else:\r\n        new_salary = 0\r\n    return new_salary\r\n\r\n# provide different values for current_salary and job_level and test yor program\r\nnew_salary=find_new_salary(10000,3)\r\nprint(new_salary)\r\n","asgnmtId":"17","SolutionFileName":"Assignment17.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-02-21 18:00:40,312 INFO  Successfully processed and prepared the input for the verify service
2019-02-21 18:00:40,312 INFO  Successfully set the request parameters for VerifySolution
2019-02-21 18:00:40,312 INFO  Invoking the service to verify the user solution
2019-02-21 18:00:40,312 INFO  Time before invoking service:Thu Feb 21 18:00:40 IST 2019
2019-02-21 18:00:40,312 INFO  Initialising service address for VerifySolution
2019-02-21 18:00:40,313 INFO  Time before invoking service In SUPER:Thu Feb 21 18:00:40 IST 2019
2019-02-21 18:00:40,466 INFO  Time after invoking service In SUPER:Thu Feb 21 18:00:40 IST 2019
2019-02-21 18:00:40,466 INFO  Service responded successfully with required details
2019-02-21 18:00:40,467 INFO  Time after invoking service:Thu Feb 21 18:00:40 IST 2019
2019-02-21 18:00:40,467 INFO  User solution successfully verified
2019-02-21 18:00:40,467 INFO  Processing the response from verify service
2019-02-21 18:00:40,468 INFO  Verification Failed : Data unavailable
->Please provide the correct assignment number in the first line
->Verification is not enabled for tryouts!
->Please contact educator if the issue persist
(error code:-56)
2019-02-21 18:02:02,121 INFO  Setting request parameters for VerifySolution
2019-02-21 18:02:02,121 INFO  Initiating to process and prepare Input for the verify service
2019-02-21 18:02:02,121 INFO  Starting to parse the user solution
2019-02-21 18:02:02,122 INFO  Displaying user solution
2019-02-21 18:02:02,161 INFO  Successfully parsed the user solution{"CourseShortName":"PF","UserSolution":"#PF-Assgn-17\r\n'''\r\nCreated on Feb 21, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\ndef find_new_salary(current_salary,job_level):\r\n    # write your logic here\r\n    if(job_level==3):\r\n        new_salary = 0.15*current_salary + current_salary\r\n    elif(job_level==4):\r\n        new_salary = 0.07*current_salary + current_salary\r\n    elif(job_level==5):\r\n        new_salary = 0.05*current_salary + current_salary\r\n    else:\r\n        new_salary = 0\r\n    return new_salary\r\n\r\n# provide different values for current_salary and job_level and test yor program\r\nnew_salary=find_new_salary(15000,3)\r\nprint(new_salary)\r\n","asgnmtId":"17","SolutionFileName":"Assignment17.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-02-21 18:02:02,161 INFO  Successfully processed and prepared the input for the verify service
2019-02-21 18:02:02,162 INFO  Successfully set the request parameters for VerifySolution
2019-02-21 18:02:02,162 INFO  Invoking the service to verify the user solution
2019-02-21 18:02:02,162 INFO  Time before invoking service:Thu Feb 21 18:02:02 IST 2019
2019-02-21 18:02:02,162 INFO  Initialising service address for VerifySolution
2019-02-21 18:02:02,162 INFO  Time before invoking service In SUPER:Thu Feb 21 18:02:02 IST 2019
2019-02-21 18:02:02,319 INFO  Time after invoking service In SUPER:Thu Feb 21 18:02:02 IST 2019
2019-02-21 18:02:02,319 INFO  Service responded successfully with required details
2019-02-21 18:02:02,319 INFO  Time after invoking service:Thu Feb 21 18:02:02 IST 2019
2019-02-21 18:02:02,319 INFO  User solution successfully verified
2019-02-21 18:02:02,319 INFO  Processing the response from verify service
2019-02-21 18:02:02,320 INFO  Verification Failed : Data unavailable
->Please provide the correct assignment number in the first line
->Verification is not enabled for tryouts!
->Please contact educator if the issue persist
(error code:-56)
2019-02-21 18:15:18,479 INFO  Verification Failed : Incorrect #tag
->Please provide the correct #tag in thefirst line as per ILP starter code
2019-02-21 18:35:34,565 INFO  Setting request parameters for VerifySolution
2019-02-21 18:35:34,565 INFO  Initiating to process and prepare Input for the verify service
2019-02-21 18:35:34,565 INFO  Starting to parse the user solution
2019-02-21 18:35:34,565 INFO  Displaying user solution
2019-02-21 18:35:34,643 INFO  Successfully parsed the user solution{"CourseShortName":"PF","UserSolution":"#PF-Assgn-19\r\n'''\r\nCreated on Feb 21, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\ndef calculate_bill_amount(food_type,quantity_ordered,distance_in_kms):\r\n    bill_amount=0\r\n    #write your logic here\r\n    if(food_type=='N' and quantity_ordered>=1 and distance_in_kms<=3):\r\n        bill_amount = 150*quantity_ordered\r\n    elif(food_type=='N' and quantity_ordered>=1 and distance_in_kms>3 and distance_in_kms<=6):\r\n        bill_amount = 150*quantity_ordered + 3*distance_in_kms\r\n    elif(food_type=='N' and quantity_ordered>=1 and distance_in_kms>6):\r\n        bill_amount = 150*quantity_ordered + 6*distance_in_kms\r\n    elif(food_type=='V' and quantity_ordered>=1 and distance_in_kms<=3):\r\n        bill_amount = 120*quantity_ordered\r\n    elif(food_type=='V' and quantity_ordered>=1 and distance_in_kms>3 and distance_in_kms<=6):\r\n        bill_amount = 120*quantity_ordered + 3*distance_in_kms\r\n    elif(food_type=='V' and quantity_ordered>=1 and distance_in_kms>3):\r\n        bill_amount = 120*quantity_ordered + 6*distance_in_kms\r\n        \r\n    return bill_amount\r\n\r\n#Provide different values for food_type,quantity_ordered,distance_in_kms and test your program\r\nbill_amount=calculate_bill_amount(\"N\",2,7)\r\nprint(bill_amount)\r\n","asgnmtId":"19","SolutionFileName":"Assignment19.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-02-21 18:35:34,644 INFO  Successfully processed and prepared the input for the verify service
2019-02-21 18:35:34,644 INFO  Successfully set the request parameters for VerifySolution
2019-02-21 18:35:34,644 INFO  Invoking the service to verify the user solution
2019-02-21 18:35:34,644 INFO  Time before invoking service:Thu Feb 21 18:35:34 IST 2019
2019-02-21 18:35:34,644 INFO  Initialising service address for VerifySolution
2019-02-21 18:35:34,645 INFO  Time before invoking service In SUPER:Thu Feb 21 18:35:34 IST 2019
2019-02-21 18:35:35,644 INFO  Time after invoking service In SUPER:Thu Feb 21 18:35:35 IST 2019
2019-02-21 18:35:35,644 INFO  Service responded successfully with required details
2019-02-21 18:35:35,644 INFO  Time after invoking service:Thu Feb 21 18:35:35 IST 2019
2019-02-21 18:35:35,644 INFO  User solution successfully verified
2019-02-21 18:35:35,644 INFO  Processing the response from verify service
2019-02-21 18:35:35,648 INFO  Starting to parse JSON response
2019-02-21 18:35:35,650 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 18:35:35,650 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 18:35:35,650 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 18:35:35,650 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 18:35:35,650 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 18:35:35,650 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 18:35:35,650 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 18:35:35,650 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 18:35:35,651 INFO  Successfully parsed JSON response
2019-02-21 18:35:35,651 INFO  In the process of generating verify response in HTML
2019-02-21 18:35:35,731 INFO  Successfully generated verify response in HTML
2019-02-21 18:35:35,731 INFO  Successfully processed the response from service
2019-02-21 18:35:53,891 INFO  Setting request parameters for VerifySolution
2019-02-21 18:35:53,891 INFO  Initiating to process and prepare Input for the verify service
2019-02-21 18:35:53,891 INFO  Starting to parse the user solution
2019-02-21 18:35:53,892 INFO  Displaying user solution
2019-02-21 18:35:53,939 INFO  Successfully parsed the user solution{"CourseShortName":"PF","UserSolution":"#PF-Assgn-19\r\n'''\r\nCreated on Feb 21, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\ndef calculate_bill_amount(food_type,quantity_ordered,distance_in_kms):\r\n    bill_amount=0\r\n    #write your logic here\r\n    if(food_type=='N' and quantity_ordered>=1 and distance_in_kms<=3):\r\n        bill_amount = 150*quantity_ordered\r\n    elif(food_type=='N' and quantity_ordered>=1 and distance_in_kms>3 and distance_in_kms<=6):\r\n        bill_amount = 150*quantity_ordered + 3*distance_in_kms\r\n    elif(food_type=='N' and quantity_ordered>=1 and distance_in_kms>6):\r\n        bill_amount = 150*quantity_ordered + 6*distance_in_kms\r\n    elif(food_type=='V' and quantity_ordered>=1 and distance_in_kms<=3):\r\n        bill_amount = 120*quantity_ordered\r\n    elif(food_type=='V' and quantity_ordered>=1 and distance_in_kms>3 and distance_in_kms<=6):\r\n        bill_amount = 120*quantity_ordered + 3*distance_in_kms\r\n    elif(food_type=='V' and quantity_ordered>=1 and distance_in_kms>3):\r\n        bill_amount = 120*quantity_ordered + 6*distance_in_kms\r\n        \r\n    return bill_amount\r\n\r\n#Provide different values for food_type,quantity_ordered,distance_in_kms and test your program\r\nbill_amount=calculate_bill_amount(\"N\",2,7)\r\nprint(bill_amount)\r\n","asgnmtId":"19","SolutionFileName":"Assignment19.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-02-21 18:35:53,940 INFO  Successfully processed and prepared the input for the verify service
2019-02-21 18:35:53,940 INFO  Successfully set the request parameters for VerifySolution
2019-02-21 18:35:53,940 INFO  Invoking the service to verify the user solution
2019-02-21 18:35:53,941 INFO  Time before invoking service:Thu Feb 21 18:35:53 IST 2019
2019-02-21 18:35:53,941 INFO  Initialising service address for VerifySolution
2019-02-21 18:35:53,942 INFO  Time before invoking service In SUPER:Thu Feb 21 18:35:53 IST 2019
2019-02-21 18:35:54,725 INFO  Time after invoking service In SUPER:Thu Feb 21 18:35:54 IST 2019
2019-02-21 18:35:54,725 INFO  Service responded successfully with required details
2019-02-21 18:35:54,725 INFO  Time after invoking service:Thu Feb 21 18:35:54 IST 2019
2019-02-21 18:35:54,726 INFO  User solution successfully verified
2019-02-21 18:35:54,726 INFO  Processing the response from verify service
2019-02-21 18:35:54,727 INFO  Starting to parse JSON response
2019-02-21 18:35:54,728 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 18:35:54,728 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 18:35:54,728 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 18:35:54,728 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 18:35:54,728 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 18:35:54,728 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 18:35:54,728 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 18:35:54,728 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 18:35:54,732 INFO  Successfully parsed JSON response
2019-02-21 18:35:54,732 INFO  In the process of generating verify response in HTML
2019-02-21 18:35:54,800 INFO  Successfully generated verify response in HTML
2019-02-21 18:35:54,800 INFO  Successfully processed the response from service
2019-02-21 18:52:50,966 INFO  Setting request parameters for VerifySolution
2019-02-21 18:52:50,966 INFO  Initiating to process and prepare Input for the verify service
2019-02-21 18:52:50,966 INFO  Starting to parse the user solution
2019-02-21 18:52:50,970 INFO  Displaying user solution
2019-02-21 18:52:51,047 INFO  Successfully parsed the user solution{"CourseShortName":"PF","UserSolution":"#PF-Assgn-19\r\n'''\r\nCreated on Feb 21, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\ndef calculate_bill_amount(food_type,quantity_ordered,distance_in_kms):\r\n    bill_amount=0\r\n    #write your logic here\r\n    if(distance_in_kms<=3):\r\n       if(food_type=='N' and quantity_ordered>=1):\r\n           bill_amount = 150*quantity_ordered\r\n       elif(food_type=='V' and quantity_ordered>=1):\r\n            bill_amount = 120*quantity_ordered\r\n       else:\r\n            print(-1)\r\n    elif(distance_in_kms>3 and distance_in_kms<=6):\r\n         if(food_type=='N' and quantity_ordered>=1):\r\n             bill_amount = 150*quantity_ordered + (distance_in_kms-3)*3\r\n         elif(food_type=='V' and quantity_ordered>=1):\r\n             bill_amount = 120*quantity_ordered + (distance_in_kms-3)*3\r\n         else:\r\n                print(-1)\r\n    elif(distance_in_kms>6):\r\n        if(food_type=='N' and quantity_ordered>=1):\r\n            bill_amount = 150*quantity_ordered + (distance_in_kms-6)*6\r\n        elif(food_type=='V' and quantity_ordered>=1):\r\n            bill_amount = 120*quantity_ordered + (distance_in_kms-6)*6\r\n        else:\r\n            print(-1)\r\n    else:\r\n        print(-1)\r\n        \r\n    return bill_amount\r\n\r\n#Provide different values for food_type,quantity_ordered,distance_in_kms and test your program\r\nbill_amount=calculate_bill_amount(\"N\",2,7)\r\nprint(bill_amount)\r\n","asgnmtId":"19","SolutionFileName":"Assignment19.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-02-21 18:52:51,047 INFO  Successfully processed and prepared the input for the verify service
2019-02-21 18:52:51,047 INFO  Successfully set the request parameters for VerifySolution
2019-02-21 18:52:51,047 INFO  Invoking the service to verify the user solution
2019-02-21 18:52:51,048 INFO  Time before invoking service:Thu Feb 21 18:52:51 IST 2019
2019-02-21 18:52:51,048 INFO  Initialising service address for VerifySolution
2019-02-21 18:52:51,048 INFO  Time before invoking service In SUPER:Thu Feb 21 18:52:51 IST 2019
2019-02-21 18:52:52,053 INFO  Time after invoking service In SUPER:Thu Feb 21 18:52:52 IST 2019
2019-02-21 18:52:52,053 INFO  Service responded successfully with required details
2019-02-21 18:52:52,054 INFO  Time after invoking service:Thu Feb 21 18:52:52 IST 2019
2019-02-21 18:52:52,054 INFO  User solution successfully verified
2019-02-21 18:52:52,054 INFO  Processing the response from verify service
2019-02-21 18:52:52,059 INFO  Starting to parse JSON response
2019-02-21 18:52:52,060 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 18:52:52,060 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 18:52:52,060 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 18:52:52,060 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 18:52:52,060 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 18:52:52,060 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 18:52:52,060 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 18:52:52,060 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 18:52:52,061 INFO  Successfully parsed JSON response
2019-02-21 18:52:52,061 INFO  In the process of generating verify response in HTML
2019-02-21 18:52:52,142 INFO  Successfully generated verify response in HTML
2019-02-21 18:52:52,142 INFO  Successfully processed the response from service
2019-02-21 18:54:04,565 INFO  Setting request parameters for VerifySolution
2019-02-21 18:54:04,566 INFO  Initiating to process and prepare Input for the verify service
2019-02-21 18:54:04,566 INFO  Starting to parse the user solution
2019-02-21 18:54:04,566 INFO  Displaying user solution
2019-02-21 18:54:04,612 INFO  Successfully parsed the user solution{"CourseShortName":"PF","UserSolution":"#PF-Assgn-19\r\n'''\r\nCreated on Feb 21, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\ndef calculate_bill_amount(food_type,quantity_ordered,distance_in_kms):\r\n    bill_amount=0\r\n    #write your logic here\r\n    if(distance_in_kms<=3):\r\n       if(food_type=='N' and quantity_ordered>=1):\r\n           bill_amount = 150*quantity_ordered\r\n       elif(food_type=='V' and quantity_ordered>=1):\r\n            bill_amount = 120*quantity_ordered\r\n       else:\r\n            print(-1)\r\n    elif(distance_in_kms>3 and distance_in_kms<=6):\r\n         if(food_type=='N' and quantity_ordered>=1):\r\n             bill_amount = 150*quantity_ordered + (distance_in_kms-3)*3\r\n         elif(food_type=='V' and quantity_ordered>=1):\r\n             bill_amount = 120*quantity_ordered + (distance_in_kms-3)*3\r\n         else:\r\n                print(-1)\r\n    elif(distance_in_kms>6):\r\n        if(food_type=='N' and quantity_ordered>=1):\r\n            bill_amount = 150*quantity_ordered + (distance_in_kms-6)*6 + (distance_in_kms-3)*3\r\n        elif(food_type=='V' and quantity_ordered>=1):\r\n            bill_amount = 120*quantity_ordered + (distance_in_kms-6)*6 + (distance_in_kms-3)*3\r\n        else:\r\n            print(-1)\r\n    else:\r\n        print(-1)\r\n        \r\n    return bill_amount\r\n\r\n#Provide different values for food_type,quantity_ordered,distance_in_kms and test your program\r\nbill_amount=calculate_bill_amount(\"N\",2,7)\r\nprint(bill_amount)\r\n","asgnmtId":"19","SolutionFileName":"Assignment19.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-02-21 18:54:04,612 INFO  Successfully processed and prepared the input for the verify service
2019-02-21 18:54:04,612 INFO  Successfully set the request parameters for VerifySolution
2019-02-21 18:54:04,612 INFO  Invoking the service to verify the user solution
2019-02-21 18:54:04,612 INFO  Time before invoking service:Thu Feb 21 18:54:04 IST 2019
2019-02-21 18:54:04,612 INFO  Initialising service address for VerifySolution
2019-02-21 18:54:04,613 INFO  Time before invoking service In SUPER:Thu Feb 21 18:54:04 IST 2019
2019-02-21 18:54:05,546 INFO  Time after invoking service In SUPER:Thu Feb 21 18:54:05 IST 2019
2019-02-21 18:54:05,547 INFO  Service responded successfully with required details
2019-02-21 18:54:05,548 INFO  Time after invoking service:Thu Feb 21 18:54:05 IST 2019
2019-02-21 18:54:05,548 INFO  User solution successfully verified
2019-02-21 18:54:05,548 INFO  Processing the response from verify service
2019-02-21 18:54:05,550 INFO  Starting to parse JSON response
2019-02-21 18:54:05,551 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 18:54:05,551 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 18:54:05,551 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 18:54:05,551 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 18:54:05,551 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 18:54:05,551 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 18:54:05,552 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 18:54:05,552 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 18:54:05,553 INFO  Successfully parsed JSON response
2019-02-21 18:54:05,553 INFO  In the process of generating verify response in HTML
2019-02-21 18:54:05,637 INFO  Successfully generated verify response in HTML
2019-02-21 18:54:05,637 INFO  Successfully processed the response from service
2019-02-21 18:55:40,973 INFO  Setting request parameters for VerifySolution
2019-02-21 18:55:40,974 INFO  Initiating to process and prepare Input for the verify service
2019-02-21 18:55:40,974 INFO  Starting to parse the user solution
2019-02-21 18:55:40,974 INFO  Displaying user solution
2019-02-21 18:55:41,014 INFO  Successfully parsed the user solution{"CourseShortName":"PF","UserSolution":"#PF-Assgn-19\r\n'''\r\nCreated on Feb 21, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\ndef calculate_bill_amount(food_type,quantity_ordered,distance_in_kms):\r\n    bill_amount=0\r\n    #write your logic here\r\n    if(distance_in_kms<=3):\r\n       if(food_type=='N' and quantity_ordered>=1):\r\n           bill_amount = 150*quantity_ordered\r\n       elif(food_type=='V' and quantity_ordered>=1):\r\n            bill_amount = 120*quantity_ordered\r\n       else:\r\n            print(-1)\r\n    elif(distance_in_kms>3 and distance_in_kms<=6):\r\n         if(food_type=='N' and quantity_ordered>=1):\r\n             bill_amount = 150*quantity_ordered + (distance_in_kms-3)*3\r\n         elif(food_type=='V' and quantity_ordered>=1):\r\n             bill_amount = 120*quantity_ordered + (distance_in_kms-3)*3\r\n         else:\r\n                print(-1)\r\n    elif(distance_in_kms>6):\r\n        if(food_type=='N' and quantity_ordered>=1):\r\n            bill_amount = 150*quantity_ordered + (distance_in_kms-6)*6 + 9\r\n        elif(food_type=='V' and quantity_ordered>=1):\r\n            bill_amount = 120*quantity_ordered + (distance_in_kms-6)*6 + 9\r\n        else:\r\n            print(-1)\r\n    else:\r\n        print(-1)\r\n        \r\n    return bill_amount\r\n\r\n#Provide different values for food_type,quantity_ordered,distance_in_kms and test your program\r\nbill_amount=calculate_bill_amount(\"N\",2,7)\r\nprint(bill_amount)\r\n","asgnmtId":"19","SolutionFileName":"Assignment19.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-02-21 18:55:41,015 INFO  Successfully processed and prepared the input for the verify service
2019-02-21 18:55:41,016 INFO  Successfully set the request parameters for VerifySolution
2019-02-21 18:55:41,016 INFO  Invoking the service to verify the user solution
2019-02-21 18:55:41,016 INFO  Time before invoking service:Thu Feb 21 18:55:41 IST 2019
2019-02-21 18:55:41,016 INFO  Initialising service address for VerifySolution
2019-02-21 18:55:41,017 INFO  Time before invoking service In SUPER:Thu Feb 21 18:55:41 IST 2019
2019-02-21 18:55:41,942 INFO  Time after invoking service In SUPER:Thu Feb 21 18:55:41 IST 2019
2019-02-21 18:55:41,942 INFO  Service responded successfully with required details
2019-02-21 18:55:41,942 INFO  Time after invoking service:Thu Feb 21 18:55:41 IST 2019
2019-02-21 18:55:41,942 INFO  User solution successfully verified
2019-02-21 18:55:41,943 INFO  Processing the response from verify service
2019-02-21 18:55:41,943 INFO  Starting to parse JSON response
2019-02-21 18:55:41,944 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 18:55:41,944 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 18:55:41,944 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 18:55:41,944 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 18:55:41,944 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 18:55:41,944 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 18:55:41,944 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 18:55:41,944 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 18:55:41,946 INFO  Successfully parsed JSON response
2019-02-21 18:55:41,946 INFO  In the process of generating verify response in HTML
2019-02-21 18:55:42,018 INFO  Successfully generated verify response in HTML
2019-02-21 18:55:42,018 INFO  Successfully processed the response from service
2019-02-21 18:57:12,622 INFO  Setting request parameters for VerifySolution
2019-02-21 18:57:12,623 INFO  Initiating to process and prepare Input for the verify service
2019-02-21 18:57:12,623 INFO  Starting to parse the user solution
2019-02-21 18:57:12,624 INFO  Displaying user solution
2019-02-21 18:57:12,707 INFO  Successfully parsed the user solution{"CourseShortName":"PF","UserSolution":"#PF-Assgn-19\r\n'''\r\nCreated on Feb 21, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\ndef calculate_bill_amount(food_type,quantity_ordered,distance_in_kms):\r\n    bill_amount=0\r\n    #write your logic here\r\n    if(distance_in_kms<=3):\r\n       if(food_type=='N' and quantity_ordered>=1):\r\n           bill_amount = 150*quantity_ordered\r\n       elif(food_type=='V' and quantity_ordered>=1):\r\n            bill_amount = 120*quantity_ordered\r\n       else:\r\n            bill_amount = -1\r\n    elif(distance_in_kms>3 and distance_in_kms<=6):\r\n         if(food_type=='N' and quantity_ordered>=1):\r\n             bill_amount = 150*quantity_ordered + (distance_in_kms-3)*3\r\n         elif(food_type=='V' and quantity_ordered>=1):\r\n             bill_amount = 120*quantity_ordered + (distance_in_kms-3)*3\r\n         else:\r\n                bill_amount = -1\r\n    elif(distance_in_kms>6):\r\n        if(food_type=='N' and quantity_ordered>=1):\r\n            bill_amount = 150*quantity_ordered + (distance_in_kms-6)*6 + 9\r\n        elif(food_type=='V' and quantity_ordered>=1):\r\n            bill_amount = 120*quantity_ordered + (distance_in_kms-6)*6 + 9\r\n        else:\r\n            bill_amount = -1\r\n    else:\r\n        bill_amount = -1\r\n        \r\n    return bill_amount\r\n\r\n#Provide different values for food_type,quantity_ordered,distance_in_kms and test your program\r\nbill_amount=calculate_bill_amount(\"N\",2,7)\r\nprint(bill_amount)\r\n","asgnmtId":"19","SolutionFileName":"Assignment19.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-02-21 18:57:12,708 INFO  Successfully processed and prepared the input for the verify service
2019-02-21 18:57:12,708 INFO  Successfully set the request parameters for VerifySolution
2019-02-21 18:57:12,708 INFO  Invoking the service to verify the user solution
2019-02-21 18:57:12,708 INFO  Time before invoking service:Thu Feb 21 18:57:12 IST 2019
2019-02-21 18:57:12,709 INFO  Initialising service address for VerifySolution
2019-02-21 18:57:12,709 INFO  Time before invoking service In SUPER:Thu Feb 21 18:57:12 IST 2019
2019-02-21 18:57:13,576 INFO  Time after invoking service In SUPER:Thu Feb 21 18:57:13 IST 2019
2019-02-21 18:57:13,576 INFO  Service responded successfully with required details
2019-02-21 18:57:13,576 INFO  Time after invoking service:Thu Feb 21 18:57:13 IST 2019
2019-02-21 18:57:13,576 INFO  User solution successfully verified
2019-02-21 18:57:13,577 INFO  Processing the response from verify service
2019-02-21 18:57:13,581 INFO  Starting to parse JSON response
2019-02-21 18:57:13,582 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 18:57:13,582 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 18:57:13,582 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 18:57:13,582 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 18:57:13,582 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 18:57:13,582 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 18:57:13,583 INFO  Successfully parsed JSON response
2019-02-21 18:57:13,583 INFO  In the process of generating verify response in HTML
2019-02-21 18:57:13,678 INFO  Successfully generated verify response in HTML
2019-02-21 18:57:13,678 INFO  Successfully processed the response from service
2019-02-21 18:57:32,679 INFO  Setting request parameters for VerifySolution
2019-02-21 18:57:32,679 INFO  Initiating to process and prepare Input for the verify service
2019-02-21 18:57:32,679 INFO  Starting to parse the user solution
2019-02-21 18:57:32,680 INFO  Displaying user solution
2019-02-21 18:57:32,727 INFO  Successfully parsed the user solution{"CourseShortName":"PF","UserSolution":"#PF-Assgn-19\r\n'''\r\nCreated on Feb 21, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\ndef calculate_bill_amount(food_type,quantity_ordered,distance_in_kms):\r\n    bill_amount=0\r\n    #write your logic here\r\n    if(distance_in_kms<=3):\r\n       if(food_type=='N' and quantity_ordered>=1):\r\n           bill_amount = 150*quantity_ordered\r\n       elif(food_type=='V' and quantity_ordered>=1):\r\n            bill_amount = 120*quantity_ordered\r\n       else:\r\n            bill_amount = -1\r\n    elif(distance_in_kms>3 and distance_in_kms<=6):\r\n         if(food_type=='N' and quantity_ordered>=1):\r\n             bill_amount = 150*quantity_ordered + (distance_in_kms-3)*3\r\n         elif(food_type=='V' and quantity_ordered>=1):\r\n             bill_amount = 120*quantity_ordered + (distance_in_kms-3)*3\r\n         else:\r\n                bill_amount = -1\r\n    elif(distance_in_kms>6):\r\n        if(food_type=='N' and quantity_ordered>=1):\r\n            bill_amount = 150*quantity_ordered + (distance_in_kms-6)*6 + 9\r\n        elif(food_type=='V' and quantity_ordered>=1):\r\n            bill_amount = 120*quantity_ordered + (distance_in_kms-6)*6 + 9\r\n        else:\r\n            bill_amount = -1\r\n    else:\r\n        bill_amount = -1\r\n        \r\n    return bill_amount\r\n\r\n#Provide different values for food_type,quantity_ordered,distance_in_kms and test your program\r\nbill_amount=calculate_bill_amount(\"N\",2,7)\r\nprint(bill_amount)\r\n","asgnmtId":"19","SolutionFileName":"Assignment19.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-02-21 18:57:32,727 INFO  Successfully processed and prepared the input for the verify service
2019-02-21 18:57:32,727 INFO  Successfully set the request parameters for VerifySolution
2019-02-21 18:57:32,727 INFO  Invoking the service to verify the user solution
2019-02-21 18:57:32,728 INFO  Time before invoking service:Thu Feb 21 18:57:32 IST 2019
2019-02-21 18:57:32,728 INFO  Initialising service address for VerifySolution
2019-02-21 18:57:32,729 INFO  Time before invoking service In SUPER:Thu Feb 21 18:57:32 IST 2019
2019-02-21 18:57:33,555 INFO  Time after invoking service In SUPER:Thu Feb 21 18:57:33 IST 2019
2019-02-21 18:57:33,555 INFO  Service responded successfully with required details
2019-02-21 18:57:33,555 INFO  Time after invoking service:Thu Feb 21 18:57:33 IST 2019
2019-02-21 18:57:33,555 INFO  User solution successfully verified
2019-02-21 18:57:33,555 INFO  Processing the response from verify service
2019-02-21 18:57:33,556 INFO  Starting to parse JSON response
2019-02-21 18:57:33,556 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 18:57:33,556 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 18:57:33,556 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 18:57:33,557 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 18:57:33,557 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 18:57:33,557 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 18:57:33,559 INFO  Successfully parsed JSON response
2019-02-21 18:57:33,559 INFO  In the process of generating verify response in HTML
2019-02-21 18:57:33,617 INFO  Successfully generated verify response in HTML
2019-02-21 18:57:33,618 INFO  Successfully processed the response from service
2019-02-21 18:57:39,755 INFO  Setting request parameters for VerifySolution
2019-02-21 18:57:39,755 INFO  Initiating to process and prepare Input for the verify service
2019-02-21 18:57:39,755 INFO  Starting to parse the user solution
2019-02-21 18:57:39,756 INFO  Displaying user solution
2019-02-21 18:57:39,804 INFO  Successfully parsed the user solution{"CourseShortName":"PF","UserSolution":"#PF-Assgn-19\r\n'''\r\nCreated on Feb 21, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\ndef calculate_bill_amount(food_type,quantity_ordered,distance_in_kms):\r\n    bill_amount=0\r\n    #write your logic here\r\n    if(distance_in_kms<=3):\r\n       if(food_type=='N' and quantity_ordered>=1):\r\n           bill_amount = 150*quantity_ordered\r\n       elif(food_type=='V' and quantity_ordered>=1):\r\n            bill_amount = 120*quantity_ordered\r\n       else:\r\n            bill_amount = -1\r\n    elif(distance_in_kms>3 and distance_in_kms<=6):\r\n         if(food_type=='N' and quantity_ordered>=1):\r\n             bill_amount = 150*quantity_ordered + (distance_in_kms-3)*3\r\n         elif(food_type=='V' and quantity_ordered>=1):\r\n             bill_amount = 120*quantity_ordered + (distance_in_kms-3)*3\r\n         else:\r\n                bill_amount = -1\r\n    elif(distance_in_kms>6):\r\n        if(food_type=='N' and quantity_ordered>=1):\r\n            bill_amount = 150*quantity_ordered + (distance_in_kms-6)*6 + 9\r\n        elif(food_type=='V' and quantity_ordered>=1):\r\n            bill_amount = 120*quantity_ordered + (distance_in_kms-6)*6 + 9\r\n        else:\r\n            bill_amount = -1\r\n    else:\r\n        bill_amount = -1\r\n        \r\n    return bill_amount\r\n\r\n\r\nbill_amount=calculate_bill_amount(\"N\",2,7)\r\nprint(bill_amount)\r\n","asgnmtId":"19","SolutionFileName":"Assignment19.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-02-21 18:57:39,805 INFO  Successfully processed and prepared the input for the verify service
2019-02-21 18:57:39,806 INFO  Successfully set the request parameters for VerifySolution
2019-02-21 18:57:39,806 INFO  Invoking the service to verify the user solution
2019-02-21 18:57:39,806 INFO  Time before invoking service:Thu Feb 21 18:57:39 IST 2019
2019-02-21 18:57:39,806 INFO  Initialising service address for VerifySolution
2019-02-21 18:57:39,807 INFO  Time before invoking service In SUPER:Thu Feb 21 18:57:39 IST 2019
2019-02-21 18:57:40,873 INFO  Time after invoking service In SUPER:Thu Feb 21 18:57:40 IST 2019
2019-02-21 18:57:40,873 INFO  Service responded successfully with required details
2019-02-21 18:57:40,873 INFO  Time after invoking service:Thu Feb 21 18:57:40 IST 2019
2019-02-21 18:57:40,874 INFO  User solution successfully verified
2019-02-21 18:57:40,874 INFO  Processing the response from verify service
2019-02-21 18:57:40,875 INFO  Starting to parse JSON response
2019-02-21 18:57:40,876 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 18:57:40,876 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 18:57:40,876 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 18:57:40,876 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 18:57:40,876 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 18:57:40,876 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 18:57:40,878 INFO  Successfully parsed JSON response
2019-02-21 18:57:40,878 INFO  In the process of generating verify response in HTML
2019-02-21 18:57:40,952 INFO  Successfully generated verify response in HTML
2019-02-21 18:57:40,952 INFO  Successfully processed the response from service
2019-02-21 18:58:42,415 INFO  Setting request parameters for VerifySolution
2019-02-21 18:58:42,415 INFO  Initiating to process and prepare Input for the verify service
2019-02-21 18:58:42,415 INFO  Starting to parse the user solution
2019-02-21 18:58:42,416 INFO  Displaying user solution
2019-02-21 18:58:42,461 INFO  Successfully parsed the user solution{"CourseShortName":"PF","UserSolution":"#PF-Assgn-19\r\n'''\r\nCreated on Feb 21, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\ndef calculate_bill_amount(food_type,quantity_ordered,distance_in_kms):\r\n    bill_amount=0\r\n    #write your logic here\r\n    if(distance_in_kms<=3):\r\n       if(food_type=='N' and quantity_ordered>=1):\r\n           bill_amount = 150*quantity_ordered\r\n       elif(food_type=='V' and quantity_ordered>=1):\r\n            bill_amount = 120*quantity_ordered\r\n       else:\r\n            bill_amount = -1\r\n    elif(distance_in_kms>3 and distance_in_kms<=6):\r\n         if(food_type=='N' and quantity_ordered>=1):\r\n             bill_amount = 150*quantity_ordered + (distance_in_kms-3)*3\r\n         elif(food_type=='V' and quantity_ordered>=1):\r\n             bill_amount = 120*quantity_ordered + (distance_in_kms-3)*3\r\n         else:\r\n                bill_amount = -1\r\n    elif(distance_in_kms>6):\r\n        if(food_type=='N' and quantity_ordered>=1):\r\n            bill_amount = 150*quantity_ordered + (distance_in_kms-6)*6 + 9\r\n        elif(food_type=='V' and quantity_ordered>=1):\r\n            bill_amount = 120*quantity_ordered + (distance_in_kms-6)*6 + 9\r\n        else:\r\n            bill_amount = -1\r\n    else:\r\n        bill_amount = -1\r\n        \r\n    return bill_amount\r\n\r\n\r\nbill_amount=calculate_bill_amount(\"N\",2,7)\r\nprint(bill_amount)\r\n","asgnmtId":"19","SolutionFileName":"Assignment19.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-02-21 18:58:42,462 INFO  Successfully processed and prepared the input for the verify service
2019-02-21 18:58:42,462 INFO  Successfully set the request parameters for VerifySolution
2019-02-21 18:58:42,462 INFO  Invoking the service to verify the user solution
2019-02-21 18:58:42,463 INFO  Time before invoking service:Thu Feb 21 18:58:42 IST 2019
2019-02-21 18:58:42,463 INFO  Initialising service address for VerifySolution
2019-02-21 18:58:42,464 INFO  Time before invoking service In SUPER:Thu Feb 21 18:58:42 IST 2019
2019-02-21 18:58:43,385 INFO  Time after invoking service In SUPER:Thu Feb 21 18:58:43 IST 2019
2019-02-21 18:58:43,386 INFO  Service responded successfully with required details
2019-02-21 18:58:43,386 INFO  Time after invoking service:Thu Feb 21 18:58:43 IST 2019
2019-02-21 18:58:43,386 INFO  User solution successfully verified
2019-02-21 18:58:43,387 INFO  Processing the response from verify service
2019-02-21 18:58:43,388 INFO  Starting to parse JSON response
2019-02-21 18:58:43,389 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 18:58:43,389 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 18:58:43,389 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 18:58:43,389 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 18:58:43,389 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 18:58:43,390 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 18:58:43,391 INFO  Successfully parsed JSON response
2019-02-21 18:58:43,391 INFO  In the process of generating verify response in HTML
2019-02-21 18:58:43,469 INFO  Successfully generated verify response in HTML
2019-02-21 18:58:43,470 INFO  Successfully processed the response from service
2019-02-21 19:03:37,482 INFO  Setting request parameters for VerifySolution
2019-02-21 19:03:37,482 INFO  Initiating to process and prepare Input for the verify service
2019-02-21 19:03:37,482 INFO  Starting to parse the user solution
2019-02-21 19:03:37,482 INFO  Displaying user solution
2019-02-21 19:03:37,547 INFO  Successfully parsed the user solution{"CourseShortName":"PF","UserSolution":"#PF-Assgn-19\r\n'''\r\nCreated on Feb 21, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\ndef calculate_bill_amount(food_type,quantity_ordered,distance_in_kms):\r\n    bill_amount=0\r\n    #write your logic here\r\n    if(distance_in_kms<=3 and distance_in_kms!=0):\r\n       if(food_type=='N' and quantity_ordered>=1):\r\n           bill_amount = 150*quantity_ordered\r\n       elif(food_type=='V' and quantity_ordered>=1):\r\n            bill_amount = 120*quantity_ordered\r\n       else:\r\n            bill_amount = -1\r\n    elif(distance_in_kms>3 and distance_in_kms<=6 and distance_in_kms!=0):\r\n         if(food_type=='N' and quantity_ordered>=1):\r\n             bill_amount = 150*quantity_ordered + (distance_in_kms-3)*3\r\n         elif(food_type=='V' and quantity_ordered>=1):\r\n             bill_amount = 120*quantity_ordered + (distance_in_kms-3)*3\r\n         else:\r\n                bill_amount = -1\r\n    elif(distance_in_kms>6 and distance_in_kms!=0):\r\n        if(food_type=='N' and quantity_ordered>=1):\r\n            bill_amount = 150*quantity_ordered + (distance_in_kms-6)*6 + 9\r\n        elif(food_type=='V' and quantity_ordered>=1):\r\n            bill_amount = 120*quantity_ordered + (distance_in_kms-6)*6 + 9\r\n        else:\r\n            bill_amount = -1\r\n    else:\r\n        bill_amount = -1\r\n        \r\n    return bill_amount\r\n\r\n\r\nbill_amount=calculate_bill_amount(\"N\",2,7)\r\nprint(bill_amount)\r\n","asgnmtId":"19","SolutionFileName":"Assignment19.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-02-21 19:03:37,547 INFO  Successfully processed and prepared the input for the verify service
2019-02-21 19:03:37,548 INFO  Successfully set the request parameters for VerifySolution
2019-02-21 19:03:37,548 INFO  Invoking the service to verify the user solution
2019-02-21 19:03:37,548 INFO  Time before invoking service:Thu Feb 21 19:03:37 IST 2019
2019-02-21 19:03:37,548 INFO  Initialising service address for VerifySolution
2019-02-21 19:03:37,549 INFO  Time before invoking service In SUPER:Thu Feb 21 19:03:37 IST 2019
2019-02-21 19:03:38,530 INFO  Time after invoking service In SUPER:Thu Feb 21 19:03:38 IST 2019
2019-02-21 19:03:38,530 INFO  Service responded successfully with required details
2019-02-21 19:03:38,530 INFO  Time after invoking service:Thu Feb 21 19:03:38 IST 2019
2019-02-21 19:03:38,531 INFO  User solution successfully verified
2019-02-21 19:03:38,531 INFO  Processing the response from verify service
2019-02-21 19:03:38,535 INFO  Starting to parse JSON response
2019-02-21 19:03:38,536 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 19:03:38,536 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 19:03:38,536 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 19:03:38,536 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 19:03:38,536 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 19:03:38,537 INFO  Successfully parsed JSON response
2019-02-21 19:03:38,538 INFO  In the process of generating verify response in HTML
2019-02-21 19:03:38,622 INFO  Successfully generated verify response in HTML
2019-02-21 19:03:38,622 INFO  Successfully processed the response from service
2019-02-21 19:04:24,877 INFO  Setting request parameters for VerifySolution
2019-02-21 19:04:24,877 INFO  Initiating to process and prepare Input for the verify service
2019-02-21 19:04:24,877 INFO  Starting to parse the user solution
2019-02-21 19:04:24,878 INFO  Displaying user solution
2019-02-21 19:04:24,920 INFO  Successfully parsed the user solution{"CourseShortName":"PF","UserSolution":"#PF-Assgn-19\r\n'''\r\nCreated on Feb 21, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\ndef calculate_bill_amount(food_type,quantity_ordered,distance_in_kms):\r\n    bill_amount=0\r\n    #write your logic here\r\n    if(distance_in_kms<=3 and distance_in_kms>0):\r\n       if(food_type=='N' and quantity_ordered>=1):\r\n           bill_amount = 150*quantity_ordered\r\n       elif(food_type=='V' and quantity_ordered>=1):\r\n            bill_amount = 120*quantity_ordered\r\n       else:\r\n            bill_amount = -1\r\n    elif(distance_in_kms>3 and distance_in_kms<=6 and distance_in_kms>0):\r\n         if(food_type=='N' and quantity_ordered>=1):\r\n             bill_amount = 150*quantity_ordered + (distance_in_kms-3)*3\r\n         elif(food_type=='V' and quantity_ordered>=1):\r\n             bill_amount = 120*quantity_ordered + (distance_in_kms-3)*3\r\n         else:\r\n                bill_amount = -1\r\n    elif(distance_in_kms>6 and distance_in_kms>0):\r\n        if(food_type=='N' and quantity_ordered>=1):\r\n            bill_amount = 150*quantity_ordered + (distance_in_kms-6)*6 + 9\r\n        elif(food_type=='V' and quantity_ordered>=1):\r\n            bill_amount = 120*quantity_ordered + (distance_in_kms-6)*6 + 9\r\n        else:\r\n            bill_amount = -1\r\n    else:\r\n        bill_amount = -1\r\n        \r\n    return bill_amount\r\n\r\n\r\nbill_amount=calculate_bill_amount(\"N\",2,7)\r\nprint(bill_amount)\r\n","asgnmtId":"19","SolutionFileName":"Assignment19.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-02-21 19:04:24,920 INFO  Successfully processed and prepared the input for the verify service
2019-02-21 19:04:24,920 INFO  Successfully set the request parameters for VerifySolution
2019-02-21 19:04:24,920 INFO  Invoking the service to verify the user solution
2019-02-21 19:04:24,921 INFO  Time before invoking service:Thu Feb 21 19:04:24 IST 2019
2019-02-21 19:04:24,921 INFO  Initialising service address for VerifySolution
2019-02-21 19:04:24,921 INFO  Time before invoking service In SUPER:Thu Feb 21 19:04:24 IST 2019
2019-02-21 19:04:25,805 INFO  Time after invoking service In SUPER:Thu Feb 21 19:04:25 IST 2019
2019-02-21 19:04:25,805 INFO  Service responded successfully with required details
2019-02-21 19:04:25,806 INFO  Time after invoking service:Thu Feb 21 19:04:25 IST 2019
2019-02-21 19:04:25,806 INFO  User solution successfully verified
2019-02-21 19:04:25,806 INFO  Processing the response from verify service
2019-02-21 19:04:25,808 INFO  Starting to parse JSON response
2019-02-21 19:04:25,809 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 19:04:25,810 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 19:04:25,810 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 19:04:25,810 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 19:04:25,810 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 19:04:25,810 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 19:04:25,810 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 19:04:25,810 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 19:04:25,810 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 19:04:25,810 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 19:04:25,811 INFO  Successfully parsed JSON response
2019-02-21 19:04:25,811 INFO  In the process of generating verify response in HTML
2019-02-21 19:04:25,887 INFO  Successfully generated verify response in HTML
2019-02-21 19:04:25,887 INFO  Successfully processed the response from service
2019-02-21 19:05:27,730 INFO  Setting request parameters for VerifySolution
2019-02-21 19:05:27,730 INFO  Initiating to process and prepare Input for the verify service
2019-02-21 19:05:27,730 INFO  Starting to parse the user solution
2019-02-21 19:05:27,733 INFO  Displaying user solution
2019-02-21 19:05:27,782 INFO  Successfully parsed the user solution{"CourseShortName":"PF","UserSolution":"#PF-Assgn-19\r\n'''\r\nCreated on Feb 21, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\ndef calculate_bill_amount(food_type,quantity_ordered,distance_in_kms):\r\n    bill_amount=0\r\n    #write your logic here\r\n    if(distance_in_kms<=3 and distance_in_kms>0):\r\n       if(food_type=='N' and quantity_ordered>=1):\r\n           bill_amount = 150*quantity_ordered\r\n       elif(food_type=='V' and quantity_ordered>=1):\r\n            bill_amount = 120*quantity_ordered\r\n       else:\r\n            bill_amount = -1\r\n    elif(distance_in_kms>3 and distance_in_kms<=6 and distance_in_kms>0):\r\n         if(food_type=='N' and quantity_ordered>=1):\r\n             bill_amount = 150*quantity_ordered + (distance_in_kms-3)*3\r\n         elif(food_type=='V' and quantity_ordered>=1):\r\n             bill_amount = 120*quantity_ordered + (distance_in_kms-3)*3\r\n         else:\r\n                bill_amount = -1\r\n    elif(distance_in_kms>6 and distance_in_kms>0):\r\n        if(food_type=='N' and quantity_ordered>=1):\r\n            bill_amount = 150*quantity_ordered + (distance_in_kms-6)*6 + 9\r\n        elif(food_type=='V' and quantity_ordered>=1):\r\n            bill_amount = 120*quantity_ordered + (distance_in_kms-6)*6 + 9\r\n        else:\r\n            bill_amount = -1\r\n    else:\r\n        bill_amount = -1\r\n        \r\n    return bill_amount\r\n\r\n\r\nbill_amount=calculate_bill_amount(\"N\",2,7)\r\nprint(bill_amount)\r\n","asgnmtId":"19","SolutionFileName":"Assignment19.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-02-21 19:05:27,782 INFO  Successfully processed and prepared the input for the verify service
2019-02-21 19:05:27,782 INFO  Successfully set the request parameters for VerifySolution
2019-02-21 19:05:27,782 INFO  Invoking the service to verify the user solution
2019-02-21 19:05:27,782 INFO  Time before invoking service:Thu Feb 21 19:05:27 IST 2019
2019-02-21 19:05:27,782 INFO  Initialising service address for VerifySolution
2019-02-21 19:05:27,783 INFO  Time before invoking service In SUPER:Thu Feb 21 19:05:27 IST 2019
2019-02-21 19:05:28,760 INFO  Time after invoking service In SUPER:Thu Feb 21 19:05:28 IST 2019
2019-02-21 19:05:28,760 INFO  Service responded successfully with required details
2019-02-21 19:05:28,760 INFO  Time after invoking service:Thu Feb 21 19:05:28 IST 2019
2019-02-21 19:05:28,760 INFO  User solution successfully verified
2019-02-21 19:05:28,761 INFO  Processing the response from verify service
2019-02-21 19:05:28,762 INFO  Starting to parse JSON response
2019-02-21 19:05:28,763 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 19:05:28,763 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 19:05:28,764 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 19:05:28,764 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 19:05:28,764 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 19:05:28,764 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 19:05:28,764 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 19:05:28,764 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 19:05:28,764 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 19:05:28,764 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 19:05:28,765 INFO  Successfully parsed JSON response
2019-02-21 19:05:28,765 INFO  In the process of generating verify response in HTML
2019-02-21 19:05:28,831 INFO  Successfully generated verify response in HTML
2019-02-21 19:05:28,831 INFO  Successfully processed the response from service
2019-02-21 19:05:33,027 INFO  Initiating to process and prepare Input for the submit service
2019-02-21 19:05:33,028 INFO  Displaying user solution
2019-02-21 19:05:33,036 INFO  Successfully processed and prepared the input for the submit service
2019-02-21 19:05:33,036 INFO  Invoking the service to submit the user solution
2019-02-21 19:05:33,036 INFO  Initialising service address for Submit
2019-02-21 19:05:33,037 INFO  Time before invoking service In SUPER:Thu Feb 21 19:05:33 IST 2019
2019-02-21 19:05:33,270 INFO  Time after invoking service In SUPER:Thu Feb 21 19:05:33 IST 2019
2019-02-21 19:05:33,271 INFO  Service responded successfully with required details
2019-02-21 19:05:33,271 INFO  User solution successfully submitted
2019-02-21 19:05:33,271 INFO  Displaying submission status
2019-02-21 19:05:33,271 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-02-21 19:05:36,210 INFO  Initiating to process and prepare Input for the submit service
2019-02-21 19:05:36,210 INFO  Displaying user solution
2019-02-21 19:05:36,219 INFO  Successfully processed and prepared the input for the submit service
2019-02-21 19:05:36,219 INFO  Invoking the service to submit the user solution
2019-02-21 19:05:36,219 INFO  Initialising service address for Submit
2019-02-21 19:05:36,219 INFO  Time before invoking service In SUPER:Thu Feb 21 19:05:36 IST 2019
2019-02-21 19:05:36,383 INFO  Time after invoking service In SUPER:Thu Feb 21 19:05:36 IST 2019
2019-02-21 19:05:36,383 INFO  Service responded successfully with required details
2019-02-21 19:05:36,383 INFO  User solution successfully submitted
2019-02-21 19:05:36,383 INFO  Displaying submission status
2019-02-21 19:05:36,383 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-02-21 20:01:59,689 INFO  Setting request parameters for VerifySolution
2019-02-21 20:01:59,689 INFO  Initiating to process and prepare Input for the verify service
2019-02-21 20:01:59,689 INFO  Starting to parse the user solution
2019-02-21 20:01:59,690 INFO  Displaying user solution
2019-02-21 20:01:59,804 INFO  Successfully parsed the user solution{"CourseShortName":"PF","UserSolution":"#PF-Assgn-20\r\n'''\r\nCreated on Feb 21, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\ndef calculate_loan(account_number,salary,account_balance,loan_type,loan_amount_expected,customer_emi_expected):\r\n    eligible_loan_amount=0\r\n    bank_emi_expected=0\r\n    eligible_loan_amount=0\r\n    #Start writing your code here\r\n    if (account_number>=1000 and account_number<=1999):\r\n        print(\"Account number:\", account_number)\r\n        if(account_balance>=100000):\r\n            if(salary>25000 and salary<=50000 and loan_type == \"Car\"):\r\n                eligible_loan_amount = 500000\r\n                if(loan_amount_expected <= eligible_loan_amount):\r\n                    print(\"The customer can avail the amount of Rs.\", eligible_loan_amount)\r\n                    print(\"Requested loan amount:\", loan_amount_expected)\r\n                    bank_emi_expected = 36 \r\n                    if (customer_emi_expected<=bank_emi_expected):\r\n                        print(\"Eligible EMIs :\", bank_emi_expected)\r\n                        print(\"Requested EMI's:\",customer_emi_expected)\r\n                    else:\r\n                        print(\"The customer is not eligible for the loan\")\r\n                else:\r\n                    print(\"The customer is not eligible for the loan\")\r\n            elif(salary>50000 and salary<=75000 and loan_type == \"House\"):\r\n                eligible_loan_amount = 6000000\r\n                if(loan_amount_expected <= eligible_loan_amount):\r\n                    print(\"The customer can avail the amount of Rs.\", eligible_loan_amount)\r\n                    print(\"Requested loan amount:\", loan_amount_expected)\r\n                    bank_emi_expected = 60 \r\n                    if (customer_emi_expected<=bank_emi_expected):\r\n                        print(\"Eligible EMIs :\", bank_emi_expected)\r\n                        print(\"Requested EMI's:\",customer_emi_expected)\r\n                    else:\r\n                        print(\"The customer is not eligible for the loan\")\r\n                else:\r\n                    print(\"The customer is not eligible for the loan\")\r\n            elif(salary>75000 and loan_type == \"Business\"):\r\n                eligible_loan_amount = 7500000\r\n                if(loan_amount_expected <= eligible_loan_amount):\r\n                    print(\"The customer can avail the amount of Rs.\", eligible_loan_amount)\r\n                    print(\"Requested loan amount:\", loan_amount_expected)\r\n                    bank_emi_expected = 84 \r\n                    if (customer_emi_expected<=bank_emi_expected):\r\n                        print(\"Eligible EMIs :\", bank_emi_expected)\r\n                        print(\"Requested EMI's:\",customer_emi_expected)\r\n                    else:\r\n                        print(\"The customer is not eligible for the loan\")\r\n                else:\r\n                    print(\"The customer is not eligible for the loan\")\r\n            else:\r\n                print(\"Invalid loan type or salary\")\r\n        else:\r\n           print(\"Insufficient account balance\")\r\n    else: \r\n      print(\"Invalid account number\")\r\n\r\n#Test your code for different values and observe the results\r\ncalculate_loan(1001,40000,250000,\"Car\",300000,30)\r\n","asgnmtId":"20","SolutionFileName":"Assignment20.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-02-21 20:01:59,805 INFO  Successfully processed and prepared the input for the verify service
2019-02-21 20:01:59,805 INFO  Successfully set the request parameters for VerifySolution
2019-02-21 20:01:59,805 INFO  Invoking the service to verify the user solution
2019-02-21 20:01:59,806 INFO  Time before invoking service:Thu Feb 21 20:01:59 IST 2019
2019-02-21 20:01:59,806 INFO  Initialising service address for VerifySolution
2019-02-21 20:01:59,806 INFO  Time before invoking service In SUPER:Thu Feb 21 20:01:59 IST 2019
2019-02-21 20:02:00,718 INFO  Time after invoking service In SUPER:Thu Feb 21 20:02:00 IST 2019
2019-02-21 20:02:00,718 INFO  Service responded successfully with required details
2019-02-21 20:02:00,718 INFO  Time after invoking service:Thu Feb 21 20:02:00 IST 2019
2019-02-21 20:02:00,718 INFO  User solution successfully verified
2019-02-21 20:02:00,719 INFO  Processing the response from verify service
2019-02-21 20:02:00,721 INFO  Starting to parse JSON response
2019-02-21 20:02:00,723 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:02:00,723 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:02:00,723 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:02:00,723 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:02:00,723 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:02:00,723 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:02:00,723 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:02:00,723 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:02:00,723 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:02:00,723 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:02:00,724 INFO  Successfully parsed JSON response
2019-02-21 20:02:00,724 INFO  In the process of generating verify response in HTML
2019-02-21 20:02:00,817 INFO  Successfully generated verify response in HTML
2019-02-21 20:02:00,817 INFO  Successfully processed the response from service
2019-02-21 20:03:01,250 INFO  Setting request parameters for VerifySolution
2019-02-21 20:03:01,250 INFO  Initiating to process and prepare Input for the verify service
2019-02-21 20:03:01,250 INFO  Starting to parse the user solution
2019-02-21 20:03:01,250 INFO  Displaying user solution
2019-02-21 20:03:01,310 INFO  Successfully parsed the user solution{"CourseShortName":"PF","UserSolution":"#PF-Assgn-20\r\n'''\r\nCreated on Feb 21, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\ndef calculate_loan(account_number,salary,account_balance,loan_type,loan_amount_expected,customer_emi_expected):\r\n    eligible_loan_amount=0\r\n    bank_emi_expected=0\r\n    eligible_loan_amount=0\r\n    #Start writing your code here\r\n    if (account_number>=1000 and account_number<=1999):\r\n        print(\"Account number:\", account_number)\r\n        if(account_balance>=100000):\r\n            if(salary>25000 and salary<=50000 and loan_type == \"Car\"):\r\n                eligible_loan_amount = 500000\r\n                if(loan_amount_expected <= eligible_loan_amount):\r\n                    print(\"The customer can avail the amount of Rs.\", eligible_loan_amount)\r\n                    print(\"Requested loan amount:\", loan_amount_expected)\r\n                    bank_emi_expected = 36 \r\n                    if (customer_emi_expected<=bank_emi_expected):\r\n                        print(\"Eligible EMIs :\", bank_emi_expected)\r\n                        print(\"Requested EMI's:\",customer_emi_expected)\r\n                    else:\r\n                        print(\"The customer is not eligible for the loan\")\r\n                else:\r\n                    print(\"The customer is not eligible for the loan\")\r\n            elif(salary>50000 and salary<=75000 and loan_type == \"House\"):\r\n                eligible_loan_amount = 6000000\r\n                if(loan_amount_expected <= eligible_loan_amount):\r\n                    print(\"The customer can avail the amount of Rs.\", eligible_loan_amount)\r\n                    print(\"Requested loan amount:\", loan_amount_expected)\r\n                    bank_emi_expected = 60 \r\n                    if (customer_emi_expected<=bank_emi_expected):\r\n                        print(\"Eligible EMIs :\", bank_emi_expected)\r\n                        print(\"Requested EMI's:\",customer_emi_expected)\r\n                    else:\r\n                        print(\"The customer is not eligible for the loan\")\r\n                else:\r\n                    print(\"The customer is not eligible for the loan\")\r\n            elif(salary>75000 and loan_type == \"Business\"):\r\n                eligible_loan_amount = 7500000\r\n                if(loan_amount_expected <= eligible_loan_amount):\r\n                    print(\"The customer can avail the amount of Rs.\", eligible_loan_amount)\r\n                    print(\"Requested loan amount:\", loan_amount_expected)\r\n                    bank_emi_expected = 84 \r\n                    if (customer_emi_expected<=bank_emi_expected):\r\n                        print(\"Eligible EMIs :\", bank_emi_expected)\r\n                        print(\"Requested EMI's:\",customer_emi_expected)\r\n                    else:\r\n                        print(\"The customer is not eligible for the loan\")\r\n                else:\r\n                    print(\"The customer is not eligible for the loan\")\r\n            else:\r\n                print(\"Invalid loan type or salary\")\r\n        else:\r\n           print(\"Insufficient account balance\")\r\n    else: \r\n      print(\"Invalid account number\")\r\n\r\n#Test your code for different values and observe the results\r\ncalculate_loan(1001,40000,250000,\"Car\",300000,30)\r\n","asgnmtId":"20","SolutionFileName":"Assignment20.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-02-21 20:03:01,310 INFO  Successfully processed and prepared the input for the verify service
2019-02-21 20:03:01,311 INFO  Successfully set the request parameters for VerifySolution
2019-02-21 20:03:01,311 INFO  Invoking the service to verify the user solution
2019-02-21 20:03:01,311 INFO  Time before invoking service:Thu Feb 21 20:03:01 IST 2019
2019-02-21 20:03:01,311 INFO  Initialising service address for VerifySolution
2019-02-21 20:03:01,312 INFO  Time before invoking service In SUPER:Thu Feb 21 20:03:01 IST 2019
2019-02-21 20:03:02,169 INFO  Time after invoking service In SUPER:Thu Feb 21 20:03:02 IST 2019
2019-02-21 20:03:02,169 INFO  Service responded successfully with required details
2019-02-21 20:03:02,170 INFO  Time after invoking service:Thu Feb 21 20:03:02 IST 2019
2019-02-21 20:03:02,170 INFO  User solution successfully verified
2019-02-21 20:03:02,170 INFO  Processing the response from verify service
2019-02-21 20:03:02,173 INFO  Starting to parse JSON response
2019-02-21 20:03:02,173 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:03:02,174 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:03:02,174 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:03:02,174 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:03:02,174 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:03:02,174 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:03:02,174 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:03:02,174 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:03:02,174 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:03:02,174 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:03:02,177 INFO  Successfully parsed JSON response
2019-02-21 20:03:02,177 INFO  In the process of generating verify response in HTML
2019-02-21 20:03:02,272 INFO  Successfully generated verify response in HTML
2019-02-21 20:03:02,272 INFO  Successfully processed the response from service
2019-02-21 20:03:48,181 INFO  Setting request parameters for VerifySolution
2019-02-21 20:03:48,181 INFO  Initiating to process and prepare Input for the verify service
2019-02-21 20:03:48,181 INFO  Starting to parse the user solution
2019-02-21 20:03:48,182 INFO  Displaying user solution
2019-02-21 20:03:48,230 INFO  Successfully parsed the user solution{"CourseShortName":"PF","UserSolution":"#PF-Assgn-20\r\n'''\r\nCreated on Feb 21, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\ndef calculate_loan(account_number,salary,account_balance,loan_type,loan_amount_expected,customer_emi_expected):\r\n    eligible_loan_amount=0\r\n    bank_emi_expected=0\r\n    eligible_loan_amount=0\r\n    #Start writing your code here\r\n    if (account_number>=1000 and account_number<=1999):\r\n        print(\"Account number:\", account_number)\r\n        if(account_balance>=100000):\r\n            if(salary>25000 and salary<=50000 and loan_type == \"Car\"):\r\n                eligible_loan_amount = 500000\r\n                if(loan_amount_expected <= eligible_loan_amount):\r\n                    print(\"The customer can avail the amount of Rs.\",eligible_loan_amount)\r\n                    print(\"Requested loan amount:\", loan_amount_expected)\r\n                    bank_emi_expected = 36 \r\n                    if (customer_emi_expected<=bank_emi_expected):\r\n                        print(\"Eligible EMIs :\", bank_emi_expected)\r\n                        print(\"Requested EMI's:\",customer_emi_expected)\r\n                    else:\r\n                        print(\"The customer is not eligible for the loan\")\r\n                else:\r\n                    print(\"The customer is not eligible for the loan\")\r\n            elif(salary>50000 and salary<=75000 and loan_type == \"House\"):\r\n                eligible_loan_amount = 6000000\r\n                if(loan_amount_expected <= eligible_loan_amount):\r\n                    print(\"The customer can avail the amount of Rs.\",eligible_loan_amount)\r\n                    print(\"Requested loan amount:\", loan_amount_expected)\r\n                    bank_emi_expected = 60 \r\n                    if (customer_emi_expected<=bank_emi_expected):\r\n                        print(\"Eligible EMIs :\", bank_emi_expected)\r\n                        print(\"Requested EMI's:\",customer_emi_expected)\r\n                    else:\r\n                        print(\"The customer is not eligible for the loan\")\r\n                else:\r\n                    print(\"The customer is not eligible for the loan\")\r\n            elif(salary>75000 and loan_type == \"Business\"):\r\n                eligible_loan_amount = 7500000\r\n                if(loan_amount_expected <= eligible_loan_amount):\r\n                    print(\"The customer can avail the amount of Rs.\",eligible_loan_amount)\r\n                    print(\"Requested loan amount:\", loan_amount_expected)\r\n                    bank_emi_expected = 84 \r\n                    if (customer_emi_expected<=bank_emi_expected):\r\n                        print(\"Eligible EMIs :\", bank_emi_expected)\r\n                        print(\"Requested EMI's:\",customer_emi_expected)\r\n                    else:\r\n                        print(\"The customer is not eligible for the loan\")\r\n                else:\r\n                    print(\"The customer is not eligible for the loan\")\r\n            else:\r\n                print(\"Invalid loan type or salary\")\r\n        else:\r\n           print(\"Insufficient account balance\")\r\n    else: \r\n      print(\"Invalid account number\")\r\n\r\n#Test your code for different values and observe the results\r\ncalculate_loan(1001,40000,250000,\"Car\",300000,30)\r\n","asgnmtId":"20","SolutionFileName":"Assignment20.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-02-21 20:03:48,230 INFO  Successfully processed and prepared the input for the verify service
2019-02-21 20:03:48,231 INFO  Successfully set the request parameters for VerifySolution
2019-02-21 20:03:48,231 INFO  Invoking the service to verify the user solution
2019-02-21 20:03:48,231 INFO  Time before invoking service:Thu Feb 21 20:03:48 IST 2019
2019-02-21 20:03:48,231 INFO  Initialising service address for VerifySolution
2019-02-21 20:03:48,231 INFO  Time before invoking service In SUPER:Thu Feb 21 20:03:48 IST 2019
2019-02-21 20:03:49,137 INFO  Time after invoking service In SUPER:Thu Feb 21 20:03:49 IST 2019
2019-02-21 20:03:49,137 INFO  Service responded successfully with required details
2019-02-21 20:03:49,138 INFO  Time after invoking service:Thu Feb 21 20:03:49 IST 2019
2019-02-21 20:03:49,138 INFO  User solution successfully verified
2019-02-21 20:03:49,138 INFO  Processing the response from verify service
2019-02-21 20:03:49,140 INFO  Starting to parse JSON response
2019-02-21 20:03:49,140 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:03:49,140 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:03:49,140 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:03:49,140 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:03:49,140 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:03:49,140 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:03:49,141 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:03:49,141 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:03:49,141 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:03:49,141 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:03:49,142 INFO  Successfully parsed JSON response
2019-02-21 20:03:49,142 INFO  In the process of generating verify response in HTML
2019-02-21 20:03:49,231 INFO  Successfully generated verify response in HTML
2019-02-21 20:03:49,231 INFO  Successfully processed the response from service
2019-02-21 20:06:12,353 INFO  Setting request parameters for VerifySolution
2019-02-21 20:06:12,353 INFO  Initiating to process and prepare Input for the verify service
2019-02-21 20:06:12,353 INFO  Starting to parse the user solution
2019-02-21 20:06:12,353 INFO  Displaying user solution
2019-02-21 20:06:12,405 INFO  Successfully parsed the user solution{"CourseShortName":"PF","UserSolution":"#PF-Assgn-20\r\n'''\r\nCreated on Feb 21, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\ndef calculate_loan(account_number,salary,account_balance,loan_type,loan_amount_expected,customer_emi_expected):\r\n    eligible_loan_amount=0\r\n    bank_emi_expected=0\r\n    eligible_loan_amount=0\r\n    #Start writing your code here\r\n    if (account_number>=1000 and account_number<=1999):\r\n        print(\"Account number:\", account_number)\r\n        if(account_balance>=100000):\r\n            if(salary>25000 and salary<=50000 and loan_type == \"Car\"):\r\n                eligible_loan_amount = 500000\r\n                if(loan_amount_expected <= eligible_loan_amount):\r\n                    print(\"The customer can avail the amount of Rs.\",eligible_loan_amount)\r\n                    print(\"Requested loan amount:\", loan_amount_expected)\r\n                    bank_emi_expected = 36 \r\n                    if (customer_emi_expected<=bank_emi_expected):\r\n                        print(\"Eligible EMIs :\", bank_emi_expected)\r\n                        print(\"Requested EMI's:\",customer_emi_expected)\r\n                    else:\r\n                        print(\"The customer is not eligible for the loan\")\r\n                else:\r\n                    print(\"The customer is not eligible for the loan\")\r\n            elif(salary>50000 and salary<=75000 and loan_type == \"House\"):\r\n                eligible_loan_amount = 6000000\r\n                if(loan_amount_expected <= eligible_loan_amount):\r\n                    print(\"The customer can avail the amount of Rs.\",eligible_loan_amount)\r\n                    print(\"Requested loan amount:\", loan_amount_expected)\r\n                    bank_emi_expected = 60 \r\n                    if (customer_emi_expected<=bank_emi_expected):\r\n                        print(\"Eligible EMIs :\", bank_emi_expected)\r\n                        print(\"Requested EMI's:\",customer_emi_expected)\r\n                    else:\r\n                        print(\"The customer is not eligible for the loan\")\r\n                else:\r\n                    print(\"The customer is not eligible for the loan\")\r\n            elif(salary>75000 and loan_type == \"Business\"):\r\n                eligible_loan_amount = 7500000\r\n                if(loan_amount_expected <= eligible_loan_amount):\r\n                    print(\"The customer can avail the amount of Rs.\",eligible_loan_amount)\r\n                    print(\"Requested loan amount:\", loan_amount_expected)\r\n                    bank_emi_expected = 84 \r\n                    if (customer_emi_expected<=bank_emi_expected):\r\n                        print(\"Eligible EMIs :\", bank_emi_expected)\r\n                        print(\"Requested EMI's:\",customer_emi_expected)\r\n                    else:\r\n                        print(\"The customer is not eligible for the loan\")\r\n                else:\r\n                    print(\"The customer is not eligible for the loan\")\r\n            else:\r\n                print(\"Invalid loan type or salary\")\r\n        else:\r\n           print(\"Insufficient account balance\")\r\n    else: \r\n      print(\"Invalid account number\")\r\n\r\n#Test your code for different values and observe the results\r\ncalculate_loan(1001,40000,250000,\"Car\",300000,30)\r\n","asgnmtId":"20","SolutionFileName":"Assignment20.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-02-21 20:06:12,405 INFO  Successfully processed and prepared the input for the verify service
2019-02-21 20:06:12,405 INFO  Successfully set the request parameters for VerifySolution
2019-02-21 20:06:12,405 INFO  Invoking the service to verify the user solution
2019-02-21 20:06:12,406 INFO  Time before invoking service:Thu Feb 21 20:06:12 IST 2019
2019-02-21 20:06:12,406 INFO  Initialising service address for VerifySolution
2019-02-21 20:06:12,407 INFO  Time before invoking service In SUPER:Thu Feb 21 20:06:12 IST 2019
2019-02-21 20:06:13,300 INFO  Time after invoking service In SUPER:Thu Feb 21 20:06:13 IST 2019
2019-02-21 20:06:13,300 INFO  Service responded successfully with required details
2019-02-21 20:06:13,301 INFO  Time after invoking service:Thu Feb 21 20:06:13 IST 2019
2019-02-21 20:06:13,301 INFO  User solution successfully verified
2019-02-21 20:06:13,301 INFO  Processing the response from verify service
2019-02-21 20:06:13,302 INFO  Starting to parse JSON response
2019-02-21 20:06:13,302 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:06:13,302 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:06:13,303 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:06:13,303 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:06:13,303 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:06:13,303 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:06:13,303 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:06:13,303 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:06:13,303 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:06:13,303 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:06:13,304 INFO  Successfully parsed JSON response
2019-02-21 20:06:13,304 INFO  In the process of generating verify response in HTML
2019-02-21 20:06:13,380 INFO  Successfully generated verify response in HTML
2019-02-21 20:06:13,380 INFO  Successfully processed the response from service
2019-02-21 20:08:31,791 INFO  Setting request parameters for VerifySolution
2019-02-21 20:08:31,791 INFO  Initiating to process and prepare Input for the verify service
2019-02-21 20:08:31,791 INFO  Starting to parse the user solution
2019-02-21 20:08:31,792 INFO  Displaying user solution
2019-02-21 20:08:31,845 INFO  Successfully parsed the user solution{"CourseShortName":"PF","UserSolution":"#PF-Assgn-20\r\n'''\r\nCreated on Feb 21, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\ndef calculate_loan(account_number,salary,account_balance,loan_type,loan_amount_expected,customer_emi_expected):\r\n    eligible_loan_amount=0\r\n    bank_emi_expected=0\r\n    eligible_loan_amount=0\r\n    #Start writing your code here\r\n    if (account_number>=1000 and account_number<=1999):\r\n        print(\"Account number:\", account_number)\r\n        if(account_balance>=100000):\r\n            if(salary>25000 and salary<=50000 and loan_type == \"Car\"):\r\n                eligible_loan_amount = 500000\r\n                if(loan_amount_expected <= eligible_loan_amount):\r\n                    print(\" The customer can avail the amount of Rs.\",eligible_loan_amount)\r\n                    print(\" Requested loan amount:\", loan_amount_expected)\r\n                    bank_emi_expected = 36 \r\n                    if (customer_emi_expected<=bank_emi_expected):\r\n                        print(\" Eligible EMIs :\", bank_emi_expected)\r\n                        print(\" Requested EMI's:\",customer_emi_expected)\r\n                    else:\r\n                        print(\" The customer is not eligible for the loan\")\r\n                else:\r\n                    print(\" The customer is not eligible for the loan\")\r\n            elif(salary>50000 and salary<=75000 and loan_type == \"House\"):\r\n                eligible_loan_amount = 6000000\r\n                if(loan_amount_expected <= eligible_loan_amount):\r\n                    print(\"The customer can avail the amount of Rs.\",eligible_loan_amount)\r\n                    print(\"Requested loan amount:\", loan_amount_expected)\r\n                    bank_emi_expected = 60 \r\n                    if (customer_emi_expected<=bank_emi_expected):\r\n                        print(\"Eligible EMIs :\", bank_emi_expected)\r\n                        print(\"Requested EMI's:\",customer_emi_expected)\r\n                    else:\r\n                        print(\"The customer is not eligible for the loan\")\r\n                else:\r\n                    print(\"The customer is not eligible for the loan\")\r\n            elif(salary>75000 and loan_type == \"Business\"):\r\n                eligible_loan_amount = 7500000\r\n                if(loan_amount_expected <= eligible_loan_amount):\r\n                    print(\"The customer can avail the amount of Rs.\",eligible_loan_amount)\r\n                    print(\"Requested loan amount:\", loan_amount_expected)\r\n                    bank_emi_expected = 84 \r\n                    if (customer_emi_expected<=bank_emi_expected):\r\n                        print(\"Eligible EMIs :\", bank_emi_expected)\r\n                        print(\"Requested EMI's:\",customer_emi_expected)\r\n                    else:\r\n                        print(\"The customer is not eligible for the loan\")\r\n                else:\r\n                    print(\"The customer is not eligible for the loan\")\r\n            else:\r\n                print(\"Invalid loan type or salary\")\r\n        else:\r\n           print(\"Insufficient account balance\")\r\n    else: \r\n      print(\"Invalid account number\")\r\n\r\n#Test your code for different values and observe the results\r\ncalculate_loan(1001,40000,250000,\"Car\",300000,30)\r\n","asgnmtId":"20","SolutionFileName":"Assignment20.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-02-21 20:08:31,847 INFO  Successfully processed and prepared the input for the verify service
2019-02-21 20:08:31,847 INFO  Successfully set the request parameters for VerifySolution
2019-02-21 20:08:31,847 INFO  Invoking the service to verify the user solution
2019-02-21 20:08:31,848 INFO  Time before invoking service:Thu Feb 21 20:08:31 IST 2019
2019-02-21 20:08:31,848 INFO  Initialising service address for VerifySolution
2019-02-21 20:08:31,848 INFO  Time before invoking service In SUPER:Thu Feb 21 20:08:31 IST 2019
2019-02-21 20:08:32,796 INFO  Time after invoking service In SUPER:Thu Feb 21 20:08:32 IST 2019
2019-02-21 20:08:32,796 INFO  Service responded successfully with required details
2019-02-21 20:08:32,796 INFO  Time after invoking service:Thu Feb 21 20:08:32 IST 2019
2019-02-21 20:08:32,796 INFO  User solution successfully verified
2019-02-21 20:08:32,797 INFO  Processing the response from verify service
2019-02-21 20:08:32,802 INFO  Starting to parse JSON response
2019-02-21 20:08:32,803 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:08:32,803 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:08:32,803 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:08:32,803 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:08:32,803 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:08:32,803 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:08:32,803 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:08:32,803 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:08:32,803 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:08:32,803 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:08:32,804 INFO  Successfully parsed JSON response
2019-02-21 20:08:32,804 INFO  In the process of generating verify response in HTML
2019-02-21 20:08:32,868 INFO  Successfully generated verify response in HTML
2019-02-21 20:08:32,868 INFO  Successfully processed the response from service
2019-02-21 20:11:13,385 INFO  Setting request parameters for VerifySolution
2019-02-21 20:11:13,385 INFO  Initiating to process and prepare Input for the verify service
2019-02-21 20:11:13,385 INFO  Starting to parse the user solution
2019-02-21 20:11:13,386 INFO  Displaying user solution
2019-02-21 20:11:13,438 INFO  Successfully parsed the user solution{"CourseShortName":"PF","UserSolution":"#PF-Assgn-20\r\n'''\r\nCreated on Feb 21, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\ndef calculate_loan(account_number,salary,account_balance,loan_type,loan_amount_expected,customer_emi_expected):\r\n    eligible_loan_amount=0\r\n    bank_emi_expected=0\r\n    eligible_loan_amount=0\r\n    #Start writing your code here\r\n    if (account_number>=1000 and account_number<=1999):\r\n        print(\"Account number:\", account_number)\r\n        if(account_balance>=100000):\r\n            if(salary>25000 and salary<=50000 and loan_type == \"Car\"):\r\n                eligible_loan_amount = 500000\r\n                if(loan_amount_expected <= eligible_loan_amount):\r\n                    print(\"The customer can avail the amount of Rs.\",eligible_loan_amount)\r\n                    bank_emi_expected = 36 \r\n                    if (customer_emi_expected<=bank_emi_expected):\r\n                        print(\"Eligible EMIs :\", bank_emi_expected)\r\n                        print(\"Requested loan amount:\", loan_amount_expected)\r\n                        print(\"Requested EMI's:\",customer_emi_expected)\r\n                    else:\r\n                        print(\"The customer is not eligible for the loan\")\r\n                else:\r\n                    print(\"The customer is not eligible for the loan\")\r\n            elif(salary>50000 and salary<=75000 and loan_type == \"House\"):\r\n                eligible_loan_amount = 6000000\r\n                if(loan_amount_expected <= eligible_loan_amount):\r\n                    print(\"The customer can avail the amount of Rs.\",eligible_loan_amount)\r\n                    \r\n                    bank_emi_expected = 60 \r\n                    if (customer_emi_expected<=bank_emi_expected):\r\n                        print(\"Eligible EMIs :\", bank_emi_expected)\r\n                        print(\"Requested loan amount:\", loan_amount_expected)\r\n                        print(\"Requested EMI's:\",customer_emi_expected)\r\n                    else:\r\n                        print(\"The customer is not eligible for the loan\")\r\n                else:\r\n                    print(\"The customer is not eligible for the loan\")\r\n            elif(salary>75000 and loan_type == \"Business\"):\r\n                eligible_loan_amount = 7500000\r\n                if(loan_amount_expected <= eligible_loan_amount):\r\n                    print(\"The customer can avail the amount of Rs.\",eligible_loan_amount)\r\n                    \r\n                    bank_emi_expected = 84 \r\n                    if (customer_emi_expected<=bank_emi_expected):\r\n                        print(\"Eligible EMIs :\", bank_emi_expected)\r\n                        print(\"Requested loan amount:\", loan_amount_expected)\r\n                        print(\"Requested EMI's:\",customer_emi_expected)\r\n                    else:\r\n                        print(\"The customer is not eligible for the loan\")\r\n                else:\r\n                    print(\"The customer is not eligible for the loan\")\r\n            else:\r\n                print(\"Invalid loan type or salary\")\r\n        else:\r\n           print(\"Insufficient account balance\")\r\n    else: \r\n      print(\"Invalid account number\")\r\n\r\n#Test your code for different values and observe the results\r\ncalculate_loan(1001,40000,250000,\"Car\",300000,30)\r\n","asgnmtId":"20","SolutionFileName":"Assignment20.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-02-21 20:11:13,439 INFO  Successfully processed and prepared the input for the verify service
2019-02-21 20:11:13,439 INFO  Successfully set the request parameters for VerifySolution
2019-02-21 20:11:13,439 INFO  Invoking the service to verify the user solution
2019-02-21 20:11:13,440 INFO  Time before invoking service:Thu Feb 21 20:11:13 IST 2019
2019-02-21 20:11:13,440 INFO  Initialising service address for VerifySolution
2019-02-21 20:11:13,440 INFO  Time before invoking service In SUPER:Thu Feb 21 20:11:13 IST 2019
2019-02-21 20:11:14,324 INFO  Time after invoking service In SUPER:Thu Feb 21 20:11:14 IST 2019
2019-02-21 20:11:14,325 INFO  Service responded successfully with required details
2019-02-21 20:11:14,325 INFO  Time after invoking service:Thu Feb 21 20:11:14 IST 2019
2019-02-21 20:11:14,325 INFO  User solution successfully verified
2019-02-21 20:11:14,325 INFO  Processing the response from verify service
2019-02-21 20:11:14,327 INFO  Starting to parse JSON response
2019-02-21 20:11:14,328 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:11:14,328 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:11:14,328 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:11:14,328 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:11:14,328 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:11:14,328 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:11:14,328 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:11:14,328 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:11:14,328 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:11:14,328 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:11:14,329 INFO  Successfully parsed JSON response
2019-02-21 20:11:14,329 INFO  In the process of generating verify response in HTML
2019-02-21 20:11:14,396 INFO  Successfully generated verify response in HTML
2019-02-21 20:11:14,396 INFO  Successfully processed the response from service
2019-02-21 20:12:53,193 INFO  Setting request parameters for VerifySolution
2019-02-21 20:12:53,194 INFO  Initiating to process and prepare Input for the verify service
2019-02-21 20:12:53,194 INFO  Starting to parse the user solution
2019-02-21 20:12:53,194 INFO  Displaying user solution
2019-02-21 20:12:53,246 INFO  Successfully parsed the user solution{"CourseShortName":"PF","UserSolution":"#PF-Assgn-20\r\n'''\r\nCreated on Feb 21, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\ndef calculate_loan(account_number,salary,account_balance,loan_type,loan_amount_expected,customer_emi_expected):\r\n    eligible_loan_amount=0\r\n    bank_emi_expected=0\r\n    eligible_loan_amount=0\r\n    #Start writing your code here\r\n    if (account_number>=1000 and account_number<=1999):\r\n        print(\"Account number:\", account_number)\r\n        if(account_balance>=100000):\r\n            if(salary>25000 and salary<=50000 and loan_type == \"Car\"):\r\n                eligible_loan_amount = 500000\r\n                if(loan_amount_expected <= eligible_loan_amount):\r\n                    print(\"The customer can avail the amount of Rs.\",eligible_loan_amount)\r\n                    bank_emi_expected = 36 \r\n                    if (customer_emi_expected<=bank_emi_expected):\r\n                        print(\"Eligible EMIs :\", bank_emi_expected)\r\n                        print(\"Requested loan amount:\", loan_amount_expected)\r\n                        print(\"Requested EMI's:\",customer_emi_expected)\r\n                    else:\r\n                        print(\"The customer is not eligible for the loan\")\r\n                else:\r\n                    print(\"The customer is not eligible for the loan\")\r\n            elif(salary>50000 and salary<=75000 and loan_type == \"House\"):\r\n                eligible_loan_amount = 6000000\r\n                if(loan_amount_expected <= eligible_loan_amount):\r\n                    print(\"The customer can avail the amount of Rs.\",eligible_loan_amount)\r\n                    \r\n                    bank_emi_expected = 60 \r\n                    if (customer_emi_expected<=bank_emi_expected):\r\n                        print(\"Eligible EMIs :\", bank_emi_expected)\r\n                        print(\"Requested loan amount:\", loan_amount_expected)\r\n                        print(\"Requested EMI's:\",customer_emi_expected)\r\n                    else:\r\n                        print(\"The customer is not eligible for the loan\")\r\n                else:\r\n                    print(\"The customer is not eligible for the loan\")\r\n            elif(salary>75000 and loan_type == \"Business\"):\r\n                eligible_loan_amount = 7500000\r\n                if(loan_amount_expected <= eligible_loan_amount):\r\n                    print(\"The customer can avail the amount of Rs.\",eligible_loan_amount)\r\n                    \r\n                    bank_emi_expected = 84 \r\n                    if (customer_emi_expected<=bank_emi_expected):\r\n                        print(\"Eligible EMIs :\", bank_emi_expected)\r\n                        print(\"Requested loan amount:\", loan_amount_expected)\r\n                        print(\"Requested EMI's:\",customer_emi_expected)\r\n                    else:\r\n                        print(\"The customer is not eligible for the loan\")\r\n                else:\r\n                    print(\"The customer is not eligible for the loan\")\r\n            else:\r\n                print(\"Invalid loan type or salary\")\r\n        else:\r\n           print(\"Insufficient account balance\")\r\n    else: \r\n      print(\"Invalid account number\")\r\n\r\n#Test your code for different values and observe the results\r\ncalculate_loan(1001,40000,250000,\"Car\",300000,30)\r\n","asgnmtId":"20","SolutionFileName":"Assignment20.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-02-21 20:12:53,247 INFO  Successfully processed and prepared the input for the verify service
2019-02-21 20:12:53,247 INFO  Successfully set the request parameters for VerifySolution
2019-02-21 20:12:53,247 INFO  Invoking the service to verify the user solution
2019-02-21 20:12:53,247 INFO  Time before invoking service:Thu Feb 21 20:12:53 IST 2019
2019-02-21 20:12:53,248 INFO  Initialising service address for VerifySolution
2019-02-21 20:12:53,248 INFO  Time before invoking service In SUPER:Thu Feb 21 20:12:53 IST 2019
2019-02-21 20:12:54,246 INFO  Time after invoking service In SUPER:Thu Feb 21 20:12:54 IST 2019
2019-02-21 20:12:54,246 INFO  Service responded successfully with required details
2019-02-21 20:12:54,246 INFO  Time after invoking service:Thu Feb 21 20:12:54 IST 2019
2019-02-21 20:12:54,246 INFO  User solution successfully verified
2019-02-21 20:12:54,247 INFO  Processing the response from verify service
2019-02-21 20:12:54,248 INFO  Starting to parse JSON response
2019-02-21 20:12:54,249 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:12:54,249 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:12:54,249 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:12:54,249 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:12:54,249 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:12:54,249 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:12:54,250 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:12:54,250 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:12:54,250 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:12:54,250 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:12:54,250 INFO  Successfully parsed JSON response
2019-02-21 20:12:54,250 INFO  In the process of generating verify response in HTML
2019-02-21 20:12:54,323 INFO  Successfully generated verify response in HTML
2019-02-21 20:12:54,324 INFO  Successfully processed the response from service
2019-02-21 20:17:42,569 INFO  Setting request parameters for VerifySolution
2019-02-21 20:17:42,570 INFO  Initiating to process and prepare Input for the verify service
2019-02-21 20:17:42,570 INFO  Starting to parse the user solution
2019-02-21 20:17:42,570 INFO  Displaying user solution
2019-02-21 20:17:42,628 INFO  Successfully parsed the user solution{"CourseShortName":"PF","UserSolution":"#PF-Assgn-20\r\n'''\r\nCreated on Feb 21, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\ndef calculate_loan(account_number,salary,account_balance,loan_type,loan_amount_expected,customer_emi_expected):\r\n    eligible_loan_amount=0\r\n    bank_emi_expected=0\r\n    eligible_loan_amount=0\r\n    #Start writing your code here\r\n    if (account_number>=1000 and account_number<=1999 and account_balance>=100000):\r\n        \r\n        if(account_balance>=100000):\r\n            print(\"Account number:\", account_number)\r\n            if(salary>25000 and salary<=50000 and loan_type == \"Car\"):\r\n                eligible_loan_amount = 500000\r\n                if(loan_amount_expected <= eligible_loan_amount):\r\n                    print(\"The customer can avail the amount of Rs.\",eligible_loan_amount)\r\n                    bank_emi_expected = 36 \r\n                    if (customer_emi_expected<=bank_emi_expected):\r\n                        print(\"Eligible EMIs :\", bank_emi_expected)\r\n                        print(\"Requested loan amount:\", loan_amount_expected)\r\n                        print(\"Requested EMI's:\",customer_emi_expected)\r\n                    else:\r\n                        print(\"The customer is not eligible for the loan\")\r\n                else:\r\n                    print(\"The customer is not eligible for the loan\")\r\n            elif(salary>50000 and salary<=75000 and loan_type == \"House\"):\r\n                eligible_loan_amount = 6000000\r\n                if(loan_amount_expected <= eligible_loan_amount):\r\n                    print(\"The customer can avail the amount of Rs.\",eligible_loan_amount)\r\n                    \r\n                    bank_emi_expected = 60 \r\n                    if (customer_emi_expected<=bank_emi_expected):\r\n                        print(\"Eligible EMIs :\", bank_emi_expected)\r\n                        print(\"Requested loan amount:\", loan_amount_expected)\r\n                        print(\"Requested EMI's:\",customer_emi_expected)\r\n                    else:\r\n                        print(\"The customer is not eligible for the loan\")\r\n                else:\r\n                    print(\"The customer is not eligible for the loan\")\r\n            elif(salary>75000 and loan_type == \"Business\"):\r\n                eligible_loan_amount = 7500000\r\n                if(loan_amount_expected <= eligible_loan_amount):\r\n                    print(\"The customer can avail the amount of Rs.\",eligible_loan_amount)\r\n                    \r\n                    bank_emi_expected = 84 \r\n                    if (customer_emi_expected<=bank_emi_expected):\r\n                        print(\"Eligible EMIs :\", bank_emi_expected)\r\n                        print(\"Requested loan amount:\", loan_amount_expected)\r\n                        print(\"Requested EMI's:\",customer_emi_expected)\r\n                    else:\r\n                        print(\"The customer is not eligible for the loan\")\r\n                else:\r\n                    print(\"The customer is not eligible for the loan\")\r\n            else:\r\n                print(\"Invalid loan type or salary\")\r\n        else:\r\n           print(\"Insufficient account balance\")\r\n    else: \r\n      print(\"Invalid account number\")\r\n\r\n#Test your code for different values and observe the results\r\ncalculate_loan(1001,40000,250000,\"Car\",300000,30)\r\n","asgnmtId":"20","SolutionFileName":"Assignment20.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-02-21 20:17:42,630 INFO  Successfully processed and prepared the input for the verify service
2019-02-21 20:17:42,630 INFO  Successfully set the request parameters for VerifySolution
2019-02-21 20:17:42,630 INFO  Invoking the service to verify the user solution
2019-02-21 20:17:42,630 INFO  Time before invoking service:Thu Feb 21 20:17:42 IST 2019
2019-02-21 20:17:42,630 INFO  Initialising service address for VerifySolution
2019-02-21 20:17:42,631 INFO  Time before invoking service In SUPER:Thu Feb 21 20:17:42 IST 2019
2019-02-21 20:17:43,600 INFO  Time after invoking service In SUPER:Thu Feb 21 20:17:43 IST 2019
2019-02-21 20:17:43,600 INFO  Service responded successfully with required details
2019-02-21 20:17:43,600 INFO  Time after invoking service:Thu Feb 21 20:17:43 IST 2019
2019-02-21 20:17:43,600 INFO  User solution successfully verified
2019-02-21 20:17:43,601 INFO  Processing the response from verify service
2019-02-21 20:17:43,605 INFO  Starting to parse JSON response
2019-02-21 20:17:43,607 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:17:43,607 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:17:43,607 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:17:43,607 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:17:43,607 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:17:43,607 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:17:43,607 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:17:43,607 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:17:43,607 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:17:43,607 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:17:43,609 INFO  Successfully parsed JSON response
2019-02-21 20:17:43,609 INFO  In the process of generating verify response in HTML
2019-02-21 20:17:43,689 INFO  Successfully generated verify response in HTML
2019-02-21 20:17:43,690 INFO  Successfully processed the response from service
2019-02-21 20:19:04,850 INFO  Setting request parameters for VerifySolution
2019-02-21 20:19:04,850 INFO  Initiating to process and prepare Input for the verify service
2019-02-21 20:19:04,850 INFO  Starting to parse the user solution
2019-02-21 20:19:04,851 INFO  Displaying user solution
2019-02-21 20:19:04,906 INFO  Successfully parsed the user solution{"CourseShortName":"PF","UserSolution":"#PF-Assgn-20\r\n'''\r\nCreated on Feb 21, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\ndef calculate_loan(account_number,salary,account_balance,loan_type,loan_amount_expected,customer_emi_expected):\r\n    eligible_loan_amount=0\r\n    bank_emi_expected=0\r\n    eligible_loan_amount=0\r\n    #Start writing your code here\r\n    if (account_number>=1000 and account_number<=1999 and account_balance>=100000):\r\n        \r\n        if(account_balance>=100000):\r\n            print(\"Account number:\", account_number)\r\n            if(salary>25000 and salary<=50000 and loan_type == \"Car\"):\r\n                eligible_loan_amount = 500000\r\n                if(loan_amount_expected <= eligible_loan_amount):\r\n                    print(\"The customer can avail the amount of Rs.\",eligible_loan_amount)\r\n                    bank_emi_expected = 36 \r\n                    if (customer_emi_expected<=bank_emi_expected):\r\n                        print(\"Eligible EMIs :\", bank_emi_expected)\r\n                        print(\"Requested loan amount:\", loan_amount_expected)\r\n                        print(\"Requested EMI's:\",customer_emi_expected)\r\n                    else:\r\n                        print(\"The customer is not eligible for the loan\")\r\n                else:\r\n                    print(\"The customer is not eligible for the loan\")\r\n            elif(salary>50000 and salary<=75000 and loan_type == \"House\"):\r\n                eligible_loan_amount = 6000000\r\n                if(loan_amount_expected <= eligible_loan_amount):\r\n                    print(\"The customer can avail the amount of Rs.\",eligible_loan_amount)\r\n                    \r\n                    bank_emi_expected = 60 \r\n                    if (customer_emi_expected<=bank_emi_expected):\r\n                        print(\"Eligible EMIs :\", bank_emi_expected)\r\n                        print(\"Requested loan amount:\", loan_amount_expected)\r\n                        print(\"Requested EMI's:\",customer_emi_expected)\r\n                    else:\r\n                        print(\"The customer is not eligible for the loan\")\r\n                else:\r\n                    print(\"The customer is not eligible for the loan\")\r\n            elif(salary>75000 and loan_type == \"Business\"):\r\n                eligible_loan_amount = 7500000\r\n                if(loan_amount_expected <= eligible_loan_amount):\r\n                    print(\"The customer can avail the amount of Rs.\",eligible_loan_amount)\r\n                    \r\n                    bank_emi_expected = 84 \r\n                    if (customer_emi_expected<=bank_emi_expected):\r\n                        print(\"Eligible EMIs :\", bank_emi_expected)\r\n                        print(\"Requested loan amount:\", loan_amount_expected)\r\n                        print(\"Requested EMI's:\",customer_emi_expected)\r\n                    else:\r\n                        print(\"The customer is not eligible for the loan\")\r\n                else:\r\n                    print(\"The customer is not eligible for the loan\")\r\n            else:\r\n                print(\"Invalid loan type or salary\")\r\n        else:\r\n        print(\"Insufficient account balance\")\r\n    else: \r\n      print(\"Invalid account number\")\r\n\r\n#Test your code for different values and observe the results\r\ncalculate_loan(1001,40000,250000,\"Car\",300000,30)\r\n","asgnmtId":"20","SolutionFileName":"Assignment20.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-02-21 20:19:04,906 INFO  Successfully processed and prepared the input for the verify service
2019-02-21 20:19:04,906 INFO  Successfully set the request parameters for VerifySolution
2019-02-21 20:19:04,906 INFO  Invoking the service to verify the user solution
2019-02-21 20:19:04,907 INFO  Time before invoking service:Thu Feb 21 20:19:04 IST 2019
2019-02-21 20:19:04,907 INFO  Initialising service address for VerifySolution
2019-02-21 20:19:04,907 INFO  Time before invoking service In SUPER:Thu Feb 21 20:19:04 IST 2019
2019-02-21 20:19:05,794 INFO  Time after invoking service In SUPER:Thu Feb 21 20:19:05 IST 2019
2019-02-21 20:19:05,794 INFO  Service responded successfully with required details
2019-02-21 20:19:05,795 INFO  Time after invoking service:Thu Feb 21 20:19:05 IST 2019
2019-02-21 20:19:05,795 INFO  User solution successfully verified
2019-02-21 20:19:05,795 INFO  Processing the response from verify service
2019-02-21 20:19:05,796 INFO  Verification Failed : Unknown error
->Please Contact the educator
(error code:-57)
2019-02-21 20:19:10,832 INFO  Setting request parameters for VerifySolution
2019-02-21 20:19:10,833 INFO  Initiating to process and prepare Input for the verify service
2019-02-21 20:19:10,833 INFO  Starting to parse the user solution
2019-02-21 20:19:10,833 INFO  Displaying user solution
2019-02-21 20:19:10,891 INFO  Successfully parsed the user solution{"CourseShortName":"PF","UserSolution":"#PF-Assgn-20\r\n'''\r\nCreated on Feb 21, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\ndef calculate_loan(account_number,salary,account_balance,loan_type,loan_amount_expected,customer_emi_expected):\r\n    eligible_loan_amount=0\r\n    bank_emi_expected=0\r\n    eligible_loan_amount=0\r\n    #Start writing your code here\r\n    if (account_number>=1000 and account_number<=1999 and account_balance>=100000):\r\n        \r\n        if(account_balance>=100000):\r\n            print(\"Account number:\", account_number)\r\n            if(salary>25000 and salary<=50000 and loan_type == \"Car\"):\r\n                eligible_loan_amount = 500000\r\n                if(loan_amount_expected <= eligible_loan_amount):\r\n                    print(\"The customer can avail the amount of Rs.\",eligible_loan_amount)\r\n                    bank_emi_expected = 36 \r\n                    if (customer_emi_expected<=bank_emi_expected):\r\n                        print(\"Eligible EMIs :\", bank_emi_expected)\r\n                        print(\"Requested loan amount:\", loan_amount_expected)\r\n                        print(\"Requested EMI's:\",customer_emi_expected)\r\n                    else:\r\n                        print(\"The customer is not eligible for the loan\")\r\n                else:\r\n                    print(\"The customer is not eligible for the loan\")\r\n            elif(salary>50000 and salary<=75000 and loan_type == \"House\"):\r\n                eligible_loan_amount = 6000000\r\n                if(loan_amount_expected <= eligible_loan_amount):\r\n                    print(\"The customer can avail the amount of Rs.\",eligible_loan_amount)\r\n                    \r\n                    bank_emi_expected = 60 \r\n                    if (customer_emi_expected<=bank_emi_expected):\r\n                        print(\"Eligible EMIs :\", bank_emi_expected)\r\n                        print(\"Requested loan amount:\", loan_amount_expected)\r\n                        print(\"Requested EMI's:\",customer_emi_expected)\r\n                    else:\r\n                        print(\"The customer is not eligible for the loan\")\r\n                else:\r\n                    print(\"The customer is not eligible for the loan\")\r\n            elif(salary>75000 and loan_type == \"Business\"):\r\n                eligible_loan_amount = 7500000\r\n                if(loan_amount_expected <= eligible_loan_amount):\r\n                    print(\"The customer can avail the amount of Rs.\",eligible_loan_amount)\r\n                    \r\n                    bank_emi_expected = 84 \r\n                    if (customer_emi_expected<=bank_emi_expected):\r\n                        print(\"Eligible EMIs :\", bank_emi_expected)\r\n                        print(\"Requested loan amount:\", loan_amount_expected)\r\n                        print(\"Requested EMI's:\",customer_emi_expected)\r\n                    else:\r\n                        print(\"The customer is not eligible for the loan\")\r\n                else:\r\n                    print(\"The customer is not eligible for the loan\")\r\n            else:\r\n                print(\"Invalid loan type or salary\")\r\n        else:\r\n        print(\"Insufficient account balance\")\r\n    else: \r\n      print(\"Invalid account number\")\r\n\r\n#Test your code for different values and observe the results\r\ncalculate_loan(1001,40000,250000,\"Car\",300000,30)\r\n","asgnmtId":"20","SolutionFileName":"Assignment20.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-02-21 20:19:10,891 INFO  Successfully processed and prepared the input for the verify service
2019-02-21 20:19:10,892 INFO  Successfully set the request parameters for VerifySolution
2019-02-21 20:19:10,892 INFO  Invoking the service to verify the user solution
2019-02-21 20:19:10,892 INFO  Time before invoking service:Thu Feb 21 20:19:10 IST 2019
2019-02-21 20:19:10,892 INFO  Initialising service address for VerifySolution
2019-02-21 20:19:10,893 INFO  Time before invoking service In SUPER:Thu Feb 21 20:19:10 IST 2019
2019-02-21 20:19:11,660 INFO  Time after invoking service In SUPER:Thu Feb 21 20:19:11 IST 2019
2019-02-21 20:19:11,660 INFO  Service responded successfully with required details
2019-02-21 20:19:11,660 INFO  Time after invoking service:Thu Feb 21 20:19:11 IST 2019
2019-02-21 20:19:11,660 INFO  User solution successfully verified
2019-02-21 20:19:11,660 INFO  Processing the response from verify service
2019-02-21 20:19:11,660 INFO  Verification Failed : Unknown error
->Please Contact the educator
(error code:-57)
2019-02-21 20:19:21,984 INFO  Setting request parameters for VerifySolution
2019-02-21 20:19:21,984 INFO  Initiating to process and prepare Input for the verify service
2019-02-21 20:19:21,984 INFO  Starting to parse the user solution
2019-02-21 20:19:21,984 INFO  Displaying user solution
2019-02-21 20:19:22,025 INFO  Successfully parsed the user solution{"CourseShortName":"PF","UserSolution":"#PF-Assgn-20\r\n'''\r\nCreated on Feb 21, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\ndef calculate_loan(account_number,salary,account_balance,loan_type,loan_amount_expected,customer_emi_expected):\r\n    eligible_loan_amount=0\r\n    bank_emi_expected=0\r\n    eligible_loan_amount=0\r\n    #Start writing your code here\r\n    if (account_number>=1000 and account_number<=1999 and account_balance>=100000):\r\n        \r\n        if(account_balance>=100000):\r\n            print(\"Account number:\", account_number)\r\n            if(salary>25000 and salary<=50000 and loan_type == \"Car\"):\r\n                eligible_loan_amount = 500000\r\n                if(loan_amount_expected <= eligible_loan_amount):\r\n                    print(\"The customer can avail the amount of Rs.\",eligible_loan_amount)\r\n                    bank_emi_expected = 36 \r\n                    if (customer_emi_expected<=bank_emi_expected):\r\n                        print(\"Eligible EMIs :\", bank_emi_expected)\r\n                        print(\"Requested loan amount:\", loan_amount_expected)\r\n                        print(\"Requested EMI's:\",customer_emi_expected)\r\n                    else:\r\n                        print(\"The customer is not eligible for the loan\")\r\n                else:\r\n                    print(\"The customer is not eligible for the loan\")\r\n            elif(salary>50000 and salary<=75000 and loan_type == \"House\"):\r\n                eligible_loan_amount = 6000000\r\n                if(loan_amount_expected <= eligible_loan_amount):\r\n                    print(\"The customer can avail the amount of Rs.\",eligible_loan_amount)\r\n                    \r\n                    bank_emi_expected = 60 \r\n                    if (customer_emi_expected<=bank_emi_expected):\r\n                        print(\"Eligible EMIs :\", bank_emi_expected)\r\n                        print(\"Requested loan amount:\", loan_amount_expected)\r\n                        print(\"Requested EMI's:\",customer_emi_expected)\r\n                    else:\r\n                        print(\"The customer is not eligible for the loan\")\r\n                else:\r\n                    print(\"The customer is not eligible for the loan\")\r\n            elif(salary>75000 and loan_type == \"Business\"):\r\n                eligible_loan_amount = 7500000\r\n                if(loan_amount_expected <= eligible_loan_amount):\r\n                    print(\"The customer can avail the amount of Rs.\",eligible_loan_amount)\r\n                    \r\n                    bank_emi_expected = 84 \r\n                    if (customer_emi_expected<=bank_emi_expected):\r\n                        print(\"Eligible EMIs :\", bank_emi_expected)\r\n                        print(\"Requested loan amount:\", loan_amount_expected)\r\n                        print(\"Requested EMI's:\",customer_emi_expected)\r\n                    else:\r\n                        print(\"The customer is not eligible for the loan\")\r\n                else:\r\n                    print(\"The customer is not eligible for the loan\")\r\n            else:\r\n                print(\"Invalid loan type or salary\")\r\n        else:\r\n            print(\"Insufficient account balance\")\r\n    else: \r\n      print(\"Invalid account number\")\r\n\r\n#Test your code for different values and observe the results\r\ncalculate_loan(1001,40000,250000,\"Car\",300000,30)\r\n","asgnmtId":"20","SolutionFileName":"Assignment20.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-02-21 20:19:22,026 INFO  Successfully processed and prepared the input for the verify service
2019-02-21 20:19:22,026 INFO  Successfully set the request parameters for VerifySolution
2019-02-21 20:19:22,026 INFO  Invoking the service to verify the user solution
2019-02-21 20:19:22,026 INFO  Time before invoking service:Thu Feb 21 20:19:22 IST 2019
2019-02-21 20:19:22,026 INFO  Initialising service address for VerifySolution
2019-02-21 20:19:22,027 INFO  Time before invoking service In SUPER:Thu Feb 21 20:19:22 IST 2019
2019-02-21 20:19:22,892 INFO  Time after invoking service In SUPER:Thu Feb 21 20:19:22 IST 2019
2019-02-21 20:19:22,893 INFO  Service responded successfully with required details
2019-02-21 20:19:22,893 INFO  Time after invoking service:Thu Feb 21 20:19:22 IST 2019
2019-02-21 20:19:22,893 INFO  User solution successfully verified
2019-02-21 20:19:22,893 INFO  Processing the response from verify service
2019-02-21 20:19:22,895 INFO  Starting to parse JSON response
2019-02-21 20:19:22,896 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:19:22,896 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:19:22,896 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:19:22,896 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:19:22,896 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:19:22,896 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:19:22,896 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:19:22,896 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:19:22,896 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:19:22,896 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:19:22,897 INFO  Successfully parsed JSON response
2019-02-21 20:19:22,897 INFO  In the process of generating verify response in HTML
2019-02-21 20:19:22,964 INFO  Successfully generated verify response in HTML
2019-02-21 20:19:22,964 INFO  Successfully processed the response from service
2019-02-21 20:51:30,859 INFO  Setting request parameters for VerifySolution
2019-02-21 20:51:30,859 INFO  Initiating to process and prepare Input for the verify service
2019-02-21 20:51:30,859 INFO  Starting to parse the user solution
2019-02-21 20:51:30,859 INFO  Displaying user solution
2019-02-21 20:51:30,990 INFO  Successfully parsed the user solution{"CourseShortName":"PF","UserSolution":"#PF-Assgn-20\r\n'''\r\nCreated on Feb 21, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\ndef calculate_loan(account_number,salary,account_balance,loan_type,loan_amount_expected,customer_emi_expected):\r\n    eligible_loan_amount=0\r\n    bank_emi_expected=0\r\n    eligible_loan_amount=0\r\n    #Start writing your code here\r\n    if(account_number>=1000 and account_number<=1999):\r\n       print(\"Account number:\", account_number)\r\n    else:\r\n        print(\"Invalid account number\")\r\n    if(account_balance>=100000):\r\n        print()\r\n    else:\r\n        print(\"Insufficient account balance\")\r\n    if(salary>25000 and salary<=50000):\r\n        eligible_loan_amount = 500000\r\n        bank_emi_expected = 36\r\n        if(loan_amount_expected<=eligible_loan_amount and customer_emi_expected<=bank_emi_expected):\r\n            print(\"The customer can avail the amount of Rs.\", eligible_loan_amount)\r\n            print(\"Eligible EMIs :\", bank_emi_expected)\r\n            print(\"Requested loan amount:\", loan_amount_expected)\r\n            print(\"Requested EMI's:\",customer_emi_expected)\r\n        else:\r\n            print(\"The customer is not eligible for the loan\")\r\n    elif(salary>50000 and salary<=75000):\r\n        eligible_loan_amount = 6000000\r\n        bank_emi_expected = 60\r\n        if(loan_amount_expected<=eligible_loan_amount and customer_emi_expected<=bank_emi_expected):\r\n            print(\"The customer can avail the amount of Rs.\", eligible_loan_amount)\r\n            print(\"Eligible EMIs :\", bank_emi_expected)\r\n            print(\"Requested loan amount:\", loan_amount_expected)\r\n            print(\"Requested EMI's:\",customer_emi_expected)\r\n        else:\r\n            print(\"The customer is not eligible for the loan\")\r\n    elif(salary>75000):\r\n        eligible_loan_amount = 7500000\r\n        bank_emi_expected = 84\r\n        if(loan_amount_expected<=eligible_loan_amount and customer_emi_expected<=bank_emi_expected):\r\n            print(\"The customer can avail the amount of Rs.\", eligible_loan_amount)\r\n            print(\"Eligible EMIs :\", bank_emi_expected)\r\n            print(\"Requested loan amount:\", loan_amount_expected)\r\n            print(\"Requested EMI's:\",customer_emi_expected)\r\n        else:\r\n            print(\"The customer is not eligible for the loan\")\r\n    else:\r\n        print(\"Invalid loan type or salary\")\r\n#Test your code for different values and observe the results\r\ncalculate_loan(1001,40000,250000,\"Car\",300000,30)\r\n","asgnmtId":"20","SolutionFileName":"Assignment20.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-02-21 20:51:30,991 INFO  Successfully processed and prepared the input for the verify service
2019-02-21 20:51:30,991 INFO  Successfully set the request parameters for VerifySolution
2019-02-21 20:51:30,991 INFO  Invoking the service to verify the user solution
2019-02-21 20:51:30,992 INFO  Time before invoking service:Thu Feb 21 20:51:30 IST 2019
2019-02-21 20:51:30,992 INFO  Initialising service address for VerifySolution
2019-02-21 20:51:30,992 INFO  Time before invoking service In SUPER:Thu Feb 21 20:51:30 IST 2019
2019-02-21 20:51:31,959 INFO  Time after invoking service In SUPER:Thu Feb 21 20:51:31 IST 2019
2019-02-21 20:51:31,959 INFO  Service responded successfully with required details
2019-02-21 20:51:31,959 INFO  Time after invoking service:Thu Feb 21 20:51:31 IST 2019
2019-02-21 20:51:31,959 INFO  User solution successfully verified
2019-02-21 20:51:31,960 INFO  Processing the response from verify service
2019-02-21 20:51:31,963 INFO  Starting to parse JSON response
2019-02-21 20:51:31,964 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:51:31,964 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:51:31,964 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:51:31,964 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:51:31,964 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:51:31,964 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:51:31,964 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:51:31,965 INFO  Successfully parsed JSON response
2019-02-21 20:51:31,965 INFO  In the process of generating verify response in HTML
2019-02-21 20:51:32,046 INFO  Successfully generated verify response in HTML
2019-02-21 20:51:32,046 INFO  Successfully processed the response from service
2019-02-21 20:56:10,543 INFO  Setting request parameters for VerifySolution
2019-02-21 20:56:10,543 INFO  Initiating to process and prepare Input for the verify service
2019-02-21 20:56:10,543 INFO  Starting to parse the user solution
2019-02-21 20:56:10,543 INFO  Displaying user solution
2019-02-21 20:56:10,595 INFO  Successfully parsed the user solution{"CourseShortName":"PF","UserSolution":"#PF-Assgn-20\r\n'''\r\nCreated on Feb 21, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\ndef calculate_loan(account_number,salary,account_balance,loan_type,loan_amount_expected,customer_emi_expected):\r\n    eligible_loan_amount=0\r\n    bank_emi_expected=0\r\n    eligible_loan_amount=0\r\n    #Start writing your code here\r\n    if(account_number>=1000 and account_number<=1999):\r\n       print()\r\n    else:\r\n        print(\"Invalid account number\")\r\n    if(account_balance>=100000):\r\n        print()\r\n    else:\r\n        print(\"Insufficient account balance\")\r\n    if(salary>25000 and salary<=50000):\r\n        eligible_loan_amount = 500000\r\n        bank_emi_expected = 36\r\n        if(loan_amount_expected<=eligible_loan_amount and customer_emi_expected<=bank_emi_expected):\r\n            print(\"Account number:\", account_number)\r\n            print(\"The customer can avail the amount of Rs.\", eligible_loan_amount)\r\n            print(\"Eligible EMIs :\", bank_emi_expected)\r\n            print(\"Requested loan amount:\", loan_amount_expected)\r\n            print(\"Requested EMI's:\",customer_emi_expected)\r\n        else:\r\n            print(\"The customer is not eligible for the loan\")\r\n    elif(salary>50000 and salary<=75000):\r\n        eligible_loan_amount = 6000000\r\n        bank_emi_expected = 60\r\n        if(loan_amount_expected<=eligible_loan_amount and customer_emi_expected<=bank_emi_expected):\r\n            print(\"The customer can avail the amount of Rs.\", eligible_loan_amount)\r\n            print(\"Eligible EMIs :\", bank_emi_expected)\r\n            print(\"Requested loan amount:\", loan_amount_expected)\r\n            print(\"Requested EMI's:\",customer_emi_expected)\r\n        else:\r\n            print(\"The customer is not eligible for the loan\")\r\n    elif(salary>75000):\r\n        eligible_loan_amount = 7500000\r\n        bank_emi_expected = 84\r\n        if(loan_amount_expected<=eligible_loan_amount and customer_emi_expected<=bank_emi_expected):\r\n            print(\"The customer can avail the amount of Rs.\", eligible_loan_amount)\r\n            print(\"Eligible EMIs :\", bank_emi_expected)\r\n            print(\"Requested loan amount:\", loan_amount_expected)\r\n            print(\"Requested EMI's:\",customer_emi_expected)\r\n        else:\r\n            print(\"The customer is not eligible for the loan\")\r\n    else:\r\n        print(\"Invalid loan type or salary\")\r\n#Test your code for different values and observe the results\r\ncalculate_loan(1001,40000,250000,\"Car\",300000,30)\r\n","asgnmtId":"20","SolutionFileName":"Assignment20.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-02-21 20:56:10,595 INFO  Successfully processed and prepared the input for the verify service
2019-02-21 20:56:10,596 INFO  Successfully set the request parameters for VerifySolution
2019-02-21 20:56:10,596 INFO  Invoking the service to verify the user solution
2019-02-21 20:56:10,596 INFO  Time before invoking service:Thu Feb 21 20:56:10 IST 2019
2019-02-21 20:56:10,596 INFO  Initialising service address for VerifySolution
2019-02-21 20:56:10,597 INFO  Time before invoking service In SUPER:Thu Feb 21 20:56:10 IST 2019
2019-02-21 20:56:11,444 INFO  Time after invoking service In SUPER:Thu Feb 21 20:56:11 IST 2019
2019-02-21 20:56:11,444 INFO  Service responded successfully with required details
2019-02-21 20:56:11,444 INFO  Time after invoking service:Thu Feb 21 20:56:11 IST 2019
2019-02-21 20:56:11,444 INFO  User solution successfully verified
2019-02-21 20:56:11,444 INFO  Processing the response from verify service
2019-02-21 20:56:11,446 INFO  Starting to parse JSON response
2019-02-21 20:56:11,447 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:56:11,447 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:56:11,447 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:56:11,447 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:56:11,447 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:56:11,447 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:56:11,447 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:56:11,448 INFO  Successfully parsed JSON response
2019-02-21 20:56:11,449 INFO  In the process of generating verify response in HTML
2019-02-21 20:56:11,522 INFO  Successfully generated verify response in HTML
2019-02-21 20:56:11,522 INFO  Successfully processed the response from service
2019-02-21 20:57:32,824 INFO  Setting request parameters for VerifySolution
2019-02-21 20:57:32,824 INFO  Initiating to process and prepare Input for the verify service
2019-02-21 20:57:32,824 INFO  Starting to parse the user solution
2019-02-21 20:57:32,825 INFO  Displaying user solution
2019-02-21 20:57:32,872 INFO  Successfully parsed the user solution{"CourseShortName":"PF","UserSolution":"#PF-Assgn-20\r\n'''\r\nCreated on Feb 21, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\ndef calculate_loan(account_number,salary,account_balance,loan_type,loan_amount_expected,customer_emi_expected):\r\n    eligible_loan_amount=0\r\n    bank_emi_expected=0\r\n    eligible_loan_amount=0\r\n    #Start writing your code here\r\n    if(account_number>=1000 and account_number<=1999):\r\n       print()\r\n    else:\r\n        print(\"Invalid account number\")\r\n    if(account_balance>=100000):\r\n        print()\r\n    else:\r\n        print(\"Insufficient account balance\")\r\n    if(salary>25000 and salary<=50000):\r\n        eligible_loan_amount = 500000\r\n        bank_emi_expected = 36\r\n        if(loan_amount_expected<=eligible_loan_amount and customer_emi_expected<=bank_emi_expected):\r\n            print(\"Account number:\", account_number)\r\n            print(\"The customer can avail the amount of Rs.\", eligible_loan_amount)\r\n            print(\"Eligible EMIs :\", bank_emi_expected)\r\n            print(\"Requested loan amount:\", loan_amount_expected)\r\n            print(\"Requested EMI's:\",customer_emi_expected)\r\n        else:\r\n            print(\"The customer is not eligible for the loan\")\r\n    elif(salary>50000 and salary<=75000):\r\n        eligible_loan_amount = 6000000\r\n        bank_emi_expected = 60\r\n        if(loan_amount_expected<=eligible_loan_amount and customer_emi_expected<=bank_emi_expected):\r\n            print(\"The customer can avail the amount of Rs.\", eligible_loan_amount)\r\n            print(\"Eligible EMIs :\", bank_emi_expected)\r\n            print(\"Requested loan amount:\", loan_amount_expected)\r\n            print(\"Requested EMI's:\",customer_emi_expected)\r\n        else:\r\n            print(\"The customer is not eligible for the loan\")\r\n    elif(salary>75000):\r\n        eligible_loan_amount = 7500000\r\n        bank_emi_expected = 84\r\n        if(loan_amount_expected<=eligible_loan_amount and customer_emi_expected<=bank_emi_expected):\r\n            print(\"The customer can avail the amount of Rs.\", eligible_loan_amount)\r\n            print(\"Eligible EMIs :\", bank_emi_expected)\r\n            print(\"Requested loan amount:\", loan_amount_expected)\r\n            print(\"Requested EMI's:\",customer_emi_expected)\r\n        else:\r\n            print(\"The customer is not eligible for the loan\")\r\n    else:\r\n        print(\"Invalid loan type or salary\")\r\n#Test your code for different values and observe the results\r\ncalculate_loan(1001,40000,250000,\"Car\",300000,30)\r\n","asgnmtId":"20","SolutionFileName":"Assignment20.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-02-21 20:57:32,874 INFO  Successfully processed and prepared the input for the verify service
2019-02-21 20:57:32,874 INFO  Successfully set the request parameters for VerifySolution
2019-02-21 20:57:32,874 INFO  Invoking the service to verify the user solution
2019-02-21 20:57:32,874 INFO  Time before invoking service:Thu Feb 21 20:57:32 IST 2019
2019-02-21 20:57:32,875 INFO  Initialising service address for VerifySolution
2019-02-21 20:57:32,875 INFO  Time before invoking service In SUPER:Thu Feb 21 20:57:32 IST 2019
2019-02-21 20:57:33,816 INFO  Time after invoking service In SUPER:Thu Feb 21 20:57:33 IST 2019
2019-02-21 20:57:33,816 INFO  Service responded successfully with required details
2019-02-21 20:57:33,816 INFO  Time after invoking service:Thu Feb 21 20:57:33 IST 2019
2019-02-21 20:57:33,816 INFO  User solution successfully verified
2019-02-21 20:57:33,816 INFO  Processing the response from verify service
2019-02-21 20:57:33,820 INFO  Starting to parse JSON response
2019-02-21 20:57:33,820 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:57:33,820 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:57:33,820 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:57:33,820 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:57:33,821 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:57:33,821 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:57:33,821 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:57:33,822 INFO  Successfully parsed JSON response
2019-02-21 20:57:33,822 INFO  In the process of generating verify response in HTML
2019-02-21 20:57:33,895 INFO  Successfully generated verify response in HTML
2019-02-21 20:57:33,896 INFO  Successfully processed the response from service
2019-02-21 20:58:51,767 INFO  Setting request parameters for VerifySolution
2019-02-21 20:58:51,768 INFO  Initiating to process and prepare Input for the verify service
2019-02-21 20:58:51,768 INFO  Starting to parse the user solution
2019-02-21 20:58:51,768 INFO  Displaying user solution
2019-02-21 20:58:51,819 INFO  Successfully parsed the user solution{"CourseShortName":"PF","UserSolution":"#PF-Assgn-20\r\n'''\r\nCreated on Feb 21, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\ndef calculate_loan(account_number,salary,account_balance,loan_type,loan_amount_expected,customer_emi_expected):\r\n    eligible_loan_amount=0\r\n    bank_emi_expected=0\r\n    eligible_loan_amount=0\r\n    #Start writing your code here\r\n    if(account_number>=1000 and account_number<=1999):\r\n       print()\r\n    else:\r\n        print(\"Invalid account number\")\r\n    if(account_balance>=100000):\r\n        print()\r\n    else:\r\n        print(\"Insufficient account balance\")\r\n    if(salary>25000 and salary<=50000):\r\n        eligible_loan_amount = 500000\r\n        bank_emi_expected = 36\r\n        if(loan_amount_expected<=eligible_loan_amount and customer_emi_expected<=bank_emi_expected):\r\n            print(\"Account number:\", account_number)\r\n            print(\"The customer can avail the amount of Rs.\", eligible_loan_amount)\r\n            print(\"Eligible EMIs :\", bank_emi_expected)\r\n            print(\"Requested loan amount:\", loan_amount_expected)\r\n            print(\"Requested EMI's:\",customer_emi_expected)\r\n        else:\r\n            print(\"The customer is not eligible for the loan\")\r\n    elif(salary>50000 and salary<=75000):\r\n        eligible_loan_amount = 6000000\r\n        bank_emi_expected = 60\r\n        if(loan_amount_expected<=eligible_loan_amount and customer_emi_expected<=bank_emi_expected):\r\n            print(\"The customer can avail the amount of Rs.\", eligible_loan_amount)\r\n            print(\"Eligible EMIs :\", bank_emi_expected)\r\n            print(\"Requested loan amount:\", loan_amount_expected)\r\n            print(\"Requested EMI's:\",customer_emi_expected)\r\n        else:\r\n            print(\"The customer is not eligible for the loan\")\r\n    elif(salary>75000):\r\n        eligible_loan_amount = 7500000\r\n        bank_emi_expected = 84\r\n        if(loan_amount_expected<=eligible_loan_amount and customer_emi_expected<=bank_emi_expected):\r\n            print(\"The customer can avail the amount of Rs.\", eligible_loan_amount)\r\n            print(\"Eligible EMIs :\", bank_emi_expected)\r\n            print(\"Requested loan amount:\", loan_amount_expected)\r\n            print(\"Requested EMI's:\",customer_emi_expected)\r\n        else:\r\n            print(\"The customer is not eligible for the loan\")\r\n    else:\r\n        print(\"Invalid loan type or salary\")\r\n#Test your code for different values and observe the results\r\ncalculate_loan(1001,40000,250000,\"Car\",300000,30)\r\n","asgnmtId":"20","SolutionFileName":"Assignment20.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-02-21 20:58:51,820 INFO  Successfully processed and prepared the input for the verify service
2019-02-21 20:58:51,820 INFO  Successfully set the request parameters for VerifySolution
2019-02-21 20:58:51,820 INFO  Invoking the service to verify the user solution
2019-02-21 20:58:51,821 INFO  Time before invoking service:Thu Feb 21 20:58:51 IST 2019
2019-02-21 20:58:51,821 INFO  Initialising service address for VerifySolution
2019-02-21 20:58:51,821 INFO  Time before invoking service In SUPER:Thu Feb 21 20:58:51 IST 2019
2019-02-21 20:58:52,738 INFO  Time after invoking service In SUPER:Thu Feb 21 20:58:52 IST 2019
2019-02-21 20:58:52,738 INFO  Service responded successfully with required details
2019-02-21 20:58:52,739 INFO  Time after invoking service:Thu Feb 21 20:58:52 IST 2019
2019-02-21 20:58:52,739 INFO  User solution successfully verified
2019-02-21 20:58:52,739 INFO  Processing the response from verify service
2019-02-21 20:58:52,742 INFO  Starting to parse JSON response
2019-02-21 20:58:52,743 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:58:52,743 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:58:52,743 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:58:52,743 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:58:52,743 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:58:52,744 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:58:52,744 ERROR Keys used to parse test result JSON might be incorrect
2019-02-21 20:58:52,745 INFO  Successfully parsed JSON response
2019-02-21 20:58:52,745 INFO  In the process of generating verify response in HTML
2019-02-21 20:58:52,820 INFO  Successfully generated verify response in HTML
2019-02-21 20:58:52,820 INFO  Successfully processed the response from service
