2019-03-07 09:13:37,321 INFO  Loading Baseframework Plugin
2019-03-07 09:13:37,326 INFO  Initializing the platform to load the Menu - HandsOn
2019-03-07 09:13:37,327 INFO  Loading the Menu - HandsOn
2019-03-07 09:13:37,333 INFO  Successfully loaded the Menu - HandsOn
2019-03-07 09:44:52,420 INFO  Loading Programming Assignment Plugin
2019-03-07 09:44:52,884 INFO  Setting request parameters for VerifySolution
2019-03-07 09:44:52,884 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 09:44:52,889 INFO  Starting to parse the user solution
2019-03-07 09:44:52,889 INFO  Displaying user solution
2019-03-07 09:44:52,992 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Exer-7\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Ticket:\r\n    counter=0\r\n    def __init__(self,passenger_name,source,destination):\r\n        self.__passenger_name=passenger_name\r\n        self.__ticket_id =Ticket.counter\r\n        self.__source=source\r\n        self.__destination = destination\r\n    def validate_source_destination(self):\r\n        if(self.__source)\r\n","asgnmtId":"7","SolutionFileName":"Excer7.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-07 09:44:52,993 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 09:44:52,993 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 09:44:52,994 INFO  Invoking the service to verify the user solution
2019-03-07 09:44:52,994 INFO  Time before invoking service:Thu Mar 07 09:44:52 IST 2019
2019-03-07 09:44:52,995 INFO  Initialising service address for VerifySolution
2019-03-07 09:44:52,997 INFO  Time before invoking service In SUPER:Thu Mar 07 09:44:52 IST 2019
2019-03-07 09:44:54,381 INFO  Time after invoking service In SUPER:Thu Mar 07 09:44:54 IST 2019
2019-03-07 09:44:54,381 INFO  Service responded successfully with required details
2019-03-07 09:44:54,382 INFO  Time after invoking service:Thu Mar 07 09:44:54 IST 2019
2019-03-07 09:44:54,382 INFO  User solution successfully verified
2019-03-07 09:44:54,383 INFO  Processing the response from verify service
2019-03-07 09:44:54,388 INFO  Starting to parse JSON response
2019-03-07 09:44:54,394 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 09:44:54,394 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 09:44:54,394 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 09:44:54,394 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 09:44:54,394 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 09:44:54,394 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 09:44:54,394 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 09:44:54,399 INFO  Successfully parsed JSON response
2019-03-07 09:44:54,400 INFO  In the process of generating verify response in HTML
2019-03-07 09:44:54,776 INFO  Successfully generated verify response in HTML
2019-03-07 09:44:54,776 INFO  Successfully processed the response from service
2019-03-07 09:45:41,823 INFO  Setting request parameters for VerifySolution
2019-03-07 09:45:41,824 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 09:45:41,824 INFO  Starting to parse the user solution
2019-03-07 09:45:41,825 INFO  Displaying user solution
2019-03-07 09:45:41,865 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Exer-7\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Ticket:\r\n    counter=0\r\n    def __init__(self,passenger_name,source,destination):\r\n        self.__passenger_name=passenger_name\r\n        self.__ticket_id =Ticket.counter\r\n        self.__source=source\r\n        self.__destination = destination\r\n\r\n    def get_source(self):\r\n        return self.__source\r\n\r\n\r\n    def get_destination(self):\r\n        return self.__destination\r\n\r\n\r\n    def set_source(self, value):\r\n        self.__source = value\r\n\r\n\r\n    def set_destination(self, value):\r\n        self.__destination = value\r\n\r\n    def validate_source_destination(self):\r\n        if(self.__source)    \r\n","asgnmtId":"7","SolutionFileName":"Excer7.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-07 09:45:41,866 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 09:45:41,866 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 09:45:41,866 INFO  Invoking the service to verify the user solution
2019-03-07 09:45:41,866 INFO  Time before invoking service:Thu Mar 07 09:45:41 IST 2019
2019-03-07 09:45:41,866 INFO  Initialising service address for VerifySolution
2019-03-07 09:45:41,867 INFO  Time before invoking service In SUPER:Thu Mar 07 09:45:41 IST 2019
2019-03-07 09:45:42,891 INFO  Time after invoking service In SUPER:Thu Mar 07 09:45:42 IST 2019
2019-03-07 09:45:42,892 INFO  Service responded successfully with required details
2019-03-07 09:45:42,892 INFO  Time after invoking service:Thu Mar 07 09:45:42 IST 2019
2019-03-07 09:45:42,892 INFO  User solution successfully verified
2019-03-07 09:45:42,893 INFO  Processing the response from verify service
2019-03-07 09:45:42,897 INFO  Starting to parse JSON response
2019-03-07 09:45:42,898 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 09:45:42,898 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 09:45:42,898 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 09:45:42,898 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 09:45:42,898 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 09:45:42,898 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 09:45:42,898 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 09:45:42,900 INFO  Successfully parsed JSON response
2019-03-07 09:45:42,900 INFO  In the process of generating verify response in HTML
2019-03-07 09:45:42,972 INFO  Successfully generated verify response in HTML
2019-03-07 09:45:42,972 INFO  Successfully processed the response from service
2019-03-07 09:46:50,726 INFO  Setting request parameters for VerifySolution
2019-03-07 09:46:50,726 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 09:46:50,726 INFO  Starting to parse the user solution
2019-03-07 09:46:50,727 INFO  Displaying user solution
2019-03-07 09:46:50,761 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Exer-7\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Ticket:\r\n    counter=0\r\n    def __init__(self):\r\n        self.__passenger_name=passenger_name\r\n        self.__ticket_id =Ticket.counter\r\n        self.__source=source\r\n        self.__destination = destination\r\n\r\n    def get_source(self):\r\n        return self.__source\r\n\r\n\r\n    def get_destination(self):\r\n        return self.__destination\r\n\r\n\r\n    def set_source(self, value):\r\n        self.__source = value\r\n\r\n\r\n    def set_destination(self, value):\r\n        self.__destination = value\r\n\r\n    def validate_source_destination(self):\r\n        if(self.__source)    \r\n","asgnmtId":"7","SolutionFileName":"Excer7.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-07 09:46:50,762 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 09:46:50,763 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 09:46:50,763 INFO  Invoking the service to verify the user solution
2019-03-07 09:46:50,764 INFO  Time before invoking service:Thu Mar 07 09:46:50 IST 2019
2019-03-07 09:46:50,764 INFO  Initialising service address for VerifySolution
2019-03-07 09:46:50,764 INFO  Time before invoking service In SUPER:Thu Mar 07 09:46:50 IST 2019
2019-03-07 09:46:51,759 INFO  Time after invoking service In SUPER:Thu Mar 07 09:46:51 IST 2019
2019-03-07 09:46:51,760 INFO  Service responded successfully with required details
2019-03-07 09:46:51,764 INFO  Time after invoking service:Thu Mar 07 09:46:51 IST 2019
2019-03-07 09:46:51,765 INFO  User solution successfully verified
2019-03-07 09:46:51,766 INFO  Processing the response from verify service
2019-03-07 09:46:51,768 INFO  Starting to parse JSON response
2019-03-07 09:46:51,770 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 09:46:51,770 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 09:46:51,770 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 09:46:51,770 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 09:46:51,770 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 09:46:51,770 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 09:46:51,770 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 09:46:51,772 INFO  Successfully parsed JSON response
2019-03-07 09:46:51,772 INFO  In the process of generating verify response in HTML
2019-03-07 09:46:51,868 INFO  Successfully generated verify response in HTML
2019-03-07 09:46:51,868 INFO  Successfully processed the response from service
2019-03-07 09:46:56,780 INFO  Setting request parameters for VerifySolution
2019-03-07 09:46:56,780 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 09:46:56,780 INFO  Starting to parse the user solution
2019-03-07 09:46:56,781 INFO  Displaying user solution
2019-03-07 09:46:56,806 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Exer-7\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Ticket:\r\n    counter=0\r\n    def __init__(self):\r\n        self.__passenger_name=None\r\n        self.__ticket_id =None\r\n        self.__source=None\r\n        self.__destination = None\r\n\r\n    def get_source(self):\r\n        return self.__source\r\n\r\n\r\n    def get_destination(self):\r\n        return self.__destination\r\n\r\n\r\n    def set_source(self, value):\r\n        self.__source = value\r\n\r\n\r\n    def set_destination(self, value):\r\n        self.__destination = value\r\n\r\n    def validate_source_destination(self):\r\n        if(self.__source)    \r\n","asgnmtId":"7","SolutionFileName":"Excer7.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-07 09:46:56,806 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 09:46:56,806 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 09:46:56,806 INFO  Invoking the service to verify the user solution
2019-03-07 09:46:56,807 INFO  Time before invoking service:Thu Mar 07 09:46:56 IST 2019
2019-03-07 09:46:56,807 INFO  Initialising service address for VerifySolution
2019-03-07 09:46:56,807 INFO  Time before invoking service In SUPER:Thu Mar 07 09:46:56 IST 2019
2019-03-07 09:46:57,762 INFO  Time after invoking service In SUPER:Thu Mar 07 09:46:57 IST 2019
2019-03-07 09:46:57,762 INFO  Service responded successfully with required details
2019-03-07 09:46:57,762 INFO  Time after invoking service:Thu Mar 07 09:46:57 IST 2019
2019-03-07 09:46:57,763 INFO  User solution successfully verified
2019-03-07 09:46:57,763 INFO  Processing the response from verify service
2019-03-07 09:46:57,765 INFO  Starting to parse JSON response
2019-03-07 09:46:57,766 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 09:46:57,766 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 09:46:57,766 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 09:46:57,766 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 09:46:57,766 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 09:46:57,767 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 09:46:57,767 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 09:46:57,768 INFO  Successfully parsed JSON response
2019-03-07 09:46:57,768 INFO  In the process of generating verify response in HTML
2019-03-07 09:46:57,854 INFO  Successfully generated verify response in HTML
2019-03-07 09:46:57,854 INFO  Successfully processed the response from service
2019-03-07 09:47:39,534 INFO  Setting request parameters for VerifySolution
2019-03-07 09:47:39,534 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 09:47:39,534 INFO  Starting to parse the user solution
2019-03-07 09:47:39,535 INFO  Displaying user solution
2019-03-07 09:47:39,563 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Exer-7\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Ticket:\r\n    counter=0\r\n    def __init__(self,passenger_name,source,destination):\r\n        self.__passenger_name=passenger_name\r\n        self.__ticket_id =Ticket.counter\r\n        self.__source=source\r\n        self.__destination = destination\r\n\r\n    def get_source(self):\r\n        return self.__source\r\n\r\n\r\n    def get_destination(self):\r\n        return self.__destination\r\n\r\n\r\n    def set_source(self, value):\r\n        self.__source = value\r\n\r\n\r\n    def set_destination(self, value):\r\n        self.__destination = value\r\n\r\n    def validate_source_destination(self):\r\n        if(self.__source)    \r\n","asgnmtId":"7","SolutionFileName":"Excer7.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-07 09:47:39,565 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 09:47:39,565 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 09:47:39,565 INFO  Invoking the service to verify the user solution
2019-03-07 09:47:39,565 INFO  Time before invoking service:Thu Mar 07 09:47:39 IST 2019
2019-03-07 09:47:39,565 INFO  Initialising service address for VerifySolution
2019-03-07 09:47:39,566 INFO  Time before invoking service In SUPER:Thu Mar 07 09:47:39 IST 2019
2019-03-07 09:47:40,576 INFO  Time after invoking service In SUPER:Thu Mar 07 09:47:40 IST 2019
2019-03-07 09:47:40,576 INFO  Service responded successfully with required details
2019-03-07 09:47:40,576 INFO  Time after invoking service:Thu Mar 07 09:47:40 IST 2019
2019-03-07 09:47:40,576 INFO  User solution successfully verified
2019-03-07 09:47:40,577 INFO  Processing the response from verify service
2019-03-07 09:47:40,578 INFO  Starting to parse JSON response
2019-03-07 09:47:40,579 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 09:47:40,579 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 09:47:40,580 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 09:47:40,580 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 09:47:40,580 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 09:47:40,580 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 09:47:40,580 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 09:47:40,581 INFO  Successfully parsed JSON response
2019-03-07 09:47:40,581 INFO  In the process of generating verify response in HTML
2019-03-07 09:47:40,649 INFO  Successfully generated verify response in HTML
2019-03-07 09:47:40,650 INFO  Successfully processed the response from service
2019-03-07 10:00:44,666 INFO  Setting request parameters for VerifySolution
2019-03-07 10:00:44,666 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 10:00:44,666 INFO  Starting to parse the user solution
2019-03-07 10:00:44,667 INFO  Displaying user solution
2019-03-07 10:00:44,719 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Exer-7\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Ticket:\r\n    counter=0\r\n    def __init__(self,passenger_name,source,destination):\r\n        self.__passenger_name=passenger_name\r\n        self.__ticket_id =None\r\n        self.__source=source\r\n        self.__destination = destination\r\n\r\n    def get_passenger_name(self):\r\n        return self.__passenger_name\r\n\r\n\r\n    def get_ticket_id(self):\r\n        return self.__ticket_id\r\n\r\n\r\n    def get_source(self):\r\n        return self.__source\r\n\r\n\r\n    def get_destination(self):\r\n        return self.__destination\r\n\r\n\r\n    \r\n    def validate_source_destination(self):\r\n        if(self.__source==\"Delhi\" and(self.__destination==\"Mumbai\" or self.__destination==\"Chennai\" or self.__destination==\"Pune\" or self.__destination==\"Kolkata\")):\r\n            return True\r\n        else:\r\n            return False\r\n       \r\n    def generate_ticket(self):\r\n        if(self.__source==\"Delhi\" and(self.__destination==\"Mumbai\" or self.__destination==\"Chennai\" or self.__destination==\"Pune\" or self.__destination==\"Kolkata\")):\r\n            self.__ticket_id=Ticket.counter\r\n            Ticket.counter+=1\r\n            return self.get_ticket_id()\r\n            \r\n               \r\n   \r\n","asgnmtId":"7","SolutionFileName":"Excer7.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-07 10:00:44,720 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 10:00:44,720 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 10:00:44,720 INFO  Invoking the service to verify the user solution
2019-03-07 10:00:44,721 INFO  Time before invoking service:Thu Mar 07 10:00:44 IST 2019
2019-03-07 10:00:44,721 INFO  Initialising service address for VerifySolution
2019-03-07 10:00:44,722 INFO  Time before invoking service In SUPER:Thu Mar 07 10:00:44 IST 2019
2019-03-07 10:00:45,716 INFO  Time after invoking service In SUPER:Thu Mar 07 10:00:45 IST 2019
2019-03-07 10:00:45,717 INFO  Service responded successfully with required details
2019-03-07 10:00:45,717 INFO  Time after invoking service:Thu Mar 07 10:00:45 IST 2019
2019-03-07 10:00:45,717 INFO  User solution successfully verified
2019-03-07 10:00:45,717 INFO  Processing the response from verify service
2019-03-07 10:00:45,724 INFO  Starting to parse JSON response
2019-03-07 10:00:45,725 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:00:45,725 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:00:45,725 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:00:45,726 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:00:45,726 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:00:45,726 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:00:45,726 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:00:45,726 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:00:45,726 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:00:45,726 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:00:45,727 INFO  Successfully parsed JSON response
2019-03-07 10:00:45,727 INFO  In the process of generating verify response in HTML
2019-03-07 10:00:45,829 INFO  Successfully generated verify response in HTML
2019-03-07 10:00:45,830 INFO  Successfully processed the response from service
2019-03-07 10:10:12,347 INFO  Setting request parameters for VerifySolution
2019-03-07 10:10:12,348 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 10:10:12,348 INFO  Starting to parse the user solution
2019-03-07 10:10:12,348 INFO  Displaying user solution
2019-03-07 10:10:12,380 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Exer-7\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Ticket:\r\n    counter=0\r\n    def __init__(self,passenger_name,source,destination):\r\n        self.__passenger_name=passenger_name\r\n        self.__ticket_id =None\r\n        self.__source=source\r\n        self.__destination = destination\r\n\r\n    def get_passenger_name(self):\r\n        return self.__passenger_name\r\n\r\n\r\n    def get_ticket_id(self):\r\n        return self.__ticket_id\r\n\r\n\r\n    def get_source(self):\r\n        return self.__source\r\n\r\n\r\n    def get_destination(self):\r\n        return self.__destination\r\n\r\n\r\n    \r\n    def validate_source_destination(self):\r\n        if(self.__source.lower==\"delhi\" and(self.__destination.lower==\"mumbai\" or self.__destination.lower==\"chennai\" or self.__destination.lower==\"pune\" or self.__destination.lower==\"kolkata\")):\r\n            return True\r\n        else:\r\n            return False\r\n       \r\n    def generate_ticket(self):\r\n        if(self.__source.lower==\"delhi\" and(self.__destination.lower==\"mumbai\" or self.__destination.lower==\"chennai\" or self.__destination.lower==\"pune\" or self.__destination.lower==\"kolkata\")):\r\n            self.__ticket_id=self.__source.upper[0]+self.__destination[0]+str(Ticket.counter)\r\n            Ticket.counter+=1\r\n            return self.get_ticket_id()\r\n            \r\n               \r\n   \r\n","asgnmtId":"7","SolutionFileName":"Excer7.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-07 10:10:12,381 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 10:10:12,381 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 10:10:12,381 INFO  Invoking the service to verify the user solution
2019-03-07 10:10:12,382 INFO  Time before invoking service:Thu Mar 07 10:10:12 IST 2019
2019-03-07 10:10:12,382 INFO  Initialising service address for VerifySolution
2019-03-07 10:10:12,382 INFO  Time before invoking service In SUPER:Thu Mar 07 10:10:12 IST 2019
2019-03-07 10:10:13,495 INFO  Time after invoking service In SUPER:Thu Mar 07 10:10:13 IST 2019
2019-03-07 10:10:13,496 INFO  Service responded successfully with required details
2019-03-07 10:10:13,496 INFO  Time after invoking service:Thu Mar 07 10:10:13 IST 2019
2019-03-07 10:10:13,496 INFO  User solution successfully verified
2019-03-07 10:10:13,497 INFO  Processing the response from verify service
2019-03-07 10:10:13,507 INFO  Starting to parse JSON response
2019-03-07 10:10:13,509 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:10:13,509 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:10:13,509 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:10:13,509 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:10:13,509 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:10:13,509 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:10:13,509 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:10:13,509 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:10:13,509 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:10:13,509 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:10:13,512 INFO  Successfully parsed JSON response
2019-03-07 10:10:13,512 INFO  In the process of generating verify response in HTML
2019-03-07 10:10:13,606 INFO  Successfully generated verify response in HTML
2019-03-07 10:10:13,607 INFO  Successfully processed the response from service
2019-03-07 10:15:32,652 INFO  Setting request parameters for VerifySolution
2019-03-07 10:15:32,654 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 10:15:32,654 INFO  Starting to parse the user solution
2019-03-07 10:15:32,655 INFO  Displaying user solution
2019-03-07 10:15:32,700 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Exer-7\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Ticket:\r\n    counter=0\r\n    def __init__(self,passenger_name,source,destination):\r\n        self.__passenger_name=passenger_name\r\n        self.__ticket_id =None\r\n        self.__source=source\r\n        self.__destination = destination\r\n\r\n    def get_passenger_name(self):\r\n        return self.__passenger_name\r\n\r\n\r\n    def get_ticket_id(self):\r\n        return self.__ticket_id\r\n\r\n\r\n    def get_source(self):\r\n        return self.__source\r\n\r\n\r\n    def get_destination(self):\r\n        return self.__destination\r\n\r\n\r\n    \r\n    def validate_source_destination(self):\r\n        if(self.__source.lower()==\"delhi\" and(self.__destination.lower()==\"mumbai\" or self.__destination.lower()==\"chennai\" or self.__destination.lower==\"pune\" or self.__destination.lower()==\"kolkata\")):\r\n            return True\r\n        else:\r\n            return False\r\n       \r\n    def generate_ticket(self):\r\n        if(self.__source.lower()==\"delhi\" and(self.__destination.lower()==\"mumbai\" or self.__destination.lower()==\"chennai\" or self.__destination.lower()==\"pune\" or self.__destination.lower()==\"kolkata\")):\r\n            Ticket.counter+=1\r\n            if(Ticket.counter<10):\r\n             self.__ticket_id=self.__source.upper()[0]+self.__destination.upper()[0]+\"0\"+str(Ticket.counter)\r\n            else:\r\n                self.__ticket_id=self.__source.upper()[0]+self.__destination.upper()[0]+str(Ticket.counter) \r\n            \r\n            return self.get_ticket_id()\r\n            \r\n               \r\n   \r\n","asgnmtId":"7","SolutionFileName":"Excer7.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-07 10:15:32,701 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 10:15:32,702 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 10:15:32,702 INFO  Invoking the service to verify the user solution
2019-03-07 10:15:32,702 INFO  Time before invoking service:Thu Mar 07 10:15:32 IST 2019
2019-03-07 10:15:32,702 INFO  Initialising service address for VerifySolution
2019-03-07 10:15:32,703 INFO  Time before invoking service In SUPER:Thu Mar 07 10:15:32 IST 2019
2019-03-07 10:15:33,725 INFO  Time after invoking service In SUPER:Thu Mar 07 10:15:33 IST 2019
2019-03-07 10:15:33,725 INFO  Service responded successfully with required details
2019-03-07 10:15:33,726 INFO  Time after invoking service:Thu Mar 07 10:15:33 IST 2019
2019-03-07 10:15:33,726 INFO  User solution successfully verified
2019-03-07 10:15:33,726 INFO  Processing the response from verify service
2019-03-07 10:15:33,733 INFO  Starting to parse JSON response
2019-03-07 10:15:33,736 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:15:33,736 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:15:33,736 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:15:33,737 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:15:33,737 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:15:33,737 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:15:33,739 INFO  Successfully parsed JSON response
2019-03-07 10:15:33,739 INFO  In the process of generating verify response in HTML
2019-03-07 10:15:33,829 INFO  Successfully generated verify response in HTML
2019-03-07 10:15:33,829 INFO  Successfully processed the response from service
2019-03-07 10:17:08,755 INFO  Setting request parameters for VerifySolution
2019-03-07 10:17:08,755 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 10:17:08,755 INFO  Starting to parse the user solution
2019-03-07 10:17:08,756 INFO  Displaying user solution
2019-03-07 10:17:08,775 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Exer-7\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Ticket:\r\n    counter=0\r\n    def __init__(self,passenger_name,source,destination):\r\n        self.__passenger_name=passenger_name\r\n        self.__ticket_id =None\r\n        self.__source=source\r\n        self.__destination = destination\r\n\r\n    def get_passenger_name(self):\r\n        return self.__passenger_name\r\n\r\n\r\n    def get_ticket_id(self):\r\n        return self.__ticket_id\r\n\r\n\r\n    def get_source(self):\r\n        return self.__source\r\n\r\n\r\n    def get_destination(self):\r\n        return self.__destination\r\n\r\n\r\n    \r\n    def validate_source_destination(self):\r\n        if(self.__source.lower()==\"delhi\" and(self.__destination.lower()==\"mumbai\" or self.__destination.lower()==\"chennai\" or self.__destination.lower==\"pune\" or self.__destination.lower()==\"kolkata\")):\r\n            return True\r\n        else:\r\n            return False\r\n       \r\n    def generate_ticket(self):\r\n        if(self.__source.lower()==\"delhi\" and(self.__destination.lower()==\"mumbai\" or self.__destination.lower()==\"chennai\" or self.__destination.lower()==\"pune\" or self.__destination.lower()==\"kolkata\")):\r\n            Ticket.counter+=1\r\n            if(Ticket.counter<10):\r\n             self.__ticket_id=self.__source.upper()[0]+self.__destination.upper()[0]+\"0\"+str(Ticket.counter)\r\n            else:\r\n                self.__ticket_id=self.__source.upper()[0]+self.__destination.upper()[0]+str(Ticket.counter) \r\n            \r\n            return self.get_ticket_id()\r\n        \r\n        \r\n\r\n            \r\n               \r\n   \r\n","asgnmtId":"7","SolutionFileName":"Excer7.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-07 10:17:08,776 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 10:17:08,776 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 10:17:08,776 INFO  Invoking the service to verify the user solution
2019-03-07 10:17:08,777 INFO  Time before invoking service:Thu Mar 07 10:17:08 IST 2019
2019-03-07 10:17:08,777 INFO  Initialising service address for VerifySolution
2019-03-07 10:17:08,777 INFO  Time before invoking service In SUPER:Thu Mar 07 10:17:08 IST 2019
2019-03-07 10:17:09,751 INFO  Time after invoking service In SUPER:Thu Mar 07 10:17:09 IST 2019
2019-03-07 10:17:09,751 INFO  Service responded successfully with required details
2019-03-07 10:17:09,751 INFO  Time after invoking service:Thu Mar 07 10:17:09 IST 2019
2019-03-07 10:17:09,752 INFO  User solution successfully verified
2019-03-07 10:17:09,752 INFO  Processing the response from verify service
2019-03-07 10:17:09,754 INFO  Starting to parse JSON response
2019-03-07 10:17:09,755 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:17:09,755 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:17:09,755 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:17:09,755 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:17:09,756 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:17:09,756 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:17:09,757 INFO  Successfully parsed JSON response
2019-03-07 10:17:09,757 INFO  In the process of generating verify response in HTML
2019-03-07 10:17:09,851 INFO  Successfully generated verify response in HTML
2019-03-07 10:17:09,851 INFO  Successfully processed the response from service
2019-03-07 10:18:08,591 INFO  Setting request parameters for VerifySolution
2019-03-07 10:18:08,591 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 10:18:08,591 INFO  Starting to parse the user solution
2019-03-07 10:18:08,592 INFO  Displaying user solution
2019-03-07 10:18:08,624 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Exer-7\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Ticket:\r\n    counter=0\r\n    def __init__(self,passenger_name,source,destination):\r\n        self.__passenger_name=passenger_name\r\n        self.__ticket_id =None\r\n        self.__source=source\r\n        self.__destination = destination\r\n\r\n    def get_passenger_name(self):\r\n        return self.__passenger_name\r\n\r\n\r\n    def get_ticket_id(self):\r\n        return self.__ticket_id\r\n\r\n\r\n    def get_source(self):\r\n        return self.__source\r\n\r\n\r\n    def get_destination(self):\r\n        return self.__destination\r\n\r\n\r\n    \r\n    def validate_source_destination(self):\r\n        if(self.__source.lower()==\"delhi\" and(self.__destination.lower()==\"mumbai\" or self.__destination.lower()==\"chennai\" or self.__destination.lower==\"pune\" or self.__destination.lower()==\"kolkata\")):\r\n            return True\r\n        else:\r\n            return False\r\n       \r\n    def generate_ticket(self):\r\n        if(self.__source.lower()==\"delhi\" and(self.__destination.lower()==\"mumbai\" or self.__destination.lower()==\"chennai\" or self.__destination.lower()==\"pune\" or self.__destination.lower()==\"kolkata\")):\r\n            Ticket.counter+=1\r\n            if(Ticket.counter<10):\r\n             self.__ticket_id=self.__source.upper()[0]+self.__destination.upper()[0]+\"0\"+str(Ticket.counter)\r\n            else:\r\n                self.__ticket_id=self.__source.upper()[0]+self.__destination.upper()[0]+str(Ticket.counter) \r\n            \r\n            return self.get_ticket_id()\r\n        \r\n        \r\n\r\n            \r\n               \r\n   \r\n","asgnmtId":"7","SolutionFileName":"Excer7.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-07 10:18:08,626 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 10:18:08,626 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 10:18:08,626 INFO  Invoking the service to verify the user solution
2019-03-07 10:18:08,626 INFO  Time before invoking service:Thu Mar 07 10:18:08 IST 2019
2019-03-07 10:18:08,626 INFO  Initialising service address for VerifySolution
2019-03-07 10:18:08,628 INFO  Time before invoking service In SUPER:Thu Mar 07 10:18:08 IST 2019
2019-03-07 10:18:09,650 INFO  Time after invoking service In SUPER:Thu Mar 07 10:18:09 IST 2019
2019-03-07 10:18:09,650 INFO  Service responded successfully with required details
2019-03-07 10:18:09,651 INFO  Time after invoking service:Thu Mar 07 10:18:09 IST 2019
2019-03-07 10:18:09,651 INFO  User solution successfully verified
2019-03-07 10:18:09,651 INFO  Processing the response from verify service
2019-03-07 10:18:09,653 INFO  Starting to parse JSON response
2019-03-07 10:18:09,654 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:18:09,654 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:18:09,654 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:18:09,654 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:18:09,654 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:18:09,654 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:18:09,655 INFO  Successfully parsed JSON response
2019-03-07 10:18:09,655 INFO  In the process of generating verify response in HTML
2019-03-07 10:18:09,730 INFO  Successfully generated verify response in HTML
2019-03-07 10:18:09,730 INFO  Successfully processed the response from service
2019-03-07 10:18:34,332 INFO  Setting request parameters for VerifySolution
2019-03-07 10:18:34,332 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 10:18:34,332 INFO  Starting to parse the user solution
2019-03-07 10:18:34,333 INFO  Displaying user solution
2019-03-07 10:18:34,358 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Exer-7\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Ticket:\r\n    counter=0\r\n    def __init__(self,passenger_name,source,destination):\r\n        self.__passenger_name=passenger_name\r\n        self.__ticket_id =None\r\n        self.__source=source\r\n        self.__destination = destination\r\n\r\n    def get_passenger_name(self):\r\n        return self.__passenger_name\r\n\r\n\r\n    def get_ticket_id(self):\r\n        return self.__ticket_id\r\n\r\n\r\n    def get_source(self):\r\n        return self.__source\r\n\r\n\r\n    def get_destination(self):\r\n        return self.__destination\r\n\r\n\r\n    \r\n    def validate_source_destination(self):\r\n        if(self.__source.lower()==\"delhi\" and(self.__destination.lower()==\"mumbai\" or self.__destination.lower()==\"chennai\" or self.__destination.lower()==\"pune\" or self.__destination.lower()==\"kolkata\")):\r\n            return True\r\n        else:\r\n            return False\r\n       \r\n    def generate_ticket(self):\r\n        if(self.__source.lower()==\"delhi\" and(self.__destination.lower()==\"mumbai\" or self.__destination.lower()==\"chennai\" or self.__destination.lower()==\"pune\" or self.__destination.lower()==\"kolkata\")):\r\n            Ticket.counter+=1\r\n            if(Ticket.counter<10):\r\n             self.__ticket_id=self.__source.upper()[0]+self.__destination.upper()[0]+\"0\"+str(Ticket.counter)\r\n            else:\r\n                self.__ticket_id=self.__source.upper()[0]+self.__destination.upper()[0]+str(Ticket.counter) \r\n            \r\n            return self.get_ticket_id()\r\n        \r\n        \r\n\r\n            \r\n               \r\n   \r\n","asgnmtId":"7","SolutionFileName":"Excer7.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-07 10:18:34,358 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 10:18:34,358 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 10:18:34,358 INFO  Invoking the service to verify the user solution
2019-03-07 10:18:34,359 INFO  Time before invoking service:Thu Mar 07 10:18:34 IST 2019
2019-03-07 10:18:34,359 INFO  Initialising service address for VerifySolution
2019-03-07 10:18:34,359 INFO  Time before invoking service In SUPER:Thu Mar 07 10:18:34 IST 2019
2019-03-07 10:18:35,286 INFO  Time after invoking service In SUPER:Thu Mar 07 10:18:35 IST 2019
2019-03-07 10:18:35,286 INFO  Service responded successfully with required details
2019-03-07 10:18:35,286 INFO  Time after invoking service:Thu Mar 07 10:18:35 IST 2019
2019-03-07 10:18:35,286 INFO  User solution successfully verified
2019-03-07 10:18:35,287 INFO  Processing the response from verify service
2019-03-07 10:18:35,288 INFO  Starting to parse JSON response
2019-03-07 10:18:35,289 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:18:35,289 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:18:35,289 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:18:35,289 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:18:35,289 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:18:35,289 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:18:35,289 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:18:35,289 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:18:35,289 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:18:35,289 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:18:35,291 INFO  Successfully parsed JSON response
2019-03-07 10:18:35,291 INFO  In the process of generating verify response in HTML
2019-03-07 10:18:35,371 INFO  Successfully generated verify response in HTML
2019-03-07 10:18:35,371 INFO  Successfully processed the response from service
2019-03-07 10:20:21,200 INFO  Setting request parameters for VerifySolution
2019-03-07 10:20:21,200 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 10:20:21,200 INFO  Starting to parse the user solution
2019-03-07 10:20:21,201 INFO  Displaying user solution
2019-03-07 10:20:21,244 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Exer-7\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Ticket:\r\n    counter=0\r\n    def __init__(self,passenger_name,source,destination):\r\n        self.__passenger_name=passenger_name\r\n        self.__ticket_id =None\r\n        self.__source=source\r\n        self.__destination = destination\r\n\r\n    def get_passenger_name(self):\r\n        return self.__passenger_name\r\n\r\n\r\n    def get_ticket_id(self):\r\n        return self.__ticket_id\r\n\r\n\r\n    def get_source(self):\r\n        return self.__source\r\n\r\n\r\n    def get_destination(self):\r\n        return self.__destination\r\n\r\n\r\n    \r\n    def validate_source_destination(self):\r\n        if(self.__source.lower()==\"delhi\" and\r\n        (self.__destination.lower()==\"mumbai\" or\r\n        self.__destination.lower()==\"chennai\" or \r\n        self.__destination.lower()==\"pune\" or \r\n        self.__destination.lower()==\"kolkata\")):\r\n            return True\r\n        else:\r\n            return False\r\n       \r\n    def generate_ticket(self):\r\n        if(self.__source.lower()==\"delhi\" and\r\n        (self.__destination.lower()==\"mumbai\" or\r\n        self.__destination.lower()==\"chennai\" or self.__destination.lower()==\"pune\" or \r\n        self.__destination.lower()==\"kolkata\")):\r\n            Ticket.counter+=1\r\n            if(Ticket.counter<10):\r\n             self.__ticket_id=self.__source.upper()[0]+self.__destination.upper()[0]+\"0\"+str(Ticket.counter)\r\n            else:\r\n                self.__ticket_id=self.__source.upper()[0]+self.__destination.upper()[0]+str(Ticket.counter) \r\n            \r\n            return self.get_ticket_id()\r\n        \r\n        \r\n\r\n            \r\n               \r\n   \r\n","asgnmtId":"7","SolutionFileName":"Excer7.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-07 10:20:21,244 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 10:20:21,245 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 10:20:21,245 INFO  Invoking the service to verify the user solution
2019-03-07 10:20:21,245 INFO  Time before invoking service:Thu Mar 07 10:20:21 IST 2019
2019-03-07 10:20:21,245 INFO  Initialising service address for VerifySolution
2019-03-07 10:20:21,246 INFO  Time before invoking service In SUPER:Thu Mar 07 10:20:21 IST 2019
2019-03-07 10:20:22,442 INFO  Time after invoking service In SUPER:Thu Mar 07 10:20:22 IST 2019
2019-03-07 10:20:22,443 INFO  Service responded successfully with required details
2019-03-07 10:20:22,443 INFO  Time after invoking service:Thu Mar 07 10:20:22 IST 2019
2019-03-07 10:20:22,444 INFO  User solution successfully verified
2019-03-07 10:20:22,444 INFO  Processing the response from verify service
2019-03-07 10:20:22,452 INFO  Starting to parse JSON response
2019-03-07 10:20:22,455 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:20:22,455 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:20:22,455 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:20:22,455 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:20:22,456 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:20:22,456 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:20:22,456 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:20:22,456 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:20:22,456 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:20:22,456 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:20:22,459 INFO  Successfully parsed JSON response
2019-03-07 10:20:22,460 INFO  In the process of generating verify response in HTML
2019-03-07 10:20:22,596 INFO  Successfully generated verify response in HTML
2019-03-07 10:20:22,596 INFO  Successfully processed the response from service
2019-03-07 10:20:32,165 INFO  Setting request parameters for VerifySolution
2019-03-07 10:20:32,165 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 10:20:32,166 INFO  Starting to parse the user solution
2019-03-07 10:20:32,166 INFO  Displaying user solution
2019-03-07 10:20:32,198 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Exer-7\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Ticket:\r\n    counter=0\r\n    def __init__(self,passenger_name,source,destination):\r\n        self.__passenger_name=passenger_name\r\n        self.__ticket_id =None\r\n        self.__source=source\r\n        self.__destination = destination\r\n\r\n    def get_passenger_name(self):\r\n        return self.__passenger_name\r\n\r\n\r\n    def get_ticket_id(self):\r\n        return self.__ticket_id\r\n\r\n\r\n    def get_source(self):\r\n        return self.__source\r\n\r\n\r\n    def get_destination(self):\r\n        return self.__destination\r\n\r\n\r\n    \r\n    def validate_source_destination(self):\r\n        if(self.__source.lower()==\"delhi\" and\r\n        (self.__destination.lower()==\"mumbai\" or\r\n        self.__destination.lower()==\"chennai\" or \r\n        self.__destination.lower()==\"pune\" or \r\n        self.__destination.lower()==\"kolkata\")):\r\n            return True\r\n        else:\r\n            return False\r\n       \r\n    def generate_ticket(self):\r\n        if(self.__source.lower()==\"delhi\" and\r\n        (self.__destination.lower()==\"mumbai\" or\r\n        self.__destination.lower()==\"chennai\" or self.__destination.lower()==\"pune\" or \r\n        self.__destination.lower()==\"kolkata\")):\r\n            Ticket.counter+=1\r\n            if(Ticket.counter<10):\r\n             self.__ticket_id=self.__source.upper()[0]+self.__destination.upper()[0]+\"0\"+str(Ticket.counter)\r\n            else:\r\n                self.__ticket_id=self.__source.upper()[0]+self.__destination.upper()[0]+str(Ticket.counter) \r\n            \r\n            return self.get_ticket_id()\r\n        \r\n        \r\n\r\n            \r\n               \r\n   \r\n","asgnmtId":"7","SolutionFileName":"Excer7.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-07 10:20:32,199 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 10:20:32,199 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 10:20:32,199 INFO  Invoking the service to verify the user solution
2019-03-07 10:20:32,200 INFO  Time before invoking service:Thu Mar 07 10:20:32 IST 2019
2019-03-07 10:20:32,200 INFO  Initialising service address for VerifySolution
2019-03-07 10:20:32,201 INFO  Time before invoking service In SUPER:Thu Mar 07 10:20:32 IST 2019
2019-03-07 10:20:33,949 INFO  Time after invoking service In SUPER:Thu Mar 07 10:20:33 IST 2019
2019-03-07 10:20:33,950 INFO  Service responded successfully with required details
2019-03-07 10:20:33,950 INFO  Time after invoking service:Thu Mar 07 10:20:33 IST 2019
2019-03-07 10:20:33,950 INFO  User solution successfully verified
2019-03-07 10:20:33,951 INFO  Processing the response from verify service
2019-03-07 10:20:33,953 INFO  Starting to parse JSON response
2019-03-07 10:20:33,955 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:20:33,955 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:20:33,955 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:20:33,955 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:20:33,955 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:20:33,955 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:20:33,956 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:20:33,956 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:20:33,956 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:20:33,956 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:20:33,958 INFO  Successfully parsed JSON response
2019-03-07 10:20:33,959 INFO  In the process of generating verify response in HTML
2019-03-07 10:20:34,061 INFO  Successfully generated verify response in HTML
2019-03-07 10:20:34,062 INFO  Successfully processed the response from service
2019-03-07 10:21:00,628 INFO  Setting request parameters for VerifySolution
2019-03-07 10:21:00,629 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 10:21:00,629 INFO  Starting to parse the user solution
2019-03-07 10:21:00,631 INFO  Displaying user solution
2019-03-07 10:21:00,670 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Exer-7\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Ticket:\r\n    counter=0\r\n    def __init__(self,passenger_name,source,destination):\r\n        self.__passenger_name=passenger_name\r\n        self.__ticket_id =None\r\n        self.__source=source\r\n        self.__destination = destination\r\n\r\n    def get_passenger_name(self):\r\n        return self.__passenger_name\r\n\r\n\r\n    def get_ticket_id(self):\r\n        return self.__ticket_id\r\n\r\n\r\n    def get_source(self):\r\n        return self.__source\r\n\r\n\r\n    def get_destination(self):\r\n        return self.__destination\r\n\r\n\r\n    \r\n    def validate_source_destination(self):\r\n        if(self.__source.lower()==\"delhi\" and\r\n        (self.__destination.lower()==\"mumbai\" or\r\n        self.__destination.lower()==\"chennai\" or \r\n        self.__destination.lower()==\"pune\" or \r\n        self.__destination.lower()==\"kolkata\")):\r\n            return True\r\n        else:\r\n            return False\r\n       \r\n    def generate_ticket(self):\r\n        if(self.__source.lower()==\"delhi\" and\r\n        (self.__destination.lower()==\"mumbai\" or\r\n        self.__destination.lower()==\"chennai\" or \r\n        self.__destination.lower()==\"pune\" or \r\n        self.__destination.lower()==\"kolkata\")):\r\n            Ticket.counter+=1\r\n            if(Ticket.counter<10):\r\n             self.__ticket_id=self.__source.upper()[0]+self.__destination.upper()[0]+\"0\"+str(Ticket.counter)\r\n            else:\r\n                self.__ticket_id=self.__source.upper()[0]+self.__destination.upper()[0]+str(Ticket.counter) \r\n            \r\n            return self.get_ticket_id()\r\n        \r\n        \r\n\r\n            \r\n               \r\n   \r\n","asgnmtId":"7","SolutionFileName":"Excer7.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-07 10:21:00,671 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 10:21:00,671 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 10:21:00,671 INFO  Invoking the service to verify the user solution
2019-03-07 10:21:00,672 INFO  Time before invoking service:Thu Mar 07 10:21:00 IST 2019
2019-03-07 10:21:00,672 INFO  Initialising service address for VerifySolution
2019-03-07 10:21:00,673 INFO  Time before invoking service In SUPER:Thu Mar 07 10:21:00 IST 2019
2019-03-07 10:21:01,790 INFO  Time after invoking service In SUPER:Thu Mar 07 10:21:01 IST 2019
2019-03-07 10:21:01,791 INFO  Service responded successfully with required details
2019-03-07 10:21:01,791 INFO  Time after invoking service:Thu Mar 07 10:21:01 IST 2019
2019-03-07 10:21:01,791 INFO  User solution successfully verified
2019-03-07 10:21:01,792 INFO  Processing the response from verify service
2019-03-07 10:21:01,796 INFO  Starting to parse JSON response
2019-03-07 10:21:01,798 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:21:01,798 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:21:01,798 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:21:01,798 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:21:01,798 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:21:01,798 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:21:01,798 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:21:01,798 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:21:01,798 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:21:01,798 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:21:01,800 INFO  Successfully parsed JSON response
2019-03-07 10:21:01,800 INFO  In the process of generating verify response in HTML
2019-03-07 10:21:01,894 INFO  Successfully generated verify response in HTML
2019-03-07 10:21:01,894 INFO  Successfully processed the response from service
2019-03-07 10:21:14,536 INFO  Setting request parameters for VerifySolution
2019-03-07 10:21:14,536 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 10:21:14,536 INFO  Starting to parse the user solution
2019-03-07 10:21:14,538 INFO  Displaying user solution
2019-03-07 10:21:14,565 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Exer-7\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Ticket:\r\n    counter=0\r\n    def __init__(self,passenger_name,source,destination):\r\n        self.__passenger_name=passenger_name\r\n        self.__ticket_id =None\r\n        self.__source=source\r\n        self.__destination = destination\r\n\r\n    def get_passenger_name(self):\r\n        return self.__passenger_name\r\n\r\n\r\n    def get_ticket_id(self):\r\n        return self.__ticket_id\r\n\r\n\r\n    def get_source(self):\r\n        return self.__source\r\n\r\n\r\n    def get_destination(self):\r\n        return self.__destination\r\n\r\n\r\n    \r\n    def validate_source_destination(self):\r\n        if(self.__source.lower()==\"delhi\" and\r\n        (self.__destination.lower()==\"mumbai\" or\r\n        self.__destination.lower()==\"chennai\" or \r\n        self.__destination.lower()==\"pune\" or \r\n        self.__destination.lower()==\"kolkata\")):\r\n            return True\r\n        else:\r\n            return False\r\n       \r\n    def generate_ticket(self):\r\n        if(self.__source.lower()==\"delhi\" and\r\n        (self.__destination.lower()==\"mumbai\" or\r\n        self.__destination.lower()==\"chennai\" or \r\n        self.__destination.lower()==\"pune\" or \r\n        self.__destination.lower()==\"kolkata\")):\r\n            Ticket.counter+=1\r\n            if(Ticket.counter<10):\r\n             self.__ticket_id=self.__source.upper()[0]+\r\n             self.__destination.upper()[0]+\"0\"+str(Ticket.counter)\r\n            else:\r\n                self.__ticket_id=self.__source.upper()[0]+self.__destination.upper()[0]+str(Ticket.counter) \r\n            \r\n            return self.get_ticket_id()\r\n        \r\n        \r\n\r\n            \r\n               \r\n   \r\n","asgnmtId":"7","SolutionFileName":"Excer7.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-07 10:21:14,566 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 10:21:14,566 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 10:21:14,566 INFO  Invoking the service to verify the user solution
2019-03-07 10:21:14,567 INFO  Time before invoking service:Thu Mar 07 10:21:14 IST 2019
2019-03-07 10:21:14,567 INFO  Initialising service address for VerifySolution
2019-03-07 10:21:14,568 INFO  Time before invoking service In SUPER:Thu Mar 07 10:21:14 IST 2019
2019-03-07 10:21:15,677 INFO  Time after invoking service In SUPER:Thu Mar 07 10:21:15 IST 2019
2019-03-07 10:21:15,678 INFO  Service responded successfully with required details
2019-03-07 10:21:15,678 INFO  Time after invoking service:Thu Mar 07 10:21:15 IST 2019
2019-03-07 10:21:15,678 INFO  User solution successfully verified
2019-03-07 10:21:15,679 INFO  Processing the response from verify service
2019-03-07 10:21:15,681 INFO  Starting to parse JSON response
2019-03-07 10:21:15,683 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:21:15,684 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:21:15,684 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:21:15,684 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:21:15,684 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:21:15,684 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:21:15,684 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:21:15,687 INFO  Successfully parsed JSON response
2019-03-07 10:21:15,687 INFO  In the process of generating verify response in HTML
2019-03-07 10:21:15,794 INFO  Successfully generated verify response in HTML
2019-03-07 10:21:15,795 INFO  Successfully processed the response from service
2019-03-07 10:22:32,834 INFO  Setting request parameters for VerifySolution
2019-03-07 10:22:32,835 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 10:22:32,835 INFO  Starting to parse the user solution
2019-03-07 10:22:32,836 INFO  Displaying user solution
2019-03-07 10:22:32,868 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Exer-7\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Ticket:\r\n    counter=0\r\n    def __init__(self,passenger_name,source,destination):\r\n        self.__passenger_name=passenger_name\r\n        self.__ticket_id =None\r\n        self.__source=source\r\n        self.__destination = destination\r\n\r\n    def get_passenger_name(self):\r\n        return self.__passenger_name\r\n\r\n\r\n    def get_ticket_id(self):\r\n        return self.__ticket_id\r\n\r\n\r\n    def get_source(self):\r\n        return self.__source\r\n\r\n\r\n    def get_destination(self):\r\n        return self.__destination\r\n\r\n\r\n    \r\n    def validate_source_destination(self):\r\n        if(self.__source.lower()==\"delhi\" and\r\n        (self.__destination.lower()==\"mumbai\" or\r\n        self.__destination.lower()==\"chennai\" or \r\n        self.__destination.lower()==\"pune\" or \r\n        self.__destination.lower()==\"kolkata\")):\r\n            return True\r\n        else:\r\n            return False\r\n       \r\n    def generate_ticket(self):\r\n        if(self.__source.lower()==\"delhi\" and\r\n        (self.__destination.lower()==\"mumbai\" or\r\n        self.__destination.lower()==\"chennai\" or \r\n        self.__destination.lower()==\"pune\" or \r\n        self.__destination.lower()==\"kolkata\")):\r\n            Ticket.counter+=1\r\n            if(Ticket.counter<10):\r\n             self.__ticket_id=self.__source.upper()[0]+self.__destination.upper()[0]+\"0\"+str(Ticket.counter)\r\n            else:\r\n                self.__ticket_id=self.__source.upper()[0]+self.__destination.upper()[0]+str(Ticket.counter) \r\n            \r\n            return self.get_ticket_id()\r\n        \r\n        \r\n\r\n            \r\n               \r\n   \r\n","asgnmtId":"7","SolutionFileName":"Excer7.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-07 10:22:32,868 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 10:22:32,868 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 10:22:32,868 INFO  Invoking the service to verify the user solution
2019-03-07 10:22:32,869 INFO  Time before invoking service:Thu Mar 07 10:22:32 IST 2019
2019-03-07 10:22:32,869 INFO  Initialising service address for VerifySolution
2019-03-07 10:22:32,869 INFO  Time before invoking service In SUPER:Thu Mar 07 10:22:32 IST 2019
2019-03-07 10:22:33,819 INFO  Time after invoking service In SUPER:Thu Mar 07 10:22:33 IST 2019
2019-03-07 10:22:33,820 INFO  Service responded successfully with required details
2019-03-07 10:22:33,820 INFO  Time after invoking service:Thu Mar 07 10:22:33 IST 2019
2019-03-07 10:22:33,820 INFO  User solution successfully verified
2019-03-07 10:22:33,821 INFO  Processing the response from verify service
2019-03-07 10:22:33,822 INFO  Starting to parse JSON response
2019-03-07 10:22:33,824 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:22:33,824 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:22:33,824 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:22:33,824 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:22:33,824 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:22:33,824 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:22:33,824 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:22:33,824 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:22:33,824 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:22:33,824 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:22:33,825 INFO  Successfully parsed JSON response
2019-03-07 10:22:33,826 INFO  In the process of generating verify response in HTML
2019-03-07 10:22:33,901 INFO  Successfully generated verify response in HTML
2019-03-07 10:22:33,901 INFO  Successfully processed the response from service
2019-03-07 10:23:24,385 INFO  Setting request parameters for VerifySolution
2019-03-07 10:23:24,385 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 10:23:24,385 INFO  Starting to parse the user solution
2019-03-07 10:23:24,385 INFO  Displaying user solution
2019-03-07 10:23:24,409 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Exer-7\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Ticket:\r\n    counter=0\r\n    def __init__(self,passenger_name,source,destination):\r\n        self.__passenger_name=passenger_name\r\n        self.__ticket_id =None\r\n        self.__source=source\r\n        self.__destination = destination\r\n\r\n    def get_passenger_name(self):\r\n        return self.__passenger_name\r\n\r\n\r\n    def get_ticket_id(self):\r\n        return self.__ticket_id\r\n\r\n\r\n    def get_source(self):\r\n        return self.__source\r\n\r\n\r\n    def get_destination(self):\r\n        return self.__destination\r\n\r\n\r\n    \r\n    def validate_source_destination(self):\r\n        if(self.__source.lower()==\"delhi\" and\r\n        (self.__destination.lower()==\"mumbai\" or\r\n        self.__destination.lower()==\"chennai\" or \r\n        self.__destination.lower()==\"pune\" or \r\n        self.__destination.lower()==\"kolkata\")):\r\n            return True\r\n        else:\r\n            return False\r\n       \r\n    def generate_ticket(self):\r\n        if(self.__source.lower()==\"delhi\" and\r\n        (self.__destination.lower()==\"mumbai\" or\r\n        self.__destination.lower()==\"chennai\" or \r\n        self.__destination.lower()==\"pune\" or \r\n        self.__destination.lower()==\"kolkata\")):\r\n            Ticket.counter+=1\r\n            if(Ticket.counter<10):\r\n             self.__ticket_id=self.__source.upper()[0]+self.__destination.upper()[0]+\"0\"+str(Ticket.counter)\r\n            else:\r\n             self.__ticket_id=self.__source.upper()[0]+self.__destination.upper()[0]+str(Ticket.counter) \r\n            \r\n            return self.get_ticket_id()\r\n        \r\n        \r\n\r\n            \r\n               \r\n   \r\n","asgnmtId":"7","SolutionFileName":"Excer7.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-07 10:23:24,410 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 10:23:24,410 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 10:23:24,410 INFO  Invoking the service to verify the user solution
2019-03-07 10:23:24,411 INFO  Time before invoking service:Thu Mar 07 10:23:24 IST 2019
2019-03-07 10:23:24,411 INFO  Initialising service address for VerifySolution
2019-03-07 10:23:24,411 INFO  Time before invoking service In SUPER:Thu Mar 07 10:23:24 IST 2019
2019-03-07 10:23:25,328 INFO  Time after invoking service In SUPER:Thu Mar 07 10:23:25 IST 2019
2019-03-07 10:23:25,328 INFO  Service responded successfully with required details
2019-03-07 10:23:25,329 INFO  Time after invoking service:Thu Mar 07 10:23:25 IST 2019
2019-03-07 10:23:25,329 INFO  User solution successfully verified
2019-03-07 10:23:25,329 INFO  Processing the response from verify service
2019-03-07 10:23:25,332 INFO  Starting to parse JSON response
2019-03-07 10:23:25,332 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:23:25,332 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:23:25,332 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:23:25,332 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:23:25,332 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:23:25,332 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:23:25,332 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:23:25,332 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:23:25,332 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:23:25,332 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:23:25,334 INFO  Successfully parsed JSON response
2019-03-07 10:23:25,334 INFO  In the process of generating verify response in HTML
2019-03-07 10:23:25,408 INFO  Successfully generated verify response in HTML
2019-03-07 10:23:25,408 INFO  Successfully processed the response from service
2019-03-07 10:23:28,869 INFO  Initiating to process and prepare Input for the submit service
2019-03-07 10:23:28,872 INFO  Displaying user solution
2019-03-07 10:23:28,882 INFO  Successfully processed and prepared the input for the submit service
2019-03-07 10:23:28,882 INFO  Invoking the service to submit the user solution
2019-03-07 10:23:28,883 INFO  Initialising service address for Submit
2019-03-07 10:23:28,883 INFO  Time before invoking service In SUPER:Thu Mar 07 10:23:28 IST 2019
2019-03-07 10:23:29,201 INFO  Time after invoking service In SUPER:Thu Mar 07 10:23:29 IST 2019
2019-03-07 10:23:29,201 INFO  Service responded successfully with required details
2019-03-07 10:23:29,201 INFO  User solution successfully submitted
2019-03-07 10:23:29,202 INFO  Displaying submission status
2019-03-07 10:23:29,202 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-07 10:23:31,788 INFO  Initiating to process and prepare Input for the submit service
2019-03-07 10:23:31,789 INFO  Displaying user solution
2019-03-07 10:23:31,799 INFO  Successfully processed and prepared the input for the submit service
2019-03-07 10:23:31,800 INFO  Invoking the service to submit the user solution
2019-03-07 10:23:31,800 INFO  Initialising service address for Submit
2019-03-07 10:23:31,800 INFO  Time before invoking service In SUPER:Thu Mar 07 10:23:31 IST 2019
2019-03-07 10:23:31,940 INFO  Time after invoking service In SUPER:Thu Mar 07 10:23:31 IST 2019
2019-03-07 10:23:31,940 INFO  Service responded successfully with required details
2019-03-07 10:23:31,940 INFO  User solution successfully submitted
2019-03-07 10:23:31,940 INFO  Displaying submission status
2019-03-07 10:23:31,940 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-07 10:26:21,542 INFO  Setting request parameters for VerifySolution
2019-03-07 10:26:21,542 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 10:26:21,542 INFO  Starting to parse the user solution
2019-03-07 10:26:21,543 INFO  Displaying user solution
2019-03-07 10:26:21,572 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Exer-7\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Ticket:\r\n    counter=0\r\n    def __init__(self,passenger_name,source,destination):\r\n        self.__passenger_name=passenger_name\r\n        self.__ticket_id =None\r\n        self.__source=source\r\n        self.__destination = destination\r\n\r\n    def get_passenger_name(self):\r\n        return self.__passenger_name\r\n\r\n\r\n    def get_ticket_id(self):\r\n        return self.__ticket_id\r\n\r\n\r\n    def get_source(self):\r\n        return self.__source\r\n\r\n\r\n    def get_destination(self):\r\n        return self.__destination\r\n\r\n\r\n    \r\n    def validate_source_destination(self):\r\n        if(self.__source.lower()==\"delhi\" and\r\n        (self.__destination.lower()==\"mumbai\" or\r\n        self.__destination.lower()==\"chennai\" or \r\n        self.__destination.lower()==\"pune\" or \r\n        self.__destination.lower()==\"kolkata\")):\r\n            return True\r\n        else:\r\n            return False\r\n       \r\n    def generate_ticket(self):\r\n        if(self.__source.lower()==\"delhi\" and\r\n        (self.__destination.lower()==\"mumbai\" or\r\n        self.__destination.lower()==\"chennai\" or \r\n        self.__destination.lower()==\"pune\" or \r\n        self.__destination.lower()==\"kolkata\")):\r\n            Ticket.counter+=1\r\n            if(Ticket.counter<10):\r\n                self.__ticket_id=self.__source.upper()[0]+self.__destination.upper()[0]+\"0\"+str(Ticket.counter)\r\n            else:\r\n                self.__ticket_id=self.__source.upper()[0]+self.__destination.upper()[0]+str(Ticket.counter) \r\n            \r\n            return self.get_ticket_id()\r\n        \r\n        \r\n\r\n            \r\n               \r\n   \r\n","asgnmtId":"7","SolutionFileName":"Excer7.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-07 10:26:21,573 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 10:26:21,573 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 10:26:21,573 INFO  Invoking the service to verify the user solution
2019-03-07 10:26:21,574 INFO  Time before invoking service:Thu Mar 07 10:26:21 IST 2019
2019-03-07 10:26:21,574 INFO  Initialising service address for VerifySolution
2019-03-07 10:26:21,575 INFO  Time before invoking service In SUPER:Thu Mar 07 10:26:21 IST 2019
2019-03-07 10:26:22,641 INFO  Time after invoking service In SUPER:Thu Mar 07 10:26:22 IST 2019
2019-03-07 10:26:22,642 INFO  Service responded successfully with required details
2019-03-07 10:26:22,642 INFO  Time after invoking service:Thu Mar 07 10:26:22 IST 2019
2019-03-07 10:26:22,642 INFO  User solution successfully verified
2019-03-07 10:26:22,643 INFO  Processing the response from verify service
2019-03-07 10:26:22,649 INFO  Starting to parse JSON response
2019-03-07 10:26:22,651 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:26:22,651 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:26:22,651 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:26:22,651 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:26:22,651 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:26:22,651 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:26:22,651 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:26:22,651 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:26:22,651 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:26:22,651 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 10:26:22,653 INFO  Successfully parsed JSON response
2019-03-07 10:26:22,653 INFO  In the process of generating verify response in HTML
2019-03-07 10:26:22,746 INFO  Successfully generated verify response in HTML
2019-03-07 10:26:22,746 INFO  Successfully processed the response from service
2019-03-07 10:26:26,184 INFO  Initiating to process and prepare Input for the submit service
2019-03-07 10:26:26,185 INFO  Displaying user solution
2019-03-07 10:26:26,197 INFO  Successfully processed and prepared the input for the submit service
2019-03-07 10:26:26,198 INFO  Invoking the service to submit the user solution
2019-03-07 10:26:26,198 INFO  Initialising service address for Submit
2019-03-07 10:26:26,199 INFO  Time before invoking service In SUPER:Thu Mar 07 10:26:26 IST 2019
2019-03-07 10:26:26,336 INFO  Time after invoking service In SUPER:Thu Mar 07 10:26:26 IST 2019
2019-03-07 10:26:26,336 INFO  Service responded successfully with required details
2019-03-07 10:26:26,336 INFO  User solution successfully submitted
2019-03-07 10:26:26,337 INFO  Displaying submission status
2019-03-07 10:26:26,337 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-07 11:38:00,438 INFO  Verification Failed : Incorrect #tag
->Please provide the correct #tag in thefirst line as per ILP starter code
2019-03-07 12:19:56,143 INFO  Setting request parameters for VerifySolution
2019-03-07 12:19:56,143 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 12:19:56,143 INFO  Starting to parse the user solution
2019-03-07 12:19:56,144 INFO  Displaying user solution
2019-03-07 12:19:56,214 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Exer-8\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\nclass Juggler:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def juggles(self):\r\n        #write the code to make the juggler juggle\r\n\r\nclass JugglingItem:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n","asgnmtId":"8","SolutionFileName":"Excer8.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-07 12:19:56,215 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 12:19:56,215 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 12:19:56,215 INFO  Invoking the service to verify the user solution
2019-03-07 12:19:56,215 INFO  Time before invoking service:Thu Mar 07 12:19:56 IST 2019
2019-03-07 12:19:56,215 INFO  Initialising service address for VerifySolution
2019-03-07 12:19:56,216 INFO  Time before invoking service In SUPER:Thu Mar 07 12:19:56 IST 2019
2019-03-07 12:19:57,144 INFO  Time after invoking service In SUPER:Thu Mar 07 12:19:57 IST 2019
2019-03-07 12:19:57,144 INFO  Service responded successfully with required details
2019-03-07 12:19:57,145 INFO  Time after invoking service:Thu Mar 07 12:19:57 IST 2019
2019-03-07 12:19:57,145 INFO  User solution successfully verified
2019-03-07 12:19:57,145 INFO  Processing the response from verify service
2019-03-07 12:19:57,150 INFO  Starting to parse JSON response
2019-03-07 12:19:57,153 INFO  Successfully parsed JSON response
2019-03-07 12:19:57,153 INFO  In the process of generating verify response in HTML
2019-03-07 12:19:57,241 INFO  Successfully generated verify response in HTML
2019-03-07 12:19:57,242 INFO  Successfully processed the response from service
2019-03-07 12:34:55,226 INFO  Setting request parameters for VerifySolution
2019-03-07 12:34:55,226 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 12:34:55,226 INFO  Starting to parse the user solution
2019-03-07 12:34:55,232 INFO  Displaying user solution
2019-03-07 12:34:55,282 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Exer-8\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\nclass Juggler:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def juggles(self):\r\n        #write the code to make the juggler juggle\r\n        if(Juggler.__name==\"Jack Bremlov\"):\r\n            JugglingItem.__name = \"knives\" \r\n            return (Juggler.__name+\" \"+\"is juggling with\"+\" \"+JugglingItem.get_name())\r\n        elif(Juggler.__name==\"Anthony Gatto\"):\r\n            JugglingItem.__name =\"balls\"\r\n            return (Juggler.__name+\" \"+\"is juggling with\"+\" \"+JugglingItem.get_name())\r\n\r\nclass JugglingItem:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n","asgnmtId":"8","SolutionFileName":"Excer8.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-07 12:34:55,282 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 12:34:55,282 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 12:34:55,282 INFO  Invoking the service to verify the user solution
2019-03-07 12:34:55,283 INFO  Time before invoking service:Thu Mar 07 12:34:55 IST 2019
2019-03-07 12:34:55,283 INFO  Initialising service address for VerifySolution
2019-03-07 12:34:55,283 INFO  Time before invoking service In SUPER:Thu Mar 07 12:34:55 IST 2019
2019-03-07 12:34:56,178 INFO  Time after invoking service In SUPER:Thu Mar 07 12:34:56 IST 2019
2019-03-07 12:34:56,178 INFO  Service responded successfully with required details
2019-03-07 12:34:56,178 INFO  Time after invoking service:Thu Mar 07 12:34:56 IST 2019
2019-03-07 12:34:56,178 INFO  User solution successfully verified
2019-03-07 12:34:56,179 INFO  Processing the response from verify service
2019-03-07 12:34:56,184 INFO  Starting to parse JSON response
2019-03-07 12:34:56,186 INFO  Successfully parsed JSON response
2019-03-07 12:34:56,186 INFO  In the process of generating verify response in HTML
2019-03-07 12:34:56,264 INFO  Successfully generated verify response in HTML
2019-03-07 12:34:56,264 INFO  Successfully processed the response from service
2019-03-07 12:35:13,325 INFO  Setting request parameters for VerifySolution
2019-03-07 12:35:13,325 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 12:35:13,325 INFO  Starting to parse the user solution
2019-03-07 12:35:13,326 INFO  Displaying user solution
2019-03-07 12:35:13,360 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Exer-8\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\nclass Juggler:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def juggles(self):\r\n        #write the code to make the juggler juggle\r\n        if(Juggler.__name==\"Jack Bremlov\"):\r\n            JugglingItem.__name = \"knives\" \r\n            return (Juggler.__name+\" \"+\"is juggling with\"+\" \"+JugglingItem.get_name())\r\n        elif(Juggler.__name==\"Anthony Gatto\"):\r\n            JugglingItem.__name =\"balls\"\r\n            return (Juggler.__name+\" \"+\"is juggling with\"+\" \"+JugglingItem.get_name())\r\n\r\nclass JugglingItem:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n","asgnmtId":"8","SolutionFileName":"Excer8.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-07 12:35:13,361 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 12:35:13,361 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 12:35:13,361 INFO  Invoking the service to verify the user solution
2019-03-07 12:35:13,361 INFO  Time before invoking service:Thu Mar 07 12:35:13 IST 2019
2019-03-07 12:35:13,361 INFO  Initialising service address for VerifySolution
2019-03-07 12:35:13,362 INFO  Time before invoking service In SUPER:Thu Mar 07 12:35:13 IST 2019
2019-03-07 12:35:14,185 INFO  Time after invoking service In SUPER:Thu Mar 07 12:35:14 IST 2019
2019-03-07 12:35:14,185 INFO  Service responded successfully with required details
2019-03-07 12:35:14,185 INFO  Time after invoking service:Thu Mar 07 12:35:14 IST 2019
2019-03-07 12:35:14,185 INFO  User solution successfully verified
2019-03-07 12:35:14,186 INFO  Processing the response from verify service
2019-03-07 12:35:14,187 INFO  Starting to parse JSON response
2019-03-07 12:35:14,189 INFO  Successfully parsed JSON response
2019-03-07 12:35:14,189 INFO  In the process of generating verify response in HTML
2019-03-07 12:35:14,256 INFO  Successfully generated verify response in HTML
2019-03-07 12:35:14,256 INFO  Successfully processed the response from service
2019-03-07 12:38:34,335 INFO  Setting request parameters for VerifySolution
2019-03-07 12:38:34,335 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 12:38:34,335 INFO  Starting to parse the user solution
2019-03-07 12:38:34,336 INFO  Displaying user solution
2019-03-07 12:38:34,375 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Exer-8\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\nclass Juggler:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def juggles(self,Juggling_Item):\r\n        #write the code to make the juggler juggle\r\n        if(Juggler.__name==\"Jack Bremlov\"):\r\n            JugglingItem.__name = \"knives\" \r\n            return (Juggler.__name+\" \"+\"is juggling with\"+\" \"+JugglingItem.get_name())\r\n        elif(Juggler.__name==\"Anthony Gatto\"):\r\n            JugglingItem.__name =\"balls\"\r\n            return (Juggler.__name+\" \"+\"is juggling with\"+\" \"+JugglingItem.get_name())\r\n\r\nclass JugglingItem:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n","asgnmtId":"8","SolutionFileName":"Excer8.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-07 12:38:34,376 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 12:38:34,376 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 12:38:34,376 INFO  Invoking the service to verify the user solution
2019-03-07 12:38:34,376 INFO  Time before invoking service:Thu Mar 07 12:38:34 IST 2019
2019-03-07 12:38:34,376 INFO  Initialising service address for VerifySolution
2019-03-07 12:38:34,377 INFO  Time before invoking service In SUPER:Thu Mar 07 12:38:34 IST 2019
2019-03-07 12:38:35,273 INFO  Time after invoking service In SUPER:Thu Mar 07 12:38:35 IST 2019
2019-03-07 12:38:35,273 INFO  Service responded successfully with required details
2019-03-07 12:38:35,273 INFO  Time after invoking service:Thu Mar 07 12:38:35 IST 2019
2019-03-07 12:38:35,273 INFO  User solution successfully verified
2019-03-07 12:38:35,274 INFO  Processing the response from verify service
2019-03-07 12:38:35,275 INFO  Starting to parse JSON response
2019-03-07 12:38:35,277 INFO  Successfully parsed JSON response
2019-03-07 12:38:35,277 INFO  In the process of generating verify response in HTML
2019-03-07 12:38:35,354 INFO  Successfully generated verify response in HTML
2019-03-07 12:38:35,354 INFO  Successfully processed the response from service
2019-03-07 12:39:01,592 INFO  Setting request parameters for VerifySolution
2019-03-07 12:39:01,592 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 12:39:01,592 INFO  Starting to parse the user solution
2019-03-07 12:39:01,592 INFO  Displaying user solution
2019-03-07 12:39:01,627 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Exer-8\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\nclass Juggler:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def juggles(self):\r\n        #write the code to make the juggler juggle\r\n        if(Juggler.__name==\"Jack Bremlov\"):\r\n            JugglingItem.__name = \"knives\" \r\n            return (Juggler.__name+\" \"+\"is juggling with\"+\" \"+JugglingItem.get_name())\r\n        elif(Juggler.__name==\"Anthony Gatto\"):\r\n            JugglingItem.__name =\"balls\"\r\n            return (Juggler.__name+\" \"+\"is juggling with\"+\" \"+JugglingItem.get_name())\r\n\r\nclass JugglingItem:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n","asgnmtId":"8","SolutionFileName":"Excer8.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-07 12:39:01,628 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 12:39:01,628 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 12:39:01,628 INFO  Invoking the service to verify the user solution
2019-03-07 12:39:01,629 INFO  Time before invoking service:Thu Mar 07 12:39:01 IST 2019
2019-03-07 12:39:01,629 INFO  Initialising service address for VerifySolution
2019-03-07 12:39:01,630 INFO  Time before invoking service In SUPER:Thu Mar 07 12:39:01 IST 2019
2019-03-07 12:39:02,520 INFO  Time after invoking service In SUPER:Thu Mar 07 12:39:02 IST 2019
2019-03-07 12:39:02,520 INFO  Service responded successfully with required details
2019-03-07 12:39:02,520 INFO  Time after invoking service:Thu Mar 07 12:39:02 IST 2019
2019-03-07 12:39:02,520 INFO  User solution successfully verified
2019-03-07 12:39:02,521 INFO  Processing the response from verify service
2019-03-07 12:39:02,523 INFO  Starting to parse JSON response
2019-03-07 12:39:02,525 INFO  Successfully parsed JSON response
2019-03-07 12:39:02,525 INFO  In the process of generating verify response in HTML
2019-03-07 12:39:02,598 INFO  Successfully generated verify response in HTML
2019-03-07 12:39:02,599 INFO  Successfully processed the response from service
2019-03-07 13:44:27,980 INFO  Loading Baseframework Plugin
2019-03-07 13:44:27,982 INFO  Initializing the platform to load the Menu - HandsOn
2019-03-07 13:44:28,080 INFO  Loading the Menu - HandsOn
2019-03-07 13:44:28,108 INFO  Successfully loaded the Menu - HandsOn
2019-03-07 13:46:10,152 INFO  Loading Programming Assignment Plugin
2019-03-07 13:46:10,464 INFO  Setting request parameters for VerifySolution
2019-03-07 13:46:10,464 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 13:46:10,468 INFO  Starting to parse the user solution
2019-03-07 13:46:10,469 INFO  Displaying user solution
2019-03-07 13:46:10,580 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Exer-8\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\nclass Juggler:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def juggles(self):\r\n        #write the code to make the juggler juggle\r\n        if(Juggler.__name==\"Jack Bremlov\"):\r\n            JugglingItem.__name = \"knives\" \r\n            return (Juggler.__name+\" \"+\"is juggling with\"+\" \"+JugglingItem.get_name())\r\n        elif(Juggler.__name==\"Anthony Gatto\"):\r\n            JugglingItem.__name =\"balls\"\r\n            return (Juggler.__name+\" \"+\"is juggling with\"+\" \"+JugglingItem.get_name())\r\n\r\nclass JugglingItem:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n","asgnmtId":"8","SolutionFileName":"Excer8.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-07 13:46:10,584 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 13:46:10,585 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 13:46:10,585 INFO  Invoking the service to verify the user solution
2019-03-07 13:46:10,585 INFO  Time before invoking service:Thu Mar 07 13:46:10 IST 2019
2019-03-07 13:46:10,586 INFO  Initialising service address for VerifySolution
2019-03-07 13:46:10,586 INFO  Time before invoking service In SUPER:Thu Mar 07 13:46:10 IST 2019
2019-03-07 13:46:12,156 INFO  Time after invoking service In SUPER:Thu Mar 07 13:46:12 IST 2019
2019-03-07 13:46:12,156 INFO  Service responded successfully with required details
2019-03-07 13:46:12,156 INFO  Time after invoking service:Thu Mar 07 13:46:12 IST 2019
2019-03-07 13:46:12,156 INFO  User solution successfully verified
2019-03-07 13:46:12,157 INFO  Processing the response from verify service
2019-03-07 13:46:12,160 INFO  Starting to parse JSON response
2019-03-07 13:46:12,166 INFO  Successfully parsed JSON response
2019-03-07 13:46:12,167 INFO  In the process of generating verify response in HTML
2019-03-07 13:46:12,407 INFO  Successfully generated verify response in HTML
2019-03-07 13:46:12,408 INFO  Successfully processed the response from service
2019-03-07 13:48:33,318 INFO  Setting request parameters for VerifySolution
2019-03-07 13:48:33,318 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 13:48:33,319 INFO  Starting to parse the user solution
2019-03-07 13:48:33,320 INFO  Displaying user solution
2019-03-07 13:48:33,369 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Exer-8\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\nclass Juggler:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def juggles(self):\r\n        #write the code to make the juggler juggle\r\n        if(Juggler.__name==\"Jack Bremlov\" and JugglingItem.__name == \"knives\"):\r\n            return (Juggler.__name+\" \"+\"is juggling with\"+\" \"+JugglingItem.get_name())\r\n        elif(Juggler.__name==\"Anthony Gatto\" and JugglingItem.__name ==\"balls\"):\r\n            return (Juggler.__name+\" \"+\"is juggling with\"+\" \"+JugglingItem.get_name())\r\n\r\nclass JugglingItem:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n","asgnmtId":"8","SolutionFileName":"Excer8.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-07 13:48:33,370 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 13:48:33,370 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 13:48:33,370 INFO  Invoking the service to verify the user solution
2019-03-07 13:48:33,370 INFO  Time before invoking service:Thu Mar 07 13:48:33 IST 2019
2019-03-07 13:48:33,370 INFO  Initialising service address for VerifySolution
2019-03-07 13:48:33,371 INFO  Time before invoking service In SUPER:Thu Mar 07 13:48:33 IST 2019
2019-03-07 13:48:34,202 INFO  Time after invoking service In SUPER:Thu Mar 07 13:48:34 IST 2019
2019-03-07 13:48:34,203 INFO  Service responded successfully with required details
2019-03-07 13:48:34,203 INFO  Time after invoking service:Thu Mar 07 13:48:34 IST 2019
2019-03-07 13:48:34,203 INFO  User solution successfully verified
2019-03-07 13:48:34,204 INFO  Processing the response from verify service
2019-03-07 13:48:34,208 INFO  Starting to parse JSON response
2019-03-07 13:48:34,211 INFO  Successfully parsed JSON response
2019-03-07 13:48:34,211 INFO  In the process of generating verify response in HTML
2019-03-07 13:48:34,302 INFO  Successfully generated verify response in HTML
2019-03-07 13:48:34,302 INFO  Successfully processed the response from service
2019-03-07 13:54:15,139 INFO  Setting request parameters for VerifySolution
2019-03-07 13:54:15,139 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 13:54:15,139 INFO  Starting to parse the user solution
2019-03-07 13:54:15,140 INFO  Displaying user solution
2019-03-07 13:54:15,180 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Exer-8\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\nclass Juggler:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def juggles(self,j1):\r\n        #write the code to make the juggler juggle\r\n        \r\n\r\nclass JugglingItem:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def get_name(self):\r\n        return self.__name\r\nj1 = JugglingItem(\"knives\")\r\nj2 = JugglingItem(\"balls\")\r\n","asgnmtId":"8","SolutionFileName":"Excer8.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-07 13:54:15,180 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 13:54:15,180 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 13:54:15,180 INFO  Invoking the service to verify the user solution
2019-03-07 13:54:15,181 INFO  Time before invoking service:Thu Mar 07 13:54:15 IST 2019
2019-03-07 13:54:15,181 INFO  Initialising service address for VerifySolution
2019-03-07 13:54:15,181 INFO  Time before invoking service In SUPER:Thu Mar 07 13:54:15 IST 2019
2019-03-07 13:54:16,039 INFO  Time after invoking service In SUPER:Thu Mar 07 13:54:16 IST 2019
2019-03-07 13:54:16,039 INFO  Service responded successfully with required details
2019-03-07 13:54:16,040 INFO  Time after invoking service:Thu Mar 07 13:54:16 IST 2019
2019-03-07 13:54:16,040 INFO  User solution successfully verified
2019-03-07 13:54:16,040 INFO  Processing the response from verify service
2019-03-07 13:54:16,043 INFO  Starting to parse JSON response
2019-03-07 13:54:16,047 INFO  Successfully parsed JSON response
2019-03-07 13:54:16,047 INFO  In the process of generating verify response in HTML
2019-03-07 13:54:16,120 INFO  Successfully generated verify response in HTML
2019-03-07 13:54:16,121 INFO  Successfully processed the response from service
2019-03-07 13:54:25,350 INFO  Setting request parameters for VerifySolution
2019-03-07 13:54:25,350 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 13:54:25,350 INFO  Starting to parse the user solution
2019-03-07 13:54:25,351 INFO  Displaying user solution
2019-03-07 13:54:25,382 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Exer-8\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\nclass Juggler:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def juggles(self):\r\n        #write the code to make the juggler juggle\r\n        \r\n\r\nclass JugglingItem:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def get_name(self):\r\n        return self.__name\r\nj1 = JugglingItem(\"knives\")\r\nj2 = JugglingItem(\"balls\")\r\n","asgnmtId":"8","SolutionFileName":"Excer8.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-07 13:54:25,382 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 13:54:25,382 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 13:54:25,382 INFO  Invoking the service to verify the user solution
2019-03-07 13:54:25,383 INFO  Time before invoking service:Thu Mar 07 13:54:25 IST 2019
2019-03-07 13:54:25,383 INFO  Initialising service address for VerifySolution
2019-03-07 13:54:25,383 INFO  Time before invoking service In SUPER:Thu Mar 07 13:54:25 IST 2019
2019-03-07 13:54:26,389 INFO  Time after invoking service In SUPER:Thu Mar 07 13:54:26 IST 2019
2019-03-07 13:54:26,390 INFO  Service responded successfully with required details
2019-03-07 13:54:26,390 INFO  Time after invoking service:Thu Mar 07 13:54:26 IST 2019
2019-03-07 13:54:26,390 INFO  User solution successfully verified
2019-03-07 13:54:26,391 INFO  Processing the response from verify service
2019-03-07 13:54:26,393 INFO  Starting to parse JSON response
2019-03-07 13:54:26,397 INFO  Successfully parsed JSON response
2019-03-07 13:54:26,397 INFO  In the process of generating verify response in HTML
2019-03-07 13:54:26,469 INFO  Successfully generated verify response in HTML
2019-03-07 13:54:26,470 INFO  Successfully processed the response from service
2019-03-07 13:54:49,291 INFO  Setting request parameters for VerifySolution
2019-03-07 13:54:49,291 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 13:54:49,291 INFO  Starting to parse the user solution
2019-03-07 13:54:49,292 INFO  Displaying user solution
2019-03-07 13:54:49,326 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Exer-8\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\nclass Juggler:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def juggles(self):\r\n        #write the code to make the juggler juggle\r\n        \r\n\r\nclass JugglingItem:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n","asgnmtId":"8","SolutionFileName":"Excer8.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-07 13:54:49,327 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 13:54:49,327 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 13:54:49,327 INFO  Invoking the service to verify the user solution
2019-03-07 13:54:49,327 INFO  Time before invoking service:Thu Mar 07 13:54:49 IST 2019
2019-03-07 13:54:49,327 INFO  Initialising service address for VerifySolution
2019-03-07 13:54:49,328 INFO  Time before invoking service In SUPER:Thu Mar 07 13:54:49 IST 2019
2019-03-07 13:54:50,135 INFO  Time after invoking service In SUPER:Thu Mar 07 13:54:50 IST 2019
2019-03-07 13:54:50,136 INFO  Service responded successfully with required details
2019-03-07 13:54:50,136 INFO  Time after invoking service:Thu Mar 07 13:54:50 IST 2019
2019-03-07 13:54:50,136 INFO  User solution successfully verified
2019-03-07 13:54:50,137 INFO  Processing the response from verify service
2019-03-07 13:54:50,139 INFO  Starting to parse JSON response
2019-03-07 13:54:50,142 INFO  Successfully parsed JSON response
2019-03-07 13:54:50,142 INFO  In the process of generating verify response in HTML
2019-03-07 13:54:50,214 INFO  Successfully generated verify response in HTML
2019-03-07 13:54:50,214 INFO  Successfully processed the response from service
2019-03-07 13:54:57,867 INFO  Setting request parameters for VerifySolution
2019-03-07 13:54:57,867 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 13:54:57,867 INFO  Starting to parse the user solution
2019-03-07 13:54:57,867 INFO  Displaying user solution
2019-03-07 13:54:57,902 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Exer-8\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\nclass Juggler:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def juggles(self):\r\n        #write the code to make the juggler juggle\r\n        \r\n\r\nclass JugglingItem:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n","asgnmtId":"8","SolutionFileName":"Excer8.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-07 13:54:57,903 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 13:54:57,903 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 13:54:57,903 INFO  Invoking the service to verify the user solution
2019-03-07 13:54:57,903 INFO  Time before invoking service:Thu Mar 07 13:54:57 IST 2019
2019-03-07 13:54:57,903 INFO  Initialising service address for VerifySolution
2019-03-07 13:54:57,904 INFO  Time before invoking service In SUPER:Thu Mar 07 13:54:57 IST 2019
2019-03-07 13:54:59,354 INFO  Time after invoking service In SUPER:Thu Mar 07 13:54:59 IST 2019
2019-03-07 13:54:59,354 INFO  Service responded successfully with required details
2019-03-07 13:54:59,355 INFO  Time after invoking service:Thu Mar 07 13:54:59 IST 2019
2019-03-07 13:54:59,355 INFO  User solution successfully verified
2019-03-07 13:54:59,355 INFO  Processing the response from verify service
2019-03-07 13:54:59,355 INFO  Starting to parse JSON response
2019-03-07 13:54:59,357 INFO  Successfully parsed JSON response
2019-03-07 13:54:59,358 INFO  In the process of generating verify response in HTML
2019-03-07 13:54:59,422 INFO  Successfully generated verify response in HTML
2019-03-07 13:54:59,422 INFO  Successfully processed the response from service
2019-03-07 13:59:39,060 INFO  Setting request parameters for VerifySolution
2019-03-07 13:59:39,061 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 13:59:39,061 INFO  Starting to parse the user solution
2019-03-07 13:59:39,061 INFO  Displaying user solution
2019-03-07 13:59:39,109 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Exer-8\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\nclass Juggler:\r\n    def __init__(self,name,juggling_item):\r\n        self.__name=name\r\n        self.__juggling_item=juggling_item\r\n\r\n    def juggles(self,jugglingitem):\r\n        #write the code to make the juggler juggle\r\n        \r\nclass JugglingItem:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n","asgnmtId":"8","SolutionFileName":"Excer8.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-07 13:59:39,109 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 13:59:39,110 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 13:59:39,110 INFO  Invoking the service to verify the user solution
2019-03-07 13:59:39,110 INFO  Time before invoking service:Thu Mar 07 13:59:39 IST 2019
2019-03-07 13:59:39,110 INFO  Initialising service address for VerifySolution
2019-03-07 13:59:39,111 INFO  Time before invoking service In SUPER:Thu Mar 07 13:59:39 IST 2019
2019-03-07 13:59:39,968 INFO  Time after invoking service In SUPER:Thu Mar 07 13:59:39 IST 2019
2019-03-07 13:59:39,968 INFO  Service responded successfully with required details
2019-03-07 13:59:39,968 INFO  Time after invoking service:Thu Mar 07 13:59:39 IST 2019
2019-03-07 13:59:39,968 INFO  User solution successfully verified
2019-03-07 13:59:39,969 INFO  Processing the response from verify service
2019-03-07 13:59:39,974 INFO  Starting to parse JSON response
2019-03-07 13:59:39,977 INFO  Successfully parsed JSON response
2019-03-07 13:59:39,977 INFO  In the process of generating verify response in HTML
2019-03-07 13:59:40,059 INFO  Successfully generated verify response in HTML
2019-03-07 13:59:40,059 INFO  Successfully processed the response from service
2019-03-07 14:00:02,820 INFO  Setting request parameters for VerifySolution
2019-03-07 14:00:02,820 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 14:00:02,820 INFO  Starting to parse the user solution
2019-03-07 14:00:02,821 INFO  Displaying user solution
2019-03-07 14:00:02,860 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Exer-8\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\nclass Juggler:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n        self.__juggling_item=juggling_item\r\n\r\n    def juggles(self,jugglingitem):\r\n        #write the code to make the juggler juggle\r\n        \r\nclass JugglingItem:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n","asgnmtId":"8","SolutionFileName":"Excer8.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-07 14:00:02,861 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 14:00:02,861 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 14:00:02,861 INFO  Invoking the service to verify the user solution
2019-03-07 14:00:02,861 INFO  Time before invoking service:Thu Mar 07 14:00:02 IST 2019
2019-03-07 14:00:02,861 INFO  Initialising service address for VerifySolution
2019-03-07 14:00:02,862 INFO  Time before invoking service In SUPER:Thu Mar 07 14:00:02 IST 2019
2019-03-07 14:00:03,815 INFO  Time after invoking service In SUPER:Thu Mar 07 14:00:03 IST 2019
2019-03-07 14:00:03,815 INFO  Service responded successfully with required details
2019-03-07 14:00:03,816 INFO  Time after invoking service:Thu Mar 07 14:00:03 IST 2019
2019-03-07 14:00:03,816 INFO  User solution successfully verified
2019-03-07 14:00:03,816 INFO  Processing the response from verify service
2019-03-07 14:00:03,818 INFO  Starting to parse JSON response
2019-03-07 14:00:03,821 INFO  Successfully parsed JSON response
2019-03-07 14:00:03,821 INFO  In the process of generating verify response in HTML
2019-03-07 14:00:03,893 INFO  Successfully generated verify response in HTML
2019-03-07 14:00:03,893 INFO  Successfully processed the response from service
2019-03-07 14:00:13,736 INFO  Setting request parameters for VerifySolution
2019-03-07 14:00:13,736 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 14:00:13,736 INFO  Starting to parse the user solution
2019-03-07 14:00:13,738 INFO  Displaying user solution
2019-03-07 14:00:13,776 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Exer-8\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\nclass Juggler:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n        \r\n\r\n    def juggles(self,jugglingitem):\r\n        #write the code to make the juggler juggle\r\n        \r\nclass JugglingItem:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n","asgnmtId":"8","SolutionFileName":"Excer8.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-07 14:00:13,776 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 14:00:13,776 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 14:00:13,776 INFO  Invoking the service to verify the user solution
2019-03-07 14:00:13,777 INFO  Time before invoking service:Thu Mar 07 14:00:13 IST 2019
2019-03-07 14:00:13,777 INFO  Initialising service address for VerifySolution
2019-03-07 14:00:13,777 INFO  Time before invoking service In SUPER:Thu Mar 07 14:00:13 IST 2019
2019-03-07 14:00:14,593 INFO  Time after invoking service In SUPER:Thu Mar 07 14:00:14 IST 2019
2019-03-07 14:00:14,594 INFO  Service responded successfully with required details
2019-03-07 14:00:14,594 INFO  Time after invoking service:Thu Mar 07 14:00:14 IST 2019
2019-03-07 14:00:14,594 INFO  User solution successfully verified
2019-03-07 14:00:14,594 INFO  Processing the response from verify service
2019-03-07 14:00:14,596 INFO  Starting to parse JSON response
2019-03-07 14:00:14,597 INFO  Successfully parsed JSON response
2019-03-07 14:00:14,598 INFO  In the process of generating verify response in HTML
2019-03-07 14:00:14,661 INFO  Successfully generated verify response in HTML
2019-03-07 14:00:14,661 INFO  Successfully processed the response from service
2019-03-07 14:03:09,638 INFO  Setting request parameters for VerifySolution
2019-03-07 14:03:09,638 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 14:03:09,638 INFO  Starting to parse the user solution
2019-03-07 14:03:09,639 INFO  Displaying user solution
2019-03-07 14:03:09,694 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Exer-8\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\nclass Juggler:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n        \r\n\r\n    def juggles(self,self.get_name()):\r\n        #write the code to make the juggler juggle\r\n        \r\nclass JugglingItem:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n","asgnmtId":"8","SolutionFileName":"Excer8.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-07 14:03:09,694 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 14:03:09,695 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 14:03:09,695 INFO  Invoking the service to verify the user solution
2019-03-07 14:03:09,697 INFO  Time before invoking service:Thu Mar 07 14:03:09 IST 2019
2019-03-07 14:03:09,698 INFO  Initialising service address for VerifySolution
2019-03-07 14:03:09,699 INFO  Time before invoking service In SUPER:Thu Mar 07 14:03:09 IST 2019
2019-03-07 14:03:10,585 INFO  Time after invoking service In SUPER:Thu Mar 07 14:03:10 IST 2019
2019-03-07 14:03:10,586 INFO  Service responded successfully with required details
2019-03-07 14:03:10,586 INFO  Time after invoking service:Thu Mar 07 14:03:10 IST 2019
2019-03-07 14:03:10,587 INFO  User solution successfully verified
2019-03-07 14:03:10,587 INFO  Processing the response from verify service
2019-03-07 14:03:10,589 INFO  Starting to parse JSON response
2019-03-07 14:03:10,592 INFO  Successfully parsed JSON response
2019-03-07 14:03:10,592 INFO  In the process of generating verify response in HTML
2019-03-07 14:03:10,744 INFO  Successfully generated verify response in HTML
2019-03-07 14:03:10,745 INFO  Successfully processed the response from service
2019-03-07 14:03:26,054 INFO  Setting request parameters for VerifySolution
2019-03-07 14:03:26,055 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 14:03:26,055 INFO  Starting to parse the user solution
2019-03-07 14:03:26,055 INFO  Displaying user solution
2019-03-07 14:03:26,089 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Exer-8\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\nclass Juggler:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n        \r\n\r\n    def juggles(self,self.get_name()):\r\n        #write the code to make the juggler juggle\r\n        \r\nclass JugglingItem:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n","asgnmtId":"8","SolutionFileName":"Excer8.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-07 14:03:26,090 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 14:03:26,090 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 14:03:26,090 INFO  Invoking the service to verify the user solution
2019-03-07 14:03:26,091 INFO  Time before invoking service:Thu Mar 07 14:03:26 IST 2019
2019-03-07 14:03:26,091 INFO  Initialising service address for VerifySolution
2019-03-07 14:03:26,091 INFO  Time before invoking service In SUPER:Thu Mar 07 14:03:26 IST 2019
2019-03-07 14:03:27,071 INFO  Time after invoking service In SUPER:Thu Mar 07 14:03:27 IST 2019
2019-03-07 14:03:27,071 INFO  Service responded successfully with required details
2019-03-07 14:03:27,072 INFO  Time after invoking service:Thu Mar 07 14:03:27 IST 2019
2019-03-07 14:03:27,072 INFO  User solution successfully verified
2019-03-07 14:03:27,072 INFO  Processing the response from verify service
2019-03-07 14:03:27,076 INFO  Starting to parse JSON response
2019-03-07 14:03:27,080 INFO  Successfully parsed JSON response
2019-03-07 14:03:27,080 INFO  In the process of generating verify response in HTML
2019-03-07 14:03:27,159 INFO  Successfully generated verify response in HTML
2019-03-07 14:03:27,160 INFO  Successfully processed the response from service
2019-03-07 14:04:02,799 INFO  Setting request parameters for VerifySolution
2019-03-07 14:04:02,799 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 14:04:02,799 INFO  Starting to parse the user solution
2019-03-07 14:04:02,800 INFO  Displaying user solution
2019-03-07 14:04:02,839 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Exer-8\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\nclass Juggler:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n        \r\n\r\n    def juggles(self):\r\n        #write the code to make the juggler juggle\r\n        \r\nclass JugglingItem:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n","asgnmtId":"8","SolutionFileName":"Excer8.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-07 14:04:02,839 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 14:04:02,839 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 14:04:02,840 INFO  Invoking the service to verify the user solution
2019-03-07 14:04:02,840 INFO  Time before invoking service:Thu Mar 07 14:04:02 IST 2019
2019-03-07 14:04:02,840 INFO  Initialising service address for VerifySolution
2019-03-07 14:04:02,841 INFO  Time before invoking service In SUPER:Thu Mar 07 14:04:02 IST 2019
2019-03-07 14:04:03,718 INFO  Time after invoking service In SUPER:Thu Mar 07 14:04:03 IST 2019
2019-03-07 14:04:03,718 INFO  Service responded successfully with required details
2019-03-07 14:04:03,719 INFO  Time after invoking service:Thu Mar 07 14:04:03 IST 2019
2019-03-07 14:04:03,719 INFO  User solution successfully verified
2019-03-07 14:04:03,719 INFO  Processing the response from verify service
2019-03-07 14:04:03,721 INFO  Starting to parse JSON response
2019-03-07 14:04:03,723 INFO  Successfully parsed JSON response
2019-03-07 14:04:03,723 INFO  In the process of generating verify response in HTML
2019-03-07 14:04:03,803 INFO  Successfully generated verify response in HTML
2019-03-07 14:04:03,803 INFO  Successfully processed the response from service
2019-03-07 14:04:32,357 INFO  Setting request parameters for VerifySolution
2019-03-07 14:04:32,358 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 14:04:32,358 INFO  Starting to parse the user solution
2019-03-07 14:04:32,358 INFO  Displaying user solution
2019-03-07 14:04:32,397 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Exer-8\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\nclass Juggler:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def juggles(self):\r\n        #write the code to make the juggler juggle\r\n        \r\n\r\nclass JugglingItem:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n","asgnmtId":"8","SolutionFileName":"Excer8.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-07 14:04:32,398 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 14:04:32,398 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 14:04:32,398 INFO  Invoking the service to verify the user solution
2019-03-07 14:04:32,398 INFO  Time before invoking service:Thu Mar 07 14:04:32 IST 2019
2019-03-07 14:04:32,398 INFO  Initialising service address for VerifySolution
2019-03-07 14:04:32,399 INFO  Time before invoking service In SUPER:Thu Mar 07 14:04:32 IST 2019
2019-03-07 14:04:33,304 INFO  Time after invoking service In SUPER:Thu Mar 07 14:04:33 IST 2019
2019-03-07 14:04:33,304 INFO  Service responded successfully with required details
2019-03-07 14:04:33,304 INFO  Time after invoking service:Thu Mar 07 14:04:33 IST 2019
2019-03-07 14:04:33,304 INFO  User solution successfully verified
2019-03-07 14:04:33,305 INFO  Processing the response from verify service
2019-03-07 14:04:33,307 INFO  Starting to parse JSON response
2019-03-07 14:04:33,309 INFO  Successfully parsed JSON response
2019-03-07 14:04:33,309 INFO  In the process of generating verify response in HTML
2019-03-07 14:04:33,384 INFO  Successfully generated verify response in HTML
2019-03-07 14:04:33,384 INFO  Successfully processed the response from service
2019-03-07 14:09:06,591 INFO  Setting request parameters for VerifySolution
2019-03-07 14:09:06,591 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 14:09:06,591 INFO  Starting to parse the user solution
2019-03-07 14:09:06,593 INFO  Displaying user solution
2019-03-07 14:09:06,649 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Exer-8\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\nclass Juggler:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def juggles(self):\r\n        #write the code to make the juggler juggle\r\n        \r\n\r\nclass JugglingItem:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n    \r\nj1 = Juggler(\"Jack Bremlov\")\r\nj2=Juggler(\"Anthony Gatto\")\r\ni1= JugglingItem(\"knives\")\r\ni2= JugglingItem(\"balls\")\r\n","asgnmtId":"8","SolutionFileName":"Excer8.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-07 14:09:06,649 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 14:09:06,650 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 14:09:06,650 INFO  Invoking the service to verify the user solution
2019-03-07 14:09:06,651 INFO  Time before invoking service:Thu Mar 07 14:09:06 IST 2019
2019-03-07 14:09:06,651 INFO  Initialising service address for VerifySolution
2019-03-07 14:09:06,651 INFO  Time before invoking service In SUPER:Thu Mar 07 14:09:06 IST 2019
2019-03-07 14:09:07,496 INFO  Time after invoking service In SUPER:Thu Mar 07 14:09:07 IST 2019
2019-03-07 14:09:07,496 INFO  Service responded successfully with required details
2019-03-07 14:09:07,497 INFO  Time after invoking service:Thu Mar 07 14:09:07 IST 2019
2019-03-07 14:09:07,497 INFO  User solution successfully verified
2019-03-07 14:09:07,497 INFO  Processing the response from verify service
2019-03-07 14:09:07,500 INFO  Starting to parse JSON response
2019-03-07 14:09:07,503 INFO  Successfully parsed JSON response
2019-03-07 14:09:07,504 INFO  In the process of generating verify response in HTML
2019-03-07 14:09:07,579 INFO  Successfully generated verify response in HTML
2019-03-07 14:09:07,580 INFO  Successfully processed the response from service
2019-03-07 14:24:30,209 INFO  Setting request parameters for VerifySolution
2019-03-07 14:24:30,209 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 14:24:30,209 INFO  Starting to parse the user solution
2019-03-07 14:24:30,209 INFO  Displaying user solution
2019-03-07 14:24:30,272 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Exer-8\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\nclass Juggler:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def juggles(self):\r\n        #write the code to make the juggler juggle\r\n        if((self.__name.lower()==\"Jack Bremlov\" or self.__name.lower()==\"Anthony Gatto\") and (JugglingItem.get_name()==\"knives\" or JugglingItem.get_name()==\"balls\")):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n\r\nclass JugglingItem:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n    \r\nj1 = Juggler(\"Jack Bremlov\")\r\nj2=Juggler(\"Anthony Gatto\")\r\ni1= JugglingItem(\"knives\")\r\ni2= JugglingItem(\"balls\")\r\n","asgnmtId":"8","SolutionFileName":"Excer8.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-07 14:24:30,272 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 14:24:30,272 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 14:24:30,273 INFO  Invoking the service to verify the user solution
2019-03-07 14:24:30,273 INFO  Time before invoking service:Thu Mar 07 14:24:30 IST 2019
2019-03-07 14:24:30,273 INFO  Initialising service address for VerifySolution
2019-03-07 14:24:30,274 INFO  Time before invoking service In SUPER:Thu Mar 07 14:24:30 IST 2019
2019-03-07 14:24:31,156 INFO  Time after invoking service In SUPER:Thu Mar 07 14:24:31 IST 2019
2019-03-07 14:24:31,156 INFO  Service responded successfully with required details
2019-03-07 14:24:31,157 INFO  Time after invoking service:Thu Mar 07 14:24:31 IST 2019
2019-03-07 14:24:31,157 INFO  User solution successfully verified
2019-03-07 14:24:31,157 INFO  Processing the response from verify service
2019-03-07 14:24:31,160 INFO  Starting to parse JSON response
2019-03-07 14:24:31,163 INFO  Successfully parsed JSON response
2019-03-07 14:24:31,163 INFO  In the process of generating verify response in HTML
2019-03-07 14:24:31,244 INFO  Successfully generated verify response in HTML
2019-03-07 14:24:31,244 INFO  Successfully processed the response from service
2019-03-07 14:24:53,100 INFO  Setting request parameters for VerifySolution
2019-03-07 14:24:53,100 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 14:24:53,100 INFO  Starting to parse the user solution
2019-03-07 14:24:53,101 INFO  Displaying user solution
2019-03-07 14:24:53,137 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Exer-8\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\nclass Juggler:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def juggles(self):\r\n        #write the code to make the juggler juggle\r\n        if((self.__name.lower()==\"Jack Bremlov\" or self.__name.lower()==\"Anthony Gatto\") and (JugglingItem.get_name()==\"knives\" or JugglingItem.get_name()==\"balls\")):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n\r\nclass JugglingItem:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n    \r\nj1 = Juggler(\"Jack Bremlov\")\r\nj2=Juggler(\"Anthony Gatto\")\r\ni1= JugglingItem(\"knives\")\r\ni2= JugglingItem(\"balls\")\r\n","asgnmtId":"8","SolutionFileName":"Excer8.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-07 14:24:53,137 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 14:24:53,137 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 14:24:53,137 INFO  Invoking the service to verify the user solution
2019-03-07 14:24:53,138 INFO  Time before invoking service:Thu Mar 07 14:24:53 IST 2019
2019-03-07 14:24:53,138 INFO  Initialising service address for VerifySolution
2019-03-07 14:24:53,139 INFO  Time before invoking service In SUPER:Thu Mar 07 14:24:53 IST 2019
2019-03-07 14:24:54,061 INFO  Time after invoking service In SUPER:Thu Mar 07 14:24:54 IST 2019
2019-03-07 14:24:54,061 INFO  Service responded successfully with required details
2019-03-07 14:24:54,062 INFO  Time after invoking service:Thu Mar 07 14:24:54 IST 2019
2019-03-07 14:24:54,062 INFO  User solution successfully verified
2019-03-07 14:24:54,062 INFO  Processing the response from verify service
2019-03-07 14:24:54,064 INFO  Starting to parse JSON response
2019-03-07 14:24:54,066 INFO  Successfully parsed JSON response
2019-03-07 14:24:54,066 INFO  In the process of generating verify response in HTML
2019-03-07 14:24:54,131 INFO  Successfully generated verify response in HTML
2019-03-07 14:24:54,132 INFO  Successfully processed the response from service
2019-03-07 14:27:54,322 INFO  Setting request parameters for VerifySolution
2019-03-07 14:27:54,323 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 14:27:54,323 INFO  Starting to parse the user solution
2019-03-07 14:27:54,323 INFO  Displaying user solution
2019-03-07 14:27:54,359 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Exer-8\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\nclass Juggler:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def juggles(self):\r\n        #write the code to make the juggler juggle\r\n        if((self.__name.lower()==\"Jack Bremlov\" or self.__name.lower()==\"Anthony Gatto\") and (JugglingItem.get_name()==\"knives\" or JugglingItem.get_name()==\"balls\")):\r\n            return True\r\n        else:\r\n            return False\r\n    def juggles(self,Juggling_Item):   \r\n\r\nclass JugglingItem:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n    \r\nj1 = Juggler(\"Jack Bremlov\")\r\nj2=Juggler(\"Anthony Gatto\")\r\ni1= JugglingItem(\"knives\")\r\ni2= JugglingItem(\"balls\")\r\n","asgnmtId":"8","SolutionFileName":"Excer8.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-07 14:27:54,360 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 14:27:54,360 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 14:27:54,360 INFO  Invoking the service to verify the user solution
2019-03-07 14:27:54,361 INFO  Time before invoking service:Thu Mar 07 14:27:54 IST 2019
2019-03-07 14:27:54,361 INFO  Initialising service address for VerifySolution
2019-03-07 14:27:54,362 INFO  Time before invoking service In SUPER:Thu Mar 07 14:27:54 IST 2019
2019-03-07 14:27:55,280 INFO  Time after invoking service In SUPER:Thu Mar 07 14:27:55 IST 2019
2019-03-07 14:27:55,280 INFO  Service responded successfully with required details
2019-03-07 14:27:55,281 INFO  Time after invoking service:Thu Mar 07 14:27:55 IST 2019
2019-03-07 14:27:55,281 INFO  User solution successfully verified
2019-03-07 14:27:55,281 INFO  Processing the response from verify service
2019-03-07 14:27:55,284 INFO  Starting to parse JSON response
2019-03-07 14:27:55,286 INFO  Successfully parsed JSON response
2019-03-07 14:27:55,286 INFO  In the process of generating verify response in HTML
2019-03-07 14:27:55,359 INFO  Successfully generated verify response in HTML
2019-03-07 14:27:55,359 INFO  Successfully processed the response from service
2019-03-07 14:28:32,747 INFO  Setting request parameters for VerifySolution
2019-03-07 14:28:32,748 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 14:28:32,748 INFO  Starting to parse the user solution
2019-03-07 14:28:32,748 INFO  Displaying user solution
2019-03-07 14:28:32,785 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Exer-8\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\nclass Juggler:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def juggles(self):\r\n        #write the code to make the juggler juggle\r\n        if((self.__name.lower()==\"Jack Bremlov\" or self.__name.lower()==\"Anthony Gatto\") and (JugglingItem.get_name()==\"knives\" or JugglingItem.get_name()==\"balls\")):\r\n            return True\r\n        else:\r\n            return False   \r\n\r\nclass JugglingItem:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n    \r\nj1 = Juggler(\"Jack Bremlov\")\r\nj2=Juggler(\"Anthony Gatto\")\r\ni1= JugglingItem(\"knives\")\r\ni2= JugglingItem(\"balls\")\r\n","asgnmtId":"8","SolutionFileName":"Excer8.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-07 14:28:32,785 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 14:28:32,785 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 14:28:32,785 INFO  Invoking the service to verify the user solution
2019-03-07 14:28:32,786 INFO  Time before invoking service:Thu Mar 07 14:28:32 IST 2019
2019-03-07 14:28:32,786 INFO  Initialising service address for VerifySolution
2019-03-07 14:28:32,786 INFO  Time before invoking service In SUPER:Thu Mar 07 14:28:32 IST 2019
2019-03-07 14:28:33,642 INFO  Time after invoking service In SUPER:Thu Mar 07 14:28:33 IST 2019
2019-03-07 14:28:33,642 INFO  Service responded successfully with required details
2019-03-07 14:28:33,642 INFO  Time after invoking service:Thu Mar 07 14:28:33 IST 2019
2019-03-07 14:28:33,643 INFO  User solution successfully verified
2019-03-07 14:28:33,643 INFO  Processing the response from verify service
2019-03-07 14:28:33,644 INFO  Starting to parse JSON response
2019-03-07 14:28:33,648 INFO  Successfully parsed JSON response
2019-03-07 14:28:33,648 INFO  In the process of generating verify response in HTML
2019-03-07 14:28:33,721 INFO  Successfully generated verify response in HTML
2019-03-07 14:28:33,721 INFO  Successfully processed the response from service
2019-03-07 14:30:15,858 INFO  Setting request parameters for VerifySolution
2019-03-07 14:30:15,858 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 14:30:15,858 INFO  Starting to parse the user solution
2019-03-07 14:30:15,859 INFO  Displaying user solution
2019-03-07 14:30:15,906 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Exer-8\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\nclass Juggler:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def juggles(self,JugglingItem):\r\n        \r\n        #write the code to make the juggler juggle\r\n        if((self.__name.lower()==\"Jack Bremlov\" or self.__name.lower()==\"Anthony Gatto\") and (JugglingItem.get_name()==\"knives\" or JugglingItem.get_name()==\"balls\")):\r\n            return True\r\n        else:\r\n            return False   \r\n\r\nclass JugglingItem:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n    \r\nj1 = Juggler(\"Jack Bremlov\")\r\nj2=Juggler(\"Anthony Gatto\")\r\ni1= JugglingItem(\"knives\")\r\ni2= JugglingItem(\"balls\")\r\n","asgnmtId":"8","SolutionFileName":"Excer8.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-07 14:30:15,906 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 14:30:15,907 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 14:30:15,907 INFO  Invoking the service to verify the user solution
2019-03-07 14:30:15,907 INFO  Time before invoking service:Thu Mar 07 14:30:15 IST 2019
2019-03-07 14:30:15,907 INFO  Initialising service address for VerifySolution
2019-03-07 14:30:15,908 INFO  Time before invoking service In SUPER:Thu Mar 07 14:30:15 IST 2019
2019-03-07 14:30:16,839 INFO  Time after invoking service In SUPER:Thu Mar 07 14:30:16 IST 2019
2019-03-07 14:30:16,839 INFO  Service responded successfully with required details
2019-03-07 14:30:16,840 INFO  Time after invoking service:Thu Mar 07 14:30:16 IST 2019
2019-03-07 14:30:16,840 INFO  User solution successfully verified
2019-03-07 14:30:16,841 INFO  Processing the response from verify service
2019-03-07 14:30:16,847 INFO  Starting to parse JSON response
2019-03-07 14:30:16,852 INFO  Successfully parsed JSON response
2019-03-07 14:30:16,854 INFO  In the process of generating verify response in HTML
2019-03-07 14:30:16,935 INFO  Successfully generated verify response in HTML
2019-03-07 14:30:16,935 INFO  Successfully processed the response from service
2019-03-07 14:30:30,300 INFO  Setting request parameters for VerifySolution
2019-03-07 14:30:30,301 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 14:30:30,301 INFO  Starting to parse the user solution
2019-03-07 14:30:30,301 INFO  Displaying user solution
2019-03-07 14:30:30,341 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Exer-8\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\nclass Juggler:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def juggles(self,J):\r\n        \r\n        #write the code to make the juggler juggle\r\n        if((self.__name.lower()==\"Jack Bremlov\" or self.__name.lower()==\"Anthony Gatto\") and (JugglingItem.get_name()==\"knives\" or JugglingItem.get_name()==\"balls\")):\r\n            return True\r\n        else:\r\n            return False   \r\n\r\nclass JugglingItem:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n    \r\nj1 = Juggler(\"Jack Bremlov\")\r\nj2=Juggler(\"Anthony Gatto\")\r\ni1= JugglingItem(\"knives\")\r\ni2= JugglingItem(\"balls\")\r\n","asgnmtId":"8","SolutionFileName":"Excer8.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-07 14:30:30,341 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 14:30:30,341 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 14:30:30,341 INFO  Invoking the service to verify the user solution
2019-03-07 14:30:30,342 INFO  Time before invoking service:Thu Mar 07 14:30:30 IST 2019
2019-03-07 14:30:30,342 INFO  Initialising service address for VerifySolution
2019-03-07 14:30:30,343 INFO  Time before invoking service In SUPER:Thu Mar 07 14:30:30 IST 2019
2019-03-07 14:30:32,608 INFO  Time after invoking service In SUPER:Thu Mar 07 14:30:32 IST 2019
2019-03-07 14:30:32,608 INFO  Service responded successfully with required details
2019-03-07 14:30:32,608 INFO  Time after invoking service:Thu Mar 07 14:30:32 IST 2019
2019-03-07 14:30:32,608 INFO  User solution successfully verified
2019-03-07 14:30:32,609 INFO  Processing the response from verify service
2019-03-07 14:30:32,611 INFO  Starting to parse JSON response
2019-03-07 14:30:32,614 INFO  Successfully parsed JSON response
2019-03-07 14:30:32,615 INFO  In the process of generating verify response in HTML
2019-03-07 14:30:32,698 INFO  Successfully generated verify response in HTML
2019-03-07 14:30:32,698 INFO  Successfully processed the response from service
2019-03-07 14:30:46,227 INFO  Setting request parameters for VerifySolution
2019-03-07 14:30:46,227 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 14:30:46,227 INFO  Starting to parse the user solution
2019-03-07 14:30:46,229 INFO  Displaying user solution
2019-03-07 14:30:46,271 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Exer-8\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\nclass Juggler:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def juggles(self):\r\n        \r\n        #write the code to make the juggler juggle\r\n        if((self.__name.lower()==\"Jack Bremlov\" or self.__name.lower()==\"Anthony Gatto\") and (JugglingItem.get_name()==\"knives\" or JugglingItem.get_name()==\"balls\")):\r\n            return True\r\n        else:\r\n            return False   \r\n\r\nclass JugglingItem:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n    \r\nj1 = Juggler(\"Jack Bremlov\")\r\nj2=Juggler(\"Anthony Gatto\")\r\ni1= JugglingItem(\"knives\")\r\ni2= JugglingItem(\"balls\")\r\n","asgnmtId":"8","SolutionFileName":"Excer8.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-07 14:30:46,271 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 14:30:46,272 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 14:30:46,272 INFO  Invoking the service to verify the user solution
2019-03-07 14:30:46,272 INFO  Time before invoking service:Thu Mar 07 14:30:46 IST 2019
2019-03-07 14:30:46,272 INFO  Initialising service address for VerifySolution
2019-03-07 14:30:46,273 INFO  Time before invoking service In SUPER:Thu Mar 07 14:30:46 IST 2019
2019-03-07 14:30:47,125 INFO  Time after invoking service In SUPER:Thu Mar 07 14:30:47 IST 2019
2019-03-07 14:30:47,125 INFO  Service responded successfully with required details
2019-03-07 14:30:47,126 INFO  Time after invoking service:Thu Mar 07 14:30:47 IST 2019
2019-03-07 14:30:47,126 INFO  User solution successfully verified
2019-03-07 14:30:47,126 INFO  Processing the response from verify service
2019-03-07 14:30:47,128 INFO  Starting to parse JSON response
2019-03-07 14:30:47,130 INFO  Successfully parsed JSON response
2019-03-07 14:30:47,131 INFO  In the process of generating verify response in HTML
2019-03-07 14:30:47,238 INFO  Successfully generated verify response in HTML
2019-03-07 14:30:47,238 INFO  Successfully processed the response from service
2019-03-07 14:31:14,289 INFO  Setting request parameters for VerifySolution
2019-03-07 14:31:14,289 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 14:31:14,289 INFO  Starting to parse the user solution
2019-03-07 14:31:14,290 INFO  Displaying user solution
2019-03-07 14:31:14,330 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Exer-8\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\nclass Juggler:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def juggles(self):\r\n        \r\n        #write the code to make the juggler juggle\r\n        if((self.__name.lower()==\"Jack Bremlov\" or self.__name.lower()==\"Anthony Gatto\") and (JugglingItem.get_name()==\"knives\" or JugglingItem.get_name()==\"balls\")):\r\n            return True\r\n        else:\r\n            return False   \r\n\r\nclass JugglingItem:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n    \r\nj1 = Juggler(\"Jack Bremlov\")\r\nj2=Juggler(\"Anthony Gatto\")\r\ni1= JugglingItem(\"knives\")\r\ni2= JugglingItem(\"balls\")\r\n","asgnmtId":"8","SolutionFileName":"Excer8.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-07 14:31:14,330 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 14:31:14,330 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 14:31:14,330 INFO  Invoking the service to verify the user solution
2019-03-07 14:31:14,330 INFO  Time before invoking service:Thu Mar 07 14:31:14 IST 2019
2019-03-07 14:31:14,330 INFO  Initialising service address for VerifySolution
2019-03-07 14:31:14,331 INFO  Time before invoking service In SUPER:Thu Mar 07 14:31:14 IST 2019
2019-03-07 14:31:15,142 INFO  Time after invoking service In SUPER:Thu Mar 07 14:31:15 IST 2019
2019-03-07 14:31:15,143 INFO  Service responded successfully with required details
2019-03-07 14:31:15,143 INFO  Time after invoking service:Thu Mar 07 14:31:15 IST 2019
2019-03-07 14:31:15,143 INFO  User solution successfully verified
2019-03-07 14:31:15,143 INFO  Processing the response from verify service
2019-03-07 14:31:15,144 INFO  Starting to parse JSON response
2019-03-07 14:31:15,146 INFO  Successfully parsed JSON response
2019-03-07 14:31:15,146 INFO  In the process of generating verify response in HTML
2019-03-07 14:31:15,215 INFO  Successfully generated verify response in HTML
2019-03-07 14:31:15,216 INFO  Successfully processed the response from service
2019-03-07 14:36:12,966 INFO  Setting request parameters for VerifySolution
2019-03-07 14:36:12,967 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 14:36:12,967 INFO  Starting to parse the user solution
2019-03-07 14:36:12,967 INFO  Displaying user solution
2019-03-07 14:36:13,024 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Exer-8\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\nclass Juggler:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def juggles(self):\r\n        \r\n        #write the code to make the juggler juggle\r\n        if((self.__name.lower()==\"Jack Bremlov\" or self.__name.lower()==\"Anthony Gatto\") and (JugglingItem.get_name()==\"knives\" or JugglingItem.get_name()==\"balls\")):\r\n            return (Juggler.__name, \" is juggling with \", JugglingItem.__name)\r\n        else:\r\n            return False   \r\n\r\nclass JugglingItem:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n    \r\nj1 = Juggler(\"Jack Bremlov\")\r\nj2=Juggler(\"Anthony Gatto\")\r\ni1= JugglingItem(\"knives\")\r\ni2= JugglingItem(\"balls\")\r\n","asgnmtId":"8","SolutionFileName":"Excer8.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-07 14:36:13,025 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 14:36:13,025 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 14:36:13,025 INFO  Invoking the service to verify the user solution
2019-03-07 14:36:13,026 INFO  Time before invoking service:Thu Mar 07 14:36:13 IST 2019
2019-03-07 14:36:13,026 INFO  Initialising service address for VerifySolution
2019-03-07 14:36:13,026 INFO  Time before invoking service In SUPER:Thu Mar 07 14:36:13 IST 2019
2019-03-07 14:36:13,998 INFO  Time after invoking service In SUPER:Thu Mar 07 14:36:13 IST 2019
2019-03-07 14:36:13,998 INFO  Service responded successfully with required details
2019-03-07 14:36:13,998 INFO  Time after invoking service:Thu Mar 07 14:36:13 IST 2019
2019-03-07 14:36:13,999 INFO  User solution successfully verified
2019-03-07 14:36:13,999 INFO  Processing the response from verify service
2019-03-07 14:36:14,003 INFO  Starting to parse JSON response
2019-03-07 14:36:14,008 INFO  Successfully parsed JSON response
2019-03-07 14:36:14,008 INFO  In the process of generating verify response in HTML
2019-03-07 14:36:14,091 INFO  Successfully generated verify response in HTML
2019-03-07 14:36:14,091 INFO  Successfully processed the response from service
2019-03-07 14:37:32,637 INFO  Setting request parameters for VerifySolution
2019-03-07 14:37:32,637 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 14:37:32,637 INFO  Starting to parse the user solution
2019-03-07 14:37:32,638 INFO  Displaying user solution
2019-03-07 14:37:32,689 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Exer-8\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\nclass Juggler:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def juggles(self):\r\n        \r\n        #write the code to make the juggler juggle\r\n        if((self.__name.lower()==\"jack bremlov\" or self.__name.lower()==\"anthony gatto\") and (JugglingItem.get_name().lower()==\"knives\" or JugglingItem.get_name().lower()==\"balls\")):\r\n            return (Juggler.__name, \" is juggling with \", JugglingItem.__name)\r\n        else:\r\n            return False   \r\n\r\nclass JugglingItem:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n    \r\nj1 = Juggler(\"Jack Bremlov\")\r\nj2=Juggler(\"Anthony Gatto\")\r\ni1= JugglingItem(\"knives\")\r\ni2= JugglingItem(\"balls\")\r\n","asgnmtId":"8","SolutionFileName":"Excer8.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-07 14:37:32,690 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 14:37:32,690 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 14:37:32,690 INFO  Invoking the service to verify the user solution
2019-03-07 14:37:32,691 INFO  Time before invoking service:Thu Mar 07 14:37:32 IST 2019
2019-03-07 14:37:32,691 INFO  Initialising service address for VerifySolution
2019-03-07 14:37:32,692 INFO  Time before invoking service In SUPER:Thu Mar 07 14:37:32 IST 2019
2019-03-07 14:37:33,600 INFO  Time after invoking service In SUPER:Thu Mar 07 14:37:33 IST 2019
2019-03-07 14:37:33,601 INFO  Service responded successfully with required details
2019-03-07 14:37:33,601 INFO  Time after invoking service:Thu Mar 07 14:37:33 IST 2019
2019-03-07 14:37:33,601 INFO  User solution successfully verified
2019-03-07 14:37:33,602 INFO  Processing the response from verify service
2019-03-07 14:37:33,605 INFO  Starting to parse JSON response
2019-03-07 14:37:33,608 INFO  Successfully parsed JSON response
2019-03-07 14:37:33,608 INFO  In the process of generating verify response in HTML
2019-03-07 14:37:33,688 INFO  Successfully generated verify response in HTML
2019-03-07 14:37:33,688 INFO  Successfully processed the response from service
2019-03-07 14:38:00,678 INFO  Setting request parameters for VerifySolution
2019-03-07 14:38:00,678 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 14:38:00,678 INFO  Starting to parse the user solution
2019-03-07 14:38:00,679 INFO  Displaying user solution
2019-03-07 14:38:00,730 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Exer-8\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\nclass Juggler:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def juggles(self):\r\n        \r\n        #write the code to make the juggler juggle\r\n        if((self.__name.lower()==\"jack bremlov\" or self.__name.lower()==\"anthony gatto\") and (JugglingItem.get_name().lower()==\"knives\" or JugglingItem.get_name().lower()==\"balls\")):\r\n            return (Juggler.__name, \" is juggling with \", JugglingItem.__name)\r\n        else:\r\n            return False   \r\n\r\nclass JugglingItem:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n    \r\nj1 = Juggler(\"Jack Bremlov\")\r\nj2=Juggler(\"Anthony Gatto\")\r\ni1= JugglingItem(\"knives\")\r\ni2= JugglingItem(\"balls\")\r\n","asgnmtId":"8","SolutionFileName":"Excer8.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-07 14:38:00,730 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 14:38:00,731 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 14:38:00,731 INFO  Invoking the service to verify the user solution
2019-03-07 14:38:00,731 INFO  Time before invoking service:Thu Mar 07 14:38:00 IST 2019
2019-03-07 14:38:00,731 INFO  Initialising service address for VerifySolution
2019-03-07 14:38:00,732 INFO  Time before invoking service In SUPER:Thu Mar 07 14:38:00 IST 2019
2019-03-07 14:38:01,655 INFO  Time after invoking service In SUPER:Thu Mar 07 14:38:01 IST 2019
2019-03-07 14:38:01,655 INFO  Service responded successfully with required details
2019-03-07 14:38:01,656 INFO  Time after invoking service:Thu Mar 07 14:38:01 IST 2019
2019-03-07 14:38:01,656 INFO  User solution successfully verified
2019-03-07 14:38:01,657 INFO  Processing the response from verify service
2019-03-07 14:38:01,659 INFO  Starting to parse JSON response
2019-03-07 14:38:01,663 INFO  Successfully parsed JSON response
2019-03-07 14:38:01,663 INFO  In the process of generating verify response in HTML
2019-03-07 14:38:01,754 INFO  Successfully generated verify response in HTML
2019-03-07 14:38:01,754 INFO  Successfully processed the response from service
2019-03-07 14:39:09,010 INFO  Setting request parameters for VerifySolution
2019-03-07 14:39:09,011 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 14:39:09,011 INFO  Starting to parse the user solution
2019-03-07 14:39:09,012 INFO  Displaying user solution
2019-03-07 14:39:09,059 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Exer-8\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\nclass Juggler:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def juggles(self):\r\n        \r\n        #write the code to make the juggler juggle\r\n        if((self.__name.lower()==\"jack bremlov\" or self.__name.lower()==\"anthony gatto\") and (JugglingItem.get_name().lower()==\"knives\" or JugglingItem.get_name().lower()==\"balls\")):\r\n            return (Juggler.__name, \" is juggling with \", JugglingItem.__name)\r\n        else:\r\n            return -1   \r\n\r\nclass JugglingItem:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n    \r\nj1 = Juggler(\"Jack Bremlov\")\r\nj2=Juggler(\"Anthony Gatto\")\r\ni1= JugglingItem(\"knives\")\r\ni2= JugglingItem(\"balls\")\r\nprint(Juggler.juggles())\r\n","asgnmtId":"8","SolutionFileName":"Excer8.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-07 14:39:09,059 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 14:39:09,059 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 14:39:09,059 INFO  Invoking the service to verify the user solution
2019-03-07 14:39:09,060 INFO  Time before invoking service:Thu Mar 07 14:39:09 IST 2019
2019-03-07 14:39:09,060 INFO  Initialising service address for VerifySolution
2019-03-07 14:39:09,061 INFO  Time before invoking service In SUPER:Thu Mar 07 14:39:09 IST 2019
2019-03-07 14:39:09,941 INFO  Time after invoking service In SUPER:Thu Mar 07 14:39:09 IST 2019
2019-03-07 14:39:09,941 INFO  Service responded successfully with required details
2019-03-07 14:39:09,941 INFO  Time after invoking service:Thu Mar 07 14:39:09 IST 2019
2019-03-07 14:39:09,941 INFO  User solution successfully verified
2019-03-07 14:39:09,941 INFO  Processing the response from verify service
2019-03-07 14:39:09,946 INFO  Starting to parse JSON response
2019-03-07 14:39:09,949 INFO  Successfully parsed JSON response
2019-03-07 14:39:09,949 INFO  In the process of generating verify response in HTML
2019-03-07 14:39:10,039 INFO  Successfully generated verify response in HTML
2019-03-07 14:39:10,039 INFO  Successfully processed the response from service
2019-03-07 14:53:55,898 INFO  Setting request parameters for VerifySolution
2019-03-07 14:53:55,898 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 14:53:55,898 INFO  Starting to parse the user solution
2019-03-07 14:53:55,899 INFO  Displaying user solution
2019-03-07 14:53:55,960 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Exer-8\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\nclass Juggler:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def juggles(self):\r\n        \r\n        #write the code to make the juggler juggle\r\n        if((self.__name.lower()==\"jack bremlov\" or self.__name.lower()==\"anthony gatto\") and (JugglingItem.get_name().lower()==\"knives\" or JugglingItem.get_name().lower()==\"balls\")):\r\n            return (Juggler.__name, \" is juggling with \", JugglingItem.__name)\r\n        else:\r\n            return -1   \r\n\r\nclass JugglingItem:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n    \r\nj1 = Juggler(\"Jack Bremlov\")\r\nj2=Juggler(\"Anthony Gatto\")\r\ni1= JugglingItem(\"knives\")\r\ni2= JugglingItem(\"balls\")\r\n\r\n","asgnmtId":"8","SolutionFileName":"Excer8.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-07 14:53:55,961 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 14:53:55,961 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 14:53:55,961 INFO  Invoking the service to verify the user solution
2019-03-07 14:53:55,962 INFO  Time before invoking service:Thu Mar 07 14:53:55 IST 2019
2019-03-07 14:53:55,962 INFO  Initialising service address for VerifySolution
2019-03-07 14:53:55,962 INFO  Time before invoking service In SUPER:Thu Mar 07 14:53:55 IST 2019
2019-03-07 14:53:56,783 INFO  Time after invoking service In SUPER:Thu Mar 07 14:53:56 IST 2019
2019-03-07 14:53:56,783 INFO  Service responded successfully with required details
2019-03-07 14:53:56,784 INFO  Time after invoking service:Thu Mar 07 14:53:56 IST 2019
2019-03-07 14:53:56,784 INFO  User solution successfully verified
2019-03-07 14:53:56,785 INFO  Processing the response from verify service
2019-03-07 14:53:56,789 INFO  Starting to parse JSON response
2019-03-07 14:53:56,794 INFO  Successfully parsed JSON response
2019-03-07 14:53:56,794 INFO  In the process of generating verify response in HTML
2019-03-07 14:53:56,897 INFO  Successfully generated verify response in HTML
2019-03-07 14:53:56,897 INFO  Successfully processed the response from service
2019-03-07 15:12:17,291 INFO  Setting request parameters for VerifySolution
2019-03-07 15:12:17,292 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 15:12:17,292 INFO  Starting to parse the user solution
2019-03-07 15:12:17,292 INFO  Displaying user solution
2019-03-07 15:12:17,329 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Exer-8\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\nclass Juggler:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def juggles(self):\r\n        \r\n        #write the code to make the juggler juggle\r\n        if((self.__name.lower()==\"jack bremlov\" or self.__name.lower()==\"anthony gatto\") and (JugglingItem.get_name().lower()==\"knives\" or JugglingItem.get_name().lower()==\"balls\")):\r\n            return (Juggler.__name, \" is juggling with \", JugglingItem.__name)\r\n        else:\r\n            return -1   \r\n\r\nclass JugglingItem:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n    \r\nj1 = Juggler(\"Jack Bremlov\")\r\nj2=Juggler(\"Anthony Gatto\")\r\ni1= JugglingItem(\"knives\")\r\ni2= JugglingItem(\"balls\")\r\n\r\n","asgnmtId":"8","SolutionFileName":"Excer8.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-07 15:12:17,329 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 15:12:17,329 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 15:12:17,329 INFO  Invoking the service to verify the user solution
2019-03-07 15:12:17,330 INFO  Time before invoking service:Thu Mar 07 15:12:17 IST 2019
2019-03-07 15:12:17,330 INFO  Initialising service address for VerifySolution
2019-03-07 15:12:17,331 INFO  Time before invoking service In SUPER:Thu Mar 07 15:12:17 IST 2019
2019-03-07 15:12:18,271 INFO  Time after invoking service In SUPER:Thu Mar 07 15:12:18 IST 2019
2019-03-07 15:12:18,272 INFO  Service responded successfully with required details
2019-03-07 15:12:18,272 INFO  Time after invoking service:Thu Mar 07 15:12:18 IST 2019
2019-03-07 15:12:18,272 INFO  User solution successfully verified
2019-03-07 15:12:18,273 INFO  Processing the response from verify service
2019-03-07 15:12:18,275 INFO  Starting to parse JSON response
2019-03-07 15:12:18,278 INFO  Successfully parsed JSON response
2019-03-07 15:12:18,278 INFO  In the process of generating verify response in HTML
2019-03-07 15:12:18,369 INFO  Successfully generated verify response in HTML
2019-03-07 15:12:18,369 INFO  Successfully processed the response from service
2019-03-07 15:15:29,182 INFO  Setting request parameters for VerifySolution
2019-03-07 15:15:29,183 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 15:15:29,183 INFO  Starting to parse the user solution
2019-03-07 15:15:29,184 INFO  Displaying user solution
2019-03-07 15:15:29,255 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Exer-8\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\nclass Juggler:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def juggles(self):\r\n        \r\n        #write the code to make the juggler juggle\r\n        if(self.__name.lower()==\"jack bremlov\"  and JugglingItem.get_name().lower()==\"knives\"):\r\n            return (Juggler.__name, \" is juggling with \", JugglingItem.get_name)\r\n        elif(self.__name.lower()==\"anthony gatto\" and JugglingItem.get_name().lower()==\"balls\"):\r\n            return (Juggler.__name, \" is juggling with \", JugglingItem.get_name)\r\n        else:\r\n            return -1   \r\n\r\nclass JugglingItem:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n    \r\nj1 = Juggler(\"Jack Bremlov\")\r\nj2=Juggler(\"Anthony Gatto\")\r\ni1= JugglingItem(\"knives\")\r\ni2= JugglingItem(\"balls\")\r\n\r\n","asgnmtId":"8","SolutionFileName":"Excer8.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-07 15:15:29,255 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 15:15:29,255 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 15:15:29,255 INFO  Invoking the service to verify the user solution
2019-03-07 15:15:29,256 INFO  Time before invoking service:Thu Mar 07 15:15:29 IST 2019
2019-03-07 15:15:29,256 INFO  Initialising service address for VerifySolution
2019-03-07 15:15:29,257 INFO  Time before invoking service In SUPER:Thu Mar 07 15:15:29 IST 2019
2019-03-07 15:15:30,204 INFO  Time after invoking service In SUPER:Thu Mar 07 15:15:30 IST 2019
2019-03-07 15:15:30,205 INFO  Service responded successfully with required details
2019-03-07 15:15:30,205 INFO  Time after invoking service:Thu Mar 07 15:15:30 IST 2019
2019-03-07 15:15:30,205 INFO  User solution successfully verified
2019-03-07 15:15:30,206 INFO  Processing the response from verify service
2019-03-07 15:15:30,212 INFO  Starting to parse JSON response
2019-03-07 15:15:30,216 INFO  Successfully parsed JSON response
2019-03-07 15:15:30,216 INFO  In the process of generating verify response in HTML
2019-03-07 15:15:30,318 INFO  Successfully generated verify response in HTML
2019-03-07 15:15:30,319 INFO  Successfully processed the response from service
2019-03-07 15:23:14,401 INFO  Setting request parameters for VerifySolution
2019-03-07 15:23:14,402 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 15:23:14,402 INFO  Starting to parse the user solution
2019-03-07 15:23:14,403 INFO  Displaying user solution
2019-03-07 15:23:14,468 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Exer-8\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\nclass Juggler:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def juggles(self):\r\n        \r\n        #write the code to make the juggler juggle\r\n        Juggling_Item=JugglingItem()\r\n        if(self.__name.lower()==\"jack bremlov\"  and Juggling_Item.lower()==\"knives\"):\r\n            return (Juggler.__name, \" is juggling with \", JugglingItem.get_name)\r\n        elif(self.__name.lower()==\"anthony gatto\" and Juggling_Item.lower()==\"balls\"):\r\n            return (Juggler.__name, \" is juggling with \", Juggling_Item)\r\n        else:\r\n            return -1   \r\n\r\nclass JugglingItem:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n    \r\nj1 = Juggler(\"Jack Bremlov\")\r\nj2=Juggler(\"Anthony Gatto\")\r\ni1= JugglingItem(\"knives\")\r\ni2= JugglingItem(\"balls\")\r\n\r\n","asgnmtId":"8","SolutionFileName":"Excer8.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-07 15:23:14,469 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 15:23:14,469 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 15:23:14,469 INFO  Invoking the service to verify the user solution
2019-03-07 15:23:14,469 INFO  Time before invoking service:Thu Mar 07 15:23:14 IST 2019
2019-03-07 15:23:14,469 INFO  Initialising service address for VerifySolution
2019-03-07 15:23:14,470 INFO  Time before invoking service In SUPER:Thu Mar 07 15:23:14 IST 2019
2019-03-07 15:23:15,543 INFO  Time after invoking service In SUPER:Thu Mar 07 15:23:15 IST 2019
2019-03-07 15:23:15,543 INFO  Service responded successfully with required details
2019-03-07 15:23:15,544 INFO  Time after invoking service:Thu Mar 07 15:23:15 IST 2019
2019-03-07 15:23:15,544 INFO  User solution successfully verified
2019-03-07 15:23:15,544 INFO  Processing the response from verify service
2019-03-07 15:23:15,546 INFO  Starting to parse JSON response
2019-03-07 15:23:15,548 INFO  Successfully parsed JSON response
2019-03-07 15:23:15,549 INFO  In the process of generating verify response in HTML
2019-03-07 15:23:15,626 INFO  Successfully generated verify response in HTML
2019-03-07 15:23:15,627 INFO  Successfully processed the response from service
2019-03-07 15:24:42,116 INFO  Setting request parameters for VerifySolution
2019-03-07 15:24:42,117 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 15:24:42,117 INFO  Starting to parse the user solution
2019-03-07 15:24:42,117 INFO  Displaying user solution
2019-03-07 15:24:42,183 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Exer-8\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\nclass Juggler:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def juggles(self,JugglingItem):\r\n        \r\n        #write the code to make the juggler juggle\r\n        \r\n        if(self.__name.lower()==\"jack bremlov\"  and Juggling_Item.lower()==\"knives\"):\r\n            return (Juggler.__name, \" is juggling with \", JugglingItem.get_name)\r\n        elif(self.__name.lower()==\"anthony gatto\" and Juggling_Item.lower()==\"balls\"):\r\n            return (Juggler.__name, \" is juggling with \", Juggling_Item)\r\n        else:\r\n            return -1   \r\n\r\nclass JugglingItem:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n    \r\nj1 = Juggler(\"Jack Bremlov\")\r\nj2=Juggler(\"Anthony Gatto\")\r\ni1= JugglingItem(\"knives\")\r\ni2= JugglingItem(\"balls\")\r\n\r\n","asgnmtId":"8","SolutionFileName":"Excer8.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-07 15:24:42,184 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 15:24:42,184 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 15:24:42,184 INFO  Invoking the service to verify the user solution
2019-03-07 15:24:42,185 INFO  Time before invoking service:Thu Mar 07 15:24:42 IST 2019
2019-03-07 15:24:42,185 INFO  Initialising service address for VerifySolution
2019-03-07 15:24:42,193 INFO  Time before invoking service In SUPER:Thu Mar 07 15:24:42 IST 2019
2019-03-07 15:24:43,124 INFO  Time after invoking service In SUPER:Thu Mar 07 15:24:43 IST 2019
2019-03-07 15:24:43,125 INFO  Service responded successfully with required details
2019-03-07 15:24:43,125 INFO  Time after invoking service:Thu Mar 07 15:24:43 IST 2019
2019-03-07 15:24:43,125 INFO  User solution successfully verified
2019-03-07 15:24:43,125 INFO  Processing the response from verify service
2019-03-07 15:24:43,128 INFO  Starting to parse JSON response
2019-03-07 15:24:43,133 INFO  Successfully parsed JSON response
2019-03-07 15:24:43,134 INFO  In the process of generating verify response in HTML
2019-03-07 15:24:43,253 INFO  Successfully generated verify response in HTML
2019-03-07 15:24:43,254 INFO  Successfully processed the response from service
2019-03-07 15:25:46,418 INFO  Setting request parameters for VerifySolution
2019-03-07 15:25:46,418 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 15:25:46,418 INFO  Starting to parse the user solution
2019-03-07 15:25:46,418 INFO  Displaying user solution
2019-03-07 15:25:46,458 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Exer-8\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\nclass Juggler:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def juggles(self,Juggling_Item):\r\n        \r\n        #write the code to make the juggler juggle\r\n        \r\n        if(self.__name.lower()==\"jack bremlov\"  and Juggling_Item.lower()==\"knives\"):\r\n            return (Juggler.__name, \" is juggling with \", JugglingItem.get_name)\r\n        elif(self.__name.lower()==\"anthony gatto\" and Juggling_Item.lower()==\"balls\"):\r\n            return (Juggler.__name, \" is juggling with \", Juggling_Item)\r\n        else:\r\n            return -1   \r\n\r\nclass JugglingItem:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n    \r\nj1 = Juggler(\"Jack Bremlov\")\r\nj2=Juggler(\"Anthony Gatto\")\r\ni1= JugglingItem(\"knives\")\r\ni2= JugglingItem(\"balls\")\r\n\r\n","asgnmtId":"8","SolutionFileName":"Excer8.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-07 15:25:46,458 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 15:25:46,459 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 15:25:46,459 INFO  Invoking the service to verify the user solution
2019-03-07 15:25:46,459 INFO  Time before invoking service:Thu Mar 07 15:25:46 IST 2019
2019-03-07 15:25:46,459 INFO  Initialising service address for VerifySolution
2019-03-07 15:25:46,461 INFO  Time before invoking service In SUPER:Thu Mar 07 15:25:46 IST 2019
2019-03-07 15:25:47,375 INFO  Time after invoking service In SUPER:Thu Mar 07 15:25:47 IST 2019
2019-03-07 15:25:47,375 INFO  Service responded successfully with required details
2019-03-07 15:25:47,376 INFO  Time after invoking service:Thu Mar 07 15:25:47 IST 2019
2019-03-07 15:25:47,376 INFO  User solution successfully verified
2019-03-07 15:25:47,376 INFO  Processing the response from verify service
2019-03-07 15:25:47,377 INFO  Starting to parse JSON response
2019-03-07 15:25:47,381 INFO  Successfully parsed JSON response
2019-03-07 15:25:47,381 INFO  In the process of generating verify response in HTML
2019-03-07 15:25:47,457 INFO  Successfully generated verify response in HTML
2019-03-07 15:25:47,457 INFO  Successfully processed the response from service
2019-03-07 15:26:18,200 INFO  Setting request parameters for VerifySolution
2019-03-07 15:26:18,200 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 15:26:18,200 INFO  Starting to parse the user solution
2019-03-07 15:26:18,202 INFO  Displaying user solution
2019-03-07 15:26:18,247 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Exer-8\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\nclass Juggler:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def juggles(self):\r\n        \r\n        #write the code to make the juggler juggle\r\n        if(self.__name.lower()==\"jack bremlov\"  and JugglingItem.get_name().lower()==\"knives\"):\r\n            return (Juggler.__name, \" is juggling with \", JugglingItem.get_name)\r\n        elif(self.__name.lower()==\"anthony gatto\" and JugglingItem.get_name().lower()==\"balls\"):\r\n            return (Juggler.__name, \" is juggling with \", JugglingItem.get_name)\r\n        else:\r\n            return -1   \r\n\r\nclass JugglingItem:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n    \r\nj1 = Juggler(\"Jack Bremlov\")\r\nj2=Juggler(\"Anthony Gatto\")\r\ni1= JugglingItem(\"knives\")\r\ni2= JugglingItem(\"balls\")\r\n\r\n","asgnmtId":"8","SolutionFileName":"Excer8.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-07 15:26:18,248 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 15:26:18,248 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 15:26:18,248 INFO  Invoking the service to verify the user solution
2019-03-07 15:26:18,249 INFO  Time before invoking service:Thu Mar 07 15:26:18 IST 2019
2019-03-07 15:26:18,249 INFO  Initialising service address for VerifySolution
2019-03-07 15:26:18,250 INFO  Time before invoking service In SUPER:Thu Mar 07 15:26:18 IST 2019
2019-03-07 15:26:19,245 INFO  Time after invoking service In SUPER:Thu Mar 07 15:26:19 IST 2019
2019-03-07 15:26:19,245 INFO  Service responded successfully with required details
2019-03-07 15:26:19,245 INFO  Time after invoking service:Thu Mar 07 15:26:19 IST 2019
2019-03-07 15:26:19,246 INFO  User solution successfully verified
2019-03-07 15:26:19,246 INFO  Processing the response from verify service
2019-03-07 15:26:19,248 INFO  Starting to parse JSON response
2019-03-07 15:26:19,252 INFO  Successfully parsed JSON response
2019-03-07 15:26:19,252 INFO  In the process of generating verify response in HTML
2019-03-07 15:26:19,394 INFO  Successfully generated verify response in HTML
2019-03-07 15:26:19,394 INFO  Successfully processed the response from service
2019-03-07 15:27:25,876 INFO  Setting request parameters for VerifySolution
2019-03-07 15:27:25,876 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 15:27:25,876 INFO  Starting to parse the user solution
2019-03-07 15:27:25,877 INFO  Displaying user solution
2019-03-07 15:27:25,920 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Exer-8\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\nclass Juggler:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def juggles(self):\r\n        \r\n        #write the code to make the juggler juggle\r\n        if(self.__name.lower()==\"jack bremlov\"  and JugglingItem.get_name().lower()==\"knives\"):\r\n            return (Juggler.__name, \" is juggling with \", JugglingItem.get_name)\r\n        elif(self.__name.lower()==\"anthony gatto\" and JugglingItem.get_name().lower()==\"balls\"):\r\n            return (Juggler.__name, \" is juggling with \", JugglingItem.get_name)\r\n        else:\r\n            return -1   \r\n\r\nclass JugglingItem:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n    \r\nj1 = Juggler(\"Jack Bremlov\")\r\nj2=Juggler(\"Anthony Gatto\")\r\ni1= JugglingItem(\"knives\")\r\ni2= JugglingItem(\"balls\")\r\n\r\n","asgnmtId":"8","SolutionFileName":"Excer8.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-07 15:27:25,921 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 15:27:25,921 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 15:27:25,921 INFO  Invoking the service to verify the user solution
2019-03-07 15:27:25,922 INFO  Time before invoking service:Thu Mar 07 15:27:25 IST 2019
2019-03-07 15:27:25,922 INFO  Initialising service address for VerifySolution
2019-03-07 15:27:25,922 INFO  Time before invoking service In SUPER:Thu Mar 07 15:27:25 IST 2019
2019-03-07 15:27:26,802 INFO  Time after invoking service In SUPER:Thu Mar 07 15:27:26 IST 2019
2019-03-07 15:27:26,803 INFO  Service responded successfully with required details
2019-03-07 15:27:26,803 INFO  Time after invoking service:Thu Mar 07 15:27:26 IST 2019
2019-03-07 15:27:26,803 INFO  User solution successfully verified
2019-03-07 15:27:26,804 INFO  Processing the response from verify service
2019-03-07 15:27:26,806 INFO  Starting to parse JSON response
2019-03-07 15:27:26,808 INFO  Successfully parsed JSON response
2019-03-07 15:27:26,808 INFO  In the process of generating verify response in HTML
2019-03-07 15:27:26,903 INFO  Successfully generated verify response in HTML
2019-03-07 15:27:26,904 INFO  Successfully processed the response from service
2019-03-07 15:32:32,355 INFO  Setting request parameters for VerifySolution
2019-03-07 15:32:32,355 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 15:32:32,355 INFO  Starting to parse the user solution
2019-03-07 15:32:32,356 INFO  Displaying user solution
2019-03-07 15:32:32,391 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Exer-8\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\nclass Juggler:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def juggles(self):\r\n        \r\n        #write the code to make the juggler juggle\r\n        if(self.__name.lower()==\"jack bremlov\"  and JugglingItem.get_name().lower()==\"knives\"):\r\n            return (Juggler.__name, \" is juggling with \", JugglingItem.get_name)\r\n        elif(self.__name.lower()==\"anthony gatto\" and JugglingItem.get_name().lower()==\"balls\"):\r\n            return (Juggler.__name, \" is juggling with \", JugglingItem.get_name)\r\n        else:\r\n            return -1   \r\n\r\nclass JugglingItem:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n    \r\nj1 = Juggler(\"Jack Bremlov\")\r\nj2=Juggler(\"Anthony Gatto\")\r\ni1= JugglingItem(\"knives\")\r\ni2= JugglingItem(\"balls\")\r\n\r\n","asgnmtId":"8","SolutionFileName":"Excer8.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-07 15:32:32,392 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 15:32:32,393 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 15:32:32,393 INFO  Invoking the service to verify the user solution
2019-03-07 15:32:32,393 INFO  Time before invoking service:Thu Mar 07 15:32:32 IST 2019
2019-03-07 15:32:32,393 INFO  Initialising service address for VerifySolution
2019-03-07 15:32:32,394 INFO  Time before invoking service In SUPER:Thu Mar 07 15:32:32 IST 2019
2019-03-07 15:32:33,249 INFO  Time after invoking service In SUPER:Thu Mar 07 15:32:33 IST 2019
2019-03-07 15:32:33,249 INFO  Service responded successfully with required details
2019-03-07 15:32:33,250 INFO  Time after invoking service:Thu Mar 07 15:32:33 IST 2019
2019-03-07 15:32:33,250 INFO  User solution successfully verified
2019-03-07 15:32:33,250 INFO  Processing the response from verify service
2019-03-07 15:32:33,251 INFO  Starting to parse JSON response
2019-03-07 15:32:33,254 INFO  Successfully parsed JSON response
2019-03-07 15:32:33,255 INFO  In the process of generating verify response in HTML
2019-03-07 15:32:33,335 INFO  Successfully generated verify response in HTML
2019-03-07 15:32:33,335 INFO  Successfully processed the response from service
2019-03-07 15:32:38,883 INFO  Setting request parameters for VerifySolution
2019-03-07 15:32:38,883 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 15:32:38,883 INFO  Starting to parse the user solution
2019-03-07 15:32:38,885 INFO  Displaying user solution
2019-03-07 15:32:38,924 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Exer-8\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\nclass Juggler:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def juggles(self,i1):\r\n        \r\n        #write the code to make the juggler juggle\r\n        if(self.__name.lower()==\"jack bremlov\"  and JugglingItem.get_name().lower()==\"knives\"):\r\n            return (Juggler.__name, \" is juggling with \", JugglingItem.get_name)\r\n        elif(self.__name.lower()==\"anthony gatto\" and JugglingItem.get_name().lower()==\"balls\"):\r\n            return (Juggler.__name, \" is juggling with \", JugglingItem.get_name)\r\n        else:\r\n            return -1   \r\n\r\nclass JugglingItem:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n    \r\nj1 = Juggler(\"Jack Bremlov\")\r\nj2=Juggler(\"Anthony Gatto\")\r\ni1= JugglingItem(\"knives\")\r\ni2= JugglingItem(\"balls\")\r\n\r\n","asgnmtId":"8","SolutionFileName":"Excer8.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-07 15:32:38,924 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 15:32:38,924 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 15:32:38,924 INFO  Invoking the service to verify the user solution
2019-03-07 15:32:38,925 INFO  Time before invoking service:Thu Mar 07 15:32:38 IST 2019
2019-03-07 15:32:38,925 INFO  Initialising service address for VerifySolution
2019-03-07 15:32:38,926 INFO  Time before invoking service In SUPER:Thu Mar 07 15:32:38 IST 2019
2019-03-07 15:32:39,819 INFO  Time after invoking service In SUPER:Thu Mar 07 15:32:39 IST 2019
2019-03-07 15:32:39,820 INFO  Service responded successfully with required details
2019-03-07 15:32:39,820 INFO  Time after invoking service:Thu Mar 07 15:32:39 IST 2019
2019-03-07 15:32:39,820 INFO  User solution successfully verified
2019-03-07 15:32:39,820 INFO  Processing the response from verify service
2019-03-07 15:32:39,822 INFO  Starting to parse JSON response
2019-03-07 15:32:39,824 INFO  Successfully parsed JSON response
2019-03-07 15:32:39,824 INFO  In the process of generating verify response in HTML
2019-03-07 15:32:39,908 INFO  Successfully generated verify response in HTML
2019-03-07 15:32:39,908 INFO  Successfully processed the response from service
2019-03-07 15:33:27,819 INFO  Setting request parameters for VerifySolution
2019-03-07 15:33:27,820 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 15:33:27,820 INFO  Starting to parse the user solution
2019-03-07 15:33:27,820 INFO  Displaying user solution
2019-03-07 15:33:27,858 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Exer-8\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\nclass Juggler:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def juggles(self,i1):\r\n        \r\n        #write the code to make the juggler juggle\r\n        if(self.__name.lower()==\"jack bremlov\"  and JugglingItem.get_name().lower()==\"knives\"):\r\n            return (Juggler.__name, \" is juggling with \", JugglingItem.get_name)\r\n        elif(self.__name.lower()==\"anthony gatto\" and JugglingItem.get_name().lower()==\"balls\"):\r\n            return (Juggler.__name, \" is juggling with \", JugglingItem.get_name)\r\n        else:\r\n            return -1   \r\n\r\nclass JugglingItem:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n    \r\nj1 = Juggler(\"Jack Bremlov\")\r\nj2=Juggler(\"Anthony Gatto\")\r\ni1= JugglingItem(\"knives\")\r\ni2= JugglingItem(\"balls\")\r\n\r\n","asgnmtId":"8","SolutionFileName":"Excer8.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-07 15:33:27,859 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 15:33:27,859 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 15:33:27,859 INFO  Invoking the service to verify the user solution
2019-03-07 15:33:27,860 INFO  Time before invoking service:Thu Mar 07 15:33:27 IST 2019
2019-03-07 15:33:27,860 INFO  Initialising service address for VerifySolution
2019-03-07 15:33:27,860 INFO  Time before invoking service In SUPER:Thu Mar 07 15:33:27 IST 2019
2019-03-07 15:33:28,738 INFO  Time after invoking service In SUPER:Thu Mar 07 15:33:28 IST 2019
2019-03-07 15:33:28,738 INFO  Service responded successfully with required details
2019-03-07 15:33:28,738 INFO  Time after invoking service:Thu Mar 07 15:33:28 IST 2019
2019-03-07 15:33:28,738 INFO  User solution successfully verified
2019-03-07 15:33:28,738 INFO  Processing the response from verify service
2019-03-07 15:33:28,741 INFO  Starting to parse JSON response
2019-03-07 15:33:28,746 INFO  Successfully parsed JSON response
2019-03-07 15:33:28,747 INFO  In the process of generating verify response in HTML
2019-03-07 15:33:28,824 INFO  Successfully generated verify response in HTML
2019-03-07 15:33:28,824 INFO  Successfully processed the response from service
2019-03-07 15:33:40,980 INFO  Setting request parameters for VerifySolution
2019-03-07 15:33:40,980 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 15:33:40,980 INFO  Starting to parse the user solution
2019-03-07 15:33:40,981 INFO  Displaying user solution
2019-03-07 15:33:41,032 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Exer-8\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\nclass Juggler:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def juggles(self,i1):\r\n        \r\n        #write the code to make the juggler juggle\r\n        if(self.__name.lower()==\"jack bremlov\"  and JugglingItem.get_name().lower()==\"knives\"):\r\n            return (Juggler.__name, \" is juggling with \", JugglingItem.get_name)\r\n        elif(self.__name.lower()==\"anthony gatto\" and JugglingItem.get_name().lower()==\"balls\"):\r\n            return (Juggler.__name, \" is juggling with \", JugglingItem.get_name)\r\n        else:\r\n            return -1   \r\n\r\nclass JugglingItem:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n    \r\nj1 = Juggler(\"Jack Bremlov\")\r\nj2=Juggler(\"Anthony Gatto\")\r\ni1= JugglingItem(\"knives\")\r\ni2= JugglingItem(\"balls\")\r\n\r\n","asgnmtId":"8","SolutionFileName":"Excer8.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-07 15:33:41,032 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 15:33:41,032 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 15:33:41,032 INFO  Invoking the service to verify the user solution
2019-03-07 15:33:41,033 INFO  Time before invoking service:Thu Mar 07 15:33:41 IST 2019
2019-03-07 15:33:41,033 INFO  Initialising service address for VerifySolution
2019-03-07 15:33:41,034 INFO  Time before invoking service In SUPER:Thu Mar 07 15:33:41 IST 2019
2019-03-07 15:33:41,853 INFO  Time after invoking service In SUPER:Thu Mar 07 15:33:41 IST 2019
2019-03-07 15:33:41,854 INFO  Service responded successfully with required details
2019-03-07 15:33:41,854 INFO  Time after invoking service:Thu Mar 07 15:33:41 IST 2019
2019-03-07 15:33:41,854 INFO  User solution successfully verified
2019-03-07 15:33:41,855 INFO  Processing the response from verify service
2019-03-07 15:33:41,856 INFO  Starting to parse JSON response
2019-03-07 15:33:41,861 INFO  Successfully parsed JSON response
2019-03-07 15:33:41,861 INFO  In the process of generating verify response in HTML
2019-03-07 15:33:41,949 INFO  Successfully generated verify response in HTML
2019-03-07 15:33:41,949 INFO  Successfully processed the response from service
2019-03-07 15:35:09,434 INFO  Setting request parameters for VerifySolution
2019-03-07 15:35:09,434 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 15:35:09,434 INFO  Starting to parse the user solution
2019-03-07 15:35:09,435 INFO  Displaying user solution
2019-03-07 15:35:09,485 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Exer-8\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\nclass Juggler:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def juggles(self,i1):\r\n        \r\n        #write the code to make the juggler juggle\r\n        if(self.__name.lower()==\"jack bremlov\"  and i1.get_name().lower()==\"knives\"):\r\n            return (Juggler.__name, \" is juggling with \", i1.get_name)\r\n        elif(self.__name.lower()==\"anthony gatto\" and i1.get_name().lower()==\"balls\"):\r\n            return (Juggler.__name, \" is juggling with \", i1.get_name)\r\n        else:\r\n            return -1   \r\n\r\nclass JugglingItem:\r\n    def __init__(self,name):\r\n        self.__name=name\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n    \r\nj1 = Juggler(\"Jack Bremlov\")\r\nj2=Juggler(\"Anthony Gatto\")\r\ni1= JugglingItem(\"knives\")\r\ni2= JugglingItem(\"balls\")\r\n\r\n","asgnmtId":"8","SolutionFileName":"Excer8.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-07 15:35:09,486 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 15:35:09,486 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 15:35:09,486 INFO  Invoking the service to verify the user solution
2019-03-07 15:35:09,486 INFO  Time before invoking service:Thu Mar 07 15:35:09 IST 2019
2019-03-07 15:35:09,487 INFO  Initialising service address for VerifySolution
2019-03-07 15:35:09,487 INFO  Time before invoking service In SUPER:Thu Mar 07 15:35:09 IST 2019
2019-03-07 15:35:10,346 INFO  Time after invoking service In SUPER:Thu Mar 07 15:35:10 IST 2019
2019-03-07 15:35:10,346 INFO  Service responded successfully with required details
2019-03-07 15:35:10,346 INFO  Time after invoking service:Thu Mar 07 15:35:10 IST 2019
2019-03-07 15:35:10,347 INFO  User solution successfully verified
2019-03-07 15:35:10,347 INFO  Processing the response from verify service
2019-03-07 15:35:10,350 INFO  Starting to parse JSON response
2019-03-07 15:35:10,353 INFO  Successfully parsed JSON response
2019-03-07 15:35:10,354 INFO  In the process of generating verify response in HTML
2019-03-07 15:35:10,447 INFO  Successfully generated verify response in HTML
2019-03-07 15:35:10,447 INFO  Successfully processed the response from service
2019-03-07 15:45:46,842 INFO  Setting request parameters for VerifySolution
2019-03-07 15:45:46,842 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 15:45:46,842 INFO  Starting to parse the user solution
2019-03-07 15:45:46,843 INFO  Displaying user solution
2019-03-07 15:45:46,914 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-15\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Parrot:\r\n    counter = 7001\r\n    def __init__(self,name,color):\r\n        self.__name = name\r\n        self.__unique_number = None\r\n        self.__color = color\r\n        \r\n","asgnmtId":"15","SolutionFileName":"Assign15.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 15:45:46,914 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 15:45:46,915 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 15:45:46,915 INFO  Invoking the service to verify the user solution
2019-03-07 15:45:46,916 INFO  Time before invoking service:Thu Mar 07 15:45:46 IST 2019
2019-03-07 15:45:46,916 INFO  Initialising service address for VerifySolution
2019-03-07 15:45:46,918 INFO  Time before invoking service In SUPER:Thu Mar 07 15:45:46 IST 2019
2019-03-07 15:45:47,782 INFO  Time after invoking service In SUPER:Thu Mar 07 15:45:47 IST 2019
2019-03-07 15:45:47,783 INFO  Service responded successfully with required details
2019-03-07 15:45:47,783 INFO  Time after invoking service:Thu Mar 07 15:45:47 IST 2019
2019-03-07 15:45:47,783 INFO  User solution successfully verified
2019-03-07 15:45:47,783 INFO  Processing the response from verify service
2019-03-07 15:45:47,787 INFO  Starting to parse JSON response
2019-03-07 15:45:47,789 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 15:45:47,789 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 15:45:47,791 INFO  Successfully parsed JSON response
2019-03-07 15:45:47,791 INFO  In the process of generating verify response in HTML
2019-03-07 15:45:47,904 INFO  Successfully generated verify response in HTML
2019-03-07 15:45:47,905 INFO  Successfully processed the response from service
2019-03-07 15:46:04,170 INFO  Setting request parameters for VerifySolution
2019-03-07 15:46:04,172 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 15:46:04,172 INFO  Starting to parse the user solution
2019-03-07 15:46:04,173 INFO  Displaying user solution
2019-03-07 15:46:04,216 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-15\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Parrot:\r\n    __counter = 7001\r\n    def __init__(self,name,color):\r\n        self.__name = name\r\n        self.__unique_number = None\r\n        self.__color = color\r\n        \r\n","asgnmtId":"15","SolutionFileName":"Assign15.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 15:46:04,216 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 15:46:04,217 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 15:46:04,217 INFO  Invoking the service to verify the user solution
2019-03-07 15:46:04,218 INFO  Time before invoking service:Thu Mar 07 15:46:04 IST 2019
2019-03-07 15:46:04,218 INFO  Initialising service address for VerifySolution
2019-03-07 15:46:04,219 INFO  Time before invoking service In SUPER:Thu Mar 07 15:46:04 IST 2019
2019-03-07 15:46:05,123 INFO  Time after invoking service In SUPER:Thu Mar 07 15:46:05 IST 2019
2019-03-07 15:46:05,124 INFO  Service responded successfully with required details
2019-03-07 15:46:05,124 INFO  Time after invoking service:Thu Mar 07 15:46:05 IST 2019
2019-03-07 15:46:05,124 INFO  User solution successfully verified
2019-03-07 15:46:05,125 INFO  Processing the response from verify service
2019-03-07 15:46:05,128 INFO  Starting to parse JSON response
2019-03-07 15:46:05,129 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 15:46:05,130 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 15:46:05,132 INFO  Successfully parsed JSON response
2019-03-07 15:46:05,132 INFO  In the process of generating verify response in HTML
2019-03-07 15:46:05,228 INFO  Successfully generated verify response in HTML
2019-03-07 15:46:05,228 INFO  Successfully processed the response from service
2019-03-07 15:46:55,051 INFO  Setting request parameters for VerifySolution
2019-03-07 15:46:55,054 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 15:46:55,054 INFO  Starting to parse the user solution
2019-03-07 15:46:55,055 INFO  Displaying user solution
2019-03-07 15:46:55,101 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-15\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Parrot:\r\n    __counter = 7001\r\n    def __init__(self,name,color):\r\n        self.__name = name\r\n        self.__unique_number = None\r\n        self.__color = color\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n\r\n\r\n    def get_unique_number(self):\r\n        return self.__unique_number\r\n\r\n\r\n    def get_color(self):\r\n        return self.__color\r\n\r\n    \r\n        \r\n","asgnmtId":"15","SolutionFileName":"Assign15.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 15:46:55,101 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 15:46:55,101 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 15:46:55,101 INFO  Invoking the service to verify the user solution
2019-03-07 15:46:55,102 INFO  Time before invoking service:Thu Mar 07 15:46:55 IST 2019
2019-03-07 15:46:55,102 INFO  Initialising service address for VerifySolution
2019-03-07 15:46:55,103 INFO  Time before invoking service In SUPER:Thu Mar 07 15:46:55 IST 2019
2019-03-07 15:46:59,036 INFO  Time after invoking service In SUPER:Thu Mar 07 15:46:59 IST 2019
2019-03-07 15:46:59,037 INFO  Service responded successfully with required details
2019-03-07 15:46:59,037 INFO  Time after invoking service:Thu Mar 07 15:46:59 IST 2019
2019-03-07 15:46:59,037 INFO  User solution successfully verified
2019-03-07 15:46:59,037 INFO  Processing the response from verify service
2019-03-07 15:46:59,039 INFO  Starting to parse JSON response
2019-03-07 15:46:59,040 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 15:46:59,040 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 15:46:59,041 INFO  Successfully parsed JSON response
2019-03-07 15:46:59,043 INFO  In the process of generating verify response in HTML
2019-03-07 15:46:59,114 INFO  Successfully generated verify response in HTML
2019-03-07 15:46:59,114 INFO  Successfully processed the response from service
2019-03-07 15:48:53,868 INFO  Setting request parameters for VerifySolution
2019-03-07 15:48:53,868 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 15:48:53,869 INFO  Starting to parse the user solution
2019-03-07 15:48:53,873 INFO  Displaying user solution
2019-03-07 15:48:53,936 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-15\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Parrot:\r\n    __counter = 7000\r\n    def __init__(self,name,color):\r\n        self.__name = name\r\n        self.__unique_number = Parrot.get_unique_number()\r\n        self.__color = color\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n\r\n\r\n    def get_unique_number(self):\r\n        return self.__unique_number\r\n\r\n\r\n    def get_color(self):\r\n        return self.__color\r\n\r\n    \r\n        \r\n","asgnmtId":"15","SolutionFileName":"Assign15.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 15:48:53,937 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 15:48:53,937 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 15:48:53,937 INFO  Invoking the service to verify the user solution
2019-03-07 15:48:53,938 INFO  Time before invoking service:Thu Mar 07 15:48:53 IST 2019
2019-03-07 15:48:53,938 INFO  Initialising service address for VerifySolution
2019-03-07 15:48:53,939 INFO  Time before invoking service In SUPER:Thu Mar 07 15:48:53 IST 2019
2019-03-07 15:48:54,840 INFO  Time after invoking service In SUPER:Thu Mar 07 15:48:54 IST 2019
2019-03-07 15:48:54,841 INFO  Service responded successfully with required details
2019-03-07 15:48:54,841 INFO  Time after invoking service:Thu Mar 07 15:48:54 IST 2019
2019-03-07 15:48:54,842 INFO  User solution successfully verified
2019-03-07 15:48:54,842 INFO  Processing the response from verify service
2019-03-07 15:48:54,844 INFO  Starting to parse JSON response
2019-03-07 15:48:54,845 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 15:48:54,845 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 15:48:54,847 INFO  Successfully parsed JSON response
2019-03-07 15:48:54,847 INFO  In the process of generating verify response in HTML
2019-03-07 15:48:54,915 INFO  Successfully generated verify response in HTML
2019-03-07 15:48:54,915 INFO  Successfully processed the response from service
2019-03-07 15:50:09,058 INFO  Setting request parameters for VerifySolution
2019-03-07 15:50:09,058 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 15:50:09,058 INFO  Starting to parse the user solution
2019-03-07 15:50:09,059 INFO  Displaying user solution
2019-03-07 15:50:09,123 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-15\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Parrot:\r\n    __counter = 7000\r\n    def __init__(self,name,color):\r\n        self.__name = name\r\n        self.__unique_number = Parrot.get_unique_number()\r\n        Parrot.get_unique_number+=1\r\n        self.__color = color\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n\r\n\r\n    def get_unique_number(self):\r\n        return self.__unique_number\r\n\r\n\r\n    def get_color(self):\r\n        return self.__color\r\n\r\n    \r\n        \r\n","asgnmtId":"15","SolutionFileName":"Assign15.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 15:50:09,124 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 15:50:09,124 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 15:50:09,124 INFO  Invoking the service to verify the user solution
2019-03-07 15:50:09,125 INFO  Time before invoking service:Thu Mar 07 15:50:09 IST 2019
2019-03-07 15:50:09,125 INFO  Initialising service address for VerifySolution
2019-03-07 15:50:09,126 INFO  Time before invoking service In SUPER:Thu Mar 07 15:50:09 IST 2019
2019-03-07 15:50:10,091 INFO  Time after invoking service In SUPER:Thu Mar 07 15:50:10 IST 2019
2019-03-07 15:50:10,091 INFO  Service responded successfully with required details
2019-03-07 15:50:10,091 INFO  Time after invoking service:Thu Mar 07 15:50:10 IST 2019
2019-03-07 15:50:10,092 INFO  User solution successfully verified
2019-03-07 15:50:10,092 INFO  Processing the response from verify service
2019-03-07 15:50:10,096 INFO  Starting to parse JSON response
2019-03-07 15:50:10,098 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 15:50:10,098 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 15:50:10,099 INFO  Successfully parsed JSON response
2019-03-07 15:50:10,100 INFO  In the process of generating verify response in HTML
2019-03-07 15:50:10,175 INFO  Successfully generated verify response in HTML
2019-03-07 15:50:10,176 INFO  Successfully processed the response from service
2019-03-07 15:54:24,403 INFO  Setting request parameters for VerifySolution
2019-03-07 15:54:24,403 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 15:54:24,403 INFO  Starting to parse the user solution
2019-03-07 15:54:24,404 INFO  Displaying user solution
2019-03-07 15:54:24,460 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-15\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Parrot:\r\n    __counter = 7000\r\n    def __init__(self,name,color):\r\n        self.__name = name\r\n        self.__unique_number = Parrot.get_unique_number()\r\n        Parrot.get_unique_number\r\n        self.__color = color\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n\r\n\r\n    def get_unique_number(self):\r\n        return self.__unique_number\r\n\r\n\r\n    def get_color(self):\r\n        return self.__color\r\n\r\n    \r\n        \r\n","asgnmtId":"15","SolutionFileName":"Assign15.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 15:54:24,461 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 15:54:24,461 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 15:54:24,461 INFO  Invoking the service to verify the user solution
2019-03-07 15:54:24,461 INFO  Time before invoking service:Thu Mar 07 15:54:24 IST 2019
2019-03-07 15:54:24,461 INFO  Initialising service address for VerifySolution
2019-03-07 15:54:24,462 INFO  Time before invoking service In SUPER:Thu Mar 07 15:54:24 IST 2019
2019-03-07 15:54:25,302 INFO  Time after invoking service In SUPER:Thu Mar 07 15:54:25 IST 2019
2019-03-07 15:54:25,302 INFO  Service responded successfully with required details
2019-03-07 15:54:25,303 INFO  Time after invoking service:Thu Mar 07 15:54:25 IST 2019
2019-03-07 15:54:25,303 INFO  User solution successfully verified
2019-03-07 15:54:25,303 INFO  Processing the response from verify service
2019-03-07 15:54:25,307 INFO  Starting to parse JSON response
2019-03-07 15:54:25,308 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 15:54:25,309 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 15:54:25,312 INFO  Successfully parsed JSON response
2019-03-07 15:54:25,313 INFO  In the process of generating verify response in HTML
2019-03-07 15:54:25,407 INFO  Successfully generated verify response in HTML
2019-03-07 15:54:25,407 INFO  Successfully processed the response from service
2019-03-07 15:54:52,084 INFO  Setting request parameters for VerifySolution
2019-03-07 15:54:52,084 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 15:54:52,084 INFO  Starting to parse the user solution
2019-03-07 15:54:52,085 INFO  Displaying user solution
2019-03-07 15:54:52,132 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-15\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Parrot:\r\n    __counter = 7000\r\n    def __init__(self,name,color):\r\n        self.__name = name\r\n        self.__unique_number = Parrot.get_unique_number\r\n        Parrot.get_unique_number+=1\r\n        self.__color = color\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n\r\n\r\n    def get_unique_number(self):\r\n        return self.__unique_number\r\n\r\n\r\n    def get_color(self):\r\n        return self.__color\r\n\r\n    \r\n        \r\n","asgnmtId":"15","SolutionFileName":"Assign15.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 15:54:52,132 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 15:54:52,132 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 15:54:52,132 INFO  Invoking the service to verify the user solution
2019-03-07 15:54:52,133 INFO  Time before invoking service:Thu Mar 07 15:54:52 IST 2019
2019-03-07 15:54:52,133 INFO  Initialising service address for VerifySolution
2019-03-07 15:54:52,133 INFO  Time before invoking service In SUPER:Thu Mar 07 15:54:52 IST 2019
2019-03-07 15:54:53,062 INFO  Time after invoking service In SUPER:Thu Mar 07 15:54:53 IST 2019
2019-03-07 15:54:53,062 INFO  Service responded successfully with required details
2019-03-07 15:54:53,063 INFO  Time after invoking service:Thu Mar 07 15:54:53 IST 2019
2019-03-07 15:54:53,063 INFO  User solution successfully verified
2019-03-07 15:54:53,063 INFO  Processing the response from verify service
2019-03-07 15:54:53,066 INFO  Starting to parse JSON response
2019-03-07 15:54:53,068 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 15:54:53,068 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 15:54:53,070 INFO  Successfully parsed JSON response
2019-03-07 15:54:53,070 INFO  In the process of generating verify response in HTML
2019-03-07 15:54:53,148 INFO  Successfully generated verify response in HTML
2019-03-07 15:54:53,148 INFO  Successfully processed the response from service
2019-03-07 15:55:34,190 INFO  Setting request parameters for VerifySolution
2019-03-07 15:55:34,190 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 15:55:34,190 INFO  Starting to parse the user solution
2019-03-07 15:55:34,191 INFO  Displaying user solution
2019-03-07 15:55:34,228 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-15\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Parrot:\r\n    __counter = 7000\r\n    def __init__(self,name,color):\r\n        self.__name = name\r\n        self.__unique_number = Parrot.__counter\r\n        Parrot.__counter+=1\r\n        self.__color = color\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n\r\n\r\n    def get_unique_number(self):\r\n        return self.__unique_number\r\n\r\n\r\n    def get_color(self):\r\n        return self.__color\r\n\r\n    \r\n        \r\n","asgnmtId":"15","SolutionFileName":"Assign15.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 15:55:34,228 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 15:55:34,228 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 15:55:34,228 INFO  Invoking the service to verify the user solution
2019-03-07 15:55:34,228 INFO  Time before invoking service:Thu Mar 07 15:55:34 IST 2019
2019-03-07 15:55:34,228 INFO  Initialising service address for VerifySolution
2019-03-07 15:55:34,229 INFO  Time before invoking service In SUPER:Thu Mar 07 15:55:34 IST 2019
2019-03-07 15:55:35,109 INFO  Time after invoking service In SUPER:Thu Mar 07 15:55:35 IST 2019
2019-03-07 15:55:35,109 INFO  Service responded successfully with required details
2019-03-07 15:55:35,109 INFO  Time after invoking service:Thu Mar 07 15:55:35 IST 2019
2019-03-07 15:55:35,110 INFO  User solution successfully verified
2019-03-07 15:55:35,110 INFO  Processing the response from verify service
2019-03-07 15:55:35,112 INFO  Starting to parse JSON response
2019-03-07 15:55:35,113 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 15:55:35,113 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 15:55:35,115 INFO  Successfully parsed JSON response
2019-03-07 15:55:35,115 INFO  In the process of generating verify response in HTML
2019-03-07 15:55:35,195 INFO  Successfully generated verify response in HTML
2019-03-07 15:55:35,195 INFO  Successfully processed the response from service
2019-03-07 15:56:15,351 INFO  Setting request parameters for VerifySolution
2019-03-07 15:56:15,351 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 15:56:15,352 INFO  Starting to parse the user solution
2019-03-07 15:56:15,352 INFO  Displaying user solution
2019-03-07 15:56:15,396 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-15\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Parrot:\r\n    __counter = 7000\r\n    def __init__(self,name,color):\r\n        self.__name = name\r\n        Parrot.__counter+=1\r\n        self.__unique_number = Parrot.__counter\r\n        self.__color = color\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n\r\n\r\n    def get_unique_number(self):\r\n        return self.__unique_number\r\n\r\n\r\n    def get_color(self):\r\n        return self.__color\r\n\r\n    \r\n        \r\n","asgnmtId":"15","SolutionFileName":"Assign15.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 15:56:15,397 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 15:56:15,397 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 15:56:15,397 INFO  Invoking the service to verify the user solution
2019-03-07 15:56:15,398 INFO  Time before invoking service:Thu Mar 07 15:56:15 IST 2019
2019-03-07 15:56:15,398 INFO  Initialising service address for VerifySolution
2019-03-07 15:56:15,398 INFO  Time before invoking service In SUPER:Thu Mar 07 15:56:15 IST 2019
2019-03-07 15:56:16,252 INFO  Time after invoking service In SUPER:Thu Mar 07 15:56:16 IST 2019
2019-03-07 15:56:16,252 INFO  Service responded successfully with required details
2019-03-07 15:56:16,252 INFO  Time after invoking service:Thu Mar 07 15:56:16 IST 2019
2019-03-07 15:56:16,252 INFO  User solution successfully verified
2019-03-07 15:56:16,253 INFO  Processing the response from verify service
2019-03-07 15:56:16,255 INFO  Starting to parse JSON response
2019-03-07 15:56:16,256 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 15:56:16,256 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 15:56:16,257 INFO  Successfully parsed JSON response
2019-03-07 15:56:16,257 INFO  In the process of generating verify response in HTML
2019-03-07 15:56:16,327 INFO  Successfully generated verify response in HTML
2019-03-07 15:56:16,328 INFO  Successfully processed the response from service
2019-03-07 15:56:28,009 INFO  Initiating to process and prepare Input for the submit service
2019-03-07 15:56:28,014 INFO  Displaying user solution
2019-03-07 15:56:28,029 INFO  Successfully processed and prepared the input for the submit service
2019-03-07 15:56:28,029 INFO  Invoking the service to submit the user solution
2019-03-07 15:56:28,029 INFO  Initialising service address for Submit
2019-03-07 15:56:28,030 INFO  Time before invoking service In SUPER:Thu Mar 07 15:56:28 IST 2019
2019-03-07 15:56:28,383 INFO  Time after invoking service In SUPER:Thu Mar 07 15:56:28 IST 2019
2019-03-07 15:56:28,383 INFO  Service responded successfully with required details
2019-03-07 15:56:28,383 INFO  User solution successfully submitted
2019-03-07 15:56:28,384 INFO  Displaying submission status
2019-03-07 15:56:28,384 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-07 15:56:30,808 INFO  Initiating to process and prepare Input for the submit service
2019-03-07 15:56:30,809 INFO  Displaying user solution
2019-03-07 15:56:30,817 INFO  Successfully processed and prepared the input for the submit service
2019-03-07 15:56:30,817 INFO  Invoking the service to submit the user solution
2019-03-07 15:56:30,817 INFO  Initialising service address for Submit
2019-03-07 15:56:30,818 INFO  Time before invoking service In SUPER:Thu Mar 07 15:56:30 IST 2019
2019-03-07 15:56:30,937 INFO  Time after invoking service In SUPER:Thu Mar 07 15:56:30 IST 2019
2019-03-07 15:56:30,937 INFO  Service responded successfully with required details
2019-03-07 15:56:30,937 INFO  User solution successfully submitted
2019-03-07 15:56:30,938 INFO  Displaying submission status
2019-03-07 15:56:30,938 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-07 15:56:34,225 INFO  Initiating to process and prepare Input for the submit service
2019-03-07 15:56:34,226 INFO  Displaying user solution
2019-03-07 15:56:34,236 INFO  Successfully processed and prepared the input for the submit service
2019-03-07 15:56:34,237 INFO  Invoking the service to submit the user solution
2019-03-07 15:56:34,237 INFO  Initialising service address for Submit
2019-03-07 15:56:34,237 INFO  Time before invoking service In SUPER:Thu Mar 07 15:56:34 IST 2019
2019-03-07 15:56:34,329 INFO  Time after invoking service In SUPER:Thu Mar 07 15:56:34 IST 2019
2019-03-07 15:56:34,330 INFO  Service responded successfully with required details
2019-03-07 15:56:34,330 INFO  User solution successfully submitted
2019-03-07 15:56:34,330 INFO  Displaying submission status
2019-03-07 15:56:34,330 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-07 15:56:38,729 INFO  Initiating to process and prepare Input for the submit service
2019-03-07 15:56:38,729 INFO  Displaying user solution
2019-03-07 15:56:38,742 INFO  Successfully processed and prepared the input for the submit service
2019-03-07 15:56:38,742 INFO  Invoking the service to submit the user solution
2019-03-07 15:56:38,742 INFO  Initialising service address for Submit
2019-03-07 15:56:38,742 INFO  Time before invoking service In SUPER:Thu Mar 07 15:56:38 IST 2019
2019-03-07 15:56:38,801 INFO  Time after invoking service In SUPER:Thu Mar 07 15:56:38 IST 2019
2019-03-07 15:56:38,801 INFO  Service responded successfully with required details
2019-03-07 15:56:38,801 INFO  User solution successfully submitted
2019-03-07 15:56:38,802 INFO  Displaying submission status
2019-03-07 15:56:38,802 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-07 16:00:13,819 INFO  Setting request parameters for VerifySolution
2019-03-07 16:00:13,820 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 16:00:13,820 INFO  Starting to parse the user solution
2019-03-07 16:00:13,820 INFO  Displaying user solution
2019-03-07 16:00:13,870 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-15\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Parrot:\r\n    __counter = 7000\r\n    def __init__(self,name,color):\r\n        self.__name = name\r\n        Parrot.__counter+=1\r\n        self.__unique_number = Parrot.__counter\r\n        self.__color = color\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n\r\n\r\n    def get_unique_number(self):\r\n        return self.__unique_number\r\n\r\n\r\n    def get_color(self):\r\n        return self.__color\r\n\r\np1 = Parrot(\"Bob\",\"Green\")\r\nprint(p1.get_name())\r\nprint(p1.get_unique_number())\r\nprint(p1.get_color())\r\n\r\n  \r\n        \r\n","asgnmtId":"15","SolutionFileName":"Assign15.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 16:00:13,870 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 16:00:13,870 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 16:00:13,870 INFO  Invoking the service to verify the user solution
2019-03-07 16:00:13,871 INFO  Time before invoking service:Thu Mar 07 16:00:13 IST 2019
2019-03-07 16:00:13,871 INFO  Initialising service address for VerifySolution
2019-03-07 16:00:13,871 INFO  Time before invoking service In SUPER:Thu Mar 07 16:00:13 IST 2019
2019-03-07 16:00:15,733 INFO  Time after invoking service In SUPER:Thu Mar 07 16:00:15 IST 2019
2019-03-07 16:00:15,733 INFO  Service responded successfully with required details
2019-03-07 16:00:15,733 INFO  Time after invoking service:Thu Mar 07 16:00:15 IST 2019
2019-03-07 16:00:15,734 INFO  User solution successfully verified
2019-03-07 16:00:15,734 INFO  Processing the response from verify service
2019-03-07 16:00:15,740 INFO  Starting to parse JSON response
2019-03-07 16:00:15,742 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 16:00:15,742 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 16:00:15,743 INFO  Successfully parsed JSON response
2019-03-07 16:00:15,744 INFO  In the process of generating verify response in HTML
2019-03-07 16:00:15,831 INFO  Successfully generated verify response in HTML
2019-03-07 16:00:15,831 INFO  Successfully processed the response from service
2019-03-07 16:00:20,877 INFO  Initiating to process and prepare Input for the submit service
2019-03-07 16:00:20,878 INFO  Displaying user solution
2019-03-07 16:00:20,887 INFO  Successfully processed and prepared the input for the submit service
2019-03-07 16:00:20,888 INFO  Invoking the service to submit the user solution
2019-03-07 16:00:20,888 INFO  Initialising service address for Submit
2019-03-07 16:00:20,889 INFO  Time before invoking service In SUPER:Thu Mar 07 16:00:20 IST 2019
2019-03-07 16:00:21,071 INFO  Time after invoking service In SUPER:Thu Mar 07 16:00:21 IST 2019
2019-03-07 16:00:21,072 INFO  Service responded successfully with required details
2019-03-07 16:00:21,072 INFO  User solution successfully submitted
2019-03-07 16:00:21,072 INFO  Displaying submission status
2019-03-07 16:00:21,072 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-07 16:00:23,502 INFO  Initiating to process and prepare Input for the submit service
2019-03-07 16:00:23,503 INFO  Displaying user solution
2019-03-07 16:00:23,514 INFO  Successfully processed and prepared the input for the submit service
2019-03-07 16:00:23,514 INFO  Invoking the service to submit the user solution
2019-03-07 16:00:23,514 INFO  Initialising service address for Submit
2019-03-07 16:00:23,515 INFO  Time before invoking service In SUPER:Thu Mar 07 16:00:23 IST 2019
2019-03-07 16:00:23,570 INFO  Time after invoking service In SUPER:Thu Mar 07 16:00:23 IST 2019
2019-03-07 16:00:23,571 INFO  Service responded successfully with required details
2019-03-07 16:00:23,571 INFO  User solution successfully submitted
2019-03-07 16:00:23,571 INFO  Displaying submission status
2019-03-07 16:00:23,571 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-07 16:07:33,079 INFO  Setting request parameters for VerifySolution
2019-03-07 16:07:33,080 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 16:07:33,080 INFO  Starting to parse the user solution
2019-03-07 16:07:33,080 INFO  Displaying user solution
2019-03-07 16:07:33,148 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-16\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Customer:\r\n    def __init__(self,phone_no,name,age):\r\n        self.phone_no=phone_no\r\n        self.name=name\r\n        self.age=age\r\n        self.list_of_calls=None\r\n\r\nclass CallDetail:\r\n    def __init__(self,phone_no,called_no,duration):\r\n        self.phone_no=phone_no\r\n        self.called_no=called_no\r\n        self.duration=duration\r\n\r\nclass Util:\r\n    def parse_customer(self,list_of_customers,list_of_calls):\r\n        pass\r\n\r\ncust1=Customer(9900009901,'cust1',23)\r\ncust2=Customer(9900009902,'cust2',24)\r\ncust3=Customer(9900009903,'cust3',25)\r\nlist_of_customers=[cust1,cust2,cust3]\r\n\r\ncall1=CallDetail(9900009901,8800123401,5)\r\ncall2=CallDetail(9900009903,8800123402,10)\r\ncall3=CallDetail(9900009902,8800123403,2)\r\ncall4=CallDetail(9900009901,8800123404,8)\r\ncall5=CallDetail(9900009901,8800123405,7)\r\ncall6=CallDetail(9900009903,8800123406,9)\r\ncall7=CallDetail(9900009903,8800123407,4)\r\nlist_of_calls=[call1,call2,call3,call4,call5,call6,call7]\r\n\r\nUtil().parse_customer(list_of_customers, list_of_calls)\r\n","asgnmtId":"16","SolutionFileName":"Assign16.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 16:07:33,149 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 16:07:33,149 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 16:07:33,149 INFO  Invoking the service to verify the user solution
2019-03-07 16:07:33,149 INFO  Time before invoking service:Thu Mar 07 16:07:33 IST 2019
2019-03-07 16:07:33,149 INFO  Initialising service address for VerifySolution
2019-03-07 16:07:33,150 INFO  Time before invoking service In SUPER:Thu Mar 07 16:07:33 IST 2019
2019-03-07 16:07:34,170 INFO  Time after invoking service In SUPER:Thu Mar 07 16:07:34 IST 2019
2019-03-07 16:07:34,170 INFO  Service responded successfully with required details
2019-03-07 16:07:34,170 INFO  Time after invoking service:Thu Mar 07 16:07:34 IST 2019
2019-03-07 16:07:34,171 INFO  User solution successfully verified
2019-03-07 16:07:34,171 INFO  Processing the response from verify service
2019-03-07 16:07:34,174 INFO  Starting to parse JSON response
2019-03-07 16:07:34,175 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 16:07:34,175 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 16:07:34,175 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 16:07:34,175 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 16:07:34,175 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 16:07:34,177 INFO  Successfully parsed JSON response
2019-03-07 16:07:34,177 INFO  In the process of generating verify response in HTML
2019-03-07 16:07:34,267 INFO  Successfully generated verify response in HTML
2019-03-07 16:07:34,267 INFO  Successfully processed the response from service
2019-03-07 16:09:45,910 INFO  Setting request parameters for VerifySolution
2019-03-07 16:09:45,912 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 16:09:45,912 INFO  Starting to parse the user solution
2019-03-07 16:09:45,912 INFO  Displaying user solution
2019-03-07 16:09:45,971 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-16\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Customer:\r\n    def __init__(self,phone_no,name,age):\r\n        self.phone_no=phone_no\r\n        self.name=name\r\n        self.age=age\r\n        self.list_of_calls=None\r\n\r\nclass CallDetail:\r\n    def __init__(self,phone_no,called_no,duration):\r\n        self.phone_no=phone_no\r\n        self.called_no=called_no\r\n        self.duration=duration\r\n\r\nclass Util:\r\n    def __init__(self):\r\n        list_of_customer_calldetail_objects =None\r\n    def parse_customer(self,list_of_customers,list_of_calls):\r\n        pass\r\n\r\ncust1=Customer(9900009901,'cust1',23)\r\ncust2=Customer(9900009902,'cust2',24)\r\ncust3=Customer(9900009903,'cust3',25)\r\nlist_of_customers=[cust1,cust2,cust3]\r\n\r\ncall1=CallDetail(9900009901,8800123401,5)\r\ncall2=CallDetail(9900009903,8800123402,10)\r\ncall3=CallDetail(9900009902,8800123403,2)\r\ncall4=CallDetail(9900009901,8800123404,8)\r\ncall5=CallDetail(9900009901,8800123405,7)\r\ncall6=CallDetail(9900009903,8800123406,9)\r\ncall7=CallDetail(9900009903,8800123407,4)\r\nlist_of_calls=[call1,call2,call3,call4,call5,call6,call7]\r\n\r\nUtil().parse_customer(list_of_customers, list_of_calls)\r\n","asgnmtId":"16","SolutionFileName":"Assign16.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 16:09:45,971 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 16:09:45,972 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 16:09:45,972 INFO  Invoking the service to verify the user solution
2019-03-07 16:09:45,972 INFO  Time before invoking service:Thu Mar 07 16:09:45 IST 2019
2019-03-07 16:09:45,972 INFO  Initialising service address for VerifySolution
2019-03-07 16:09:45,972 INFO  Time before invoking service In SUPER:Thu Mar 07 16:09:45 IST 2019
2019-03-07 16:09:46,888 INFO  Time after invoking service In SUPER:Thu Mar 07 16:09:46 IST 2019
2019-03-07 16:09:46,888 INFO  Service responded successfully with required details
2019-03-07 16:09:46,889 INFO  Time after invoking service:Thu Mar 07 16:09:46 IST 2019
2019-03-07 16:09:46,889 INFO  User solution successfully verified
2019-03-07 16:09:46,889 INFO  Processing the response from verify service
2019-03-07 16:09:46,895 INFO  Starting to parse JSON response
2019-03-07 16:09:46,897 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 16:09:46,897 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 16:09:46,897 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 16:09:46,897 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 16:09:46,898 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 16:09:46,899 INFO  Successfully parsed JSON response
2019-03-07 16:09:46,899 INFO  In the process of generating verify response in HTML
2019-03-07 16:09:46,996 INFO  Successfully generated verify response in HTML
2019-03-07 16:09:46,996 INFO  Successfully processed the response from service
2019-03-07 16:10:09,379 INFO  Setting request parameters for VerifySolution
2019-03-07 16:10:09,379 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 16:10:09,379 INFO  Starting to parse the user solution
2019-03-07 16:10:09,380 INFO  Displaying user solution
2019-03-07 16:10:09,439 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-16\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Customer:\r\n    def __init__(self,phone_no,name,age):\r\n        self.phone_no=phone_no\r\n        self.name=name\r\n        self.age=age\r\n        self.list_of_calls=None\r\n\r\nclass CallDetail:\r\n    def __init__(self,phone_no,called_no,duration):\r\n        self.phone_no=phone_no\r\n        self.called_no=called_no\r\n        self.duration=duration\r\n\r\nclass Util:\r\n    def __init__(self):\r\n        self.list_of_customer_calldetail_objects =None\r\n    def parse_customer(self,list_of_customers,list_of_calls):\r\n        pass\r\n\r\ncust1=Customer(9900009901,'cust1',23)\r\ncust2=Customer(9900009902,'cust2',24)\r\ncust3=Customer(9900009903,'cust3',25)\r\nlist_of_customers=[cust1,cust2,cust3]\r\n\r\ncall1=CallDetail(9900009901,8800123401,5)\r\ncall2=CallDetail(9900009903,8800123402,10)\r\ncall3=CallDetail(9900009902,8800123403,2)\r\ncall4=CallDetail(9900009901,8800123404,8)\r\ncall5=CallDetail(9900009901,8800123405,7)\r\ncall6=CallDetail(9900009903,8800123406,9)\r\ncall7=CallDetail(9900009903,8800123407,4)\r\nlist_of_calls=[call1,call2,call3,call4,call5,call6,call7]\r\n\r\nUtil().parse_customer(list_of_customers, list_of_calls)\r\n","asgnmtId":"16","SolutionFileName":"Assign16.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 16:10:09,440 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 16:10:09,440 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 16:10:09,440 INFO  Invoking the service to verify the user solution
2019-03-07 16:10:09,441 INFO  Time before invoking service:Thu Mar 07 16:10:09 IST 2019
2019-03-07 16:10:09,441 INFO  Initialising service address for VerifySolution
2019-03-07 16:10:09,442 INFO  Time before invoking service In SUPER:Thu Mar 07 16:10:09 IST 2019
2019-03-07 16:10:10,449 INFO  Time after invoking service In SUPER:Thu Mar 07 16:10:10 IST 2019
2019-03-07 16:10:10,449 INFO  Service responded successfully with required details
2019-03-07 16:10:10,449 INFO  Time after invoking service:Thu Mar 07 16:10:10 IST 2019
2019-03-07 16:10:10,450 INFO  User solution successfully verified
2019-03-07 16:10:10,450 INFO  Processing the response from verify service
2019-03-07 16:10:10,452 INFO  Starting to parse JSON response
2019-03-07 16:10:10,453 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 16:10:10,453 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 16:10:10,453 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 16:10:10,454 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 16:10:10,454 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 16:10:10,455 INFO  Successfully parsed JSON response
2019-03-07 16:10:10,456 INFO  In the process of generating verify response in HTML
2019-03-07 16:10:10,544 INFO  Successfully generated verify response in HTML
2019-03-07 16:10:10,545 INFO  Successfully processed the response from service
2019-03-07 16:34:40,708 INFO  Setting request parameters for VerifySolution
2019-03-07 16:34:40,708 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 16:34:40,708 INFO  Starting to parse the user solution
2019-03-07 16:34:40,709 INFO  Displaying user solution
2019-03-07 16:34:40,836 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-16\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Customer:\r\n    def __init__(self,phone_no,name,age):\r\n        self.phone_no=phone_no\r\n        self.name=name\r\n        self.age=age\r\n        self.list_of_calls=None\r\n\r\nclass CallDetail:\r\n    def __init__(self,phone_no,called_no,duration):\r\n        self.phone_no=phone_no\r\n        self.called_no=called_no\r\n        self.duration=duration\r\n\r\nclass Util:\r\n    def __init__(self):\r\n        self.list_of_customer_calldetail_objects =None\r\n    def parse_customer(self,list_of_customers,list_of_calls):\r\n            self.list_of_customer_calldetail_objects=[]\r\n            for i in list_of_calls:\r\n              list1=i.split(\",\")\r\n              self.list_of_customer_calldetail_objects.append(CallDetail(list1[0],\r\n                    list1[1],list1[2],list1[3]))\r\n        \r\n\r\ncust1=Customer(9900009901,'cust1',23)\r\ncust2=Customer(9900009902,'cust2',24)\r\ncust3=Customer(9900009903,'cust3',25)\r\nlist_of_customers=[cust1,cust2,cust3]\r\n\r\ncall1=CallDetail(9900009901,8800123401,5)\r\ncall2=CallDetail(9900009903,8800123402,10)\r\ncall3=CallDetail(9900009902,8800123403,2)\r\ncall4=CallDetail(9900009901,8800123404,8)\r\ncall5=CallDetail(9900009901,8800123405,7)\r\ncall6=CallDetail(9900009903,8800123406,9)\r\ncall7=CallDetail(9900009903,8800123407,4)\r\nlist_of_calls=[call1,call2,call3,call4,call5,call6,call7]\r\n\r\nUtil().parse_customer(list_of_customers, list_of_calls)\r\n","asgnmtId":"16","SolutionFileName":"Assign16.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 16:34:40,837 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 16:34:40,837 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 16:34:40,837 INFO  Invoking the service to verify the user solution
2019-03-07 16:34:40,838 INFO  Time before invoking service:Thu Mar 07 16:34:40 IST 2019
2019-03-07 16:34:40,838 INFO  Initialising service address for VerifySolution
2019-03-07 16:34:40,839 INFO  Time before invoking service In SUPER:Thu Mar 07 16:34:40 IST 2019
2019-03-07 16:34:41,934 INFO  Time after invoking service In SUPER:Thu Mar 07 16:34:41 IST 2019
2019-03-07 16:34:41,935 INFO  Service responded successfully with required details
2019-03-07 16:34:41,936 INFO  Time after invoking service:Thu Mar 07 16:34:41 IST 2019
2019-03-07 16:34:41,936 INFO  User solution successfully verified
2019-03-07 16:34:41,937 INFO  Processing the response from verify service
2019-03-07 16:34:41,948 INFO  Starting to parse JSON response
2019-03-07 16:34:41,952 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 16:34:41,952 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 16:34:41,952 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 16:34:41,952 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 16:34:41,953 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 16:34:41,955 INFO  Successfully parsed JSON response
2019-03-07 16:34:41,955 INFO  In the process of generating verify response in HTML
2019-03-07 16:34:42,118 INFO  Successfully generated verify response in HTML
2019-03-07 16:34:42,119 INFO  Successfully processed the response from service
2019-03-07 16:35:27,483 INFO  Setting request parameters for VerifySolution
2019-03-07 16:35:27,483 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 16:35:27,484 INFO  Starting to parse the user solution
2019-03-07 16:35:27,484 INFO  Displaying user solution
2019-03-07 16:35:27,561 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-10\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass CallDetail:\r\n    def __init__(self,phoneno,called_no,duration,call_type):\r\n        self.__phoneno = phoneno\r\n        self.__called_no = called_no\r\n        self.__duration=duration\r\n        self.__call_type= call_type\r\n        \r\n\r\nclass Util:\r\n    def __init__(self):\r\n        self.list_of_call_objects=None\r\n    def parse_customer(self,list_of_call_string):\r\n        self.list_of_call_objects=[]\r\n        for i in list_of_call_string:\r\n            list1=i.split(\",\")\r\n            self.list_of_call_objects.append(CallDetail(list1[0],\r\n                    list1[1],list1[2],list1[3]))\r\n\r\ncall='9990000001,9330000001,23,STD'\r\ncall2='9990000001,9330000002,54,Local'\r\ncall3='9990000001,9330000003,6,ISD'\r\n\r\nlist_of_call_string=[call,call2,call3]\r\nUtil().parse_customer(list_of_call_string)\r\n","asgnmtId":"10","SolutionFileName":"Assign10.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 16:35:27,562 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 16:35:27,562 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 16:35:27,562 INFO  Invoking the service to verify the user solution
2019-03-07 16:35:27,562 INFO  Time before invoking service:Thu Mar 07 16:35:27 IST 2019
2019-03-07 16:35:27,563 INFO  Initialising service address for VerifySolution
2019-03-07 16:35:27,565 INFO  Time before invoking service In SUPER:Thu Mar 07 16:35:27 IST 2019
2019-03-07 16:35:28,500 INFO  Time after invoking service In SUPER:Thu Mar 07 16:35:28 IST 2019
2019-03-07 16:35:28,500 INFO  Service responded successfully with required details
2019-03-07 16:35:28,500 INFO  Time after invoking service:Thu Mar 07 16:35:28 IST 2019
2019-03-07 16:35:28,500 INFO  User solution successfully verified
2019-03-07 16:35:28,501 INFO  Processing the response from verify service
2019-03-07 16:35:28,503 INFO  Starting to parse JSON response
2019-03-07 16:35:28,505 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 16:35:28,505 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 16:35:28,505 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 16:35:28,505 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 16:35:28,507 INFO  Successfully parsed JSON response
2019-03-07 16:35:28,507 INFO  In the process of generating verify response in HTML
2019-03-07 16:35:28,582 INFO  Successfully generated verify response in HTML
2019-03-07 16:35:28,583 INFO  Successfully processed the response from service
2019-03-07 17:25:36,282 INFO  Setting request parameters for VerifySolution
2019-03-07 17:25:36,283 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 17:25:36,283 INFO  Starting to parse the user solution
2019-03-07 17:25:36,283 INFO  Displaying user solution
2019-03-07 17:25:36,441 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-16\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Customer:\r\n    def __init__(self,phone_no,name,age):\r\n        self.phone_no=phone_no\r\n        self.name=name\r\n        self.age=age\r\n        self.list_of_calls=None\r\n\r\nclass CallDetail:\r\n    def __init__(self,phone_no,called_no,duration):\r\n        self.phone_no=phone_no\r\n        self.called_no=called_no\r\n        self.duration=duration\r\n\r\nclass Util:\r\n    def __init__(self):\r\n        self.list_of_customer_calldetail_objects =None\r\n    def parse_customer(self,list_of_customers,list_of_calls):\r\n            self.list_of_customer_calldetail_objects=[]\r\n            for i in range(0,len(list_of_calls)):\r\n                for j in range(0,len(list_of_customers)):\r\n                    if(list_of_customers[j].phone_no== list_of_calls[i].phone_no):\r\n                        self.list_of_customer_calldetail_objects.append(list_of_calls)\r\n           \r\n                \r\n        \r\n\r\ncust1=Customer(9900009901,'cust1',23)\r\ncust2=Customer(9900009902,'cust2',24)\r\ncust3=Customer(9900009903,'cust3',25)\r\nlist_of_customers=[cust1,cust2,cust3]\r\n\r\ncall1=CallDetail(9900009901,8800123401,5)\r\ncall2=CallDetail(9900009903,8800123402,10)\r\ncall3=CallDetail(9900009902,8800123403,2)\r\ncall4=CallDetail(9900009901,8800123404,8)\r\ncall5=CallDetail(9900009901,8800123405,7)\r\ncall6=CallDetail(9900009903,8800123406,9)\r\ncall7=CallDetail(9900009903,8800123407,4)\r\nlist_of_calls=[call1,call2,call3,call4,call5,call6,call7]\r\n\r\nUtil().parse_customer(list_of_customers, list_of_calls)\r\n","asgnmtId":"16","SolutionFileName":"Assign16.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 17:25:36,442 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 17:25:36,442 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 17:25:36,442 INFO  Invoking the service to verify the user solution
2019-03-07 17:25:36,443 INFO  Time before invoking service:Thu Mar 07 17:25:36 IST 2019
2019-03-07 17:25:36,443 INFO  Initialising service address for VerifySolution
2019-03-07 17:25:36,444 INFO  Time before invoking service In SUPER:Thu Mar 07 17:25:36 IST 2019
2019-03-07 17:25:37,538 INFO  Time after invoking service In SUPER:Thu Mar 07 17:25:37 IST 2019
2019-03-07 17:25:37,538 INFO  Service responded successfully with required details
2019-03-07 17:25:37,538 INFO  Time after invoking service:Thu Mar 07 17:25:37 IST 2019
2019-03-07 17:25:37,538 INFO  User solution successfully verified
2019-03-07 17:25:37,539 INFO  Processing the response from verify service
2019-03-07 17:25:37,552 INFO  Starting to parse JSON response
2019-03-07 17:25:37,554 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 17:25:37,554 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 17:25:37,554 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 17:25:37,554 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 17:25:37,554 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 17:25:37,556 INFO  Successfully parsed JSON response
2019-03-07 17:25:37,556 INFO  In the process of generating verify response in HTML
2019-03-07 17:25:37,701 INFO  Successfully generated verify response in HTML
2019-03-07 17:25:37,702 INFO  Successfully processed the response from service
2019-03-07 17:41:40,084 INFO  Setting request parameters for VerifySolution
2019-03-07 17:41:40,084 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 17:41:40,084 INFO  Starting to parse the user solution
2019-03-07 17:41:40,085 INFO  Displaying user solution
2019-03-07 17:41:40,149 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-16\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Customer:\r\n    def __init__(self,phone_no,name,age):\r\n        self.phone_no=phone_no\r\n        self.name=name\r\n        self.age=age\r\n        self.list_of_calls=None\r\n\r\nclass CallDetail:\r\n    def __init__(self,phone_no,called_no,duration):\r\n        self.phone_no=phone_no\r\n        self.called_no=called_no\r\n        self.duration=duration\r\n\r\nclass Util:\r\n    def __init__(self):\r\n        self.list_of_customer_calldetail_objects =None\r\n    def parse_customer(self,list_of_customers,list_of_calls):\r\n            for i in list_of_customers:\r\n                list1 =[]\r\n                for j in list_of_calls:\r\n                    if(i.phone_no == j.phone_no):\r\n                        list1.append(j)\r\n                self.list_of_calls= list1\r\n           \r\n                \r\n        \r\n\r\ncust1=Customer(9900009901,'cust1',23)\r\ncust2=Customer(9900009902,'cust2',24)\r\ncust3=Customer(9900009903,'cust3',25)\r\nlist_of_customers=[cust1,cust2,cust3]\r\n\r\ncall1=CallDetail(9900009901,8800123401,5)\r\ncall2=CallDetail(9900009903,8800123402,10)\r\ncall3=CallDetail(9900009902,8800123403,2)\r\ncall4=CallDetail(9900009901,8800123404,8)\r\ncall5=CallDetail(9900009901,8800123405,7)\r\ncall6=CallDetail(9900009903,8800123406,9)\r\ncall7=CallDetail(9900009903,8800123407,4)\r\nlist_of_calls=[call1,call2,call3,call4,call5,call6,call7]\r\n\r\nUtil().parse_customer(list_of_customers, list_of_calls)\r\n","asgnmtId":"16","SolutionFileName":"Assign16.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 17:41:40,149 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 17:41:40,149 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 17:41:40,149 INFO  Invoking the service to verify the user solution
2019-03-07 17:41:40,149 INFO  Time before invoking service:Thu Mar 07 17:41:40 IST 2019
2019-03-07 17:41:40,149 INFO  Initialising service address for VerifySolution
2019-03-07 17:41:40,150 INFO  Time before invoking service In SUPER:Thu Mar 07 17:41:40 IST 2019
2019-03-07 17:41:42,308 INFO  Time after invoking service In SUPER:Thu Mar 07 17:41:42 IST 2019
2019-03-07 17:41:42,309 INFO  Service responded successfully with required details
2019-03-07 17:41:42,309 INFO  Time after invoking service:Thu Mar 07 17:41:42 IST 2019
2019-03-07 17:41:42,309 INFO  User solution successfully verified
2019-03-07 17:41:42,309 INFO  Processing the response from verify service
2019-03-07 17:41:42,314 INFO  Starting to parse JSON response
2019-03-07 17:41:42,315 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 17:41:42,315 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 17:41:42,315 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 17:41:42,315 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 17:41:42,315 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 17:41:42,316 INFO  Successfully parsed JSON response
2019-03-07 17:41:42,317 INFO  In the process of generating verify response in HTML
2019-03-07 17:41:42,413 INFO  Successfully generated verify response in HTML
2019-03-07 17:41:42,413 INFO  Successfully processed the response from service
2019-03-07 17:42:16,093 INFO  Setting request parameters for VerifySolution
2019-03-07 17:42:16,094 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 17:42:16,094 INFO  Starting to parse the user solution
2019-03-07 17:42:16,094 INFO  Displaying user solution
2019-03-07 17:42:16,155 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-16\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Customer:\r\n    def __init__(self,phone_no,name,age):\r\n        self.phone_no=phone_no\r\n        self.name=name\r\n        self.age=age\r\n        self.list_of_calls=None\r\n\r\nclass CallDetail:\r\n    def __init__(self,phone_no,called_no,duration):\r\n        self.phone_no=phone_no\r\n        self.called_no=called_no\r\n        self.duration=duration\r\n\r\nclass Util:\r\n    def __init__(self):\r\n        self.list_of_customer_calldetail_objects =None\r\n    def parse_customer(self,list_of_customers,list_of_calls):\r\n            for i in list_of_customers:\r\n                list1 =[]\r\n                for j in list_of_calls:\r\n                    if(i.phone_no == j.phone_no):\r\n                        list1.append(j)\r\n            self.list_of_calls= list1\r\n            return self.list_of_calls\r\n           \r\n                \r\n        \r\n\r\ncust1=Customer(9900009901,'cust1',23)\r\ncust2=Customer(9900009902,'cust2',24)\r\ncust3=Customer(9900009903,'cust3',25)\r\nlist_of_customers=[cust1,cust2,cust3]\r\n\r\ncall1=CallDetail(9900009901,8800123401,5)\r\ncall2=CallDetail(9900009903,8800123402,10)\r\ncall3=CallDetail(9900009902,8800123403,2)\r\ncall4=CallDetail(9900009901,8800123404,8)\r\ncall5=CallDetail(9900009901,8800123405,7)\r\ncall6=CallDetail(9900009903,8800123406,9)\r\ncall7=CallDetail(9900009903,8800123407,4)\r\nlist_of_calls=[call1,call2,call3,call4,call5,call6,call7]\r\n\r\nUtil().parse_customer(list_of_customers, list_of_calls)\r\n","asgnmtId":"16","SolutionFileName":"Assign16.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 17:42:16,155 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 17:42:16,156 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 17:42:16,156 INFO  Invoking the service to verify the user solution
2019-03-07 17:42:16,156 INFO  Time before invoking service:Thu Mar 07 17:42:16 IST 2019
2019-03-07 17:42:16,157 INFO  Initialising service address for VerifySolution
2019-03-07 17:42:16,157 INFO  Time before invoking service In SUPER:Thu Mar 07 17:42:16 IST 2019
2019-03-07 17:42:17,155 INFO  Time after invoking service In SUPER:Thu Mar 07 17:42:17 IST 2019
2019-03-07 17:42:17,156 INFO  Service responded successfully with required details
2019-03-07 17:42:17,156 INFO  Time after invoking service:Thu Mar 07 17:42:17 IST 2019
2019-03-07 17:42:17,156 INFO  User solution successfully verified
2019-03-07 17:42:17,157 INFO  Processing the response from verify service
2019-03-07 17:42:17,161 INFO  Starting to parse JSON response
2019-03-07 17:42:17,162 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 17:42:17,162 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 17:42:17,162 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 17:42:17,162 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 17:42:17,162 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 17:42:17,163 INFO  Successfully parsed JSON response
2019-03-07 17:42:17,163 INFO  In the process of generating verify response in HTML
2019-03-07 17:42:17,232 INFO  Successfully generated verify response in HTML
2019-03-07 17:42:17,232 INFO  Successfully processed the response from service
2019-03-07 17:47:45,151 INFO  Setting request parameters for VerifySolution
2019-03-07 17:47:45,151 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 17:47:45,151 INFO  Starting to parse the user solution
2019-03-07 17:47:45,152 INFO  Displaying user solution
2019-03-07 17:47:45,209 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-16\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Customer:\r\n    def __init__(self,phone_no,name,age):\r\n        self.phone_no=phone_no\r\n        self.name=name\r\n        self.age=age\r\n        self.list_of_calls=None\r\n\r\nclass CallDetail:\r\n    def __init__(self,phone_no,called_no,duration):\r\n        self.phone_no=phone_no\r\n        self.called_no=called_no\r\n        self.duration=duration\r\n\r\nclass Util:\r\n    def __init__(self):\r\n        self.list_of_customer_calldetail_objects =None\r\n    def parse_customer(self,list_of_customers,list_of_calls):\r\n            for i in list_of_customers:\r\n                list1 =[]\r\n                for j in list_of_calls:\r\n                    if(i.phone_no == j.phone_no):\r\n                        list1.append(j)\r\n                i.list_of_calls = list1\r\n            self.list_of_customer_calldetail_objects=list_of_customers\r\n           \r\n                \r\n        \r\n\r\ncust1=Customer(9900009901,'cust1',23)\r\ncust2=Customer(9900009902,'cust2',24)\r\ncust3=Customer(9900009903,'cust3',25)\r\nlist_of_customers=[cust1,cust2,cust3]\r\n\r\ncall1=CallDetail(9900009901,8800123401,5)\r\ncall2=CallDetail(9900009903,8800123402,10)\r\ncall3=CallDetail(9900009902,8800123403,2)\r\ncall4=CallDetail(9900009901,8800123404,8)\r\ncall5=CallDetail(9900009901,8800123405,7)\r\ncall6=CallDetail(9900009903,8800123406,9)\r\ncall7=CallDetail(9900009903,8800123407,4)\r\nlist_of_calls=[call1,call2,call3,call4,call5,call6,call7]\r\n\r\nUtil().parse_customer(list_of_customers, list_of_calls)\r\n","asgnmtId":"16","SolutionFileName":"Assign16.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 17:47:45,210 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 17:47:45,210 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 17:47:45,210 INFO  Invoking the service to verify the user solution
2019-03-07 17:47:45,211 INFO  Time before invoking service:Thu Mar 07 17:47:45 IST 2019
2019-03-07 17:47:45,211 INFO  Initialising service address for VerifySolution
2019-03-07 17:47:45,211 INFO  Time before invoking service In SUPER:Thu Mar 07 17:47:45 IST 2019
2019-03-07 17:47:46,159 INFO  Time after invoking service In SUPER:Thu Mar 07 17:47:46 IST 2019
2019-03-07 17:47:46,159 INFO  Service responded successfully with required details
2019-03-07 17:47:46,159 INFO  Time after invoking service:Thu Mar 07 17:47:46 IST 2019
2019-03-07 17:47:46,160 INFO  User solution successfully verified
2019-03-07 17:47:46,160 INFO  Processing the response from verify service
2019-03-07 17:47:46,169 INFO  Starting to parse JSON response
2019-03-07 17:47:46,171 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 17:47:46,171 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 17:47:46,171 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 17:47:46,171 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 17:47:46,171 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 17:47:46,171 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 17:47:46,171 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 17:47:46,171 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 17:47:46,171 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 17:47:46,171 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 17:47:46,173 INFO  Successfully parsed JSON response
2019-03-07 17:47:46,173 INFO  In the process of generating verify response in HTML
2019-03-07 17:47:46,255 INFO  Successfully generated verify response in HTML
2019-03-07 17:47:46,255 INFO  Successfully processed the response from service
2019-03-07 17:50:21,727 INFO  Initiating to process and prepare Input for the submit service
2019-03-07 17:50:21,727 INFO  Displaying user solution
2019-03-07 17:50:21,736 INFO  Successfully processed and prepared the input for the submit service
2019-03-07 17:50:21,736 INFO  Invoking the service to submit the user solution
2019-03-07 17:50:21,736 INFO  Initialising service address for Submit
2019-03-07 17:50:21,737 INFO  Time before invoking service In SUPER:Thu Mar 07 17:50:21 IST 2019
2019-03-07 17:50:22,044 INFO  Time after invoking service In SUPER:Thu Mar 07 17:50:22 IST 2019
2019-03-07 17:50:22,045 INFO  Service responded successfully with required details
2019-03-07 17:50:22,045 INFO  User solution successfully submitted
2019-03-07 17:50:22,045 INFO  Displaying submission status
2019-03-07 17:50:22,045 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-07 17:50:24,831 INFO  Initiating to process and prepare Input for the submit service
2019-03-07 17:50:24,832 INFO  Displaying user solution
2019-03-07 17:50:24,839 INFO  Successfully processed and prepared the input for the submit service
2019-03-07 17:50:24,840 INFO  Invoking the service to submit the user solution
2019-03-07 17:50:24,840 INFO  Initialising service address for Submit
2019-03-07 17:50:24,840 INFO  Time before invoking service In SUPER:Thu Mar 07 17:50:24 IST 2019
2019-03-07 17:50:24,924 INFO  Time after invoking service In SUPER:Thu Mar 07 17:50:24 IST 2019
2019-03-07 17:50:24,924 INFO  Service responded successfully with required details
2019-03-07 17:50:24,924 INFO  User solution successfully submitted
2019-03-07 17:50:24,924 INFO  Displaying submission status
2019-03-07 17:50:24,925 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-07 17:50:27,162 INFO  Setting request parameters for VerifySolution
2019-03-07 17:50:27,162 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 17:50:27,162 INFO  Starting to parse the user solution
2019-03-07 17:50:27,163 INFO  Displaying user solution
2019-03-07 17:50:27,221 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-16\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Customer:\r\n    def __init__(self,phone_no,name,age):\r\n        self.phone_no=phone_no\r\n        self.name=name\r\n        self.age=age\r\n        self.list_of_calls=None\r\n\r\nclass CallDetail:\r\n    def __init__(self,phone_no,called_no,duration):\r\n        self.phone_no=phone_no\r\n        self.called_no=called_no\r\n        self.duration=duration\r\n\r\nclass Util:\r\n    def __init__(self):\r\n        self.list_of_customer_calldetail_objects =None\r\n    def parse_customer(self,list_of_customers,list_of_calls):\r\n            for i in list_of_customers:\r\n                list1 =[]\r\n                for j in list_of_calls:\r\n                    if(i.phone_no == j.phone_no):\r\n                        list1.append(j)\r\n                i.list_of_calls = list1\r\n            self.list_of_customer_calldetail_objects=list_of_customers\r\n           \r\n                \r\n        \r\n\r\ncust1=Customer(9900009901,'cust1',23)\r\ncust2=Customer(9900009902,'cust2',24)\r\ncust3=Customer(9900009903,'cust3',25)\r\nlist_of_customers=[cust1,cust2,cust3]\r\n\r\ncall1=CallDetail(9900009901,8800123401,5)\r\ncall2=CallDetail(9900009903,8800123402,10)\r\ncall3=CallDetail(9900009902,8800123403,2)\r\ncall4=CallDetail(9900009901,8800123404,8)\r\ncall5=CallDetail(9900009901,8800123405,7)\r\ncall6=CallDetail(9900009903,8800123406,9)\r\ncall7=CallDetail(9900009903,8800123407,4)\r\nlist_of_calls=[call1,call2,call3,call4,call5,call6,call7]\r\n\r\nUtil().parse_customer(list_of_customers, list_of_calls)\r\n","asgnmtId":"16","SolutionFileName":"Assign16.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 17:50:27,221 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 17:50:27,222 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 17:50:27,222 INFO  Invoking the service to verify the user solution
2019-03-07 17:50:27,222 INFO  Time before invoking service:Thu Mar 07 17:50:27 IST 2019
2019-03-07 17:50:27,222 INFO  Initialising service address for VerifySolution
2019-03-07 17:50:27,223 INFO  Time before invoking service In SUPER:Thu Mar 07 17:50:27 IST 2019
2019-03-07 17:50:28,129 INFO  Time after invoking service In SUPER:Thu Mar 07 17:50:28 IST 2019
2019-03-07 17:50:28,130 INFO  Service responded successfully with required details
2019-03-07 17:50:28,130 INFO  Time after invoking service:Thu Mar 07 17:50:28 IST 2019
2019-03-07 17:50:28,130 INFO  User solution successfully verified
2019-03-07 17:50:28,130 INFO  Processing the response from verify service
2019-03-07 17:50:28,132 INFO  Starting to parse JSON response
2019-03-07 17:50:28,134 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 17:50:28,134 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 17:50:28,134 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 17:50:28,134 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 17:50:28,134 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 17:50:28,134 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 17:50:28,134 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 17:50:28,134 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 17:50:28,134 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 17:50:28,135 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 17:50:28,136 INFO  Successfully parsed JSON response
2019-03-07 17:50:28,136 INFO  In the process of generating verify response in HTML
2019-03-07 17:50:28,205 INFO  Successfully generated verify response in HTML
2019-03-07 17:50:28,206 INFO  Successfully processed the response from service
2019-03-07 17:51:44,477 INFO  Setting request parameters for VerifySolution
2019-03-07 17:51:44,477 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 17:51:44,477 INFO  Starting to parse the user solution
2019-03-07 17:51:44,478 INFO  Displaying user solution
2019-03-07 17:51:44,531 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-17\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\n","asgnmtId":"17","SolutionFileName":"Assign17.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 17:51:44,533 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 17:51:44,534 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 17:51:44,534 INFO  Invoking the service to verify the user solution
2019-03-07 17:51:44,534 INFO  Time before invoking service:Thu Mar 07 17:51:44 IST 2019
2019-03-07 17:51:44,534 INFO  Initialising service address for VerifySolution
2019-03-07 17:51:44,535 INFO  Time before invoking service In SUPER:Thu Mar 07 17:51:44 IST 2019
2019-03-07 17:51:45,869 INFO  Time after invoking service In SUPER:Thu Mar 07 17:51:45 IST 2019
2019-03-07 17:51:45,870 INFO  Service responded successfully with required details
2019-03-07 17:51:45,870 INFO  Time after invoking service:Thu Mar 07 17:51:45 IST 2019
2019-03-07 17:51:45,870 INFO  User solution successfully verified
2019-03-07 17:51:45,870 INFO  Processing the response from verify service
2019-03-07 17:51:45,870 INFO  Verification Failed : Function / Class unavailable
->Please code the required function / class before verification/n(error code:-2)
2019-03-07 18:08:28,700 INFO  Setting request parameters for VerifySolution
2019-03-07 18:08:28,700 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 18:08:28,700 INFO  Starting to parse the user solution
2019-03-07 18:08:28,701 INFO  Displaying user solution
2019-03-07 18:08:28,782 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-17\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self,customer_id,customer_name,address):\r\n        self.__customer_id= customer_id\r\n        self.__customer_name = customer_name\r\n        self.__address = address\r\n        \r\nclass Freight:\r\n    counter = 198\r\n    def\r\n","asgnmtId":"17","SolutionFileName":"Assign17.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 18:08:28,782 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 18:08:28,783 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 18:08:28,783 INFO  Invoking the service to verify the user solution
2019-03-07 18:08:28,783 INFO  Time before invoking service:Thu Mar 07 18:08:28 IST 2019
2019-03-07 18:08:28,783 INFO  Initialising service address for VerifySolution
2019-03-07 18:08:28,784 INFO  Time before invoking service In SUPER:Thu Mar 07 18:08:28 IST 2019
2019-03-07 18:08:30,125 INFO  Time after invoking service In SUPER:Thu Mar 07 18:08:30 IST 2019
2019-03-07 18:08:30,126 INFO  Service responded successfully with required details
2019-03-07 18:08:30,126 INFO  Time after invoking service:Thu Mar 07 18:08:30 IST 2019
2019-03-07 18:08:30,126 INFO  User solution successfully verified
2019-03-07 18:08:30,127 INFO  Processing the response from verify service
2019-03-07 18:08:30,135 INFO  Starting to parse JSON response
2019-03-07 18:08:30,138 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:08:30,138 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:08:30,138 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:08:30,138 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:08:30,138 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:08:30,138 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:08:30,138 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:08:30,138 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:08:30,138 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:08:30,138 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:08:30,140 INFO  Successfully parsed JSON response
2019-03-07 18:08:30,141 INFO  In the process of generating verify response in HTML
2019-03-07 18:08:30,223 INFO  Successfully generated verify response in HTML
2019-03-07 18:08:30,223 INFO  Successfully processed the response from service
2019-03-07 18:19:08,164 INFO  Setting request parameters for VerifySolution
2019-03-07 18:19:08,164 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 18:19:08,165 INFO  Starting to parse the user solution
2019-03-07 18:19:08,165 INFO  Displaying user solution
2019-03-07 18:19:08,230 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-17\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self,customer_id,customer_name,address):\r\n        self.__customer_id= customer_id\r\n        self.__customer_name = customer_name\r\n        self.__address = address\r\n\r\n    def get_customer_id(self):\r\n        return self.__customer_id\r\n\r\n\r\n    def get_customer_name(self):\r\n        return self.__customer_name\r\n\r\n\r\n    def get_address(self):\r\n        return self.__address\r\n    \r\n    def validate_customer_id(self):\r\n\r\n    \r\n    \r\n        \r\nclass Freight:\r\n    counter = 198\r\n    def __init__(self,recipient_customer,from_custmor,weight,distance):\r\n        self.__recipient_customer=recipient_customer\r\n        self.__from_customer = from_custmor\r\n        self.__weight = weight\r\n        self.__distance = distance\r\n        self.__freight_charge = None\r\n    def get_recipient_customer(self):\r\n        return self.__recipient_customer\r\n\r\n\r\n    def get_from_customer(self):\r\n        return self.__from_customer\r\n\r\n\r\n    def get_weight(self):\r\n        return self.__weight\r\n\r\n\r\n    def get_distance(self):\r\n        return self.__distance\r\n\r\n\r\n    def get_freight_charge(self):\r\n        return self.__freight_charge\r\n    \r\n    def validate_weight(self):\r\n        \r\n    def validate_distance(self):\r\n        \r\n    def forward_cargo(self):\r\n\r\n   \r\n","asgnmtId":"17","SolutionFileName":"Assign17.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 18:19:08,231 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 18:19:08,231 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 18:19:08,231 INFO  Invoking the service to verify the user solution
2019-03-07 18:19:08,231 INFO  Time before invoking service:Thu Mar 07 18:19:08 IST 2019
2019-03-07 18:19:08,232 INFO  Initialising service address for VerifySolution
2019-03-07 18:19:08,232 INFO  Time before invoking service In SUPER:Thu Mar 07 18:19:08 IST 2019
2019-03-07 18:19:09,500 INFO  Time after invoking service In SUPER:Thu Mar 07 18:19:09 IST 2019
2019-03-07 18:19:09,500 INFO  Service responded successfully with required details
2019-03-07 18:19:09,500 INFO  Time after invoking service:Thu Mar 07 18:19:09 IST 2019
2019-03-07 18:19:09,501 INFO  User solution successfully verified
2019-03-07 18:19:09,501 INFO  Processing the response from verify service
2019-03-07 18:19:09,507 INFO  Starting to parse JSON response
2019-03-07 18:19:09,509 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:19:09,509 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:19:09,509 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:19:09,509 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:19:09,509 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:19:09,509 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:19:09,509 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:19:09,511 INFO  Successfully parsed JSON response
2019-03-07 18:19:09,511 INFO  In the process of generating verify response in HTML
2019-03-07 18:19:09,586 INFO  Successfully generated verify response in HTML
2019-03-07 18:19:09,586 INFO  Successfully processed the response from service
2019-03-07 18:28:17,111 INFO  Setting request parameters for VerifySolution
2019-03-07 18:28:17,111 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 18:28:17,111 INFO  Starting to parse the user solution
2019-03-07 18:28:17,112 INFO  Displaying user solution
2019-03-07 18:28:17,174 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-17\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self,customer_id,customer_name,address):\r\n        self.__customer_id= customer_id\r\n        self.__customer_name = customer_name\r\n        self.__address = address\r\n\r\n    def get_customer_id(self):\r\n        return self.__customer_id\r\n\r\n\r\n    def get_customer_name(self):\r\n        return self.__customer_name\r\n\r\n\r\n    def get_address(self):\r\n        return self.__address\r\n    \r\n    def validate_customer_id(self):\r\n        if(len(self.__customer_id)==6 and self.__customer_id>000001):\r\n            return True\r\n        else:\r\n            return False\r\n\r\n    \r\n    \r\n        \r\nclass Freight:\r\n    counter = 198\r\n    def __init__(self,recipient_customer,from_custmor,weight,distance):\r\n        self.__recipient_customer=recipient_customer\r\n        self.__from_customer = from_custmor\r\n        self.__weight = weight\r\n        self.__distance = distance\r\n        self.__freight_charge = None\r\n    def get_recipient_customer(self):\r\n        return self.__recipient_customer\r\n\r\n\r\n    def get_from_customer(self):\r\n        return self.__from_customer\r\n\r\n\r\n    def get_weight(self):\r\n        return self.__weight\r\n\r\n\r\n    def get_distance(self):\r\n        return self.__distance\r\n\r\n\r\n    def get_freight_charge(self):\r\n        return self.__freight_charge\r\n    \r\n    def validate_weight(self):\r\n        if(self.__weight%5==0 and self.__weight>0):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def validate_distance(self):\r\n        if(self.__distance>=500 and self.__distance<=5000):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def forward_cargo(self):\r\n\r\n   \r\n","asgnmtId":"17","SolutionFileName":"Assign17.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 18:28:17,175 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 18:28:17,175 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 18:28:17,175 INFO  Invoking the service to verify the user solution
2019-03-07 18:28:17,176 INFO  Time before invoking service:Thu Mar 07 18:28:17 IST 2019
2019-03-07 18:28:17,176 INFO  Initialising service address for VerifySolution
2019-03-07 18:28:17,177 INFO  Time before invoking service In SUPER:Thu Mar 07 18:28:17 IST 2019
2019-03-07 18:28:18,632 INFO  Time after invoking service In SUPER:Thu Mar 07 18:28:18 IST 2019
2019-03-07 18:28:18,632 INFO  Service responded successfully with required details
2019-03-07 18:28:18,633 INFO  Time after invoking service:Thu Mar 07 18:28:18 IST 2019
2019-03-07 18:28:18,633 INFO  User solution successfully verified
2019-03-07 18:28:18,633 INFO  Processing the response from verify service
2019-03-07 18:28:18,639 INFO  Starting to parse JSON response
2019-03-07 18:28:18,641 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:28:18,641 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:28:18,641 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:28:18,641 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:28:18,641 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:28:18,641 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:28:18,641 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:28:18,643 INFO  Successfully parsed JSON response
2019-03-07 18:28:18,644 INFO  In the process of generating verify response in HTML
2019-03-07 18:28:18,725 INFO  Successfully generated verify response in HTML
2019-03-07 18:28:18,725 INFO  Successfully processed the response from service
2019-03-07 18:28:28,636 INFO  Setting request parameters for VerifySolution
2019-03-07 18:28:28,636 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 18:28:28,636 INFO  Starting to parse the user solution
2019-03-07 18:28:28,636 INFO  Displaying user solution
2019-03-07 18:28:28,689 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-17\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self,customer_id,customer_name,address):\r\n        self.__customer_id= customer_id\r\n        self.__customer_name = customer_name\r\n        self.__address = address\r\n\r\n    def get_customer_id(self):\r\n        return self.__customer_id\r\n\r\n\r\n    def get_customer_name(self):\r\n        return self.__customer_name\r\n\r\n\r\n    def get_address(self):\r\n        return self.__address\r\n    \r\n    def validate_customer_id(self):\r\n        if(len(self.__customer_id)==6 and self.__customer_id>000001):\r\n            return True\r\n        else:\r\n            return False\r\n\r\n    \r\n    \r\n        \r\nclass Freight:\r\n    counter = 198\r\n    def __init__(self,recipient_customer,from_custmor,weight,distance):\r\n        self.__recipient_customer=recipient_customer\r\n        self.__from_customer = from_custmor\r\n        self.__weight = weight\r\n        self.__distance = distance\r\n        self.__freight_charge = None\r\n    def get_recipient_customer(self):\r\n        return self.__recipient_customer\r\n\r\n\r\n    def get_from_customer(self):\r\n        return self.__from_customer\r\n\r\n\r\n    def get_weight(self):\r\n        return self.__weight\r\n\r\n\r\n    def get_distance(self):\r\n        return self.__distance\r\n\r\n\r\n    def get_freight_charge(self):\r\n        return self.__freight_charge\r\n    \r\n    def validate_weight(self):\r\n        if(self.__weight%5==0 and self.__weight>0):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def validate_distance(self):\r\n        if(self.__distance>=500 and self.__distance<=5000):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def forward_cargo(self):\r\n\r\n   \r\n","asgnmtId":"17","SolutionFileName":"Assign17.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 18:28:28,689 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 18:28:28,689 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 18:28:28,689 INFO  Invoking the service to verify the user solution
2019-03-07 18:28:28,690 INFO  Time before invoking service:Thu Mar 07 18:28:28 IST 2019
2019-03-07 18:28:28,690 INFO  Initialising service address for VerifySolution
2019-03-07 18:28:28,690 INFO  Time before invoking service In SUPER:Thu Mar 07 18:28:28 IST 2019
2019-03-07 18:28:29,926 INFO  Time after invoking service In SUPER:Thu Mar 07 18:28:29 IST 2019
2019-03-07 18:28:29,927 INFO  Service responded successfully with required details
2019-03-07 18:28:29,927 INFO  Time after invoking service:Thu Mar 07 18:28:29 IST 2019
2019-03-07 18:28:29,927 INFO  User solution successfully verified
2019-03-07 18:28:29,927 INFO  Processing the response from verify service
2019-03-07 18:28:29,931 INFO  Starting to parse JSON response
2019-03-07 18:28:29,933 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:28:29,933 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:28:29,933 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:28:29,933 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:28:29,934 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:28:29,934 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:28:29,934 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:28:29,935 INFO  Successfully parsed JSON response
2019-03-07 18:28:29,935 INFO  In the process of generating verify response in HTML
2019-03-07 18:28:30,003 INFO  Successfully generated verify response in HTML
2019-03-07 18:28:30,003 INFO  Successfully processed the response from service
2019-03-07 18:29:13,182 INFO  Setting request parameters for VerifySolution
2019-03-07 18:29:13,182 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 18:29:13,182 INFO  Starting to parse the user solution
2019-03-07 18:29:13,183 INFO  Displaying user solution
2019-03-07 18:29:13,250 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-17\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self,customer_id,customer_name,address):\r\n        self.__customer_id= customer_id\r\n        self.__customer_name = customer_name\r\n        self.__address = address\r\n\r\n    def get_customer_id(self):\r\n        return self.__customer_id\r\n\r\n\r\n    def get_customer_name(self):\r\n        return self.__customer_name\r\n\r\n\r\n    def get_address(self):\r\n        return self.__address\r\n    \r\n    def validate_customer_id(self):\r\n        if(len(self.__customer_id)==6 and self.__customer_id>000001):\r\n            return True\r\n        else:\r\n            return False\r\n\r\n    \r\n    \r\n        \r\nclass Freight:\r\n    counter = 198\r\n    def __init__(self,recipient_customer,from_custmor,weight,distance):\r\n        self.__recipient_customer=recipient_customer\r\n        self.__from_customer = from_custmor\r\n        self.__weight = weight\r\n        self.__distance = distance\r\n        self.__freight_charge = None\r\n    def get_recipient_customer(self):\r\n        return self.__recipient_customer\r\n\r\n\r\n    def get_from_customer(self):\r\n        return self.__from_customer\r\n\r\n\r\n    def get_weight(self):\r\n        return self.__weight\r\n\r\n\r\n    def get_distance(self):\r\n        return self.__distance\r\n\r\n\r\n    def get_freight_charge(self):\r\n        return self.__freight_charge\r\n    \r\n    def validate_weight(self):\r\n        if(self.__weight%5==0 and self.__weight>0):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def validate_distance(self):\r\n        if(self.__distance>=500 and self.__distance<=5000):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def forward_cargo(self):\r\n        \r\n","asgnmtId":"17","SolutionFileName":"Assign17.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 18:29:13,250 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 18:29:13,251 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 18:29:13,251 INFO  Invoking the service to verify the user solution
2019-03-07 18:29:13,251 INFO  Time before invoking service:Thu Mar 07 18:29:13 IST 2019
2019-03-07 18:29:13,251 INFO  Initialising service address for VerifySolution
2019-03-07 18:29:13,252 INFO  Time before invoking service In SUPER:Thu Mar 07 18:29:13 IST 2019
2019-03-07 18:29:14,640 INFO  Time after invoking service In SUPER:Thu Mar 07 18:29:14 IST 2019
2019-03-07 18:29:14,641 INFO  Service responded successfully with required details
2019-03-07 18:29:14,641 INFO  Time after invoking service:Thu Mar 07 18:29:14 IST 2019
2019-03-07 18:29:14,641 INFO  User solution successfully verified
2019-03-07 18:29:14,642 INFO  Processing the response from verify service
2019-03-07 18:29:14,644 INFO  Starting to parse JSON response
2019-03-07 18:29:14,646 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:29:14,646 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:29:14,646 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:29:14,646 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:29:14,646 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:29:14,646 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:29:14,646 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:29:14,648 INFO  Successfully parsed JSON response
2019-03-07 18:29:14,649 INFO  In the process of generating verify response in HTML
2019-03-07 18:29:14,723 INFO  Successfully generated verify response in HTML
2019-03-07 18:29:14,723 INFO  Successfully processed the response from service
2019-03-07 18:42:27,087 INFO  Setting request parameters for VerifySolution
2019-03-07 18:42:27,087 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 18:42:27,087 INFO  Starting to parse the user solution
2019-03-07 18:42:27,088 INFO  Displaying user solution
2019-03-07 18:42:27,159 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-17\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self,customer_id,customer_name,address):\r\n        self.__customer_id= customer_id\r\n        self.__customer_name = customer_name\r\n        self.__address = address\r\n\r\n    def get_customer_id(self):\r\n        return self.__customer_id\r\n\r\n\r\n    def get_customer_name(self):\r\n        return self.__customer_name\r\n\r\n\r\n    def get_address(self):\r\n        return self.__address\r\n    \r\n    def validate_customer_id(self):\r\n        if(len(self.__customer_id)==6 and self.__customer_id>000001):\r\n            return True\r\n        else:\r\n            return False\r\n\r\n    \r\n    \r\n        \r\nclass Freight:\r\n    counter = 198\r\n    def __init__(self,recipient_customer,from_custmor,weight,distance):\r\n        self.__freight_id = None\r\n        self.__recipient_customer=recipient_customer\r\n        self.__from_customer = from_custmor\r\n        self.__weight = weight\r\n        self.__distance = distance\r\n        self.__freight_charge = None\r\n    def get_recipient_customer(self):\r\n        return self.__recipient_customer\r\n\r\n\r\n    def get_from_customer(self):\r\n        return self.__from_customer\r\n\r\n\r\n    def get_weight(self):\r\n        return self.__weight\r\n\r\n\r\n    def get_distance(self):\r\n        return self.__distance\r\n\r\n\r\n    def get_freight_charge(self):\r\n        return self.__freight_charge\r\n    \r\n    def validate_weight(self):\r\n        if(self.__weight%5==0 and self.__weight>0):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def validate_distance(self):\r\n        if(self.__distance>=500 and self.__distance<=5000):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def forward_cargo(self):\r\n        if(Customer.validate_customer_id(self)==True and self.validate_distance()==True and self.get_distance()==True):\r\n            Freight.counter+=2\r\n            self.__freight_id = Freight.counter\r\n            self.__freight_charge = 150*self.__weight + 60*self.__distance\r\n        else:\r\n            self.__freight_charge=0\r\n        return self.get_freight_charge()\r\n            \r\n","asgnmtId":"17","SolutionFileName":"Assign17.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 18:42:27,160 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 18:42:27,160 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 18:42:27,160 INFO  Invoking the service to verify the user solution
2019-03-07 18:42:27,160 INFO  Time before invoking service:Thu Mar 07 18:42:27 IST 2019
2019-03-07 18:42:27,160 INFO  Initialising service address for VerifySolution
2019-03-07 18:42:27,161 INFO  Time before invoking service In SUPER:Thu Mar 07 18:42:27 IST 2019
2019-03-07 18:42:28,527 INFO  Time after invoking service In SUPER:Thu Mar 07 18:42:28 IST 2019
2019-03-07 18:42:28,527 INFO  Service responded successfully with required details
2019-03-07 18:42:28,527 INFO  Time after invoking service:Thu Mar 07 18:42:28 IST 2019
2019-03-07 18:42:28,527 INFO  User solution successfully verified
2019-03-07 18:42:28,528 INFO  Processing the response from verify service
2019-03-07 18:42:28,534 INFO  Starting to parse JSON response
2019-03-07 18:42:28,536 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:42:28,536 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:42:28,536 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:42:28,536 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:42:28,536 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:42:28,536 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:42:28,536 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:42:28,539 INFO  Successfully parsed JSON response
2019-03-07 18:42:28,540 INFO  In the process of generating verify response in HTML
2019-03-07 18:42:28,612 INFO  Successfully generated verify response in HTML
2019-03-07 18:42:28,612 INFO  Successfully processed the response from service
2019-03-07 18:42:44,458 INFO  Setting request parameters for VerifySolution
2019-03-07 18:42:44,459 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 18:42:44,459 INFO  Starting to parse the user solution
2019-03-07 18:42:44,459 INFO  Displaying user solution
2019-03-07 18:42:44,520 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-17\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self,customer_id,customer_name,address):\r\n        self.__customer_id= customer_id\r\n        self.__customer_name = customer_name\r\n        self.__address = address\r\n\r\n    def get_customer_id(self):\r\n        return self.__customer_id\r\n\r\n\r\n    def get_customer_name(self):\r\n        return self.__customer_name\r\n\r\n\r\n    def get_address(self):\r\n        return self.__address\r\n    \r\n    def validate_customer_id(self):\r\n        if(len(self.__customer_id)==6 and self.__customer_id>000001):\r\n            return True\r\n        else:\r\n            return False\r\n\r\n    \r\n    \r\n        \r\nclass Freight:\r\n    counter = 198\r\n    def __init__(self,recipient_customer,from_custmor,weight,distance):\r\n        self.__freight_id = None\r\n        self.__recipient_customer=recipient_customer\r\n        self.__from_customer = from_custmor\r\n        self.__weight = weight\r\n        self.__distance = distance\r\n        self.__freight_charge = None\r\n    def get_recipient_customer(self):\r\n        return self.__recipient_customer\r\n\r\n\r\n    def get_from_customer(self):\r\n        return self.__from_customer\r\n\r\n\r\n    def get_weight(self):\r\n        return self.__weight\r\n\r\n\r\n    def get_distance(self):\r\n        return self.__distance\r\n\r\n\r\n    def get_freight_charge(self):\r\n        return self.__freight_charge\r\n    \r\n    def validate_weight(self):\r\n        if(self.__weight%5==0 and self.__weight>0):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def validate_distance(self):\r\n        if(self.__distance>=500 and self.__distance<=5000):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def forward_cargo(self):\r\n        if(Customer.validate_customer_id(self)==True and self.validate_distance()==True and self.get_distance()==True):\r\n            Freight.counter+=2\r\n            self.__freight_id = Freight.counter\r\n            self.__freight_charge = 150*self.__weight + 60*self.__distance\r\n        else:\r\n            self.__freight_charge=0\r\n        \r\n            \r\n","asgnmtId":"17","SolutionFileName":"Assign17.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 18:42:44,520 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 18:42:44,520 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 18:42:44,520 INFO  Invoking the service to verify the user solution
2019-03-07 18:42:44,521 INFO  Time before invoking service:Thu Mar 07 18:42:44 IST 2019
2019-03-07 18:42:44,521 INFO  Initialising service address for VerifySolution
2019-03-07 18:42:44,522 INFO  Time before invoking service In SUPER:Thu Mar 07 18:42:44 IST 2019
2019-03-07 18:42:45,843 INFO  Time after invoking service In SUPER:Thu Mar 07 18:42:45 IST 2019
2019-03-07 18:42:45,844 INFO  Service responded successfully with required details
2019-03-07 18:42:45,844 INFO  Time after invoking service:Thu Mar 07 18:42:45 IST 2019
2019-03-07 18:42:45,844 INFO  User solution successfully verified
2019-03-07 18:42:45,845 INFO  Processing the response from verify service
2019-03-07 18:42:45,847 INFO  Starting to parse JSON response
2019-03-07 18:42:45,848 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:42:45,848 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:42:45,848 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:42:45,848 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:42:45,848 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:42:45,848 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:42:45,848 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:42:45,849 INFO  Successfully parsed JSON response
2019-03-07 18:42:45,852 INFO  In the process of generating verify response in HTML
2019-03-07 18:42:45,923 INFO  Successfully generated verify response in HTML
2019-03-07 18:42:45,923 INFO  Successfully processed the response from service
2019-03-07 18:43:15,743 INFO  Setting request parameters for VerifySolution
2019-03-07 18:43:15,743 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 18:43:15,743 INFO  Starting to parse the user solution
2019-03-07 18:43:15,744 INFO  Displaying user solution
2019-03-07 18:43:15,793 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-17\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self,customer_id,customer_name,address):\r\n        self.__customer_id= customer_id\r\n        self.__customer_name = customer_name\r\n        self.__address = address\r\n\r\n    def get_customer_id(self):\r\n        return self.__customer_id\r\n\r\n\r\n    def get_customer_name(self):\r\n        return self.__customer_name\r\n\r\n\r\n    def get_address(self):\r\n        return self.__address\r\n    \r\n    def validate_customer_id(self):\r\n        if(len(self.__customer_id)==6 and self.__customer_id>000001):\r\n            return True\r\n        else:\r\n            return False\r\n\r\n    \r\n    \r\n        \r\nclass Freight:\r\n    counter = 198\r\n    def __init__(self,recipient_customer,from_custmor,weight,distance):\r\n        self.__freight_id = None\r\n        self.__recipient_customer=recipient_customer\r\n        self.__from_customer = from_custmor\r\n        self.__weight = weight\r\n        self.__distance = distance\r\n        self.__freight_charge = None\r\n    def get_recipient_customer(self):\r\n        return self.__recipient_customer\r\n\r\n\r\n    def get_from_customer(self):\r\n        return self.__from_customer\r\n\r\n\r\n    def get_weight(self):\r\n        return self.__weight\r\n\r\n\r\n    def get_distance(self):\r\n        return self.__distance\r\n\r\n\r\n    def get_freight_charge(self):\r\n        return self.__freight_charge\r\n    \r\n    def validate_weight(self):\r\n        if(self.__weight%5==0 and self.__weight>0):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def validate_distance(self):\r\n        if(self.__distance>=500 and self.__distance<=5000):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def forward_cargo(self):\r\n        if(Customer.validate_customer_id(self)==True and self.validate_distance()==True and self.get_distance()==True):\r\n            Freight.counter+=2\r\n            self.__freight_id = Freight.counter\r\n            self.__freight_charge = 150*self.__weight + 60*self.__distance\r\n        else:\r\n            self.__freight_charge=0\r\n        \r\n            \r\n","asgnmtId":"17","SolutionFileName":"Assign17.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 18:43:15,793 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 18:43:15,793 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 18:43:15,793 INFO  Invoking the service to verify the user solution
2019-03-07 18:43:15,794 INFO  Time before invoking service:Thu Mar 07 18:43:15 IST 2019
2019-03-07 18:43:15,794 INFO  Initialising service address for VerifySolution
2019-03-07 18:43:15,794 INFO  Time before invoking service In SUPER:Thu Mar 07 18:43:15 IST 2019
2019-03-07 18:43:17,132 INFO  Time after invoking service In SUPER:Thu Mar 07 18:43:17 IST 2019
2019-03-07 18:43:17,133 INFO  Service responded successfully with required details
2019-03-07 18:43:17,133 INFO  Time after invoking service:Thu Mar 07 18:43:17 IST 2019
2019-03-07 18:43:17,133 INFO  User solution successfully verified
2019-03-07 18:43:17,134 INFO  Processing the response from verify service
2019-03-07 18:43:17,136 INFO  Starting to parse JSON response
2019-03-07 18:43:17,137 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:43:17,137 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:43:17,137 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:43:17,137 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:43:17,137 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:43:17,137 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:43:17,137 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:43:17,137 INFO  Successfully parsed JSON response
2019-03-07 18:43:17,138 INFO  In the process of generating verify response in HTML
2019-03-07 18:43:17,201 INFO  Successfully generated verify response in HTML
2019-03-07 18:43:17,201 INFO  Successfully processed the response from service
2019-03-07 18:44:04,378 INFO  Setting request parameters for VerifySolution
2019-03-07 18:44:04,378 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 18:44:04,378 INFO  Starting to parse the user solution
2019-03-07 18:44:04,385 INFO  Displaying user solution
2019-03-07 18:44:04,439 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-17\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self,customer_id,customer_name,address):\r\n        self.__customer_id= customer_id\r\n        self.__customer_name = customer_name\r\n        self.__address = address\r\n\r\n    def get_customer_id(self):\r\n        return self.__customer_id\r\n\r\n\r\n    def get_customer_name(self):\r\n        return self.__customer_name\r\n\r\n\r\n    def get_address(self):\r\n        return self.__address\r\n    \r\n    def validate_customer_id(self):\r\n        if(len(self.__customer_id)==6 and self.__customer_id>000001):\r\n            return True\r\n        else:\r\n            return False\r\n\r\n    \r\n    \r\n        \r\nclass Freight:\r\n    counter = 198\r\n    def __init__(self,recipient_customer,from_custmor,weight,distance):\r\n        self.__freight_id = None\r\n        self.__recipient_customer=recipient_customer\r\n        self.__from_customer = from_custmor\r\n        self.__weight = weight\r\n        self.__distance = distance\r\n        self.__freight_charge = None\r\n    def get_recipient_customer(self):\r\n        return self.__recipient_customer\r\n\r\n\r\n    def get_from_customer(self):\r\n        return self.__from_customer\r\n\r\n\r\n    def get_weight(self):\r\n        return self.__weight\r\n\r\n\r\n    def get_distance(self):\r\n        return self.__distance\r\n\r\n\r\n    def get_freight_charge(self):\r\n        return self.__freight_charge\r\n    \r\n    def validate_weight(self):\r\n        if(self.__weight%5==0 and self.__weight>0):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def validate_distance(self):\r\n        if(self.__distance>=500 and self.__distance<=5000):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def forward_cargo(self):\r\n        if(Customer.validate_customer_id(self)==True and self.validate_distance()==True and self.get_distance()==True):\r\n            Freight.counter+=2\r\n            self.__freight_id = Freight.counter\r\n            self.__freight_charge = 150*self.__weight + 60*self.__distance\r\n        else:\r\n            self.__freight_charge=0\r\n        \r\n            \r\n","asgnmtId":"17","SolutionFileName":"Assign17.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 18:44:04,440 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 18:44:04,440 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 18:44:04,440 INFO  Invoking the service to verify the user solution
2019-03-07 18:44:04,441 INFO  Time before invoking service:Thu Mar 07 18:44:04 IST 2019
2019-03-07 18:44:04,441 INFO  Initialising service address for VerifySolution
2019-03-07 18:44:04,442 INFO  Time before invoking service In SUPER:Thu Mar 07 18:44:04 IST 2019
2019-03-07 18:44:05,915 INFO  Time after invoking service In SUPER:Thu Mar 07 18:44:05 IST 2019
2019-03-07 18:44:05,916 INFO  Service responded successfully with required details
2019-03-07 18:44:05,916 INFO  Time after invoking service:Thu Mar 07 18:44:05 IST 2019
2019-03-07 18:44:05,916 INFO  User solution successfully verified
2019-03-07 18:44:05,917 INFO  Processing the response from verify service
2019-03-07 18:44:05,919 INFO  Starting to parse JSON response
2019-03-07 18:44:05,920 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:44:05,920 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:44:05,920 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:44:05,920 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:44:05,920 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:44:05,920 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:44:05,920 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:44:05,921 INFO  Successfully parsed JSON response
2019-03-07 18:44:05,923 INFO  In the process of generating verify response in HTML
2019-03-07 18:44:05,997 INFO  Successfully generated verify response in HTML
2019-03-07 18:44:05,997 INFO  Successfully processed the response from service
2019-03-07 18:45:16,292 INFO  Setting request parameters for VerifySolution
2019-03-07 18:45:16,292 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 18:45:16,292 INFO  Starting to parse the user solution
2019-03-07 18:45:16,293 INFO  Displaying user solution
2019-03-07 18:45:16,343 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-17\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self,customer_id,customer_name,address):\r\n        self.__customer_id= customer_id\r\n        self.__customer_name = customer_name\r\n        self.__address = address\r\n\r\n    def get_customer_id(self):\r\n        return self.__customer_id\r\n\r\n\r\n    def get_customer_name(self):\r\n        return self.__customer_name\r\n\r\n\r\n    def get_address(self):\r\n        return self.__address\r\n    \r\n    def validate_customer_id(self):\r\n        if(len(self.__customer_id)==6 and self.__customer_id>000001):\r\n            return True\r\n        else:\r\n            return False\r\n\r\n    \r\n    \r\n        \r\nclass Freight:\r\n    counter = 198\r\n    def __init__(self,recipient_customer,from_custmor,weight,distance):\r\n        self.__freight_id = None\r\n        self.__recipient_customer=recipient_customer\r\n        self.__from_customer = from_custmor\r\n        self.__weight = weight\r\n        self.__distance = distance\r\n        self.__freight_charge = None\r\n    def get_recipient_customer(self):\r\n        return self.__recipient_customer\r\n\r\n\r\n    def get_from_customer(self):\r\n        return self.__from_customer\r\n\r\n\r\n    def get_weight(self):\r\n        return self.__weight\r\n\r\n\r\n    def get_distance(self):\r\n        return self.__distance\r\n\r\n\r\n    def get_freight_charge(self):\r\n        return self.__freight_charge\r\n    \r\n    def validate_weight(self):\r\n        if(self.__weight%5==0 and self.__weight>0):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def validate_distance(self):\r\n        if(self.__distance>=500 and self.__distance<=5000):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def forward_cargo(self):\r\n        if(Customer.validate_customer_id(self)==True and self.validate_distance()==True and self.validate_weight()==True):\r\n            Freight.counter+=2\r\n            self.__freight_id = Freight.counter\r\n            self.__freight_charge = 150*self.__weight + 60*self.__distance\r\n        else:\r\n            self.__freight_charge=0\r\n        \r\n            \r\n","asgnmtId":"17","SolutionFileName":"Assign17.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 18:45:16,344 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 18:45:16,344 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 18:45:16,344 INFO  Invoking the service to verify the user solution
2019-03-07 18:45:16,345 INFO  Time before invoking service:Thu Mar 07 18:45:16 IST 2019
2019-03-07 18:45:16,345 INFO  Initialising service address for VerifySolution
2019-03-07 18:45:16,345 INFO  Time before invoking service In SUPER:Thu Mar 07 18:45:16 IST 2019
2019-03-07 18:45:17,754 INFO  Time after invoking service In SUPER:Thu Mar 07 18:45:17 IST 2019
2019-03-07 18:45:17,754 INFO  Service responded successfully with required details
2019-03-07 18:45:17,754 INFO  Time after invoking service:Thu Mar 07 18:45:17 IST 2019
2019-03-07 18:45:17,754 INFO  User solution successfully verified
2019-03-07 18:45:17,755 INFO  Processing the response from verify service
2019-03-07 18:45:17,757 INFO  Starting to parse JSON response
2019-03-07 18:45:17,758 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:45:17,758 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:45:17,758 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:45:17,758 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:45:17,758 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:45:17,758 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:45:17,759 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:45:17,760 INFO  Successfully parsed JSON response
2019-03-07 18:45:17,761 INFO  In the process of generating verify response in HTML
2019-03-07 18:45:17,825 INFO  Successfully generated verify response in HTML
2019-03-07 18:45:17,825 INFO  Successfully processed the response from service
2019-03-07 18:49:55,681 INFO  Setting request parameters for VerifySolution
2019-03-07 18:49:55,681 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 18:49:55,681 INFO  Starting to parse the user solution
2019-03-07 18:49:55,682 INFO  Displaying user solution
2019-03-07 18:49:55,737 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-17\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self,customer_id,customer_name,address):\r\n        self.__customer_id= customer_id\r\n        self.__customer_name = customer_name\r\n        self.__address = address\r\n\r\n    def get_customer_id(self):\r\n        return self.__customer_id\r\n\r\n\r\n    def get_customer_name(self):\r\n        return self.__customer_name\r\n\r\n\r\n    def get_address(self):\r\n        return self.__address\r\n    \r\n    def validate_customer_id(self):\r\n        if( self.__customer_id>100000 and self.__customer_id<1000000):\r\n            return True\r\n        else:\r\n            return False\r\n\r\n    \r\n    \r\n        \r\nclass Freight:\r\n    counter = 198\r\n    def __init__(self,recipient_customer,from_custmor,weight,distance):\r\n        self.__freight_id = None\r\n        self.__recipient_customer=recipient_customer\r\n        self.__from_customer = from_custmor\r\n        self.__weight = weight\r\n        self.__distance = distance\r\n        self.__freight_charge = None\r\n    def get_recipient_customer(self):\r\n        return self.__recipient_customer\r\n\r\n\r\n    def get_from_customer(self):\r\n        return self.__from_customer\r\n\r\n\r\n    def get_weight(self):\r\n        return self.__weight\r\n\r\n\r\n    def get_distance(self):\r\n        return self.__distance\r\n\r\n\r\n    def get_freight_charge(self):\r\n        return self.__freight_charge\r\n    \r\n    def validate_weight(self):\r\n        if(self.__weight%5==0 and self.__weight>0):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def validate_distance(self):\r\n        if(self.__distance>=500 and self.__distance<=5000):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def forward_cargo(self):\r\n        if(Customer.validate_customer_id(self)==True and self.validate_distance()==True and self.validate_weight()==True):\r\n            Freight.counter+=2\r\n            self.__freight_id = Freight.counter\r\n            self.__freight_charge = 150*self.__weight + 60*self.__distance\r\n        else:\r\n            self.__freight_charge=0\r\n        \r\n            \r\n","asgnmtId":"17","SolutionFileName":"Assign17.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 18:49:55,738 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 18:49:55,738 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 18:49:55,738 INFO  Invoking the service to verify the user solution
2019-03-07 18:49:55,739 INFO  Time before invoking service:Thu Mar 07 18:49:55 IST 2019
2019-03-07 18:49:55,739 INFO  Initialising service address for VerifySolution
2019-03-07 18:49:55,739 INFO  Time before invoking service In SUPER:Thu Mar 07 18:49:55 IST 2019
2019-03-07 18:49:57,104 INFO  Time after invoking service In SUPER:Thu Mar 07 18:49:57 IST 2019
2019-03-07 18:49:57,104 INFO  Service responded successfully with required details
2019-03-07 18:49:57,104 INFO  Time after invoking service:Thu Mar 07 18:49:57 IST 2019
2019-03-07 18:49:57,104 INFO  User solution successfully verified
2019-03-07 18:49:57,105 INFO  Processing the response from verify service
2019-03-07 18:49:57,111 INFO  Starting to parse JSON response
2019-03-07 18:49:57,114 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:49:57,114 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:49:57,114 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:49:57,114 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:49:57,114 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:49:57,114 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:49:57,114 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:49:57,114 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:49:57,114 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:49:57,114 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:49:57,116 INFO  Successfully parsed JSON response
2019-03-07 18:49:57,118 INFO  In the process of generating verify response in HTML
2019-03-07 18:49:57,194 INFO  Successfully generated verify response in HTML
2019-03-07 18:49:57,194 INFO  Successfully processed the response from service
2019-03-07 18:50:54,749 INFO  Setting request parameters for VerifySolution
2019-03-07 18:50:54,750 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 18:50:54,750 INFO  Starting to parse the user solution
2019-03-07 18:50:54,750 INFO  Displaying user solution
2019-03-07 18:50:54,808 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-17\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self,customer_id,customer_name,address):\r\n        self.__customer_id= customer_id\r\n        self.__customer_name = customer_name\r\n        self.__address = address\r\n\r\n    def get_customer_id(self):\r\n        return self.__customer_id\r\n\r\n\r\n    def get_customer_name(self):\r\n        return self.__customer_name\r\n\r\n\r\n    def get_address(self):\r\n        return self.__address\r\n    \r\n    def validate_customer_id(self):\r\n        if( self.__customer_id>100000 and self.__customer_id<1000000):\r\n            return True\r\n        else:\r\n            return False\r\n\r\n    \r\n    \r\n        \r\nclass Freight:\r\n    counter = 198\r\n    def __init__(self,recipient_customer,from_custmor,weight,distance):\r\n        self.__freight_id = None\r\n        self.__recipient_customer=recipient_customer\r\n        self.__from_customer = from_custmor\r\n        self.__weight = weight\r\n        self.__distance = distance\r\n        self.__freight_charge = None\r\n    def get_recipient_customer(self):\r\n        return self.__recipient_customer\r\n\r\n\r\n    def get_from_customer(self):\r\n        return self.__from_customer\r\n\r\n\r\n    def get_weight(self):\r\n        return self.__weight\r\n\r\n\r\n    def get_distance(self):\r\n        return self.__distance\r\n\r\n\r\n    def get_freight_charge(self):\r\n        return self.__freight_charge\r\n    \r\n    def validate_weight(self):\r\n        if(self.__weight%5==0 and self.__weight>0):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def validate_distance(self):\r\n        if(self.__distance>=500 and self.__distance<=5000):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def forward_cargo(self):\r\n        if(Customer.validate_customer_id(self)==True and self.validate_distance()==True and self.validate_weight()==True):\r\n            Freight.counter+=2\r\n            self.__freight_id = Freight.counter\r\n            self.__freight_charge = 150*self.__weight + 60*self.__distance\r\n        else:\r\n            self.__freight_charge=0\r\n        \r\n            \r\n","asgnmtId":"17","SolutionFileName":"Assign17.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 18:50:54,812 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 18:50:54,812 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 18:50:54,812 INFO  Invoking the service to verify the user solution
2019-03-07 18:50:54,813 INFO  Time before invoking service:Thu Mar 07 18:50:54 IST 2019
2019-03-07 18:50:54,813 INFO  Initialising service address for VerifySolution
2019-03-07 18:50:54,813 INFO  Time before invoking service In SUPER:Thu Mar 07 18:50:54 IST 2019
2019-03-07 18:50:56,085 INFO  Time after invoking service In SUPER:Thu Mar 07 18:50:56 IST 2019
2019-03-07 18:50:56,086 INFO  Service responded successfully with required details
2019-03-07 18:50:56,086 INFO  Time after invoking service:Thu Mar 07 18:50:56 IST 2019
2019-03-07 18:50:56,086 INFO  User solution successfully verified
2019-03-07 18:50:56,087 INFO  Processing the response from verify service
2019-03-07 18:50:56,089 INFO  Starting to parse JSON response
2019-03-07 18:50:56,090 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:50:56,090 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:50:56,090 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:50:56,090 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:50:56,091 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:50:56,091 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:50:56,091 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:50:56,091 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:50:56,091 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:50:56,091 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:50:56,092 INFO  Successfully parsed JSON response
2019-03-07 18:50:56,092 INFO  In the process of generating verify response in HTML
2019-03-07 18:50:56,159 INFO  Successfully generated verify response in HTML
2019-03-07 18:50:56,160 INFO  Successfully processed the response from service
2019-03-07 18:51:56,596 INFO  Setting request parameters for VerifySolution
2019-03-07 18:51:56,597 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 18:51:56,597 INFO  Starting to parse the user solution
2019-03-07 18:51:56,598 INFO  Displaying user solution
2019-03-07 18:51:56,651 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-17\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self,customer_id,customer_name,address):\r\n        self.__customer_id= customer_id\r\n        self.__customer_name = customer_name\r\n        self.__address = address\r\n\r\n    def get_customer_id(self):\r\n        return self.__customer_id\r\n\r\n\r\n    def get_customer_name(self):\r\n        return self.__customer_name\r\n\r\n\r\n    def get_address(self):\r\n        return self.__address\r\n    \r\n    def validate_customer_id(self):\r\n        if( self.__customer_id>100000 and self.__customer_id<1000000):\r\n            return True\r\n        else:\r\n            return False\r\n\r\n    \r\n    \r\n        \r\nclass Freight:\r\n    counter = 198\r\n    def __init__(self,recipient_customer,from_custmor,weight,distance):\r\n        self.__freight_id = None\r\n        self.__recipient_customer=recipient_customer\r\n        self.__from_customer = from_custmor\r\n        self.__weight = weight\r\n        self.__distance = distance\r\n        self.__freight_charge = None\r\n    def get_recipient_customer(self):\r\n        return self.__recipient_customer\r\n\r\n\r\n    def get_from_customer(self):\r\n        return self.__from_customer\r\n\r\n\r\n    def get_weight(self):\r\n        return self.__weight\r\n\r\n\r\n    def get_distance(self):\r\n        return self.__distance\r\n\r\n\r\n    def get_freight_charge(self):\r\n        return self.__freight_charge\r\n    \r\n    def validate_weight(self):\r\n        if(self.__weight%5==0 and self.__weight>0):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def validate_distance(self):\r\n        if(self.__distance>=500 and self.__distance<=5000):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def forward_cargo(self):\r\n        if(Customer.validate_customer_id(self)==True and self.validate_distance()==True and self.validate_weight()==True):\r\n            Freight.counter+=2\r\n            self.__freight_id = Freight.counter\r\n            self.__freight_charge = 150*self.__weight + 60*self.__distance\r\n        else:\r\n            self.__freight_charge=0\r\n        \r\n            \r\n","asgnmtId":"17","SolutionFileName":"Assign17.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 18:51:56,651 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 18:51:56,651 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 18:51:56,651 INFO  Invoking the service to verify the user solution
2019-03-07 18:51:56,652 INFO  Time before invoking service:Thu Mar 07 18:51:56 IST 2019
2019-03-07 18:51:56,652 INFO  Initialising service address for VerifySolution
2019-03-07 18:51:56,652 INFO  Time before invoking service In SUPER:Thu Mar 07 18:51:56 IST 2019
2019-03-07 18:51:58,031 INFO  Time after invoking service In SUPER:Thu Mar 07 18:51:58 IST 2019
2019-03-07 18:51:58,032 INFO  Service responded successfully with required details
2019-03-07 18:51:58,032 INFO  Time after invoking service:Thu Mar 07 18:51:58 IST 2019
2019-03-07 18:51:58,032 INFO  User solution successfully verified
2019-03-07 18:51:58,032 INFO  Processing the response from verify service
2019-03-07 18:51:58,035 INFO  Starting to parse JSON response
2019-03-07 18:51:58,037 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:51:58,037 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:51:58,037 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:51:58,037 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:51:58,037 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:51:58,037 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:51:58,037 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:51:58,037 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:51:58,037 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:51:58,037 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:51:58,039 INFO  Successfully parsed JSON response
2019-03-07 18:51:58,040 INFO  In the process of generating verify response in HTML
2019-03-07 18:51:58,107 INFO  Successfully generated verify response in HTML
2019-03-07 18:51:58,107 INFO  Successfully processed the response from service
2019-03-07 18:53:55,519 INFO  Setting request parameters for VerifySolution
2019-03-07 18:53:55,519 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 18:53:55,519 INFO  Starting to parse the user solution
2019-03-07 18:53:55,519 INFO  Displaying user solution
2019-03-07 18:53:55,568 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-17\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self,customer_id,customer_name,address):\r\n        self.__customer_id= customer_id\r\n        self.__customer_name = customer_name\r\n        self.__address = address\r\n\r\n    def get_customer_id(self):\r\n        return self.__customer_id\r\n\r\n\r\n    def get_customer_name(self):\r\n        return self.__customer_name\r\n\r\n\r\n    def get_address(self):\r\n        return self.__address\r\n    \r\n    def validate_customer_id(self):\r\n        if( self.__customer_id>100000 and self.__customer_id<1000000):\r\n            return True\r\n        else:\r\n            return False\r\n\r\n    \r\n    \r\n        \r\nclass Freight:\r\n    counter = 198\r\n    def __init__(self,recipient_customer,from_custmor,weight,distance):\r\n        self.__freight_id = None\r\n        self.__recipient_customer=recipient_customer\r\n        self.__from_customer = from_custmor\r\n        self.__weight = weight\r\n        self.__distance = distance\r\n        self.__freight_charge = None\r\n    def get_recipient_customer(self):\r\n        return self.__recipient_customer\r\n\r\n\r\n    def get_from_customer(self):\r\n        return self.__from_customer\r\n\r\n\r\n    def get_weight(self):\r\n        return self.__weight\r\n\r\n\r\n    def get_distance(self):\r\n        return self.__distance\r\n\r\n\r\n    def get_freight_charge(self):\r\n        return self.__freight_charge\r\n    \r\n    def validate_weight(self):\r\n        if(self.__weight%5==0 and self.__weight>0):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def validate_distance(self):\r\n        if(self.__distance>=500 and self.__distance<=5000):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def forward_cargo(self):\r\n        if(Customer.validate_customer_id(self)==True and self.validate_distance()==True and self.validate_weight()==True):\r\n            Freight.counter+=2\r\n            self.__freight_id = Freight.counter\r\n            self.__freight_charge = 150*self.__weight + 60*self.__distance\r\n        else:\r\n            self.__freight_charge=0\r\n            \r\n            \r\n\r\n        \r\n            \r\n","asgnmtId":"17","SolutionFileName":"Assign17.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 18:53:55,569 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 18:53:55,569 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 18:53:55,569 INFO  Invoking the service to verify the user solution
2019-03-07 18:53:55,570 INFO  Time before invoking service:Thu Mar 07 18:53:55 IST 2019
2019-03-07 18:53:55,570 INFO  Initialising service address for VerifySolution
2019-03-07 18:53:55,570 INFO  Time before invoking service In SUPER:Thu Mar 07 18:53:55 IST 2019
2019-03-07 18:53:57,055 INFO  Time after invoking service In SUPER:Thu Mar 07 18:53:57 IST 2019
2019-03-07 18:53:57,056 INFO  Service responded successfully with required details
2019-03-07 18:53:57,057 INFO  Time after invoking service:Thu Mar 07 18:53:57 IST 2019
2019-03-07 18:53:57,057 INFO  User solution successfully verified
2019-03-07 18:53:57,057 INFO  Processing the response from verify service
2019-03-07 18:53:57,059 INFO  Starting to parse JSON response
2019-03-07 18:53:57,060 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:53:57,060 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:53:57,060 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:53:57,060 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:53:57,060 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:53:57,060 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:53:57,060 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:53:57,060 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:53:57,060 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:53:57,061 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:53:57,062 INFO  Successfully parsed JSON response
2019-03-07 18:53:57,063 INFO  In the process of generating verify response in HTML
2019-03-07 18:53:57,130 INFO  Successfully generated verify response in HTML
2019-03-07 18:53:57,131 INFO  Successfully processed the response from service
2019-03-07 18:55:12,249 INFO  Setting request parameters for VerifySolution
2019-03-07 18:55:12,249 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 18:55:12,250 INFO  Starting to parse the user solution
2019-03-07 18:55:12,250 INFO  Displaying user solution
2019-03-07 18:55:12,320 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-17\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self,customer_id,customer_name,address):\r\n        self.__customer_id= customer_id\r\n        self.__customer_name = customer_name\r\n        self.__address = address\r\n\r\n    def get_customer_id(self):\r\n        return self.__customer_id\r\n\r\n\r\n    def get_customer_name(self):\r\n        return self.__customer_name\r\n\r\n\r\n    def get_address(self):\r\n        return self.__address\r\n    \r\n    def validate_customer_id(self):\r\n        if( self.__customer_id>=100000 and self.__customer_id<99999):\r\n            return True\r\n        else:\r\n            return False\r\n\r\n    \r\n    \r\n        \r\nclass Freight:\r\n    counter = 198\r\n    def __init__(self,recipient_customer,from_custmor,weight,distance):\r\n        self.__freight_id = None\r\n        self.__recipient_customer=recipient_customer\r\n        self.__from_customer = from_custmor\r\n        self.__weight = weight\r\n        self.__distance = distance\r\n        self.__freight_charge = None\r\n    def get_recipient_customer(self):\r\n        return self.__recipient_customer\r\n\r\n\r\n    def get_from_customer(self):\r\n        return self.__from_customer\r\n\r\n\r\n    def get_weight(self):\r\n        return self.__weight\r\n\r\n\r\n    def get_distance(self):\r\n        return self.__distance\r\n\r\n\r\n    def get_freight_charge(self):\r\n        return self.__freight_charge\r\n    \r\n    def validate_weight(self):\r\n        if(self.__weight%5==0 and self.__weight>0):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def validate_distance(self):\r\n        if(self.__distance>=500 and self.__distance<=5000):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def forward_cargo(self):\r\n        if(Customer.validate_customer_id(self)==True and self.validate_distance()==True and self.validate_weight()==True):\r\n            Freight.counter+=2\r\n            self.__freight_id = Freight.counter\r\n            self.__freight_charge = 150*self.__weight + 60*self.__distance\r\n        else:\r\n            self.__freight_charge=0\r\n            \r\n            \r\n\r\n        \r\n            \r\n","asgnmtId":"17","SolutionFileName":"Assign17.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 18:55:12,321 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 18:55:12,321 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 18:55:12,321 INFO  Invoking the service to verify the user solution
2019-03-07 18:55:12,321 INFO  Time before invoking service:Thu Mar 07 18:55:12 IST 2019
2019-03-07 18:55:12,321 INFO  Initialising service address for VerifySolution
2019-03-07 18:55:12,322 INFO  Time before invoking service In SUPER:Thu Mar 07 18:55:12 IST 2019
2019-03-07 18:55:13,648 INFO  Time after invoking service In SUPER:Thu Mar 07 18:55:13 IST 2019
2019-03-07 18:55:13,648 INFO  Service responded successfully with required details
2019-03-07 18:55:13,649 INFO  Time after invoking service:Thu Mar 07 18:55:13 IST 2019
2019-03-07 18:55:13,649 INFO  User solution successfully verified
2019-03-07 18:55:13,649 INFO  Processing the response from verify service
2019-03-07 18:55:13,651 INFO  Starting to parse JSON response
2019-03-07 18:55:13,653 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:55:13,653 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:55:13,653 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:55:13,653 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:55:13,653 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:55:13,653 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:55:13,653 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:55:13,653 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:55:13,653 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:55:13,653 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:55:13,654 INFO  Successfully parsed JSON response
2019-03-07 18:55:13,655 INFO  In the process of generating verify response in HTML
2019-03-07 18:55:13,729 INFO  Successfully generated verify response in HTML
2019-03-07 18:55:13,729 INFO  Successfully processed the response from service
2019-03-07 18:56:03,721 INFO  Setting request parameters for VerifySolution
2019-03-07 18:56:03,721 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 18:56:03,721 INFO  Starting to parse the user solution
2019-03-07 18:56:03,721 INFO  Displaying user solution
2019-03-07 18:56:03,774 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-17\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self,customer_id,customer_name,address):\r\n        self.__customer_id= customer_id\r\n        self.__customer_name = customer_name\r\n        self.__address = address\r\n\r\n    def get_customer_id(self):\r\n        return self.__customer_id\r\n\r\n\r\n    def get_customer_name(self):\r\n        return self.__customer_name\r\n\r\n\r\n    def get_address(self):\r\n        return self.__address\r\n    \r\n    def validate_customer_id(self):\r\n        if( self.__customer_id>=100000 and self.__customer_id<999999):\r\n            return True\r\n        else:\r\n            return False\r\n\r\n    \r\n    \r\n        \r\nclass Freight:\r\n    counter = 198\r\n    def __init__(self,recipient_customer,from_custmor,weight,distance):\r\n        self.__freight_id = None\r\n        self.__recipient_customer=recipient_customer\r\n        self.__from_customer = from_custmor\r\n        self.__weight = weight\r\n        self.__distance = distance\r\n        self.__freight_charge = None\r\n    def get_recipient_customer(self):\r\n        return self.__recipient_customer\r\n\r\n\r\n    def get_from_customer(self):\r\n        return self.__from_customer\r\n\r\n\r\n    def get_weight(self):\r\n        return self.__weight\r\n\r\n\r\n    def get_distance(self):\r\n        return self.__distance\r\n\r\n\r\n    def get_freight_charge(self):\r\n        return self.__freight_charge\r\n    \r\n    def validate_weight(self):\r\n        if(self.__weight%5==0 and self.__weight>0):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def validate_distance(self):\r\n        if(self.__distance>=500 and self.__distance<=5000):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def forward_cargo(self):\r\n        if(Customer.validate_customer_id(self)==True and self.validate_distance()==True and self.validate_weight()==True):\r\n            Freight.counter+=2\r\n            self.__freight_id = Freight.counter\r\n            self.__freight_charge = 150*self.__weight + 60*self.__distance\r\n        else:\r\n            self.__freight_charge=0\r\n            \r\n            \r\n\r\n        \r\n            \r\n","asgnmtId":"17","SolutionFileName":"Assign17.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 18:56:03,774 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 18:56:03,774 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 18:56:03,774 INFO  Invoking the service to verify the user solution
2019-03-07 18:56:03,775 INFO  Time before invoking service:Thu Mar 07 18:56:03 IST 2019
2019-03-07 18:56:03,775 INFO  Initialising service address for VerifySolution
2019-03-07 18:56:03,775 INFO  Time before invoking service In SUPER:Thu Mar 07 18:56:03 IST 2019
2019-03-07 18:56:05,124 INFO  Time after invoking service In SUPER:Thu Mar 07 18:56:05 IST 2019
2019-03-07 18:56:05,124 INFO  Service responded successfully with required details
2019-03-07 18:56:05,125 INFO  Time after invoking service:Thu Mar 07 18:56:05 IST 2019
2019-03-07 18:56:05,125 INFO  User solution successfully verified
2019-03-07 18:56:05,125 INFO  Processing the response from verify service
2019-03-07 18:56:05,128 INFO  Starting to parse JSON response
2019-03-07 18:56:05,129 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:56:05,129 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:56:05,129 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:56:05,129 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:56:05,129 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:56:05,129 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:56:05,129 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:56:05,129 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:56:05,129 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:56:05,129 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:56:05,131 INFO  Successfully parsed JSON response
2019-03-07 18:56:05,132 INFO  In the process of generating verify response in HTML
2019-03-07 18:56:05,198 INFO  Successfully generated verify response in HTML
2019-03-07 18:56:05,198 INFO  Successfully processed the response from service
2019-03-07 18:56:33,909 INFO  Setting request parameters for VerifySolution
2019-03-07 18:56:33,909 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 18:56:33,909 INFO  Starting to parse the user solution
2019-03-07 18:56:33,910 INFO  Displaying user solution
2019-03-07 18:56:33,958 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-17\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self,customer_id,customer_name,address):\r\n        self.__customer_id= customer_id\r\n        self.__customer_name = customer_name\r\n        self.__address = address\r\n\r\n    def get_customer_id(self):\r\n        return self.__customer_id\r\n\r\n\r\n    def get_customer_name(self):\r\n        return self.__customer_name\r\n\r\n\r\n    def get_address(self):\r\n        return self.__address\r\n    \r\n    def validate_customer_id(self):\r\n        if( self.__customer_id>=100000 and self.__customer_id<199999):\r\n            return True\r\n        else:\r\n            return False\r\n\r\n    \r\n    \r\n        \r\nclass Freight:\r\n    counter = 198\r\n    def __init__(self,recipient_customer,from_custmor,weight,distance):\r\n        self.__freight_id = None\r\n        self.__recipient_customer=recipient_customer\r\n        self.__from_customer = from_custmor\r\n        self.__weight = weight\r\n        self.__distance = distance\r\n        self.__freight_charge = None\r\n    def get_recipient_customer(self):\r\n        return self.__recipient_customer\r\n\r\n\r\n    def get_from_customer(self):\r\n        return self.__from_customer\r\n\r\n\r\n    def get_weight(self):\r\n        return self.__weight\r\n\r\n\r\n    def get_distance(self):\r\n        return self.__distance\r\n\r\n\r\n    def get_freight_charge(self):\r\n        return self.__freight_charge\r\n    \r\n    def validate_weight(self):\r\n        if(self.__weight%5==0 and self.__weight>0):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def validate_distance(self):\r\n        if(self.__distance>=500 and self.__distance<=5000):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def forward_cargo(self):\r\n        if(Customer.validate_customer_id(self)==True and self.validate_distance()==True and self.validate_weight()==True):\r\n            Freight.counter+=2\r\n            self.__freight_id = Freight.counter\r\n            self.__freight_charge = 150*self.__weight + 60*self.__distance\r\n        else:\r\n            self.__freight_charge=0\r\n            \r\n            \r\n\r\n        \r\n            \r\n","asgnmtId":"17","SolutionFileName":"Assign17.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 18:56:33,959 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 18:56:33,959 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 18:56:33,959 INFO  Invoking the service to verify the user solution
2019-03-07 18:56:33,960 INFO  Time before invoking service:Thu Mar 07 18:56:33 IST 2019
2019-03-07 18:56:33,960 INFO  Initialising service address for VerifySolution
2019-03-07 18:56:33,960 INFO  Time before invoking service In SUPER:Thu Mar 07 18:56:33 IST 2019
2019-03-07 18:56:35,225 INFO  Time after invoking service In SUPER:Thu Mar 07 18:56:35 IST 2019
2019-03-07 18:56:35,225 INFO  Service responded successfully with required details
2019-03-07 18:56:35,225 INFO  Time after invoking service:Thu Mar 07 18:56:35 IST 2019
2019-03-07 18:56:35,226 INFO  User solution successfully verified
2019-03-07 18:56:35,226 INFO  Processing the response from verify service
2019-03-07 18:56:35,231 INFO  Starting to parse JSON response
2019-03-07 18:56:35,233 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:56:35,233 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:56:35,233 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:56:35,233 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:56:35,233 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:56:35,233 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:56:35,233 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:56:35,233 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:56:35,233 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:56:35,233 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:56:35,234 INFO  Successfully parsed JSON response
2019-03-07 18:56:35,234 INFO  In the process of generating verify response in HTML
2019-03-07 18:56:35,300 INFO  Successfully generated verify response in HTML
2019-03-07 18:56:35,300 INFO  Successfully processed the response from service
2019-03-07 18:56:59,702 INFO  Setting request parameters for VerifySolution
2019-03-07 18:56:59,703 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 18:56:59,703 INFO  Starting to parse the user solution
2019-03-07 18:56:59,703 INFO  Displaying user solution
2019-03-07 18:56:59,758 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-17\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self,customer_id,customer_name,address):\r\n        self.__customer_id= customer_id\r\n        self.__customer_name = customer_name\r\n        self.__address = address\r\n\r\n    def get_customer_id(self):\r\n        return self.__customer_id\r\n\r\n\r\n    def get_customer_name(self):\r\n        return self.__customer_name\r\n\r\n\r\n    def get_address(self):\r\n        return self.__address\r\n    \r\n    def validate_customer_id(self):\r\n        if( self.__customer_id>=100000 and self.__customer_id<=199999):\r\n            return True\r\n        else:\r\n            return False\r\n\r\n    \r\n    \r\n        \r\nclass Freight:\r\n    counter = 198\r\n    def __init__(self,recipient_customer,from_custmor,weight,distance):\r\n        self.__freight_id = None\r\n        self.__recipient_customer=recipient_customer\r\n        self.__from_customer = from_custmor\r\n        self.__weight = weight\r\n        self.__distance = distance\r\n        self.__freight_charge = None\r\n    def get_recipient_customer(self):\r\n        return self.__recipient_customer\r\n\r\n\r\n    def get_from_customer(self):\r\n        return self.__from_customer\r\n\r\n\r\n    def get_weight(self):\r\n        return self.__weight\r\n\r\n\r\n    def get_distance(self):\r\n        return self.__distance\r\n\r\n\r\n    def get_freight_charge(self):\r\n        return self.__freight_charge\r\n    \r\n    def validate_weight(self):\r\n        if(self.__weight%5==0 and self.__weight>0):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def validate_distance(self):\r\n        if(self.__distance>=500 and self.__distance<=5000):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def forward_cargo(self):\r\n        if(Customer.validate_customer_id(self)==True and self.validate_distance()==True and self.validate_weight()==True):\r\n            Freight.counter+=2\r\n            self.__freight_id = Freight.counter\r\n            self.__freight_charge = 150*self.__weight + 60*self.__distance\r\n        else:\r\n            self.__freight_charge=0\r\n            \r\n            \r\n\r\n        \r\n            \r\n","asgnmtId":"17","SolutionFileName":"Assign17.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 18:56:59,758 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 18:56:59,758 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 18:56:59,758 INFO  Invoking the service to verify the user solution
2019-03-07 18:56:59,759 INFO  Time before invoking service:Thu Mar 07 18:56:59 IST 2019
2019-03-07 18:56:59,759 INFO  Initialising service address for VerifySolution
2019-03-07 18:56:59,759 INFO  Time before invoking service In SUPER:Thu Mar 07 18:56:59 IST 2019
2019-03-07 18:57:01,087 INFO  Time after invoking service In SUPER:Thu Mar 07 18:57:01 IST 2019
2019-03-07 18:57:01,088 INFO  Service responded successfully with required details
2019-03-07 18:57:01,088 INFO  Time after invoking service:Thu Mar 07 18:57:01 IST 2019
2019-03-07 18:57:01,088 INFO  User solution successfully verified
2019-03-07 18:57:01,089 INFO  Processing the response from verify service
2019-03-07 18:57:01,091 INFO  Starting to parse JSON response
2019-03-07 18:57:01,092 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:57:01,092 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:57:01,092 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:57:01,092 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:57:01,092 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:57:01,092 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:57:01,092 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:57:01,092 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:57:01,092 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:57:01,092 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:57:01,094 INFO  Successfully parsed JSON response
2019-03-07 18:57:01,095 INFO  In the process of generating verify response in HTML
2019-03-07 18:57:01,167 INFO  Successfully generated verify response in HTML
2019-03-07 18:57:01,167 INFO  Successfully processed the response from service
2019-03-07 18:57:36,054 INFO  Setting request parameters for VerifySolution
2019-03-07 18:57:36,054 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 18:57:36,054 INFO  Starting to parse the user solution
2019-03-07 18:57:36,056 INFO  Displaying user solution
2019-03-07 18:57:36,112 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-17\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self,customer_id,customer_name,address):\r\n        self.__customer_id= customer_id\r\n        self.__customer_name = customer_name\r\n        self.__address = address\r\n\r\n    def get_customer_id(self):\r\n        return self.__customer_id\r\n\r\n\r\n    def get_customer_name(self):\r\n        return self.__customer_name\r\n\r\n\r\n    def get_address(self):\r\n        return self.__address\r\n    \r\n    def validate_customer_id(self):\r\n        if( self.__customer_id>=100000 and self.__customer_id<=199999):\r\n            return True\r\n        else:\r\n            return False\r\n\r\n    \r\n    \r\n        \r\nclass Freight:\r\n    counter = 198\r\n    def __init__(self,recipient_customer,from_custmor,weight,distance):\r\n        self.__freight_id = None\r\n        self.__recipient_customer=recipient_customer\r\n        self.__from_customer = from_custmor\r\n        self.__weight = weight\r\n        self.__distance = distance\r\n        self.__freight_charge = None\r\n    def get_recipient_customer(self):\r\n        return self.__recipient_customer\r\n\r\n\r\n    def get_from_customer(self):\r\n        return self.__from_customer\r\n\r\n\r\n    def get_weight(self):\r\n        return self.__weight\r\n\r\n\r\n    def get_distance(self):\r\n        return self.__distance\r\n\r\n\r\n    def get_freight_charge(self):\r\n        return self.__freight_charge\r\n    \r\n    def validate_weight(self):\r\n        if(self.__weight%5==0 and self.__weight>0):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def validate_distance(self):\r\n        if(self.__distance>=500 and self.__distance<=5000):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def forward_cargo(self):\r\n        if(Customer.validate_customer_id(self)==True and self.validate_distance()==True and self.validate_weight()==True):\r\n            Freight.counter+=2\r\n            self.__freight_id = Freight.counter\r\n            self.__freight_charge = 150*self.__weight + 60*self.__distance\r\n        else:\r\n            self.__freight_charge=0\r\n            \r\n            \r\n\r\n        \r\n            \r\n","asgnmtId":"17","SolutionFileName":"Assign17.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 18:57:36,113 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 18:57:36,113 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 18:57:36,113 INFO  Invoking the service to verify the user solution
2019-03-07 18:57:36,113 INFO  Time before invoking service:Thu Mar 07 18:57:36 IST 2019
2019-03-07 18:57:36,113 INFO  Initialising service address for VerifySolution
2019-03-07 18:57:36,114 INFO  Time before invoking service In SUPER:Thu Mar 07 18:57:36 IST 2019
2019-03-07 18:57:37,371 INFO  Time after invoking service In SUPER:Thu Mar 07 18:57:37 IST 2019
2019-03-07 18:57:37,372 INFO  Service responded successfully with required details
2019-03-07 18:57:37,372 INFO  Time after invoking service:Thu Mar 07 18:57:37 IST 2019
2019-03-07 18:57:37,372 INFO  User solution successfully verified
2019-03-07 18:57:37,372 INFO  Processing the response from verify service
2019-03-07 18:57:37,374 INFO  Starting to parse JSON response
2019-03-07 18:57:37,376 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:57:37,376 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:57:37,376 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:57:37,376 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:57:37,376 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:57:37,376 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:57:37,376 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:57:37,376 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:57:37,376 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:57:37,376 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:57:37,378 INFO  Successfully parsed JSON response
2019-03-07 18:57:37,378 INFO  In the process of generating verify response in HTML
2019-03-07 18:57:37,447 INFO  Successfully generated verify response in HTML
2019-03-07 18:57:37,447 INFO  Successfully processed the response from service
2019-03-07 18:58:57,861 INFO  Setting request parameters for VerifySolution
2019-03-07 18:58:57,861 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 18:58:57,861 INFO  Starting to parse the user solution
2019-03-07 18:58:57,862 INFO  Displaying user solution
2019-03-07 18:58:57,913 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-17\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self,customer_id,customer_name,address):\r\n        self.__customer_id= customer_id\r\n        self.__customer_name = customer_name\r\n        self.__address = address\r\n\r\n    def get_customer_id(self):\r\n        return self.__customer_id\r\n\r\n\r\n    def get_customer_name(self):\r\n        return self.__customer_name\r\n\r\n\r\n    def get_address(self):\r\n        return self.__address\r\n    \r\n    def validate_customer_id(self):\r\n        if( self.__customer_id>=100000 and self.__customer_id<=199999):\r\n            return True\r\n        else:\r\n            return False\r\n\r\n    \r\n    \r\n        \r\nclass Freight:\r\n    counter = 198\r\n    def __init__(self,recipient_customer,from_custmor,weight,distance):\r\n        self.__freight_id = None\r\n        self.__recipient_customer=recipient_customer\r\n        self.__from_customer = from_custmor\r\n        self.__weight = weight\r\n        self.__distance = distance\r\n        self.__freight_charge = None\r\n\r\n    def get_freight_id(self):\r\n        return self.__freight_id\r\n\r\n    def get_recipient_customer(self):\r\n        return self.__recipient_customer\r\n\r\n\r\n    def get_from_customer(self):\r\n        return self.__from_customer\r\n\r\n\r\n    def get_weight(self):\r\n        return self.__weight\r\n\r\n\r\n    def get_distance(self):\r\n        return self.__distance\r\n\r\n\r\n    def get_freight_charge(self):\r\n        return self.__freight_charge\r\n    \r\n    def validate_weight(self):\r\n        if(self.__weight%5==0 and self.__weight>0):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def validate_distance(self):\r\n        if(self.__distance>=500 and self.__distance<=5000):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def forward_cargo(self):\r\n        if(Customer.validate_customer_id(self)==True and self.validate_distance()==True and self.validate_weight()==True):\r\n            Freight.counter+=2\r\n            self.__freight_id = Freight.counter\r\n            self.__freight_charge = 150*self.__weight + 60*self.__distance\r\n        else:\r\n            self.__freight_charge=0\r\n    \r\n            \r\n            \r\n\r\n        \r\n            \r\n","asgnmtId":"17","SolutionFileName":"Assign17.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 18:58:57,913 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 18:58:57,913 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 18:58:57,913 INFO  Invoking the service to verify the user solution
2019-03-07 18:58:57,914 INFO  Time before invoking service:Thu Mar 07 18:58:57 IST 2019
2019-03-07 18:58:57,914 INFO  Initialising service address for VerifySolution
2019-03-07 18:58:57,914 INFO  Time before invoking service In SUPER:Thu Mar 07 18:58:57 IST 2019
2019-03-07 18:58:59,287 INFO  Time after invoking service In SUPER:Thu Mar 07 18:58:59 IST 2019
2019-03-07 18:58:59,287 INFO  Service responded successfully with required details
2019-03-07 18:58:59,288 INFO  Time after invoking service:Thu Mar 07 18:58:59 IST 2019
2019-03-07 18:58:59,288 INFO  User solution successfully verified
2019-03-07 18:58:59,288 INFO  Processing the response from verify service
2019-03-07 18:58:59,291 INFO  Starting to parse JSON response
2019-03-07 18:58:59,292 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:58:59,292 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:58:59,292 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:58:59,292 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:58:59,292 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:58:59,293 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:58:59,293 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:58:59,293 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:58:59,293 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:58:59,293 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 18:58:59,294 INFO  Successfully parsed JSON response
2019-03-07 18:58:59,295 INFO  In the process of generating verify response in HTML
2019-03-07 18:58:59,352 INFO  Successfully generated verify response in HTML
2019-03-07 18:58:59,352 INFO  Successfully processed the response from service
2019-03-07 19:00:10,910 INFO  Setting request parameters for VerifySolution
2019-03-07 19:00:10,910 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 19:00:10,911 INFO  Starting to parse the user solution
2019-03-07 19:00:10,911 INFO  Displaying user solution
2019-03-07 19:00:10,966 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-17\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self,customer_id,customer_name,address):\r\n        self.__customer_id= customer_id\r\n        self.__customer_name = customer_name\r\n        self.__address = address\r\n\r\n    def get_customer_id(self):\r\n        return self.__customer_id\r\n\r\n\r\n    def get_customer_name(self):\r\n        return self.__customer_name\r\n\r\n\r\n    def get_address(self):\r\n        return self.__address\r\n    \r\n    def validate_customer_id(self):\r\n        if( self.__customer_id>=100000 and self.__customer_id<=199999):\r\n            return True\r\n        else:\r\n            return False\r\n\r\n    \r\n    \r\n        \r\nclass Freight:\r\n    counter = 198\r\n    def __init__(self,recipient_customer,from_custmor,weight,distance):\r\n        self.__freight_id = None\r\n        self.__recipient_customer=recipient_customer\r\n        self.__from_customer = from_custmor\r\n        self.__weight = weight\r\n        self.__distance = distance\r\n        self.__freight_charge = None\r\n\r\n    def get_freight_id(self):\r\n        return self.__freight_id\r\n\r\n    def get_recipient_customer(self):\r\n        return self.__recipient_customer\r\n\r\n\r\n    def get_from_customer(self):\r\n        return self.__from_customer\r\n\r\n\r\n    def get_weight(self):\r\n        return self.__weight\r\n\r\n\r\n    def get_distance(self):\r\n        return self.__distance\r\n\r\n\r\n    def get_freight_charge(self):\r\n        return self.__freight_charge\r\n    \r\n    def validate_weight(self):\r\n        if(self.__weight%5==0 and self.__weight>0):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def validate_distance(self):\r\n        if(self.__distance>=500 and self.__distance<=5000):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def forward_cargo(self):\r\n        if(Customer.validate_customer_id(self)==True and self.validate_distance()==True and self.validate_weight()==True):\r\n            Freight.counter+=2\r\n            self.__freight_id = Freight.counter\r\n            self.__freight_charge = 150*self.__weight + 60*self.__distance\r\n        else:\r\n            self.__freight_charge=0\r\n    \r\n            \r\n            \r\n\r\n        \r\n            \r\n","asgnmtId":"17","SolutionFileName":"Assign17.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 19:00:10,967 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 19:00:10,967 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 19:00:10,967 INFO  Invoking the service to verify the user solution
2019-03-07 19:00:10,967 INFO  Time before invoking service:Thu Mar 07 19:00:10 IST 2019
2019-03-07 19:00:10,967 INFO  Initialising service address for VerifySolution
2019-03-07 19:00:10,968 INFO  Time before invoking service In SUPER:Thu Mar 07 19:00:10 IST 2019
2019-03-07 19:00:12,240 INFO  Time after invoking service In SUPER:Thu Mar 07 19:00:12 IST 2019
2019-03-07 19:00:12,240 INFO  Service responded successfully with required details
2019-03-07 19:00:12,240 INFO  Time after invoking service:Thu Mar 07 19:00:12 IST 2019
2019-03-07 19:00:12,240 INFO  User solution successfully verified
2019-03-07 19:00:12,241 INFO  Processing the response from verify service
2019-03-07 19:00:12,243 INFO  Starting to parse JSON response
2019-03-07 19:00:12,245 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:00:12,245 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:00:12,245 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:00:12,245 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:00:12,245 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:00:12,245 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:00:12,245 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:00:12,245 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:00:12,245 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:00:12,245 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:00:12,246 INFO  Successfully parsed JSON response
2019-03-07 19:00:12,246 INFO  In the process of generating verify response in HTML
2019-03-07 19:00:12,316 INFO  Successfully generated verify response in HTML
2019-03-07 19:00:12,316 INFO  Successfully processed the response from service
2019-03-07 19:00:26,183 INFO  Setting request parameters for VerifySolution
2019-03-07 19:00:26,183 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 19:00:26,183 INFO  Starting to parse the user solution
2019-03-07 19:00:26,184 INFO  Displaying user solution
2019-03-07 19:00:26,232 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-17\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self,customer_id,customer_name,address):\r\n        self.__customer_id= customer_id\r\n        self.__customer_name = customer_name\r\n        self.__address = address\r\n\r\n    def get_customer_id(self):\r\n        return self.__customer_id\r\n\r\n\r\n    def get_customer_name(self):\r\n        return self.__customer_name\r\n\r\n\r\n    def get_address(self):\r\n        return self.__address\r\n    \r\n    def validate_customer_id(self):\r\n        if( self.__customer_id>=100000 and self.__customer_id<=199999):\r\n            return True\r\n        else:\r\n            return False\r\n\r\n    \r\n    \r\n        \r\nclass Freight:\r\n    counter = 198\r\n    def __init__(self,recipient_customer,from_custmor,weight,distance):\r\n        self.__freight_id = None\r\n        self.__recipient_customer=recipient_customer\r\n        self.__from_customer = from_custmor\r\n        self.__weight = weight\r\n        self.__distance = distance\r\n        self.__freight_charge = None\r\n\r\n    def get_freight_id(self):\r\n        return self.__freight_id\r\n\r\n    def get_recipient_customer(self):\r\n        return self.__recipient_customer\r\n\r\n\r\n    def get_from_customer(self):\r\n        return self.__from_customer\r\n\r\n\r\n    def get_weight(self):\r\n        return self.__weight\r\n\r\n\r\n    def get_distance(self):\r\n        return self.__distance\r\n\r\n\r\n    def get_freight_charge(self):\r\n        return self.__freight_charge\r\n    \r\n    def validate_weight(self):\r\n        if(self.__weight%5==0 and self.__weight>0):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def validate_distance(self):\r\n        if(self.__distance>=500 and self.__distance<=5000):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def forward_cargo(self):\r\n        if(Customer.validate_customer_id(self)==True and self.validate_distance()==True and self.validate_weight()==True):\r\n            Freight.counter+=2\r\n            self.__freight_id = Freight.counter\r\n            self.__freight_charge = 150*self.__weight + 60*self.__distance\r\n        else:\r\n            self.__freight_charge=0\r\n    \r\n            \r\n            \r\n\r\n        \r\n            \r\n","asgnmtId":"17","SolutionFileName":"Assign17.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 19:00:26,232 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 19:00:26,233 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 19:00:26,233 INFO  Invoking the service to verify the user solution
2019-03-07 19:00:26,233 INFO  Time before invoking service:Thu Mar 07 19:00:26 IST 2019
2019-03-07 19:00:26,233 INFO  Initialising service address for VerifySolution
2019-03-07 19:00:26,234 INFO  Time before invoking service In SUPER:Thu Mar 07 19:00:26 IST 2019
2019-03-07 19:00:27,559 INFO  Time after invoking service In SUPER:Thu Mar 07 19:00:27 IST 2019
2019-03-07 19:00:27,559 INFO  Service responded successfully with required details
2019-03-07 19:00:27,559 INFO  Time after invoking service:Thu Mar 07 19:00:27 IST 2019
2019-03-07 19:00:27,559 INFO  User solution successfully verified
2019-03-07 19:00:27,560 INFO  Processing the response from verify service
2019-03-07 19:00:27,561 INFO  Starting to parse JSON response
2019-03-07 19:00:27,563 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:00:27,563 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:00:27,563 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:00:27,563 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:00:27,563 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:00:27,563 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:00:27,563 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:00:27,563 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:00:27,563 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:00:27,563 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:00:27,564 INFO  Successfully parsed JSON response
2019-03-07 19:00:27,565 INFO  In the process of generating verify response in HTML
2019-03-07 19:00:27,627 INFO  Successfully generated verify response in HTML
2019-03-07 19:00:27,627 INFO  Successfully processed the response from service
2019-03-07 19:01:52,657 INFO  Setting request parameters for VerifySolution
2019-03-07 19:01:52,657 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 19:01:52,657 INFO  Starting to parse the user solution
2019-03-07 19:01:52,658 INFO  Displaying user solution
2019-03-07 19:01:52,740 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-17\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self,customer_id,customer_name,address):\r\n        self.__customer_id= customer_id\r\n        self.__customer_name = customer_name\r\n        self.__address = address\r\n\r\n    def get_customer_id(self):\r\n        return self.__customer_id\r\n\r\n\r\n    def get_customer_name(self):\r\n        return self.__customer_name\r\n\r\n\r\n    def get_address(self):\r\n        return self.__address\r\n    \r\n    def validate_customer_id(self):\r\n        if( self.__customer_id>=100000 and self.__customer_id<=199999):\r\n            return True\r\n        else:\r\n            return False\r\n\r\n    \r\n    \r\n        \r\nclass Freight:\r\n    counter = 198\r\n    def __init__(self,recipient_customer,from_custmor,weight,distance):\r\n        self.__freight_id = None\r\n        self.__recipient_customer=recipient_customer\r\n        self.__from_customer = from_custmor\r\n        self.__weight = weight\r\n        self.__distance = distance\r\n        self.__freight_charge = None\r\n\r\n    def get_freight_id(self):\r\n        return self.__freight_id\r\n\r\n    def get_recipient_customer(self):\r\n        return self.__recipient_customer\r\n\r\n\r\n    def get_from_customer(self):\r\n        return self.__from_customer\r\n\r\n\r\n    def get_weight(self):\r\n        return self.__weight\r\n\r\n\r\n    def get_distance(self):\r\n        return self.__distance\r\n\r\n\r\n    def get_freight_charge(self):\r\n        return self.__freight_charge\r\n    \r\n    def validate_weight(self):\r\n        if(self.__weight%5==0 and self.__weight>0):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def validate_distance(self):\r\n        if(self.__distance>=500 and self.__distance<=5000):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def forward_cargo(self):\r\n        if(Customer.validate_customer_id(self)==True and self.validate_distance()==True and self.validate_weight()==True):\r\n            Freight.counter+=2\r\n            self.__freight_id = Freight.counter\r\n            self.__freight_charge = 150*self.__weight + 60*self.__distance\r\n        else:\r\n            self.__freight_charge=0\r\n        return self.get_freight_charge()\r\n    \r\n            \r\n            \r\n\r\n        \r\n            \r\n","asgnmtId":"17","SolutionFileName":"Assign17.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 19:01:52,740 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 19:01:52,741 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 19:01:52,741 INFO  Invoking the service to verify the user solution
2019-03-07 19:01:52,741 INFO  Time before invoking service:Thu Mar 07 19:01:52 IST 2019
2019-03-07 19:01:52,741 INFO  Initialising service address for VerifySolution
2019-03-07 19:01:52,742 INFO  Time before invoking service In SUPER:Thu Mar 07 19:01:52 IST 2019
2019-03-07 19:01:54,160 INFO  Time after invoking service In SUPER:Thu Mar 07 19:01:54 IST 2019
2019-03-07 19:01:54,160 INFO  Service responded successfully with required details
2019-03-07 19:01:54,161 INFO  Time after invoking service:Thu Mar 07 19:01:54 IST 2019
2019-03-07 19:01:54,161 INFO  User solution successfully verified
2019-03-07 19:01:54,161 INFO  Processing the response from verify service
2019-03-07 19:01:54,170 INFO  Starting to parse JSON response
2019-03-07 19:01:54,172 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:01:54,172 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:01:54,172 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:01:54,172 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:01:54,172 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:01:54,172 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:01:54,172 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:01:54,172 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:01:54,172 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:01:54,172 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:01:54,174 INFO  Successfully parsed JSON response
2019-03-07 19:01:54,175 INFO  In the process of generating verify response in HTML
2019-03-07 19:01:54,245 INFO  Successfully generated verify response in HTML
2019-03-07 19:01:54,245 INFO  Successfully processed the response from service
2019-03-07 19:03:48,291 INFO  Setting request parameters for VerifySolution
2019-03-07 19:03:48,291 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 19:03:48,291 INFO  Starting to parse the user solution
2019-03-07 19:03:48,292 INFO  Displaying user solution
2019-03-07 19:03:48,360 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-17\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self,customer_id,customer_name,address):\r\n        self.__customer_id= customer_id\r\n        self.__customer_name = customer_name\r\n        self.__address = address\r\n\r\n    def get_customer_id(self):\r\n        return self.__customer_id\r\n\r\n\r\n    def get_customer_name(self):\r\n        return self.__customer_name\r\n\r\n\r\n    def get_address(self):\r\n        return self.__address\r\n    \r\n    def validate_customer_id(self):\r\n        if( self.__customer_id>=100000 and self.__customer_id<=199999):\r\n            return True\r\n        else:\r\n            return False\r\n\r\n    \r\n    \r\n        \r\nclass Freight:\r\n    counter = 198\r\n    def __init__(self,recipient_customer,from_custmor,weight,distance):\r\n        self.__freight_id = None\r\n        self.__recipient_customer=recipient_customer\r\n        self.__from_customer = from_custmor\r\n        self.__weight = weight\r\n        self.__distance = distance\r\n        self.__freight_charge = None\r\n\r\n    def get_freight_id(self):\r\n        return self.__freight_id\r\n\r\n    def get_recipient_customer(self):\r\n        return self.__recipient_customer\r\n\r\n\r\n    def get_from_customer(self):\r\n        return self.__from_customer\r\n\r\n\r\n    def get_weight(self):\r\n        return self.__weight\r\n\r\n\r\n    def get_distance(self):\r\n        return self.__distance\r\n\r\n\r\n    def get_freight_charge(self):\r\n        return self.__freight_charge\r\n    \r\n    def validate_weight(self):\r\n        if(self.__weight%5==0 and self.__weight>0):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def validate_distance(self):\r\n        if(self.__distance>=500 and self.__distance<=5000):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def forward_cargo(self):\r\n        if(Customer.validate_customer_id(self)==True and self.validate_distance()==True and self.validate_weight()==True):\r\n            Freight.counter+=2\r\n            self.__freight_id = Freight.counter\r\n            self.__freight_charge = 150*self.__weight + 60*self.__distance\r\n        else:\r\n            self.__freight_charge=0\r\n        return self.get_freight_charge()\r\n    \r\n            \r\n            \r\n\r\n        \r\n            \r\n","asgnmtId":"17","SolutionFileName":"Assign17.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 19:03:48,360 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 19:03:48,360 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 19:03:48,361 INFO  Invoking the service to verify the user solution
2019-03-07 19:03:48,361 INFO  Time before invoking service:Thu Mar 07 19:03:48 IST 2019
2019-03-07 19:03:48,361 INFO  Initialising service address for VerifySolution
2019-03-07 19:03:48,362 INFO  Time before invoking service In SUPER:Thu Mar 07 19:03:48 IST 2019
2019-03-07 19:03:49,636 INFO  Time after invoking service In SUPER:Thu Mar 07 19:03:49 IST 2019
2019-03-07 19:03:49,637 INFO  Service responded successfully with required details
2019-03-07 19:03:49,637 INFO  Time after invoking service:Thu Mar 07 19:03:49 IST 2019
2019-03-07 19:03:49,637 INFO  User solution successfully verified
2019-03-07 19:03:49,638 INFO  Processing the response from verify service
2019-03-07 19:03:49,641 INFO  Starting to parse JSON response
2019-03-07 19:03:49,643 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:03:49,643 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:03:49,643 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:03:49,643 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:03:49,643 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:03:49,643 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:03:49,643 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:03:49,643 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:03:49,644 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:03:49,644 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:03:49,645 INFO  Successfully parsed JSON response
2019-03-07 19:03:49,646 INFO  In the process of generating verify response in HTML
2019-03-07 19:03:49,720 INFO  Successfully generated verify response in HTML
2019-03-07 19:03:49,720 INFO  Successfully processed the response from service
2019-03-07 19:05:49,711 INFO  Setting request parameters for VerifySolution
2019-03-07 19:05:49,711 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 19:05:49,711 INFO  Starting to parse the user solution
2019-03-07 19:05:49,714 INFO  Displaying user solution
2019-03-07 19:05:49,768 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-17\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self,customer_id,customer_name,address):\r\n        self.__customer_id= customer_id\r\n        self.__customer_name = customer_name\r\n        self.__address = address\r\n\r\n    def get_customer_id(self):\r\n        return self.__customer_id\r\n\r\n\r\n    def get_customer_name(self):\r\n        return self.__customer_name\r\n\r\n\r\n    def get_address(self):\r\n        return self.__address\r\n    \r\n    def validate_customer_id(self):\r\n        if( self.__customer_id>=100000 and self.__customer_id<=199999):\r\n            return True\r\n        else:\r\n            return False\r\n\r\n    \r\n    \r\n        \r\nclass Freight:\r\n    counter = 198\r\n    def __init__(self,recipient_customer,from_custmor,weight,distance):\r\n        self.__freight_id = None\r\n        self.__recipient_customer=recipient_customer\r\n        self.__from_customer = from_custmor\r\n        self.__weight = weight\r\n        self.__distance = distance\r\n        self.__freight_charge = None\r\n\r\n    def get_freight_id(self):\r\n        return self.__freight_id\r\n\r\n    def get_recipient_customer(self):\r\n        return self.__recipient_customer\r\n\r\n\r\n    def get_from_customer(self):\r\n        return self.__from_customer\r\n\r\n\r\n    def get_weight(self):\r\n        return self.__weight\r\n\r\n\r\n    def get_distance(self):\r\n        return self.__distance\r\n\r\n\r\n    def get_freight_charge(self):\r\n        return self.__freight_charge\r\n    \r\n    def validate_weight(self):\r\n        if(self.__weight%5==0 and self.__weight>0):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def validate_distance(self):\r\n        if(self.__distance>=500 and self.__distance<=5000):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def forward_cargo(self):\r\n        if(Customer.validate_customer_id(self)==True and self.validate_distance()==True and self.validate_weight()==True):\r\n            Freight.counter+=2\r\n            self.__freight_id = Freight.counter\r\n            self.__freight_charge = 150*self.__weight + 60*self.__distance\r\n        else:\r\n            self.__freight_charge=0\r\n        return self.get_freight_charge()\r\n    \r\n            \r\n            \r\n\r\n        \r\n            \r\n","asgnmtId":"17","SolutionFileName":"Assign17.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 19:05:49,769 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 19:05:49,769 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 19:05:49,770 INFO  Invoking the service to verify the user solution
2019-03-07 19:05:49,770 INFO  Time before invoking service:Thu Mar 07 19:05:49 IST 2019
2019-03-07 19:05:49,770 INFO  Initialising service address for VerifySolution
2019-03-07 19:05:49,771 INFO  Time before invoking service In SUPER:Thu Mar 07 19:05:49 IST 2019
2019-03-07 19:05:51,122 INFO  Time after invoking service In SUPER:Thu Mar 07 19:05:51 IST 2019
2019-03-07 19:05:51,123 INFO  Service responded successfully with required details
2019-03-07 19:05:51,123 INFO  Time after invoking service:Thu Mar 07 19:05:51 IST 2019
2019-03-07 19:05:51,123 INFO  User solution successfully verified
2019-03-07 19:05:51,123 INFO  Processing the response from verify service
2019-03-07 19:05:51,125 INFO  Starting to parse JSON response
2019-03-07 19:05:51,126 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:05:51,126 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:05:51,126 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:05:51,126 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:05:51,126 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:05:51,126 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:05:51,127 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:05:51,127 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:05:51,127 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:05:51,127 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:05:51,128 INFO  Successfully parsed JSON response
2019-03-07 19:05:51,129 INFO  In the process of generating verify response in HTML
2019-03-07 19:05:51,207 INFO  Successfully generated verify response in HTML
2019-03-07 19:05:51,207 INFO  Successfully processed the response from service
2019-03-07 19:16:42,142 INFO  Setting request parameters for VerifySolution
2019-03-07 19:16:42,142 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 19:16:42,142 INFO  Starting to parse the user solution
2019-03-07 19:16:42,143 INFO  Displaying user solution
2019-03-07 19:16:42,213 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-17\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self,customer_id,customer_name,address):\r\n        self.__customer_id= customer_id\r\n        self.__customer_name = customer_name\r\n        self.__address = address\r\n\r\n    def get_customer_id(self):\r\n        return self.__customer_id\r\n\r\n\r\n    def get_customer_name(self):\r\n        return self.__customer_name\r\n\r\n\r\n    def get_address(self):\r\n        return self.__address\r\n    \r\n    def validate_customer_id(self):\r\n        if( self.__customer_id>=100000 and self.__customer_id<=199999):\r\n            return True\r\n        else:\r\n            return False\r\n\r\n    \r\n    \r\n        \r\nclass Freight:\r\n    counter = 198\r\n    def __init__(self,recipient_customer,from_custmor,weight,distance):\r\n        self.__freight_id = None\r\n        self.__recipient_customer=recipient_customer\r\n        self.__from_customer = from_custmor\r\n        self.__weight = weight\r\n        self.__distance = distance\r\n        self.__freight_charge = None\r\n\r\n    def get_freight_id(self):\r\n        return self.__freight_id\r\n\r\n    def get_recipient_customer(self):\r\n        return self.__recipient_customer\r\n\r\n\r\n    def get_from_customer(self):\r\n        return self.__from_customer\r\n\r\n\r\n    def get_weight(self):\r\n        return self.__weight\r\n\r\n\r\n    def get_distance(self):\r\n        return self.__distance\r\n\r\n\r\n    def get_freight_charge(self):\r\n        return self.__freight_charge\r\n    \r\n    def validate_weight(self):\r\n        if(self.__weight%5==0 and self.__weight>0):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def validate_distance(self):\r\n        if(self.__distance>=500 and self.__distance<=5000):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def forward_cargo(self):\r\n        if(self.__from_customer.customer_id and self.validate_distance()==True and self.validate_weight()==True and self.__from_customer.customer_id):\r\n            Freight.counter+=2\r\n            \r\n            self.__freight_id = Freight.counter\r\n            self.__freight_charge = 150*self.__weight + 60*self.__distance\r\n        else:\r\n            self.__freight_charge=0\r\n        return self.get_freight_charge()\r\n         \r\n            \r\n            \r\n\r\n        \r\n            \r\n","asgnmtId":"17","SolutionFileName":"Assign17.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 19:16:42,214 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 19:16:42,214 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 19:16:42,214 INFO  Invoking the service to verify the user solution
2019-03-07 19:16:42,215 INFO  Time before invoking service:Thu Mar 07 19:16:42 IST 2019
2019-03-07 19:16:42,215 INFO  Initialising service address for VerifySolution
2019-03-07 19:16:42,216 INFO  Time before invoking service In SUPER:Thu Mar 07 19:16:42 IST 2019
2019-03-07 19:16:43,539 INFO  Time after invoking service In SUPER:Thu Mar 07 19:16:43 IST 2019
2019-03-07 19:16:43,539 INFO  Service responded successfully with required details
2019-03-07 19:16:43,539 INFO  Time after invoking service:Thu Mar 07 19:16:43 IST 2019
2019-03-07 19:16:43,540 INFO  User solution successfully verified
2019-03-07 19:16:43,540 INFO  Processing the response from verify service
2019-03-07 19:16:43,546 INFO  Starting to parse JSON response
2019-03-07 19:16:43,549 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:16:43,549 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:16:43,549 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:16:43,549 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:16:43,549 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:16:43,550 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:16:43,550 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:16:43,550 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:16:43,550 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:16:43,550 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:16:43,551 INFO  Successfully parsed JSON response
2019-03-07 19:16:43,552 INFO  In the process of generating verify response in HTML
2019-03-07 19:16:43,652 INFO  Successfully generated verify response in HTML
2019-03-07 19:16:43,652 INFO  Successfully processed the response from service
2019-03-07 19:17:11,866 INFO  Setting request parameters for VerifySolution
2019-03-07 19:17:11,866 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 19:17:11,866 INFO  Starting to parse the user solution
2019-03-07 19:17:11,866 INFO  Displaying user solution
2019-03-07 19:17:11,917 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-17\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self,customer_id,customer_name,address):\r\n        self.__customer_id= customer_id\r\n        self.__customer_name = customer_name\r\n        self.__address = address\r\n\r\n    def get_customer_id(self):\r\n        return self.__customer_id\r\n\r\n\r\n    def get_customer_name(self):\r\n        return self.__customer_name\r\n\r\n\r\n    def get_address(self):\r\n        return self.__address\r\n    \r\n    def validate_customer_id(self):\r\n        if( self.__customer_id>=100000 and self.__customer_id<=199999):\r\n            return True\r\n        else:\r\n            return False\r\n\r\n    \r\n    \r\n        \r\nclass Freight:\r\n    counter = 198\r\n    def __init__(self,recipient_customer,from_custmor,weight,distance):\r\n        self.__freight_id = None\r\n        self.__recipient_customer=recipient_customer\r\n        self.__from_customer = from_custmor\r\n        self.__weight = weight\r\n        self.__distance = distance\r\n        self.__freight_charge = None\r\n\r\n    def get_freight_id(self):\r\n        return self.__freight_id\r\n\r\n    def get_recipient_customer(self):\r\n        return self.__recipient_customer\r\n\r\n\r\n    def get_from_customer(self):\r\n        return self.__from_customer\r\n\r\n\r\n    def get_weight(self):\r\n        return self.__weight\r\n\r\n\r\n    def get_distance(self):\r\n        return self.__distance\r\n\r\n\r\n    def get_freight_charge(self):\r\n        return self.__freight_charge\r\n    \r\n    def validate_weight(self):\r\n        if(self.__weight%5==0 and self.__weight>0):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def validate_distance(self):\r\n        if(self.__distance>=500 and self.__distance<=5000):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def forward_cargo(self):\r\n        if(self.validate_distance()==True and self.validate_weight()==True):\r\n            Freight.counter+=2\r\n            \r\n            self.__freight_id = Freight.counter\r\n            self.__freight_charge = 150*self.__weight + 60*self.__distance\r\n        else:\r\n            self.__freight_charge=0\r\n        return self.get_freight_charge()\r\n         \r\n            \r\n            \r\n\r\n        \r\n            \r\n","asgnmtId":"17","SolutionFileName":"Assign17.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 19:17:11,918 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 19:17:11,918 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 19:17:11,918 INFO  Invoking the service to verify the user solution
2019-03-07 19:17:11,918 INFO  Time before invoking service:Thu Mar 07 19:17:11 IST 2019
2019-03-07 19:17:11,918 INFO  Initialising service address for VerifySolution
2019-03-07 19:17:11,921 INFO  Time before invoking service In SUPER:Thu Mar 07 19:17:11 IST 2019
2019-03-07 19:17:13,298 INFO  Time after invoking service In SUPER:Thu Mar 07 19:17:13 IST 2019
2019-03-07 19:17:13,298 INFO  Service responded successfully with required details
2019-03-07 19:17:13,299 INFO  Time after invoking service:Thu Mar 07 19:17:13 IST 2019
2019-03-07 19:17:13,299 INFO  User solution successfully verified
2019-03-07 19:17:13,300 INFO  Processing the response from verify service
2019-03-07 19:17:13,302 INFO  Starting to parse JSON response
2019-03-07 19:17:13,304 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:17:13,304 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:17:13,304 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:17:13,304 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:17:13,304 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:17:13,304 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:17:13,304 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:17:13,304 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:17:13,304 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:17:13,304 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:17:13,305 INFO  Successfully parsed JSON response
2019-03-07 19:17:13,306 INFO  In the process of generating verify response in HTML
2019-03-07 19:17:13,384 INFO  Successfully generated verify response in HTML
2019-03-07 19:17:13,384 INFO  Successfully processed the response from service
2019-03-07 19:18:14,203 INFO  Setting request parameters for VerifySolution
2019-03-07 19:18:14,203 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 19:18:14,203 INFO  Starting to parse the user solution
2019-03-07 19:18:14,203 INFO  Displaying user solution
2019-03-07 19:18:14,249 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-17\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self,customer_id,customer_name,address):\r\n        self.__customer_id= customer_id\r\n        self.__customer_name = customer_name\r\n        self.__address = address\r\n\r\n    def get_customer_id(self):\r\n        return self.__customer_id\r\n\r\n\r\n    def get_customer_name(self):\r\n        return self.__customer_name\r\n\r\n\r\n    def get_address(self):\r\n        return self.__address\r\n    \r\n    def validate_customer_id(self):\r\n        if( self.__customer_id>=100000 and self.__customer_id<=199999):\r\n            return True\r\n        else:\r\n            return False\r\n\r\n    \r\n    \r\n        \r\nclass Freight:\r\n    counter = 198\r\n    def __init__(self,recipient_customer,from_custmor,weight,distance):\r\n        self.__freight_id = None\r\n        self.__recipient_customer=recipient_customer\r\n        self.__from_customer = from_custmor\r\n        self.__weight = weight\r\n        self.__distance = distance\r\n        self.__freight_charge = None\r\n\r\n    def get_freight_id(self):\r\n        return self.__freight_id\r\n\r\n    def get_recipient_customer(self):\r\n        return self.__recipient_customer\r\n\r\n\r\n    def get_from_customer(self):\r\n        return self.__from_customer\r\n\r\n\r\n    def get_weight(self):\r\n        return self.__weight\r\n\r\n\r\n    def get_distance(self):\r\n        return self.__distance\r\n\r\n\r\n    def get_freight_charge(self):\r\n        return self.__freight_charge\r\n    \r\n    def validate_weight(self):\r\n        if(self.__weight%5==0 and self.__weight>0):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def validate_distance(self):\r\n        if(self.__distance>=500 and self.__distance<=5000):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def forward_cargo(self):\r\n        if(self.validate_distance()==True and self.validate_weight()==True):\r\n            Freight.counter+=2\r\n            \r\n            self.__freight_id = Freight.counter\r\n            self.__freight_charge = 150*self.__weight + 60*self.__distance\r\n        else:\r\n            self.__freight_charge=0\r\n        return self.get_freight_charge()\r\n         \r\n            \r\n            \r\n\r\n        \r\n            \r\n","asgnmtId":"17","SolutionFileName":"Assign17.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 19:18:14,249 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 19:18:14,249 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 19:18:14,249 INFO  Invoking the service to verify the user solution
2019-03-07 19:18:14,250 INFO  Time before invoking service:Thu Mar 07 19:18:14 IST 2019
2019-03-07 19:18:14,250 INFO  Initialising service address for VerifySolution
2019-03-07 19:18:14,250 INFO  Time before invoking service In SUPER:Thu Mar 07 19:18:14 IST 2019
2019-03-07 19:18:15,634 INFO  Time after invoking service In SUPER:Thu Mar 07 19:18:15 IST 2019
2019-03-07 19:18:15,634 INFO  Service responded successfully with required details
2019-03-07 19:18:15,634 INFO  Time after invoking service:Thu Mar 07 19:18:15 IST 2019
2019-03-07 19:18:15,634 INFO  User solution successfully verified
2019-03-07 19:18:15,635 INFO  Processing the response from verify service
2019-03-07 19:18:15,637 INFO  Starting to parse JSON response
2019-03-07 19:18:15,638 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:18:15,638 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:18:15,638 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:18:15,638 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:18:15,638 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:18:15,638 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:18:15,638 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:18:15,638 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:18:15,638 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:18:15,638 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:18:15,639 INFO  Successfully parsed JSON response
2019-03-07 19:18:15,640 INFO  In the process of generating verify response in HTML
2019-03-07 19:18:15,709 INFO  Successfully generated verify response in HTML
2019-03-07 19:18:15,709 INFO  Successfully processed the response from service
2019-03-07 19:19:35,445 INFO  Setting request parameters for VerifySolution
2019-03-07 19:19:35,445 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 19:19:35,445 INFO  Starting to parse the user solution
2019-03-07 19:19:35,445 INFO  Displaying user solution
2019-03-07 19:19:35,495 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-17\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self,customer_id,customer_name,address):\r\n        self.__customer_id= customer_id\r\n        self.__customer_name = customer_name\r\n        self.__address = address\r\n\r\n    def get_customer_id(self):\r\n        return self.__customer_id\r\n\r\n\r\n    def get_customer_name(self):\r\n        return self.__customer_name\r\n\r\n\r\n    def get_address(self):\r\n        return self.__address\r\n    \r\n    def validate_customer_id(self):\r\n        if( self.__customer_id>=100000 and self.__customer_id<=199999):\r\n            return True\r\n        else:\r\n            return False\r\n\r\n    \r\n    \r\n        \r\nclass Freight:\r\n    counter = 198\r\n    def __init__(self,recipient_customer,from_custmor,weight,distance):\r\n        self.__freight_id = None\r\n        self.__recipient_customer=recipient_customer\r\n        self.__from_customer = from_custmor\r\n        self.__weight = weight\r\n        self.__distance = distance\r\n        self.__freight_charge = None\r\n\r\n    def get_freight_id(self):\r\n        return self.__freight_id\r\n\r\n    def get_recipient_customer(self):\r\n        return self.__recipient_customer\r\n\r\n\r\n    def get_from_customer(self):\r\n        return self.__from_customer\r\n\r\n\r\n    def get_weight(self):\r\n        return self.__weight\r\n\r\n\r\n    def get_distance(self):\r\n        return self.__distance\r\n\r\n\r\n    def get_freight_charge(self):\r\n        return self.__freight_charge\r\n    \r\n    def validate_weight(self):\r\n        if(self.__weight%5==0 and self.__weight>0):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def validate_distance(self):\r\n        if(self.__distance>=500 and self.__distance<=5000):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def forward_cargo(self):\r\n        if(self.validate_distance()==True and self.validate_weight()==True):\r\n            Freight.counter+=2\r\n            \r\n            self.__freight_id = Freight.counter\r\n            self.__freight_charge = 150*self.__weight + 60*self.__distance\r\n        else:\r\n            self.__freight_charge=0\r\n        return self.get_freight_charge()\r\n         \r\n            \r\n            \r\n\r\n        \r\n            \r\n","asgnmtId":"17","SolutionFileName":"Assign17.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 19:19:35,495 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 19:19:35,496 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 19:19:35,496 INFO  Invoking the service to verify the user solution
2019-03-07 19:19:35,496 INFO  Time before invoking service:Thu Mar 07 19:19:35 IST 2019
2019-03-07 19:19:35,496 INFO  Initialising service address for VerifySolution
2019-03-07 19:19:35,496 INFO  Time before invoking service In SUPER:Thu Mar 07 19:19:35 IST 2019
2019-03-07 19:19:36,825 INFO  Time after invoking service In SUPER:Thu Mar 07 19:19:36 IST 2019
2019-03-07 19:19:36,825 INFO  Service responded successfully with required details
2019-03-07 19:19:36,826 INFO  Time after invoking service:Thu Mar 07 19:19:36 IST 2019
2019-03-07 19:19:36,826 INFO  User solution successfully verified
2019-03-07 19:19:36,826 INFO  Processing the response from verify service
2019-03-07 19:19:36,828 INFO  Starting to parse JSON response
2019-03-07 19:19:36,829 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:19:36,829 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:19:36,829 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:19:36,829 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:19:36,829 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:19:36,829 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:19:36,830 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:19:36,830 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:19:36,830 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:19:36,830 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:19:36,831 INFO  Successfully parsed JSON response
2019-03-07 19:19:36,832 INFO  In the process of generating verify response in HTML
2019-03-07 19:19:36,951 INFO  Successfully generated verify response in HTML
2019-03-07 19:19:36,952 INFO  Successfully processed the response from service
2019-03-07 19:20:46,135 INFO  Setting request parameters for VerifySolution
2019-03-07 19:20:46,135 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 19:20:46,135 INFO  Starting to parse the user solution
2019-03-07 19:20:46,136 INFO  Displaying user solution
2019-03-07 19:20:46,179 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-17\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self,customer_id,customer_name,address):\r\n        self.__customer_id= customer_id\r\n        self.__customer_name = customer_name\r\n        self.__address = address\r\n\r\n    def get_customer_id(self):\r\n        return self.__customer_id\r\n\r\n\r\n    def get_customer_name(self):\r\n        return self.__customer_name\r\n\r\n\r\n    def get_address(self):\r\n        return self.__address\r\n    \r\n    def validate_customer_id(self):\r\n        if( self.__customer_id>=100000 and self.__customer_id<=199999):\r\n            return True\r\n        else:\r\n            return False\r\n\r\n    \r\n    \r\n        \r\nclass Freight:\r\n    counter = 198\r\n    def __init__(self,recipient_customer,from_customer,weight,distance):\r\n        self.__freight_id = None\r\n        self.__recipient_customer=recipient_customer\r\n        self.__from_customer = from_customer\r\n        self.__weight = weight\r\n        self.__distance = distance\r\n        self.__freight_charge = None\r\n\r\n    def get_freight_id(self):\r\n        return self.__freight_id\r\n\r\n    def get_recipient_customer(self):\r\n        return self.__recipient_customer\r\n\r\n\r\n    def get_from_customer(self):\r\n        return self.__from_customer\r\n\r\n\r\n    def get_weight(self):\r\n        return self.__weight\r\n\r\n\r\n    def get_distance(self):\r\n        return self.__distance\r\n\r\n\r\n    def get_freight_charge(self):\r\n        return self.__freight_charge\r\n    \r\n    def validate_weight(self):\r\n        if(self.__weight%5==0 and self.__weight>0):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def validate_distance(self):\r\n        if(self.__distance>=500 and self.__distance<=5000):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def forward_cargo(self):\r\n        if(self.validate_distance()==True and self.validate_weight()==True):\r\n            Freight.counter+=2\r\n            \r\n            self.__freight_id = Freight.counter\r\n            self.__freight_charge = 150*self.__weight + 60*self.__distance\r\n        else:\r\n            self.__freight_charge=0\r\n        return self.get_freight_charge()\r\n         \r\n            \r\n            \r\n\r\n        \r\n            \r\n","asgnmtId":"17","SolutionFileName":"Assign17.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 19:20:46,179 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 19:20:46,180 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 19:20:46,180 INFO  Invoking the service to verify the user solution
2019-03-07 19:20:46,180 INFO  Time before invoking service:Thu Mar 07 19:20:46 IST 2019
2019-03-07 19:20:46,180 INFO  Initialising service address for VerifySolution
2019-03-07 19:20:46,181 INFO  Time before invoking service In SUPER:Thu Mar 07 19:20:46 IST 2019
2019-03-07 19:20:47,553 INFO  Time after invoking service In SUPER:Thu Mar 07 19:20:47 IST 2019
2019-03-07 19:20:47,553 INFO  Service responded successfully with required details
2019-03-07 19:20:47,554 INFO  Time after invoking service:Thu Mar 07 19:20:47 IST 2019
2019-03-07 19:20:47,554 INFO  User solution successfully verified
2019-03-07 19:20:47,554 INFO  Processing the response from verify service
2019-03-07 19:20:47,556 INFO  Starting to parse JSON response
2019-03-07 19:20:47,558 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:20:47,558 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:20:47,558 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:20:47,558 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:20:47,558 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:20:47,558 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:20:47,558 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:20:47,560 INFO  Successfully parsed JSON response
2019-03-07 19:20:47,561 INFO  In the process of generating verify response in HTML
2019-03-07 19:20:47,633 INFO  Successfully generated verify response in HTML
2019-03-07 19:20:47,633 INFO  Successfully processed the response from service
2019-03-07 19:23:23,817 INFO  Setting request parameters for VerifySolution
2019-03-07 19:23:23,817 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 19:23:23,817 INFO  Starting to parse the user solution
2019-03-07 19:23:23,818 INFO  Displaying user solution
2019-03-07 19:23:23,864 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-17\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self,customer_id,customer_name,address):\r\n        self.__customer_id= customer_id\r\n        self.__customer_name = customer_name\r\n        self.__address = address\r\n\r\n    def get_customer_id(self):\r\n        return self.__customer_id\r\n\r\n\r\n    def get_customer_name(self):\r\n        return self.__customer_name\r\n\r\n\r\n    def get_address(self):\r\n        return self.__address\r\n    \r\n    def validate_customer_id(self):\r\n        if( self.__customer_id>=100000 and self.__customer_id<=199999):\r\n            return True\r\n        else:\r\n            return False\r\n\r\n    \r\n    \r\n        \r\nclass Freight:\r\n    counter = 198\r\n    def __init__(self,recipient_customer,from_customer,weight,distance):\r\n        self.__freight_id = None\r\n        self.__recipient_customer=recipient_customer\r\n        self.__from_customer = from_customer\r\n        self.__weight = weight\r\n        self.__distance = distance\r\n        self.__freight_charge = None\r\n\r\n    def get_freight_id(self):\r\n        return self.__freight_id\r\n\r\n    def get_recipient_customer(self):\r\n        return self.__recipient_customer\r\n\r\n\r\n    def get_from_customer(self):\r\n        return self.__from_customer\r\n\r\n\r\n    def get_weight(self):\r\n        return self.__weight\r\n\r\n\r\n    def get_distance(self):\r\n        return self.__distance\r\n\r\n\r\n    def get_freight_charge(self):\r\n        return self.__freight_charge\r\n    \r\n    def validate_weight(self):\r\n        if(self.__weight%5==0 and self.__weight>0):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def validate_distance(self):\r\n        if(self.__distance>=500 and self.__distance<=5000):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def forward_cargo(self):\r\n        if(Customer.validate_customer_id(self)==True and self.validate_distance()==True and self.validate_weight()==True):\r\n            Freight.counter+=2\r\n            self.__freight_id = Freight.counter\r\n            self.__freight_charge = 150*self.__weight + 60*self.__distance\r\n        else:\r\n            self.__freight_charge=0\r\n        return self.get_freight_charge()\r\n    \r\n            \r\n            \r\n\r\n        \r\n            \r\n","asgnmtId":"17","SolutionFileName":"Assign17.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 19:23:23,865 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 19:23:23,865 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 19:23:23,865 INFO  Invoking the service to verify the user solution
2019-03-07 19:23:23,866 INFO  Time before invoking service:Thu Mar 07 19:23:23 IST 2019
2019-03-07 19:23:23,866 INFO  Initialising service address for VerifySolution
2019-03-07 19:23:23,866 INFO  Time before invoking service In SUPER:Thu Mar 07 19:23:23 IST 2019
2019-03-07 19:23:25,174 INFO  Time after invoking service In SUPER:Thu Mar 07 19:23:25 IST 2019
2019-03-07 19:23:25,175 INFO  Service responded successfully with required details
2019-03-07 19:23:25,175 INFO  Time after invoking service:Thu Mar 07 19:23:25 IST 2019
2019-03-07 19:23:25,175 INFO  User solution successfully verified
2019-03-07 19:23:25,175 INFO  Processing the response from verify service
2019-03-07 19:23:25,182 INFO  Starting to parse JSON response
2019-03-07 19:23:25,183 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:23:25,183 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:23:25,183 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:23:25,183 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:23:25,183 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:23:25,183 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:23:25,183 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:23:25,183 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:23:25,183 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:23:25,183 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:23:25,184 INFO  Successfully parsed JSON response
2019-03-07 19:23:25,186 INFO  In the process of generating verify response in HTML
2019-03-07 19:23:25,255 INFO  Successfully generated verify response in HTML
2019-03-07 19:23:25,255 INFO  Successfully processed the response from service
2019-03-07 19:23:48,779 INFO  Setting request parameters for VerifySolution
2019-03-07 19:23:48,779 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 19:23:48,779 INFO  Starting to parse the user solution
2019-03-07 19:23:48,780 INFO  Displaying user solution
2019-03-07 19:23:48,826 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-17\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self,customer_id,customer_name,address):\r\n        self.__customer_id= customer_id\r\n        self.__customer_name = customer_name\r\n        self.__address = address\r\n\r\n    def get_customer_id(self):\r\n        return self.__customer_id\r\n\r\n\r\n    def get_customer_name(self):\r\n        return self.__customer_name\r\n\r\n\r\n    def get_address(self):\r\n        return self.__address\r\n    \r\n    def validate_customer_id(self):\r\n        if( self.__customer_id>=100000 and self.__customer_id<=199999):\r\n            return True\r\n        else:\r\n            return False\r\n\r\n    \r\n    \r\n        \r\nclass Freight:\r\n    counter = 198\r\n    def __init__(self,recipient_customer,from_customer,weight,distance):\r\n        self.__freight_id = None\r\n        self.__recipient_customer=recipient_customer\r\n        self.__from_customer = from_customer\r\n        self.__weight = weight\r\n        self.__distance = distance\r\n        self.__freight_charge = None\r\n\r\n    def get_freight_id(self):\r\n        return self.__freight_id\r\n\r\n    def get_recipient_customer(self):\r\n        return self.__recipient_customer\r\n\r\n\r\n    def get_from_customer(self):\r\n        return self.__from_customer\r\n\r\n\r\n    def get_weight(self):\r\n        return self.__weight\r\n\r\n\r\n    def get_distance(self):\r\n        return self.__distance\r\n\r\n\r\n    def get_freight_charge(self):\r\n        return self.__freight_charge\r\n    \r\n    def validate_weight(self):\r\n        if(self.__weight%5==0 and self.__weight>0):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def validate_distance(self):\r\n        if(self.__distance>=500 and self.__distance<=5000):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def forward_cargo(self):\r\n        if(Customer.validate_customer_id(self)==True and self.validate_distance()==True and self.validate_weight()==True):\r\n            Freight.counter+=2\r\n            self.__freight_id = Freight.counter\r\n            self.__freight_charge = 150*self.__weight + 60*self.__distance\r\n        else:\r\n            self.__freight_charge=0\r\n        return self.get_freight_charge()\r\n    \r\n            \r\n            \r\n\r\n        \r\n            \r\n","asgnmtId":"17","SolutionFileName":"Assign17.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 19:23:48,826 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 19:23:48,826 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 19:23:48,826 INFO  Invoking the service to verify the user solution
2019-03-07 19:23:48,827 INFO  Time before invoking service:Thu Mar 07 19:23:48 IST 2019
2019-03-07 19:23:48,827 INFO  Initialising service address for VerifySolution
2019-03-07 19:23:48,827 INFO  Time before invoking service In SUPER:Thu Mar 07 19:23:48 IST 2019
2019-03-07 19:23:50,058 INFO  Time after invoking service In SUPER:Thu Mar 07 19:23:50 IST 2019
2019-03-07 19:23:50,058 INFO  Service responded successfully with required details
2019-03-07 19:23:50,058 INFO  Time after invoking service:Thu Mar 07 19:23:50 IST 2019
2019-03-07 19:23:50,059 INFO  User solution successfully verified
2019-03-07 19:23:50,059 INFO  Processing the response from verify service
2019-03-07 19:23:50,062 INFO  Starting to parse JSON response
2019-03-07 19:23:50,064 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:23:50,064 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:23:50,064 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:23:50,064 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:23:50,064 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:23:50,065 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:23:50,065 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:23:50,065 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:23:50,065 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:23:50,065 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:23:50,067 INFO  Successfully parsed JSON response
2019-03-07 19:23:50,067 INFO  In the process of generating verify response in HTML
2019-03-07 19:23:50,132 INFO  Successfully generated verify response in HTML
2019-03-07 19:23:50,132 INFO  Successfully processed the response from service
2019-03-07 19:25:18,431 INFO  Setting request parameters for VerifySolution
2019-03-07 19:25:18,431 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 19:25:18,431 INFO  Starting to parse the user solution
2019-03-07 19:25:18,432 INFO  Displaying user solution
2019-03-07 19:25:18,485 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-17\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self,customer_id,customer_name,address):\r\n        self.__customer_id= customer_id\r\n        self.__customer_name = customer_name\r\n        self.__address = address\r\n\r\n    def get_customer_id(self):\r\n        return self.__customer_id\r\n\r\n\r\n    def get_customer_name(self):\r\n        return self.__customer_name\r\n\r\n\r\n    def get_address(self):\r\n        return self.__address\r\n    \r\n    def validate_customer_id(self):\r\n        if( self.__customer_id>=100000 and self.__customer_id<=199999):\r\n            return True\r\n        else:\r\n            return False\r\n\r\n    \r\n    \r\n        \r\nclass Freight:\r\n    counter = 198\r\n    def __init__(self,recipient_customer,from_customer,weight,distance):\r\n        self.__freight_id = None\r\n        self.__recipient_customer=recipient_customer\r\n        self.__from_customer = from_customer\r\n        self.__weight = weight\r\n        self.__distance = distance\r\n        self.__freight_charge = None\r\n\r\n    def get_freight_id(self):\r\n        return self.__freight_id\r\n\r\n    def get_recipient_customer(self):\r\n        return self.__recipient_customer\r\n\r\n\r\n    def get_from_customer(self):\r\n        return self.__from_customer\r\n\r\n\r\n    def get_weight(self):\r\n        return self.__weight\r\n\r\n\r\n    def get_distance(self):\r\n        return self.__distance\r\n\r\n\r\n    def get_freight_charge(self):\r\n        return self.__freight_charge\r\n    \r\n    def validate_weight(self):\r\n        if(self.__weight%5==0 and self.__weight>0):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def validate_distance(self):\r\n        if(self.__distance>=500 and self.__distance<=5000):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def forward_cargo(self):\r\n        if(Customer.validate_customer_id(self)==True and self.validate_distance()==True and self.validate_weight()==True):\r\n            Freight.counter+=2\r\n            self.__freight_id = Freight.counter\r\n            self.__freight_charge = 150*self.__weight + 60*self.__distance\r\n        else:\r\n            self.__freight_charge=0\r\n        return self.get_freight_charge()\r\n    \r\n            \r\n            \r\n\r\n        \r\n            \r\n","asgnmtId":"17","SolutionFileName":"Assign17.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 19:25:18,485 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 19:25:18,485 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 19:25:18,485 INFO  Invoking the service to verify the user solution
2019-03-07 19:25:18,486 INFO  Time before invoking service:Thu Mar 07 19:25:18 IST 2019
2019-03-07 19:25:18,486 INFO  Initialising service address for VerifySolution
2019-03-07 19:25:18,486 INFO  Time before invoking service In SUPER:Thu Mar 07 19:25:18 IST 2019
2019-03-07 19:25:19,714 INFO  Time after invoking service In SUPER:Thu Mar 07 19:25:19 IST 2019
2019-03-07 19:25:19,714 INFO  Service responded successfully with required details
2019-03-07 19:25:19,715 INFO  Time after invoking service:Thu Mar 07 19:25:19 IST 2019
2019-03-07 19:25:19,715 INFO  User solution successfully verified
2019-03-07 19:25:19,715 INFO  Processing the response from verify service
2019-03-07 19:25:19,717 INFO  Starting to parse JSON response
2019-03-07 19:25:19,718 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:25:19,718 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:25:19,719 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:25:19,719 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:25:19,719 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:25:19,719 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:25:19,719 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:25:19,719 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:25:19,719 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:25:19,719 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:25:19,720 INFO  Successfully parsed JSON response
2019-03-07 19:25:19,720 INFO  In the process of generating verify response in HTML
2019-03-07 19:25:19,796 INFO  Successfully generated verify response in HTML
2019-03-07 19:25:19,796 INFO  Successfully processed the response from service
2019-03-07 19:26:37,943 INFO  Setting request parameters for VerifySolution
2019-03-07 19:26:37,943 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 19:26:37,943 INFO  Starting to parse the user solution
2019-03-07 19:26:37,944 INFO  Displaying user solution
2019-03-07 19:26:37,999 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-17\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self,customer_id,customer_name,address):\r\n        self.__customer_id= customer_id\r\n        self.__customer_name = customer_name\r\n        self.__address = address\r\n\r\n    def get_customer_id(self):\r\n        return self.__customer_id\r\n\r\n\r\n    def get_customer_name(self):\r\n        return self.__customer_name\r\n\r\n\r\n    def get_address(self):\r\n        return self.__address\r\n    \r\n    def validate_customer_id(self):\r\n        if( self.__customer_id>=100000 and self.__customer_id<=199999):\r\n            return True\r\n        else:\r\n            return False\r\n\r\n    \r\n    \r\n        \r\nclass Freight:\r\n    counter = 198\r\n    def __init__(self,recipient_customer,from_customer,weight,distance):\r\n        self.__freight_id = None\r\n        self.__recipient_customer=recipient_customer\r\n        self.__from_customer = from_customer\r\n        self.__weight = weight\r\n        self.__distance = distance\r\n        self.__freight_charge = None\r\n\r\n    def get_freight_id(self):\r\n        return self.__freight_id\r\n\r\n    def get_recipient_customer(self):\r\n        return self.__recipient_customer\r\n\r\n\r\n    def get_from_customer(self):\r\n        return self.__from_customer\r\n\r\n\r\n    def get_weight(self):\r\n        return self.__weight\r\n\r\n\r\n    def get_distance(self):\r\n        return self.__distance\r\n\r\n\r\n    def get_freight_charge(self):\r\n        return self.__freight_charge\r\n    \r\n    def validate_weight(self):\r\n        if(self.__weight%5==0 and self.__weight>0):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def validate_distance(self):\r\n        if(self.__distance>=500 and self.__distance<=5000):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def forward_cargo(self):\r\n        if(self.from_customer.validate_customer_id(self)==True and self.validate_distance()==True and self.validate_weight()==True):\r\n            Freight.counter+=2\r\n            self.__freight_id = Freight.counter\r\n            self.__freight_charge = 150*self.__weight + 60*self.__distance\r\n        else:\r\n            self.__freight_charge=0\r\n        return self.get_freight_charge()\r\n    \r\n            \r\n            \r\n\r\n        \r\n            \r\n","asgnmtId":"17","SolutionFileName":"Assign17.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 19:26:38,000 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 19:26:38,000 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 19:26:38,000 INFO  Invoking the service to verify the user solution
2019-03-07 19:26:38,000 INFO  Time before invoking service:Thu Mar 07 19:26:38 IST 2019
2019-03-07 19:26:38,000 INFO  Initialising service address for VerifySolution
2019-03-07 19:26:38,002 INFO  Time before invoking service In SUPER:Thu Mar 07 19:26:38 IST 2019
2019-03-07 19:26:39,227 INFO  Time after invoking service In SUPER:Thu Mar 07 19:26:39 IST 2019
2019-03-07 19:26:39,227 INFO  Service responded successfully with required details
2019-03-07 19:26:39,228 INFO  Time after invoking service:Thu Mar 07 19:26:39 IST 2019
2019-03-07 19:26:39,228 INFO  User solution successfully verified
2019-03-07 19:26:39,228 INFO  Processing the response from verify service
2019-03-07 19:26:39,230 INFO  Starting to parse JSON response
2019-03-07 19:26:39,231 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:26:39,231 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:26:39,231 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:26:39,232 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:26:39,232 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:26:39,232 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:26:39,232 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:26:39,232 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:26:39,232 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:26:39,232 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:26:39,234 INFO  Successfully parsed JSON response
2019-03-07 19:26:39,234 INFO  In the process of generating verify response in HTML
2019-03-07 19:26:39,308 INFO  Successfully generated verify response in HTML
2019-03-07 19:26:39,308 INFO  Successfully processed the response from service
2019-03-07 19:27:20,561 INFO  Setting request parameters for VerifySolution
2019-03-07 19:27:20,561 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 19:27:20,561 INFO  Starting to parse the user solution
2019-03-07 19:27:20,562 INFO  Displaying user solution
2019-03-07 19:27:20,610 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-17\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self,customer_id,customer_name,address):\r\n        self.__customer_id= customer_id\r\n        self.__customer_name = customer_name\r\n        self.__address = address\r\n\r\n    def get_customer_id(self):\r\n        return self.__customer_id\r\n\r\n\r\n    def get_customer_name(self):\r\n        return self.__customer_name\r\n\r\n\r\n    def get_address(self):\r\n        return self.__address\r\n    \r\n    def validate_customer_id(self):\r\n        if( self.__customer_id>=100000 and self.__customer_id<=199999):\r\n            return True\r\n        else:\r\n            return False\r\n\r\n    \r\n    \r\n        \r\nclass Freight:\r\n    counter = 198\r\n    def __init__(self,recipient_customer,from_customer,weight,distance):\r\n        self.__freight_id = None\r\n        self.__recipient_customer=recipient_customer\r\n        self.__from_customer = from_customer\r\n        self.__weight = weight\r\n        self.__distance = distance\r\n        self.__freight_charge = None\r\n\r\n    def get_freight_id(self):\r\n        return self.__freight_id\r\n\r\n    def get_recipient_customer(self):\r\n        return self.__recipient_customer\r\n\r\n\r\n    def get_from_customer(self):\r\n        return self.__from_customer\r\n\r\n\r\n    def get_weight(self):\r\n        return self.__weight\r\n\r\n\r\n    def get_distance(self):\r\n        return self.__distance\r\n\r\n\r\n    def get_freight_charge(self):\r\n        return self.__freight_charge\r\n    \r\n    def validate_weight(self):\r\n        if(self.__weight%5==0 and self.__weight>0):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def validate_distance(self):\r\n        if(self.__distance>=500 and self.__distance<=5000):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def forward_cargo(self):\r\n        if(self.__from_customer==self.__recipient_customer and self.validate_distance()==True and self.validate_weight()==True):\r\n            Freight.counter+=2\r\n            self.__freight_id = Freight.counter\r\n            self.__freight_charge = 150*self.__weight + 60*self.__distance\r\n        else:\r\n            self.__freight_charge=0\r\n        return self.get_freight_charge()\r\n    \r\n            \r\n            \r\n\r\n        \r\n            \r\n","asgnmtId":"17","SolutionFileName":"Assign17.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 19:27:20,610 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 19:27:20,610 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 19:27:20,610 INFO  Invoking the service to verify the user solution
2019-03-07 19:27:20,610 INFO  Time before invoking service:Thu Mar 07 19:27:20 IST 2019
2019-03-07 19:27:20,610 INFO  Initialising service address for VerifySolution
2019-03-07 19:27:20,610 INFO  Time before invoking service In SUPER:Thu Mar 07 19:27:20 IST 2019
2019-03-07 19:27:22,905 INFO  Time after invoking service In SUPER:Thu Mar 07 19:27:22 IST 2019
2019-03-07 19:27:22,905 INFO  Service responded successfully with required details
2019-03-07 19:27:22,905 INFO  Time after invoking service:Thu Mar 07 19:27:22 IST 2019
2019-03-07 19:27:22,905 INFO  User solution successfully verified
2019-03-07 19:27:22,906 INFO  Processing the response from verify service
2019-03-07 19:27:22,912 INFO  Starting to parse JSON response
2019-03-07 19:27:22,914 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:27:22,914 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:27:22,914 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:27:22,914 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:27:22,915 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:27:22,915 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:27:22,915 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:27:22,915 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:27:22,917 INFO  Successfully parsed JSON response
2019-03-07 19:27:22,918 INFO  In the process of generating verify response in HTML
2019-03-07 19:27:22,988 INFO  Successfully generated verify response in HTML
2019-03-07 19:27:22,988 INFO  Successfully processed the response from service
2019-03-07 19:27:29,182 INFO  Setting request parameters for VerifySolution
2019-03-07 19:27:29,182 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 19:27:29,182 INFO  Starting to parse the user solution
2019-03-07 19:27:29,183 INFO  Displaying user solution
2019-03-07 19:27:29,239 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-17\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self,customer_id,customer_name,address):\r\n        self.__customer_id= customer_id\r\n        self.__customer_name = customer_name\r\n        self.__address = address\r\n\r\n    def get_customer_id(self):\r\n        return self.__customer_id\r\n\r\n\r\n    def get_customer_name(self):\r\n        return self.__customer_name\r\n\r\n\r\n    def get_address(self):\r\n        return self.__address\r\n    \r\n    def validate_customer_id(self):\r\n        if( self.__customer_id>=100000 and self.__customer_id<=199999):\r\n            return True\r\n        else:\r\n            return False\r\n\r\n    \r\n    \r\n        \r\nclass Freight:\r\n    counter = 198\r\n    def __init__(self,recipient_customer,from_customer,weight,distance):\r\n        self.__freight_id = None\r\n        self.__recipient_customer=recipient_customer\r\n        self.__from_customer = from_customer\r\n        self.__weight = weight\r\n        self.__distance = distance\r\n        self.__freight_charge = None\r\n\r\n    def get_freight_id(self):\r\n        return self.__freight_id\r\n\r\n    def get_recipient_customer(self):\r\n        return self.__recipient_customer\r\n\r\n\r\n    def get_from_customer(self):\r\n        return self.__from_customer\r\n\r\n\r\n    def get_weight(self):\r\n        return self.__weight\r\n\r\n\r\n    def get_distance(self):\r\n        return self.__distance\r\n\r\n\r\n    def get_freight_charge(self):\r\n        return self.__freight_charge\r\n    \r\n    def validate_weight(self):\r\n        if(self.__weight%5==0 and self.__weight>0):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def validate_distance(self):\r\n        if(self.__distance>=500 and self.__distance<=5000):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def forward_cargo(self):\r\n        if(self.__from_customer==self.__recipient_customer and self.validate_distance()==True and self.validate_weight()==True):\r\n            Freight.counter+=2\r\n            self.__freight_id = Freight.counter\r\n            self.__freight_charge = 150*self.__weight + 60*self.__distance\r\n        else:\r\n            self.__freight_charge=0\r\n        return self.get_freight_charge()\r\n    \r\n            \r\n            \r\n\r\n        \r\n            \r\n","asgnmtId":"17","SolutionFileName":"Assign17.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 19:27:29,239 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 19:27:29,239 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 19:27:29,239 INFO  Invoking the service to verify the user solution
2019-03-07 19:27:29,240 INFO  Time before invoking service:Thu Mar 07 19:27:29 IST 2019
2019-03-07 19:27:29,240 INFO  Initialising service address for VerifySolution
2019-03-07 19:27:29,240 INFO  Time before invoking service In SUPER:Thu Mar 07 19:27:29 IST 2019
2019-03-07 19:27:30,494 INFO  Time after invoking service In SUPER:Thu Mar 07 19:27:30 IST 2019
2019-03-07 19:27:30,495 INFO  Service responded successfully with required details
2019-03-07 19:27:30,495 INFO  Time after invoking service:Thu Mar 07 19:27:30 IST 2019
2019-03-07 19:27:30,495 INFO  User solution successfully verified
2019-03-07 19:27:30,496 INFO  Processing the response from verify service
2019-03-07 19:27:30,499 INFO  Starting to parse JSON response
2019-03-07 19:27:30,501 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:27:30,501 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:27:30,501 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:27:30,501 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:27:30,501 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:27:30,501 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:27:30,502 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:27:30,502 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:27:30,503 INFO  Successfully parsed JSON response
2019-03-07 19:27:30,503 INFO  In the process of generating verify response in HTML
2019-03-07 19:27:30,570 INFO  Successfully generated verify response in HTML
2019-03-07 19:27:30,575 INFO  Successfully processed the response from service
2019-03-07 19:28:10,183 INFO  Setting request parameters for VerifySolution
2019-03-07 19:28:10,183 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 19:28:10,183 INFO  Starting to parse the user solution
2019-03-07 19:28:10,184 INFO  Displaying user solution
2019-03-07 19:28:10,228 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-17\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self,customer_id,customer_name,address):\r\n        self.__customer_id= customer_id\r\n        self.__customer_name = customer_name\r\n        self.__address = address\r\n\r\n    def get_customer_id(self):\r\n        return self.__customer_id\r\n\r\n\r\n    def get_customer_name(self):\r\n        return self.__customer_name\r\n\r\n\r\n    def get_address(self):\r\n        return self.__address\r\n    \r\n    def validate_customer_id(self):\r\n        if( self.__customer_id>=100000 and self.__customer_id<=199999):\r\n            return True\r\n        else:\r\n            return False\r\n\r\n    \r\n    \r\n        \r\nclass Freight:\r\n    counter = 198\r\n    def __init__(self,recipient_customer,from_customer,weight,distance):\r\n        self.__freight_id = None\r\n        self.__recipient_customer=recipient_customer\r\n        self.__from_customer = from_customer\r\n        self.__weight = weight\r\n        self.__distance = distance\r\n        self.__freight_charge = None\r\n\r\n    def get_freight_id(self):\r\n        return self.__freight_id\r\n\r\n    def get_recipient_customer(self):\r\n        return self.__recipient_customer\r\n\r\n\r\n    def get_from_customer(self):\r\n        return self.__from_customer\r\n\r\n\r\n    def get_weight(self):\r\n        return self.__weight\r\n\r\n\r\n    def get_distance(self):\r\n        return self.__distance\r\n\r\n\r\n    def get_freight_charge(self):\r\n        return self.__freight_charge\r\n    \r\n    def validate_weight(self):\r\n        if(self.__weight%5==0 and self.__weight>0):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def validate_distance(self):\r\n        if(self.__distance>=500 and self.__distance<=5000):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def forward_cargo(self):\r\n        if(self.__from_customer and self.__recipient_customer and self.validate_distance()==True and self.validate_weight()==True):\r\n            Freight.counter+=2\r\n            self.__freight_id = Freight.counter\r\n            self.__freight_charge = 150*self.__weight + 60*self.__distance\r\n        else:\r\n            self.__freight_charge=0\r\n        return self.get_freight_charge()\r\n    \r\n            \r\n            \r\n\r\n        \r\n            \r\n","asgnmtId":"17","SolutionFileName":"Assign17.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 19:28:10,228 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 19:28:10,229 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 19:28:10,229 INFO  Invoking the service to verify the user solution
2019-03-07 19:28:10,229 INFO  Time before invoking service:Thu Mar 07 19:28:10 IST 2019
2019-03-07 19:28:10,229 INFO  Initialising service address for VerifySolution
2019-03-07 19:28:10,229 INFO  Time before invoking service In SUPER:Thu Mar 07 19:28:10 IST 2019
2019-03-07 19:28:11,592 INFO  Time after invoking service In SUPER:Thu Mar 07 19:28:11 IST 2019
2019-03-07 19:28:11,593 INFO  Service responded successfully with required details
2019-03-07 19:28:11,593 INFO  Time after invoking service:Thu Mar 07 19:28:11 IST 2019
2019-03-07 19:28:11,593 INFO  User solution successfully verified
2019-03-07 19:28:11,593 INFO  Processing the response from verify service
2019-03-07 19:28:11,595 INFO  Starting to parse JSON response
2019-03-07 19:28:11,597 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:28:11,597 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:28:11,597 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:28:11,597 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:28:11,597 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:28:11,597 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:28:11,597 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:28:11,599 INFO  Successfully parsed JSON response
2019-03-07 19:28:11,600 INFO  In the process of generating verify response in HTML
2019-03-07 19:28:11,668 INFO  Successfully generated verify response in HTML
2019-03-07 19:28:11,668 INFO  Successfully processed the response from service
2019-03-07 19:29:00,609 INFO  Setting request parameters for VerifySolution
2019-03-07 19:29:00,609 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 19:29:00,609 INFO  Starting to parse the user solution
2019-03-07 19:29:00,610 INFO  Displaying user solution
2019-03-07 19:29:00,650 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-17\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self,customer_id,customer_name,address):\r\n        self.__customer_id= customer_id\r\n        self.__customer_name = customer_name\r\n        self.__address = address\r\n\r\n    def get_customer_id(self):\r\n        return self.__customer_id\r\n\r\n\r\n    def get_customer_name(self):\r\n        return self.__customer_name\r\n\r\n\r\n    def get_address(self):\r\n        return self.__address\r\n    \r\n    def validate_customer_id(self):\r\n        if( self.__customer_id>=100000 and self.__customer_id<=199999):\r\n            return True\r\n        else:\r\n            return False\r\n\r\n    \r\n    \r\n        \r\nclass Freight:\r\n    counter = 198\r\n    def __init__(self,recipient_customer,from_customer,weight,distance):\r\n        self.__freight_id = None\r\n        self.__recipient_customer=recipient_customer\r\n        self.__from_customer = from_customer\r\n        self.__weight = weight\r\n        self.__distance = distance\r\n        self.__freight_charge = None\r\n\r\n    def get_freight_id(self):\r\n        return self.__freight_id\r\n\r\n    def get_recipient_customer(self):\r\n        return self.__recipient_customer\r\n\r\n\r\n    def get_from_customer(self):\r\n        return self.__from_customer\r\n\r\n\r\n    def get_weight(self):\r\n        return self.__weight\r\n\r\n\r\n    def get_distance(self):\r\n        return self.__distance\r\n\r\n\r\n    def get_freight_charge(self):\r\n        return self.__freight_charge\r\n    \r\n    def validate_weight(self):\r\n        if(self.__weight%5==0 and self.__weight>0):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def validate_distance(self):\r\n        if(self.__distance>=500 and self.__distance<=5000):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def forward_cargo(self):\r\n        if(self.__from_customer != self.__recipient_customer and self.validate_distance()==True and self.validate_weight()==True):\r\n            Freight.counter+=2\r\n            self.__freight_id = Freight.counter\r\n            self.__freight_charge = 150*self.__weight + 60*self.__distance\r\n        else:\r\n            self.__freight_charge=0\r\n        return self.get_freight_charge()\r\n    \r\n            \r\n            \r\n\r\n        \r\n            \r\n","asgnmtId":"17","SolutionFileName":"Assign17.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 19:29:00,651 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 19:29:00,651 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 19:29:00,651 INFO  Invoking the service to verify the user solution
2019-03-07 19:29:00,651 INFO  Time before invoking service:Thu Mar 07 19:29:00 IST 2019
2019-03-07 19:29:00,651 INFO  Initialising service address for VerifySolution
2019-03-07 19:29:00,652 INFO  Time before invoking service In SUPER:Thu Mar 07 19:29:00 IST 2019
2019-03-07 19:29:02,013 INFO  Time after invoking service In SUPER:Thu Mar 07 19:29:02 IST 2019
2019-03-07 19:29:02,013 INFO  Service responded successfully with required details
2019-03-07 19:29:02,014 INFO  Time after invoking service:Thu Mar 07 19:29:02 IST 2019
2019-03-07 19:29:02,014 INFO  User solution successfully verified
2019-03-07 19:29:02,016 INFO  Processing the response from verify service
2019-03-07 19:29:02,019 INFO  Starting to parse JSON response
2019-03-07 19:29:02,020 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:29:02,020 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:29:02,020 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:29:02,020 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:29:02,020 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:29:02,020 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:29:02,020 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:29:02,021 INFO  Successfully parsed JSON response
2019-03-07 19:29:02,022 INFO  In the process of generating verify response in HTML
2019-03-07 19:29:02,087 INFO  Successfully generated verify response in HTML
2019-03-07 19:29:02,087 INFO  Successfully processed the response from service
2019-03-07 19:29:25,825 INFO  Setting request parameters for VerifySolution
2019-03-07 19:29:25,825 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 19:29:25,825 INFO  Starting to parse the user solution
2019-03-07 19:29:25,826 INFO  Displaying user solution
2019-03-07 19:29:25,878 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-17\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self,customer_id,customer_name,address):\r\n        self.__customer_id= customer_id\r\n        self.__customer_name = customer_name\r\n        self.__address = address\r\n\r\n    def get_customer_id(self):\r\n        return self.__customer_id\r\n\r\n\r\n    def get_customer_name(self):\r\n        return self.__customer_name\r\n\r\n\r\n    def get_address(self):\r\n        return self.__address\r\n    \r\n    def validate_customer_id(self):\r\n        if( self.__customer_id>=100000 and self.__customer_id<=199999):\r\n            return True\r\n        else:\r\n            return False\r\n\r\n    \r\n    \r\n        \r\nclass Freight:\r\n    counter = 198\r\n    def __init__(self,recipient_customer,from_customer,weight,distance):\r\n        self.__freight_id = None\r\n        self.__recipient_customer=recipient_customer\r\n        self.__from_customer = from_customer\r\n        self.__weight = weight\r\n        self.__distance = distance\r\n        self.__freight_charge = None\r\n\r\n    def get_freight_id(self):\r\n        return self.__freight_id\r\n\r\n    def get_recipient_customer(self):\r\n        return self.__recipient_customer\r\n\r\n\r\n    def get_from_customer(self):\r\n        return self.__from_customer\r\n\r\n\r\n    def get_weight(self):\r\n        return self.__weight\r\n\r\n\r\n    def get_distance(self):\r\n        return self.__distance\r\n\r\n\r\n    def get_freight_charge(self):\r\n        return self.__freight_charge\r\n    \r\n    def validate_weight(self):\r\n        if(self.__weight%5==0 and self.__weight>0):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def validate_distance(self):\r\n        if(self.__distance>=500 and self.__distance<=5000):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def forward_cargo(self):\r\n        if(self.__from_customer != self.__recipient_customer and self.validate_distance()==True and self.validate_weight()==True):\r\n            Freight.counter+=2\r\n            self.__freight_id = Freight.counter\r\n            self.__freight_charge = 150*self.__weight + 60*self.__distance\r\n        else:\r\n            self.__freight_charge=0\r\n        return self.get_freight_charge()\r\n    \r\n            \r\n            \r\n\r\n        \r\n            \r\n","asgnmtId":"17","SolutionFileName":"Assign17.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 19:29:25,879 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 19:29:25,879 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 19:29:25,879 INFO  Invoking the service to verify the user solution
2019-03-07 19:29:25,879 INFO  Time before invoking service:Thu Mar 07 19:29:25 IST 2019
2019-03-07 19:29:25,879 INFO  Initialising service address for VerifySolution
2019-03-07 19:29:25,880 INFO  Time before invoking service In SUPER:Thu Mar 07 19:29:25 IST 2019
2019-03-07 19:29:27,274 INFO  Time after invoking service In SUPER:Thu Mar 07 19:29:27 IST 2019
2019-03-07 19:29:27,274 INFO  Service responded successfully with required details
2019-03-07 19:29:27,275 INFO  Time after invoking service:Thu Mar 07 19:29:27 IST 2019
2019-03-07 19:29:27,275 INFO  User solution successfully verified
2019-03-07 19:29:27,276 INFO  Processing the response from verify service
2019-03-07 19:29:27,277 INFO  Starting to parse JSON response
2019-03-07 19:29:27,278 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:29:27,278 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:29:27,278 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:29:27,278 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:29:27,278 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:29:27,278 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:29:27,279 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:29:27,280 INFO  Successfully parsed JSON response
2019-03-07 19:29:27,282 INFO  In the process of generating verify response in HTML
2019-03-07 19:29:27,356 INFO  Successfully generated verify response in HTML
2019-03-07 19:29:27,357 INFO  Successfully processed the response from service
2019-03-07 19:32:43,788 INFO  Setting request parameters for VerifySolution
2019-03-07 19:32:43,788 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 19:32:43,788 INFO  Starting to parse the user solution
2019-03-07 19:32:43,788 INFO  Displaying user solution
2019-03-07 19:32:43,840 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-17\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self,customer_id,customer_name,address):\r\n        self.__customer_id= customer_id\r\n        self.__customer_name = customer_name\r\n        self.__address = address\r\n\r\n    def get_customer_id(self):\r\n        return self.__customer_id\r\n\r\n\r\n    def get_customer_name(self):\r\n        return self.__customer_name\r\n\r\n\r\n    def get_address(self):\r\n        return self.__address\r\n    \r\n    def validate_customer_id(self):\r\n        if( self.__customer_id>=100000 and self.__customer_id<=199999):\r\n            return True\r\n        else:\r\n            return False\r\n\r\n    \r\n    \r\n        \r\nclass Freight:\r\n    counter = 198\r\n    def __init__(self,recipient_customer,from_customer,weight,distance):\r\n        self.__freight_id = None\r\n        self.__recipient_customer=recipient_customer\r\n        self.__from_customer = from_customer\r\n        self.__weight = weight\r\n        self.__distance = distance\r\n        self.__freight_charge = None\r\n\r\n    def get_freight_id(self):\r\n        return self.__freight_id\r\n\r\n    def get_recipient_customer(self):\r\n        return self.__recipient_customer\r\n\r\n\r\n    def get_from_customer(self):\r\n        return self.__from_customer\r\n\r\n\r\n    def get_weight(self):\r\n        return self.__weight\r\n\r\n\r\n    def get_distance(self):\r\n        return self.__distance\r\n\r\n\r\n    def get_freight_charge(self):\r\n        return self.__freight_charge\r\n    \r\n    def validate_weight(self):\r\n        if(self.__weight%5==0 and self.__weight>0):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def validate_distance(self):\r\n        if(self.__distance>=500 and self.__distance<=5000):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def forward_cargo(self):\r\n        if(self.__from_customer==self.get_from_customer() and self.__recipient_customer==self.get_recipient_customer() and self.validate_distance()==True and self.validate_weight()==True):\r\n            Freight.counter+=2\r\n            self.__freight_id = Freight.counter\r\n            self.__freight_charge = 150*self.__weight + 60*self.__distance\r\n        else:\r\n            self.__freight_charge=0\r\n        return self.get_freight_charge()\r\n    \r\n            \r\n            \r\n\r\n        \r\n            \r\n","asgnmtId":"17","SolutionFileName":"Assign17.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 19:32:43,841 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 19:32:43,841 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 19:32:43,841 INFO  Invoking the service to verify the user solution
2019-03-07 19:32:43,842 INFO  Time before invoking service:Thu Mar 07 19:32:43 IST 2019
2019-03-07 19:32:43,842 INFO  Initialising service address for VerifySolution
2019-03-07 19:32:43,842 INFO  Time before invoking service In SUPER:Thu Mar 07 19:32:43 IST 2019
2019-03-07 19:32:45,147 INFO  Time after invoking service In SUPER:Thu Mar 07 19:32:45 IST 2019
2019-03-07 19:32:45,148 INFO  Service responded successfully with required details
2019-03-07 19:32:45,148 INFO  Time after invoking service:Thu Mar 07 19:32:45 IST 2019
2019-03-07 19:32:45,149 INFO  User solution successfully verified
2019-03-07 19:32:45,149 INFO  Processing the response from verify service
2019-03-07 19:32:45,156 INFO  Starting to parse JSON response
2019-03-07 19:32:45,157 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:32:45,157 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:32:45,157 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:32:45,157 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:32:45,157 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:32:45,157 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:32:45,157 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:32:45,159 INFO  Successfully parsed JSON response
2019-03-07 19:32:45,159 INFO  In the process of generating verify response in HTML
2019-03-07 19:32:45,228 INFO  Successfully generated verify response in HTML
2019-03-07 19:32:45,228 INFO  Successfully processed the response from service
2019-03-07 19:34:04,065 INFO  Setting request parameters for VerifySolution
2019-03-07 19:34:04,065 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 19:34:04,065 INFO  Starting to parse the user solution
2019-03-07 19:34:04,065 INFO  Displaying user solution
2019-03-07 19:34:04,112 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-17\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self,customer_id,customer_name,address):\r\n        self.__customer_id= customer_id\r\n        self.__customer_name = customer_name\r\n        self.__address = address\r\n\r\n    def get_customer_id(self):\r\n        return self.__customer_id\r\n\r\n\r\n    def get_customer_name(self):\r\n        return self.__customer_name\r\n\r\n\r\n    def get_address(self):\r\n        return self.__address\r\n    \r\n    def validate_customer_id(self):\r\n        if( self.__customer_id>=100000 and self.__customer_id<=199999):\r\n            return True\r\n        else:\r\n            return False\r\n\r\n    \r\n    \r\n        \r\nclass Freight:\r\n    counter = 198\r\n    def __init__(self,recipient_customer,from_customer,weight,distance):\r\n        self.__freight_id = None\r\n        self.__recipient_customer=recipient_customer\r\n        self.__from_customer = from_customer\r\n        self.__weight = weight\r\n        self.__distance = distance\r\n        self.__freight_charge = None\r\n\r\n    def get_freight_id(self):\r\n        return self.__freight_id\r\n\r\n    def get_recipient_customer(self):\r\n        return self.__recipient_customer\r\n\r\n\r\n    def get_from_customer(self):\r\n        return self.__from_customer\r\n\r\n\r\n    def get_weight(self):\r\n        return self.__weight\r\n\r\n\r\n    def get_distance(self):\r\n        return self.__distance\r\n\r\n\r\n    def get_freight_charge(self):\r\n        return self.__freight_charge\r\n    \r\n    def validate_weight(self):\r\n        if(self.__weight%5==0 and self.__weight>0):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def validate_distance(self):\r\n        if(self.__distance>=500 and self.__distance<=5000):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def forward_cargo(self):\r\n        if(self.__from_customer==True and self.__recipient_customer==True and self.validate_distance()==True and self.validate_weight()==True):\r\n            Freight.counter+=2\r\n            self.__freight_id = Freight.counter\r\n            self.__freight_charge = 150*self.__weight + 60*self.__distance\r\n        else:\r\n            self.__freight_charge=0\r\n        return self.get_freight_charge()\r\n    \r\n            \r\n            \r\n\r\n        \r\n            \r\n","asgnmtId":"17","SolutionFileName":"Assign17.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 19:34:04,113 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 19:34:04,113 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 19:34:04,113 INFO  Invoking the service to verify the user solution
2019-03-07 19:34:04,113 INFO  Time before invoking service:Thu Mar 07 19:34:04 IST 2019
2019-03-07 19:34:04,113 INFO  Initialising service address for VerifySolution
2019-03-07 19:34:04,114 INFO  Time before invoking service In SUPER:Thu Mar 07 19:34:04 IST 2019
2019-03-07 19:34:05,535 INFO  Time after invoking service In SUPER:Thu Mar 07 19:34:05 IST 2019
2019-03-07 19:34:05,535 INFO  Service responded successfully with required details
2019-03-07 19:34:05,535 INFO  Time after invoking service:Thu Mar 07 19:34:05 IST 2019
2019-03-07 19:34:05,535 INFO  User solution successfully verified
2019-03-07 19:34:05,536 INFO  Processing the response from verify service
2019-03-07 19:34:05,540 INFO  Starting to parse JSON response
2019-03-07 19:34:05,541 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:34:05,542 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:34:05,542 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:34:05,542 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:34:05,542 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:34:05,542 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:34:05,542 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:34:05,542 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:34:05,545 INFO  Successfully parsed JSON response
2019-03-07 19:34:05,546 INFO  In the process of generating verify response in HTML
2019-03-07 19:34:05,617 INFO  Successfully generated verify response in HTML
2019-03-07 19:34:05,617 INFO  Successfully processed the response from service
2019-03-07 19:36:18,775 INFO  Setting request parameters for VerifySolution
2019-03-07 19:36:18,775 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 19:36:18,775 INFO  Starting to parse the user solution
2019-03-07 19:36:18,776 INFO  Displaying user solution
2019-03-07 19:36:18,866 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-17\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self,customer_id,customer_name,address):\r\n        self.__customer_id= customer_id\r\n        self.__customer_name = customer_name\r\n        self.__address = address\r\n\r\n    def get_customer_id(self):\r\n        return self.__customer_id\r\n\r\n\r\n    def get_customer_name(self):\r\n        return self.__customer_name\r\n\r\n\r\n    def get_address(self):\r\n        return self.__address\r\n    \r\n    def validate_customer_id(self):\r\n        if( self.__customer_id>=100000 and self.__customer_id<=199999):\r\n            return True\r\n        else:\r\n            return False\r\n\r\n    \r\n    \r\n        \r\nclass Freight:\r\n    counter = 198\r\n    def __init__(self,recipient_customer,from_customer,weight,distance):\r\n        self.__freight_id = None\r\n        self.__recipient_customer=recipient_customer\r\n        self.__from_customer = from_customer\r\n        self.__weight = weight\r\n        self.__distance = distance\r\n        self.__freight_charge = None\r\n\r\n    def get_freight_id(self):\r\n        return self.__freight_id\r\n\r\n    def get_recipient_customer(self):\r\n        return self.__recipient_customer\r\n\r\n\r\n    def get_from_customer(self):\r\n        return self.__from_customer\r\n\r\n\r\n    def get_weight(self):\r\n        return self.__weight\r\n\r\n\r\n    def get_distance(self):\r\n        return self.__distance\r\n\r\n\r\n    def get_freight_charge(self):\r\n        return self.__freight_charge\r\n    \r\n    def validate_weight(self):\r\n        if(self.__weight%5==0 and self.__weight>0):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def validate_distance(self):\r\n        if(self.__distance>=500 and self.__distance<=5000):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def forward_cargo(self):\r\n        if(self.__from_customer and self.__recipient_customer and self.validate_distance()==True and self.validate_weight()==True):\r\n            Freight.counter+=2\r\n            self.__freight_id = Freight.counter\r\n            self.__freight_charge = 150*self.__weight + 60*self.__distance\r\n        else:\r\n            self.__freight_charge=0\r\n        return self.get_freight_charge()\r\n    \r\n            \r\n            \r\n\r\n        \r\n            \r\n","asgnmtId":"17","SolutionFileName":"Assign17.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 19:36:18,867 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 19:36:18,867 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 19:36:18,867 INFO  Invoking the service to verify the user solution
2019-03-07 19:36:18,867 INFO  Time before invoking service:Thu Mar 07 19:36:18 IST 2019
2019-03-07 19:36:18,867 INFO  Initialising service address for VerifySolution
2019-03-07 19:36:18,867 INFO  Time before invoking service In SUPER:Thu Mar 07 19:36:18 IST 2019
2019-03-07 19:36:20,201 INFO  Time after invoking service In SUPER:Thu Mar 07 19:36:20 IST 2019
2019-03-07 19:36:20,202 INFO  Service responded successfully with required details
2019-03-07 19:36:20,202 INFO  Time after invoking service:Thu Mar 07 19:36:20 IST 2019
2019-03-07 19:36:20,202 INFO  User solution successfully verified
2019-03-07 19:36:20,203 INFO  Processing the response from verify service
2019-03-07 19:36:20,204 INFO  Starting to parse JSON response
2019-03-07 19:36:20,208 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:36:20,208 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:36:20,208 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:36:20,209 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:36:20,209 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:36:20,209 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:36:20,209 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:36:20,210 INFO  Successfully parsed JSON response
2019-03-07 19:36:20,211 INFO  In the process of generating verify response in HTML
2019-03-07 19:36:20,282 INFO  Successfully generated verify response in HTML
2019-03-07 19:36:20,283 INFO  Successfully processed the response from service
2019-03-07 19:49:28,472 INFO  Setting request parameters for VerifySolution
2019-03-07 19:49:28,472 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 19:49:28,472 INFO  Starting to parse the user solution
2019-03-07 19:49:28,473 INFO  Displaying user solution
2019-03-07 19:49:28,550 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-17\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self,customer_id,customer_name,address):\r\n        self.__customer_id= customer_id\r\n        self.__customer_name = customer_name\r\n        self.__address = address\r\n\r\n    def get_customer_id(self):\r\n        return self.__customer_id\r\n\r\n\r\n    def get_customer_name(self):\r\n        return self.__customer_name\r\n\r\n\r\n    def get_address(self):\r\n        return self.__address\r\n    \r\n    def validate_customer_id(self):\r\n        if( self.__customer_id>=100000 and self.__customer_id<=199999):\r\n            return True\r\n        else:\r\n            return False\r\n\r\n    \r\n    \r\n        \r\nclass Freight:\r\n    counter = 198\r\n    def __init__(self,recipient_customer,from_customer,weight,distance):\r\n        self.__freight_id = None\r\n        self.__recipient_customer=recipient_customer\r\n        self.__from_customer = from_customer\r\n        self.__weight = weight\r\n        self.__distance = distance\r\n        self.__freight_charge = None\r\n\r\n    def get_freight_id(self):\r\n        return self.__freight_id\r\n\r\n    def get_recipient_customer(self):\r\n        return self.__recipient_customer\r\n\r\n\r\n    def get_from_customer(self):\r\n        return self.__from_customer\r\n\r\n\r\n    def get_weight(self):\r\n        return self.__weight\r\n\r\n\r\n    def get_distance(self):\r\n        return self.__distance\r\n\r\n\r\n    def get_freight_charge(self):\r\n        return self.__freight_charge\r\n    \r\n    def validate_weight(self):\r\n        if(self.__weight%5==0 and self.__weight>0):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def validate_distance(self):\r\n        if(self.__distance>=500 and self.__distance<=5000):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def forward_cargo(self):\r\n        c1 = Customer(self.__from_customer, \"gg\", \"kk\")\r\n        c2 = Customer(self.__recipient_customer,\"gg\",\"hj\")\r\n        if(c1.validate_customer_id()   and self.validate_distance()==True and self.validate_weight()==True):\r\n            Freight.counter+=2\r\n            self.__freight_id = Freight.counter\r\n            self.__freight_charge = 150*self.__weight + 60*self.__distance\r\n        else:\r\n            self.__freight_charge=0\r\n        return self.get_freight_charge()\r\n    \r\n            \r\n            \r\n\r\n        \r\n            \r\n","asgnmtId":"17","SolutionFileName":"Assign17.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 19:49:28,550 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 19:49:28,551 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 19:49:28,551 INFO  Invoking the service to verify the user solution
2019-03-07 19:49:28,551 INFO  Time before invoking service:Thu Mar 07 19:49:28 IST 2019
2019-03-07 19:49:28,552 INFO  Initialising service address for VerifySolution
2019-03-07 19:49:28,552 INFO  Time before invoking service In SUPER:Thu Mar 07 19:49:28 IST 2019
2019-03-07 19:49:29,865 INFO  Time after invoking service In SUPER:Thu Mar 07 19:49:29 IST 2019
2019-03-07 19:49:29,865 INFO  Service responded successfully with required details
2019-03-07 19:49:29,865 INFO  Time after invoking service:Thu Mar 07 19:49:29 IST 2019
2019-03-07 19:49:29,865 INFO  User solution successfully verified
2019-03-07 19:49:29,866 INFO  Processing the response from verify service
2019-03-07 19:49:29,872 INFO  Starting to parse JSON response
2019-03-07 19:49:29,875 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:49:29,875 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:49:29,875 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:49:29,875 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:49:29,876 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:49:29,876 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:49:29,876 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:49:29,876 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:49:29,876 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:49:29,876 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:49:29,877 INFO  Successfully parsed JSON response
2019-03-07 19:49:29,878 INFO  In the process of generating verify response in HTML
2019-03-07 19:49:30,018 INFO  Successfully generated verify response in HTML
2019-03-07 19:49:30,019 INFO  Successfully processed the response from service
2019-03-07 19:49:36,772 INFO  Setting request parameters for VerifySolution
2019-03-07 19:49:36,772 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 19:49:36,773 INFO  Starting to parse the user solution
2019-03-07 19:49:36,773 INFO  Displaying user solution
2019-03-07 19:49:36,838 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-17\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self,customer_id,customer_name,address):\r\n        self.__customer_id= customer_id\r\n        self.__customer_name = customer_name\r\n        self.__address = address\r\n\r\n    def get_customer_id(self):\r\n        return self.__customer_id\r\n\r\n\r\n    def get_customer_name(self):\r\n        return self.__customer_name\r\n\r\n\r\n    def get_address(self):\r\n        return self.__address\r\n    \r\n    def validate_customer_id(self):\r\n        if( self.__customer_id>=100000 and self.__customer_id<=199999):\r\n            return True\r\n        else:\r\n            return False\r\n\r\n    \r\n    \r\n        \r\nclass Freight:\r\n    counter = 198\r\n    def __init__(self,recipient_customer,from_customer,weight,distance):\r\n        self.__freight_id = None\r\n        self.__recipient_customer=recipient_customer\r\n        self.__from_customer = from_customer\r\n        self.__weight = weight\r\n        self.__distance = distance\r\n        self.__freight_charge = None\r\n\r\n    def get_freight_id(self):\r\n        return self.__freight_id\r\n\r\n    def get_recipient_customer(self):\r\n        return self.__recipient_customer\r\n\r\n\r\n    def get_from_customer(self):\r\n        return self.__from_customer\r\n\r\n\r\n    def get_weight(self):\r\n        return self.__weight\r\n\r\n\r\n    def get_distance(self):\r\n        return self.__distance\r\n\r\n\r\n    def get_freight_charge(self):\r\n        return self.__freight_charge\r\n    \r\n    def validate_weight(self):\r\n        if(self.__weight%5==0 and self.__weight>0):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def validate_distance(self):\r\n        if(self.__distance>=500 and self.__distance<=5000):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def forward_cargo(self):\r\n        c1 = Customer(self.__from_customer, \"gg\", \"kk\")\r\n        c2 = Customer(self.__recipient_customer,\"gg\",\"hj\")\r\n        if(c1.validate_customer_id() and c2.validate_customer_id()  and self.validate_distance()==True and self.validate_weight()==True):\r\n            Freight.counter+=2\r\n            self.__freight_id = Freight.counter\r\n            self.__freight_charge = 150*self.__weight + 60*self.__distance\r\n        else:\r\n            self.__freight_charge=0\r\n        return self.get_freight_charge()\r\n    \r\n            \r\n            \r\n\r\n        \r\n            \r\n","asgnmtId":"17","SolutionFileName":"Assign17.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 19:49:36,838 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 19:49:36,839 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 19:49:36,839 INFO  Invoking the service to verify the user solution
2019-03-07 19:49:36,839 INFO  Time before invoking service:Thu Mar 07 19:49:36 IST 2019
2019-03-07 19:49:36,839 INFO  Initialising service address for VerifySolution
2019-03-07 19:49:36,840 INFO  Time before invoking service In SUPER:Thu Mar 07 19:49:36 IST 2019
2019-03-07 19:49:37,930 INFO  Time after invoking service In SUPER:Thu Mar 07 19:49:37 IST 2019
2019-03-07 19:49:37,931 INFO  Service responded successfully with required details
2019-03-07 19:49:37,931 INFO  Time after invoking service:Thu Mar 07 19:49:37 IST 2019
2019-03-07 19:49:37,931 INFO  User solution successfully verified
2019-03-07 19:49:37,931 INFO  Processing the response from verify service
2019-03-07 19:49:37,934 INFO  Starting to parse JSON response
2019-03-07 19:49:37,935 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:49:37,935 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:49:37,935 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:49:37,935 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:49:37,936 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:49:37,936 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:49:37,936 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:49:37,936 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:49:37,936 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:49:37,936 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:49:37,937 INFO  Successfully parsed JSON response
2019-03-07 19:49:37,938 INFO  In the process of generating verify response in HTML
2019-03-07 19:49:38,020 INFO  Successfully generated verify response in HTML
2019-03-07 19:49:38,020 INFO  Successfully processed the response from service
2019-03-07 19:51:50,083 INFO  Setting request parameters for VerifySolution
2019-03-07 19:51:50,083 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 19:51:50,083 INFO  Starting to parse the user solution
2019-03-07 19:51:50,084 INFO  Displaying user solution
2019-03-07 19:51:50,136 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-17\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self,customer_id,customer_name,address):\r\n        self.__customer_id= customer_id\r\n        self.__customer_name = customer_name\r\n        self.__address = address\r\n\r\n    def get_customer_id(self):\r\n        return self.__customer_id\r\n\r\n\r\n    def get_customer_name(self):\r\n        return self.__customer_name\r\n\r\n\r\n    def get_address(self):\r\n        return self.__address\r\n    \r\n    def validate_customer_id(self):\r\n        if( self.__customer_id>=100000 and self.__customer_id<=199999):\r\n            return True\r\n        else:\r\n            return False\r\n\r\n    \r\n    \r\n        \r\nclass Freight:\r\n    counter = 198\r\n    def __init__(self,recipient_customer,from_customer,weight,distance):\r\n        self.__freight_id = None\r\n        self.__recipient_customer=recipient_customer\r\n        self.__from_customer = from_customer\r\n        self.__weight = weight\r\n        self.__distance = distance\r\n        self.__freight_charge = None\r\n\r\n    def get_freight_id(self):\r\n        return self.__freight_id\r\n\r\n    def get_recipient_customer(self):\r\n        return self.__recipient_customer\r\n\r\n\r\n    def get_from_customer(self):\r\n        return self.__from_customer\r\n\r\n\r\n    def get_weight(self):\r\n        return self.__weight\r\n\r\n\r\n    def get_distance(self):\r\n        return self.__distance\r\n\r\n\r\n    def get_freight_charge(self):\r\n        return self.__freight_charge\r\n    \r\n    def validate_weight(self):\r\n        if(self.__weight%5==0 and self.__weight>0):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def validate_distance(self):\r\n        if(self.__distance>=500 and self.__distance<=5000):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def forward_cargo(self):\r\n        if(self.__from_customer.validate_customer_id() and self.__recipient_customer.validate_customer_id()  and self.validate_distance()==True and self.validate_weight()==True):\r\n            Freight.counter+=2\r\n            self.__freight_id = Freight.counter\r\n            self.__freight_charge = 150*self.__weight + 60*self.__distance\r\n        else:\r\n            self.__freight_charge=0\r\n        return self.get_freight_charge()\r\n    \r\n            \r\n            \r\n\r\n        \r\n            \r\n","asgnmtId":"17","SolutionFileName":"Assign17.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 19:51:50,138 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 19:51:50,138 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 19:51:50,138 INFO  Invoking the service to verify the user solution
2019-03-07 19:51:50,138 INFO  Time before invoking service:Thu Mar 07 19:51:50 IST 2019
2019-03-07 19:51:50,138 INFO  Initialising service address for VerifySolution
2019-03-07 19:51:50,139 INFO  Time before invoking service In SUPER:Thu Mar 07 19:51:50 IST 2019
2019-03-07 19:51:51,495 INFO  Time after invoking service In SUPER:Thu Mar 07 19:51:51 IST 2019
2019-03-07 19:51:51,495 INFO  Service responded successfully with required details
2019-03-07 19:51:51,496 INFO  Time after invoking service:Thu Mar 07 19:51:51 IST 2019
2019-03-07 19:51:51,496 INFO  User solution successfully verified
2019-03-07 19:51:51,496 INFO  Processing the response from verify service
2019-03-07 19:51:51,499 INFO  Starting to parse JSON response
2019-03-07 19:51:51,500 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:51:51,500 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:51:51,500 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:51:51,500 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:51:51,500 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:51:51,500 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:51:51,500 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:51:51,500 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:51:51,500 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:51:51,500 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:51:51,502 INFO  Successfully parsed JSON response
2019-03-07 19:51:51,504 INFO  In the process of generating verify response in HTML
2019-03-07 19:51:51,582 INFO  Successfully generated verify response in HTML
2019-03-07 19:51:51,583 INFO  Successfully processed the response from service
2019-03-07 19:54:31,320 INFO  Setting request parameters for VerifySolution
2019-03-07 19:54:31,320 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 19:54:31,320 INFO  Starting to parse the user solution
2019-03-07 19:54:31,321 INFO  Displaying user solution
2019-03-07 19:54:31,389 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-17\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self,customer_id,customer_name,address):\r\n        self.__customer_id= customer_id\r\n        self.__customer_name = customer_name\r\n        self.__address = address\r\n\r\n    def get_customer_id(self):\r\n        return self.__customer_id\r\n\r\n\r\n    def get_customer_name(self):\r\n        return self.__customer_name\r\n\r\n\r\n    def get_address(self):\r\n        return self.__address\r\n    \r\n    def validate_customer_id(self):\r\n        if( self.__customer_id>=100000 and self.__customer_id<=199999):\r\n            return True\r\n        else:\r\n            return False\r\n\r\n    \r\n    \r\n        \r\nclass Freight:\r\n    counter = 198\r\n    def __init__(self,recipient_customer,from_customer,weight,distance):\r\n        self.__freight_id = None\r\n        self.__recipient_customer=recipient_customer\r\n        self.__from_customer = from_customer\r\n        self.__weight = weight\r\n        self.__distance = distance\r\n        self.__freight_charge = None\r\n\r\n    def get_freight_id(self):\r\n        return self.__freight_id\r\n\r\n    def get_recipient_customer(self):\r\n        return self.__recipient_customer\r\n\r\n\r\n    def get_from_customer(self):\r\n        return self.__from_customer\r\n\r\n\r\n    def get_weight(self):\r\n        return self.__weight\r\n\r\n\r\n    def get_distance(self):\r\n        return self.__distance\r\n\r\n\r\n    def get_freight_charge(self):\r\n        return self.__freight_charge\r\n    \r\n    def validate_weight(self):\r\n        if(self.__weight%5==0 and self.__weight>0):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def validate_distance(self):\r\n        if(self.__distance>=500 and self.__distance<=5000):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def forward_cargo(self):\r\n        if(self.__from_customer.validate_customer_id() and self.__recipient_customer.validate_customer_id()  and self.validate_distance()==True and self.validate_weight()==True):\r\n            Freight.counter+=2\r\n            self.__freight_id = Freight.counter\r\n            self.__freight_charge = 150*self.__weight + 60*self.__distance\r\n        else:\r\n            self.__freight_charge=0\r\n        return self.get_freight_charge()\r\n    \r\n            \r\n            \r\n\r\n        \r\n            \r\n","asgnmtId":"17","SolutionFileName":"Assign17.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 19:54:31,389 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 19:54:31,390 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 19:54:31,390 INFO  Invoking the service to verify the user solution
2019-03-07 19:54:31,390 INFO  Time before invoking service:Thu Mar 07 19:54:31 IST 2019
2019-03-07 19:54:31,390 INFO  Initialising service address for VerifySolution
2019-03-07 19:54:31,391 INFO  Time before invoking service In SUPER:Thu Mar 07 19:54:31 IST 2019
2019-03-07 19:54:32,723 INFO  Time after invoking service In SUPER:Thu Mar 07 19:54:32 IST 2019
2019-03-07 19:54:32,723 INFO  Service responded successfully with required details
2019-03-07 19:54:32,724 INFO  Time after invoking service:Thu Mar 07 19:54:32 IST 2019
2019-03-07 19:54:32,724 INFO  User solution successfully verified
2019-03-07 19:54:32,724 INFO  Processing the response from verify service
2019-03-07 19:54:32,732 INFO  Starting to parse JSON response
2019-03-07 19:54:32,734 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:54:32,734 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:54:32,734 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:54:32,734 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:54:32,734 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:54:32,734 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:54:32,734 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:54:32,734 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:54:32,734 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:54:32,734 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:54:32,736 INFO  Successfully parsed JSON response
2019-03-07 19:54:32,737 INFO  In the process of generating verify response in HTML
2019-03-07 19:54:32,819 INFO  Successfully generated verify response in HTML
2019-03-07 19:54:32,819 INFO  Successfully processed the response from service
2019-03-07 19:54:56,306 INFO  Setting request parameters for VerifySolution
2019-03-07 19:54:56,307 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 19:54:56,307 INFO  Starting to parse the user solution
2019-03-07 19:54:56,308 INFO  Displaying user solution
2019-03-07 19:54:56,371 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-17\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self,customer_id,customer_name,address):\r\n        self.__customer_id= customer_id\r\n        self.__customer_name = customer_name\r\n        self.__address = address\r\n\r\n    def get_customer_id(self):\r\n        return self.__customer_id\r\n\r\n\r\n    def get_customer_name(self):\r\n        return self.__customer_name\r\n\r\n\r\n    def get_address(self):\r\n        return self.__address\r\n    \r\n    def validate_customer_id(self):\r\n        if( self.__customer_id>=100000 and self.__customer_id<=199999):\r\n            return True\r\n        else:\r\n            return False\r\n\r\n    \r\n    \r\n        \r\nclass Freight:\r\n    counter = 198\r\n    def __init__(self,recipient_customer,from_customer,weight,distance):\r\n        self.__freight_id = None\r\n        self.__recipient_customer=recipient_customer\r\n        self.__from_customer = from_customer\r\n        self.__weight = weight\r\n        self.__distance = distance\r\n        self.__freight_charge = None\r\n\r\n    def get_freight_id(self):\r\n        return self.__freight_id\r\n\r\n    def get_recipient_customer(self):\r\n        return self.__recipient_customer\r\n\r\n\r\n    def get_from_customer(self):\r\n        return self.__from_customer\r\n\r\n\r\n    def get_weight(self):\r\n        return self.__weight\r\n\r\n\r\n    def get_distance(self):\r\n        return self.__distance\r\n\r\n\r\n    def get_freight_charge(self):\r\n        return self.__freight_charge\r\n    \r\n    def validate_weight(self):\r\n        if(self.__weight%5==0 and self.__weight>0):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def validate_distance(self):\r\n        if(self.__distance>=500 and self.__distance<=5000):\r\n            return True\r\n        else:\r\n            return False\r\n        \r\n    def forward_cargo(self):\r\n        if(self.__from_customer.validate_customer_id() and \r\n           self.__recipient_customer.validate_customer_id()  and \r\n           self.validate_distance()==True and self.validate_weight()==True):\r\n            Freight.counter+=2\r\n            self.__freight_id = Freight.counter\r\n            self.__freight_charge = 150*self.__weight + 60*self.__distance\r\n        else:\r\n            self.__freight_charge=0\r\n        return self.get_freight_charge()\r\n    \r\n            \r\n            \r\n\r\n        \r\n            \r\n","asgnmtId":"17","SolutionFileName":"Assign17.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 19:54:56,371 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 19:54:56,372 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 19:54:56,372 INFO  Invoking the service to verify the user solution
2019-03-07 19:54:56,372 INFO  Time before invoking service:Thu Mar 07 19:54:56 IST 2019
2019-03-07 19:54:56,372 INFO  Initialising service address for VerifySolution
2019-03-07 19:54:56,373 INFO  Time before invoking service In SUPER:Thu Mar 07 19:54:56 IST 2019
2019-03-07 19:54:57,790 INFO  Time after invoking service In SUPER:Thu Mar 07 19:54:57 IST 2019
2019-03-07 19:54:57,790 INFO  Service responded successfully with required details
2019-03-07 19:54:57,790 INFO  Time after invoking service:Thu Mar 07 19:54:57 IST 2019
2019-03-07 19:54:57,790 INFO  User solution successfully verified
2019-03-07 19:54:57,791 INFO  Processing the response from verify service
2019-03-07 19:54:57,793 INFO  Starting to parse JSON response
2019-03-07 19:54:57,795 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:54:57,795 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:54:57,795 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:54:57,795 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:54:57,795 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:54:57,795 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:54:57,795 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:54:57,795 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:54:57,795 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:54:57,795 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 19:54:57,796 INFO  Successfully parsed JSON response
2019-03-07 19:54:57,798 INFO  In the process of generating verify response in HTML
2019-03-07 19:54:57,864 INFO  Successfully generated verify response in HTML
2019-03-07 19:54:57,864 INFO  Successfully processed the response from service
2019-03-07 19:55:01,842 INFO  Initiating to process and prepare Input for the submit service
2019-03-07 19:55:01,843 INFO  Displaying user solution
2019-03-07 19:55:01,857 INFO  Successfully processed and prepared the input for the submit service
2019-03-07 19:55:01,858 INFO  Invoking the service to submit the user solution
2019-03-07 19:55:01,858 INFO  Initialising service address for Submit
2019-03-07 19:55:01,858 INFO  Time before invoking service In SUPER:Thu Mar 07 19:55:01 IST 2019
2019-03-07 19:55:02,267 INFO  Time after invoking service In SUPER:Thu Mar 07 19:55:02 IST 2019
2019-03-07 19:55:02,267 INFO  Service responded successfully with required details
2019-03-07 19:55:02,267 INFO  User solution successfully submitted
2019-03-07 19:55:02,267 INFO  Displaying submission status
2019-03-07 19:55:02,267 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-07 19:55:04,434 INFO  Initiating to process and prepare Input for the submit service
2019-03-07 19:55:04,435 INFO  Displaying user solution
2019-03-07 19:55:04,444 INFO  Successfully processed and prepared the input for the submit service
2019-03-07 19:55:04,444 INFO  Invoking the service to submit the user solution
2019-03-07 19:55:04,444 INFO  Initialising service address for Submit
2019-03-07 19:55:04,444 INFO  Time before invoking service In SUPER:Thu Mar 07 19:55:04 IST 2019
2019-03-07 19:55:04,542 INFO  Time after invoking service In SUPER:Thu Mar 07 19:55:04 IST 2019
2019-03-07 19:55:04,543 INFO  Service responded successfully with required details
2019-03-07 19:55:04,543 INFO  User solution successfully submitted
2019-03-07 19:55:04,543 INFO  Displaying submission status
2019-03-07 19:55:04,543 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-07 20:36:45,288 INFO  Setting request parameters for VerifySolution
2019-03-07 20:36:45,288 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 20:36:45,288 INFO  Starting to parse the user solution
2019-03-07 20:36:45,289 INFO  Displaying user solution
2019-03-07 20:36:45,410 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-18\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self, customer_name):\r\n        self.__customer_name=customer_name\r\n        self.__payment_status= None\r\n\r\n    def get_customer_name(self):\r\n        return self.__customer_name\r\n\r\n\r\n    def get_payment_status(self):\r\n        return self.__payment_status\r\n\r\n    def pays_bill(self):\r\n        self.__payment_status=\"Paid\"\r\n    \r\n    \r\n    \r\n    \r\nclass Bill:\r\n    counter=1000\r\n    def __init__(self):\r\n        self.__bill_id = None\r\n        self.__bill_amount=None\r\n\r\n    def get_bill_id(self):\r\n        return self.__bill_id\r\n\r\n\r\n    def get_bill_amount(self):\r\n        return self.__bill_amount\r\n\r\n    def generate_bill_amount(self,item_quantity,items):\r\n        Bill.counter+=1\r\n        self.__bill_id=\"B\"+str(Bill.counter)\r\n        tmp_dict=item_quantity\r\n        new_dict={} \r\n        for item in tmp_dict:\r\n            new_dict[item.lower()]=tmp_dict[item]\r\n        for prod,quan in new_dict.items():\r\n            for i in items:\r\n                if i.get_item_id().lower()==prod:\r\n                    self.__bill_amount+=quan*i.get_price_per_quantity()\r\n                    break\r\n               \r\n    \r\n    \r\n    \r\nclass Item:\r\n    def __init__(self,item_id,description,price_per_quantity):\r\n        self.__item_id = item_id\r\n        self.__description = description\r\n        self.__price_per_quantity=price_per_quantity\r\n\r\n    def get_item_id(self):\r\n        return self.__item_id\r\n\r\n\r\n    def get_description(self):\r\n        return self.__description\r\n\r\n\r\n    def get_price_per_quantity(self):\r\n        return self.__price_per_quantity\r\n\r\n    \r\n    \r\n","asgnmtId":"18","SolutionFileName":"Assign18.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 20:36:45,411 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 20:36:45,411 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 20:36:45,411 INFO  Invoking the service to verify the user solution
2019-03-07 20:36:45,412 INFO  Time before invoking service:Thu Mar 07 20:36:45 IST 2019
2019-03-07 20:36:45,412 INFO  Initialising service address for VerifySolution
2019-03-07 20:36:45,413 INFO  Time before invoking service In SUPER:Thu Mar 07 20:36:45 IST 2019
2019-03-07 20:36:46,464 INFO  Time after invoking service In SUPER:Thu Mar 07 20:36:46 IST 2019
2019-03-07 20:36:46,464 INFO  Service responded successfully with required details
2019-03-07 20:36:46,465 INFO  Time after invoking service:Thu Mar 07 20:36:46 IST 2019
2019-03-07 20:36:46,465 INFO  User solution successfully verified
2019-03-07 20:36:46,466 INFO  Processing the response from verify service
2019-03-07 20:36:46,475 INFO  Starting to parse JSON response
2019-03-07 20:36:46,477 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:36:46,477 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:36:46,477 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:36:46,477 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:36:46,477 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:36:46,477 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:36:46,478 INFO  Successfully parsed JSON response
2019-03-07 20:36:46,478 INFO  In the process of generating verify response in HTML
2019-03-07 20:36:46,567 INFO  Successfully generated verify response in HTML
2019-03-07 20:36:46,567 INFO  Successfully processed the response from service
2019-03-07 20:37:04,703 INFO  Setting request parameters for VerifySolution
2019-03-07 20:37:04,703 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 20:37:04,703 INFO  Starting to parse the user solution
2019-03-07 20:37:04,704 INFO  Displaying user solution
2019-03-07 20:37:04,773 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-18\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self, customer_name):\r\n        self.__customer_name=customer_name\r\n        self.__payment_status= None\r\n\r\n    def get_customer_name(self):\r\n        return self.__customer_name\r\n\r\n\r\n    def get_payment_status(self):\r\n        return self.__payment_status\r\n\r\n    def pays_bill(self):\r\n        self.__payment_status=\"Paid\"\r\n    \r\n    \r\n    \r\n    \r\nclass Bill:\r\n    counter=1000\r\n    def __init__(self):\r\n        self.__bill_id = None\r\n        self.__bill_amount=None\r\n\r\n    def get_bill_id(self):\r\n        return self.__bill_id\r\n\r\n\r\n    def get_bill_amount(self):\r\n        return self.__bill_amount\r\n\r\n    def generate_bill_amount(self,item_quantity,items):\r\n        Bill.counter+=1\r\n        self.__bill_id=\"B\"+str(Bill.counter)\r\n        tmp_dict=item_quantity\r\n        new_dict={} \r\n        for item in tmp_dict:\r\n            new_dict[item.lower()]=tmp_dict[item]\r\n        for prod,quan in new_dict.items():\r\n            for i in items:\r\n                if i.get_item_id().lower()==prod:\r\n                    self.__bill_amount+=quan*i.get_price_per_quantity()\r\n                    break\r\n               \r\n    \r\n    \r\n    \r\nclass Item:\r\n    def __init__(self,item_id,description,price_per_quantity):\r\n        self.__item_id = item_id\r\n        self.__description = description\r\n        self.__price_per_quantity=price_per_quantity\r\n\r\n    def get_item_id(self):\r\n        return self.__item_id\r\n\r\n\r\n    def get_description(self):\r\n        return self.__description\r\n\r\n\r\n    def get_price_per_quantity(self):\r\n        return self.__price_per_quantity\r\n\r\n    \r\n    \r\n","asgnmtId":"18","SolutionFileName":"Assign18.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 20:37:04,773 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 20:37:04,774 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 20:37:04,774 INFO  Invoking the service to verify the user solution
2019-03-07 20:37:04,774 INFO  Time before invoking service:Thu Mar 07 20:37:04 IST 2019
2019-03-07 20:37:04,774 INFO  Initialising service address for VerifySolution
2019-03-07 20:37:04,775 INFO  Time before invoking service In SUPER:Thu Mar 07 20:37:04 IST 2019
2019-03-07 20:37:05,910 INFO  Time after invoking service In SUPER:Thu Mar 07 20:37:05 IST 2019
2019-03-07 20:37:05,911 INFO  Service responded successfully with required details
2019-03-07 20:37:05,911 INFO  Time after invoking service:Thu Mar 07 20:37:05 IST 2019
2019-03-07 20:37:05,911 INFO  User solution successfully verified
2019-03-07 20:37:05,911 INFO  Processing the response from verify service
2019-03-07 20:37:05,914 INFO  Starting to parse JSON response
2019-03-07 20:37:05,917 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:37:05,917 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:37:05,917 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:37:05,917 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:37:05,917 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:37:05,917 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:37:05,919 INFO  Successfully parsed JSON response
2019-03-07 20:37:05,919 INFO  In the process of generating verify response in HTML
2019-03-07 20:37:05,993 INFO  Successfully generated verify response in HTML
2019-03-07 20:37:05,993 INFO  Successfully processed the response from service
2019-03-07 20:38:25,282 INFO  Setting request parameters for VerifySolution
2019-03-07 20:38:25,282 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 20:38:25,282 INFO  Starting to parse the user solution
2019-03-07 20:38:25,284 INFO  Displaying user solution
2019-03-07 20:38:25,350 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-18\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self, customer_name):\r\n        self.__customer_name=customer_name\r\n        self.__payment_status= None\r\n\r\n    def get_customer_name(self):\r\n        return self.__customer_name\r\n\r\n\r\n    def get_payment_status(self):\r\n        return self.__payment_status\r\n\r\n    def pays_bill(self):\r\n        self.__payment_status=\"Paid\"\r\n    \r\n    \r\n    \r\n    \r\nclass Bill:\r\n    counter=1000\r\n    def __init__(self):\r\n        self.__bill_id = None\r\n        self.__bill_amount=None\r\n\r\n    def get_bill_id(self):\r\n        return self.__bill_id\r\n\r\n\r\n    def get_bill_amount(self):\r\n        return self.__bill_amount\r\n\r\n    def generate_bill_amount(self,item_quantity,items):\r\n        Bill.counter+=1\r\n        self.__bill_id=\"B\"+str(Bill.counter)\r\n        tmp_dict=item_quantity\r\n        new_dict={} \r\n        for item in tmp_dict:\r\n            new_dict[item.lower()]=tmp_dict[item]\r\n        for prod,quan in new_dict.items():\r\n            for i in items:\r\n                if i.get_item_id().lower()==prod:\r\n                    self.__bill_amount+=quan*i.get_price_per_quantity()\r\n                    break\r\n               \r\n    \r\n    \r\n    \r\nclass Item:\r\n    def __init__(self,item_id,description,price_per_quantity):\r\n        self.__item_id = item_id\r\n        self.__description = description\r\n        self.__price_per_quantity=price_per_quantity\r\n\r\n    def get_item_id(self):\r\n        return self.__item_id\r\n\r\n\r\n    def get_description(self):\r\n        return self.__description\r\n\r\n\r\n    def get_price_per_quantity(self):\r\n        return self.__price_per_quantity\r\n\r\n    \r\n    \r\n","asgnmtId":"18","SolutionFileName":"Assign18.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 20:38:25,351 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 20:38:25,351 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 20:38:25,351 INFO  Invoking the service to verify the user solution
2019-03-07 20:38:25,351 INFO  Time before invoking service:Thu Mar 07 20:38:25 IST 2019
2019-03-07 20:38:25,351 INFO  Initialising service address for VerifySolution
2019-03-07 20:38:25,352 INFO  Time before invoking service In SUPER:Thu Mar 07 20:38:25 IST 2019
2019-03-07 20:38:26,461 INFO  Time after invoking service In SUPER:Thu Mar 07 20:38:26 IST 2019
2019-03-07 20:38:26,462 INFO  Service responded successfully with required details
2019-03-07 20:38:26,462 INFO  Time after invoking service:Thu Mar 07 20:38:26 IST 2019
2019-03-07 20:38:26,462 INFO  User solution successfully verified
2019-03-07 20:38:26,462 INFO  Processing the response from verify service
2019-03-07 20:38:26,464 INFO  Starting to parse JSON response
2019-03-07 20:38:26,465 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:38:26,465 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:38:26,465 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:38:26,465 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:38:26,465 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:38:26,465 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:38:26,467 INFO  Successfully parsed JSON response
2019-03-07 20:38:26,467 INFO  In the process of generating verify response in HTML
2019-03-07 20:38:26,536 INFO  Successfully generated verify response in HTML
2019-03-07 20:38:26,537 INFO  Successfully processed the response from service
2019-03-07 20:39:00,113 INFO  Setting request parameters for VerifySolution
2019-03-07 20:39:00,113 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 20:39:00,113 INFO  Starting to parse the user solution
2019-03-07 20:39:00,113 INFO  Displaying user solution
2019-03-07 20:39:00,198 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-18\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self, customer_name):\r\n        self.__customer_name=customer_name\r\n        self.__payment_status= None\r\n\r\n    def get_customer_name(self):\r\n        return self.__customer_name\r\n\r\n\r\n    def get_payment_status(self):\r\n        return self.__payment_status\r\n\r\n    def pays_bill(self):\r\n        self.__payment_status=\"Paid\"\r\n    \r\n    \r\n    \r\n    \r\nclass Bill:\r\n    counter=1000\r\n    def __init__(self):\r\n        self.__bill_id = None\r\n        self.__bill_amount=None\r\n\r\n    def get_bill_id(self):\r\n        return self.__bill_id\r\n\r\n\r\n    def get_bill_amount(self):\r\n        return self.__bill_amount\r\n\r\n    def generate_bill_amount(self,item_quantity,items):\r\n        Bill.counter+=1\r\n        self.__bill_id=\"B\"+str(Bill.counter)\r\n        tmp_dict=item_quantity\r\n        new_dict={} \r\n        for item in tmp_dict:\r\n            new_dict[item.lower()]=tmp_dict[item]\r\n        for prod,quan in new_dict.items():\r\n            for i in items:\r\n                if i.get_item_id().lower()==prod:\r\n                    self.__bill_amount+=quan*i.get_price_per_quantity()\r\n                    break\r\n               \r\n    \r\n    \r\n    \r\nclass Item:\r\n    def __init__(self,item_id,description,price_per_quantity):\r\n        self.__item_id = item_id\r\n        self.__description = description\r\n        self.__price_per_quantity=price_per_quantity\r\n\r\n    def get_item_id(self):\r\n        return self.__item_id\r\n\r\n\r\n    def get_description(self):\r\n        return self.__description\r\n\r\n\r\n    def get_price_per_quantity(self):\r\n        return self.__price_per_quantity\r\n\r\n    \r\n    \r\n","asgnmtId":"18","SolutionFileName":"Assign18.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 20:39:00,199 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 20:39:00,199 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 20:39:00,199 INFO  Invoking the service to verify the user solution
2019-03-07 20:39:00,200 INFO  Time before invoking service:Thu Mar 07 20:39:00 IST 2019
2019-03-07 20:39:00,200 INFO  Initialising service address for VerifySolution
2019-03-07 20:39:00,201 INFO  Time before invoking service In SUPER:Thu Mar 07 20:39:00 IST 2019
2019-03-07 20:39:01,228 INFO  Time after invoking service In SUPER:Thu Mar 07 20:39:01 IST 2019
2019-03-07 20:39:01,229 INFO  Service responded successfully with required details
2019-03-07 20:39:01,229 INFO  Time after invoking service:Thu Mar 07 20:39:01 IST 2019
2019-03-07 20:39:01,230 INFO  User solution successfully verified
2019-03-07 20:39:01,230 INFO  Processing the response from verify service
2019-03-07 20:39:01,233 INFO  Starting to parse JSON response
2019-03-07 20:39:01,235 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:39:01,235 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:39:01,235 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:39:01,235 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:39:01,235 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:39:01,235 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:39:01,236 INFO  Successfully parsed JSON response
2019-03-07 20:39:01,236 INFO  In the process of generating verify response in HTML
2019-03-07 20:39:01,318 INFO  Successfully generated verify response in HTML
2019-03-07 20:39:01,318 INFO  Successfully processed the response from service
2019-03-07 20:44:22,253 INFO  Setting request parameters for VerifySolution
2019-03-07 20:44:22,253 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 20:44:22,254 INFO  Starting to parse the user solution
2019-03-07 20:44:22,255 INFO  Displaying user solution
2019-03-07 20:44:22,318 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-18\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self, customer_name):\r\n        self.__customer_name=customer_name\r\n        self.__payment_status= None\r\n\r\n    def get_customer_name(self):\r\n        return self.__customer_name\r\n\r\n\r\n    def get_payment_status(self):\r\n        return self.__payment_status\r\n\r\n    def pays_bill(self,bill):\r\n        self.__payment_status=\"Paid\"\r\n    \r\n    \r\n    \r\n    \r\nclass Bill:\r\n    counter=1000\r\n    def __init__(self):\r\n        self.__bill_id = None\r\n        self.__bill_amount=None\r\n\r\n    def get_bill_id(self):\r\n        return self.__bill_id\r\n\r\n\r\n    def get_bill_amount(self):\r\n        return self.__bill_amount\r\n\r\n    def generate_bill_amount(self,item_quantity,items):\r\n        Bill.counter+=1\r\n        self.__bill_id=\"B\"+str(Bill.counter)\r\n        tmp_dict=item_quantity\r\n        new_dict={} \r\n        for item in tmp_dict:\r\n            new_dict[item.lower()]=tmp_dict[item]\r\n        for prod,quan in new_dict.items():\r\n            for i in items:\r\n                if i.get_item_id().lower()==prod:\r\n                    self.__bill_amount+=quan*i.get_price_per_quantity()\r\n                    break\r\n               \r\n    \r\n    \r\n    \r\nclass Item:\r\n    def __init__(self,item_id,description,price_per_quantity):\r\n        self.__item_id = item_id\r\n        self.__description = description\r\n        self.__price_per_quantity=price_per_quantity\r\n\r\n    def get_item_id(self):\r\n        return self.__item_id\r\n\r\n\r\n    def get_description(self):\r\n        return self.__description\r\n\r\n\r\n    def get_price_per_quantity(self):\r\n        return self.__price_per_quantity\r\n\r\n    \r\n    \r\n","asgnmtId":"18","SolutionFileName":"Assign18.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 20:44:22,319 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 20:44:22,319 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 20:44:22,319 INFO  Invoking the service to verify the user solution
2019-03-07 20:44:22,320 INFO  Time before invoking service:Thu Mar 07 20:44:22 IST 2019
2019-03-07 20:44:22,320 INFO  Initialising service address for VerifySolution
2019-03-07 20:44:22,321 INFO  Time before invoking service In SUPER:Thu Mar 07 20:44:22 IST 2019
2019-03-07 20:44:23,405 INFO  Time after invoking service In SUPER:Thu Mar 07 20:44:23 IST 2019
2019-03-07 20:44:23,405 INFO  Service responded successfully with required details
2019-03-07 20:44:23,406 INFO  Time after invoking service:Thu Mar 07 20:44:23 IST 2019
2019-03-07 20:44:23,406 INFO  User solution successfully verified
2019-03-07 20:44:23,406 INFO  Processing the response from verify service
2019-03-07 20:44:23,408 INFO  Starting to parse JSON response
2019-03-07 20:44:23,410 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:44:23,410 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:44:23,410 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:44:23,410 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:44:23,410 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:44:23,410 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:44:23,412 INFO  Successfully parsed JSON response
2019-03-07 20:44:23,412 INFO  In the process of generating verify response in HTML
2019-03-07 20:44:23,490 INFO  Successfully generated verify response in HTML
2019-03-07 20:44:23,490 INFO  Successfully processed the response from service
2019-03-07 20:46:13,502 INFO  Setting request parameters for VerifySolution
2019-03-07 20:46:13,502 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 20:46:13,502 INFO  Starting to parse the user solution
2019-03-07 20:46:13,503 INFO  Displaying user solution
2019-03-07 20:46:13,573 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-18\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self, customer_name):\r\n        self.__customer_name=customer_name\r\n        self.__payment_status= None\r\n\r\n    def get_customer_name(self):\r\n        return self.__customer_name\r\n\r\n\r\n    def get_payment_status(self):\r\n        return self.__payment_status\r\n\r\n    def pays_bill(self,bill):\r\n        self.__payment_status=\"Paid\"\r\n    \r\n    \r\n    \r\n    \r\nclass Bill:\r\n    counter=1000\r\n    def __init__(self):\r\n        self.__bill_id = None\r\n        self.__bill_amount=None\r\n\r\n    def get_bill_id(self):\r\n        return self.__bill_id\r\n\r\n\r\n    def get_bill_amount(self):\r\n        return self.__bill_amount\r\n\r\n    def generate_bill_amount(self,item_quantity,items):\r\n        Bill.counter+=1\r\n        self.__bill_id=\"B\"+str(Bill.counter)\r\n        bill_amount = 0\r\n        for item_id, quantity in item_quantity.items():\r\n            item = next((x for x in items if x.get_item_id() == item_id), None)\r\n            \r\n            if item is not None:\r\n                bill_amount += item.get_price_per_quantity() * quantity\r\n        \r\n        self.__bill_amount = bill_amount\r\n               \r\n    \r\n    \r\n    \r\nclass Item:\r\n    def __init__(self,item_id,description,price_per_quantity):\r\n        self.__item_id = item_id\r\n        self.__description = description\r\n        self.__price_per_quantity=price_per_quantity\r\n\r\n    def get_item_id(self):\r\n        return self.__item_id\r\n\r\n\r\n    def get_description(self):\r\n        return self.__description\r\n\r\n\r\n    def get_price_per_quantity(self):\r\n        return self.__price_per_quantity\r\n\r\n    \r\n    \r\n","asgnmtId":"18","SolutionFileName":"Assign18.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 20:46:13,573 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 20:46:13,574 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 20:46:13,574 INFO  Invoking the service to verify the user solution
2019-03-07 20:46:13,574 INFO  Time before invoking service:Thu Mar 07 20:46:13 IST 2019
2019-03-07 20:46:13,574 INFO  Initialising service address for VerifySolution
2019-03-07 20:46:13,575 INFO  Time before invoking service In SUPER:Thu Mar 07 20:46:13 IST 2019
2019-03-07 20:46:15,024 INFO  Time after invoking service In SUPER:Thu Mar 07 20:46:15 IST 2019
2019-03-07 20:46:15,024 INFO  Service responded successfully with required details
2019-03-07 20:46:15,025 INFO  Time after invoking service:Thu Mar 07 20:46:15 IST 2019
2019-03-07 20:46:15,025 INFO  User solution successfully verified
2019-03-07 20:46:15,025 INFO  Processing the response from verify service
2019-03-07 20:46:15,032 INFO  Starting to parse JSON response
2019-03-07 20:46:15,034 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:46:15,034 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:46:15,034 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:46:15,034 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:46:15,034 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:46:15,034 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:46:15,034 INFO  Successfully parsed JSON response
2019-03-07 20:46:15,035 INFO  In the process of generating verify response in HTML
2019-03-07 20:46:15,111 INFO  Successfully generated verify response in HTML
2019-03-07 20:46:15,111 INFO  Successfully processed the response from service
2019-03-07 20:46:58,068 INFO  Setting request parameters for VerifySolution
2019-03-07 20:46:58,069 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 20:46:58,069 INFO  Starting to parse the user solution
2019-03-07 20:46:58,069 INFO  Displaying user solution
2019-03-07 20:46:58,126 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-18\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self, customer_name):\r\n        self.__customer_name=customer_name\r\n        self.__payment_status= None\r\n\r\n    def get_customer_name(self):\r\n        return self.__customer_name\r\n\r\n\r\n    def get_payment_status(self):\r\n        return self.__payment_status\r\n\r\n    def pays_bill(self,bill):\r\n        self.__payment_status=\"Paid\"\r\n    \r\n    \r\n    \r\n    \r\nclass Bill:\r\n    counter=1000\r\n    def __init__(self):\r\n        self.__bill_id = None\r\n        self.__bill_amount=None\r\n\r\n    def get_bill_id(self):\r\n        return self.__bill_id\r\n\r\n\r\n    def get_bill_amount(self):\r\n        return self.__bill_amount\r\n\r\n    def generate_bill_amount(self,item_quantity,items):\r\n        Bill.counter+=1\r\n        self.__bill_id=\"B\"+str(Bill.counter)\r\n        bill_amount = 0\r\n        for item_id, quantity in item_quantity.items():\r\n            item = next((x for x in items if x.get_item_id() == item_id), None)\r\n            \r\n            if item is not None:\r\n                bill_amount += item.get_price_per_quantity() * quantity\r\n        \r\n        self.__bill_amount = bill_amount\r\n               \r\n    \r\n    \r\n    \r\nclass Item:\r\n    def __init__(self,item_id,description,price_per_quantity):\r\n        self.__item_id = item_id\r\n        self.__description = description\r\n        self.__price_per_quantity=price_per_quantity\r\n\r\n    def get_item_id(self):\r\n        return self.__item_id\r\n\r\n\r\n    def get_description(self):\r\n        return self.__description\r\n\r\n\r\n    def get_price_per_quantity(self):\r\n        return self.__price_per_quantity\r\n\r\n    \r\n    \r\n","asgnmtId":"18","SolutionFileName":"Assign18.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 20:46:58,126 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 20:46:58,126 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 20:46:58,126 INFO  Invoking the service to verify the user solution
2019-03-07 20:46:58,127 INFO  Time before invoking service:Thu Mar 07 20:46:58 IST 2019
2019-03-07 20:46:58,127 INFO  Initialising service address for VerifySolution
2019-03-07 20:46:58,127 INFO  Time before invoking service In SUPER:Thu Mar 07 20:46:58 IST 2019
2019-03-07 20:46:59,353 INFO  Time after invoking service In SUPER:Thu Mar 07 20:46:59 IST 2019
2019-03-07 20:46:59,353 INFO  Service responded successfully with required details
2019-03-07 20:46:59,354 INFO  Time after invoking service:Thu Mar 07 20:46:59 IST 2019
2019-03-07 20:46:59,354 INFO  User solution successfully verified
2019-03-07 20:46:59,354 INFO  Processing the response from verify service
2019-03-07 20:46:59,356 INFO  Starting to parse JSON response
2019-03-07 20:46:59,357 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:46:59,357 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:46:59,357 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:46:59,357 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:46:59,357 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:46:59,357 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:46:59,358 INFO  Successfully parsed JSON response
2019-03-07 20:46:59,358 INFO  In the process of generating verify response in HTML
2019-03-07 20:46:59,429 INFO  Successfully generated verify response in HTML
2019-03-07 20:46:59,429 INFO  Successfully processed the response from service
2019-03-07 20:49:18,453 INFO  Setting request parameters for VerifySolution
2019-03-07 20:49:18,454 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 20:49:18,454 INFO  Starting to parse the user solution
2019-03-07 20:49:18,454 INFO  Displaying user solution
2019-03-07 20:49:18,508 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-18\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self, customer_name):\r\n        self.__customer_name=customer_name\r\n        self.__payment_status= None\r\n\r\n    def get_customer_name(self):\r\n        return self.__customer_name\r\n\r\n\r\n    def get_payment_status(self):\r\n        return self.__payment_status\r\n\r\n    def pays_bill(self,bill):\r\n        self.__payment_status=\"Paid\"\r\n    \r\n    \r\n    \r\n    \r\nclass Bill:\r\n    counter=1000\r\n    def __init__(self):\r\n        self.__bill_id = None\r\n        self.__bill_amount=None\r\n\r\n    def get_bill_id(self):\r\n        return self.__bill_id\r\n\r\n\r\n    def get_bill_amount(self):\r\n        return self.__bill_amount\r\n\r\n    def generate_bill_amount(self,item_quantity,items):\r\n        Bill.counter+=1\r\n        self.__bill_id=\"B\"+str(Bill.counter)\r\n        tmp_dict=item_quantity  # temporary dict to change case of the items\r\n        #item_quantity={}\r\n        a={}\r\n        \r\n        for item in tmp_dict:\r\n            a[item.lower()]=tmp_dict[item]     #creatina dictionary with lower keys\r\n        \r\n        for prod,quan in a.items():\r\n            for item in items:\r\n                if item.get_item_id().lower()==prod:\r\n                    self.__bill_amount+=quan*item.get_price_per_quantity()\r\n                    break\r\n               \r\n    \r\n    \r\n    \r\nclass Item:\r\n    def __init__(self,item_id,description,price_per_quantity):\r\n        self.__item_id = item_id\r\n        self.__description = description\r\n        self.__price_per_quantity=price_per_quantity\r\n\r\n    def get_item_id(self):\r\n        return self.__item_id\r\n\r\n\r\n    def get_description(self):\r\n        return self.__description\r\n\r\n\r\n    def get_price_per_quantity(self):\r\n        return self.__price_per_quantity\r\n\r\n    \r\n    \r\n","asgnmtId":"18","SolutionFileName":"Assign18.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 20:49:18,509 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 20:49:18,509 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 20:49:18,509 INFO  Invoking the service to verify the user solution
2019-03-07 20:49:18,510 INFO  Time before invoking service:Thu Mar 07 20:49:18 IST 2019
2019-03-07 20:49:18,510 INFO  Initialising service address for VerifySolution
2019-03-07 20:49:18,510 INFO  Time before invoking service In SUPER:Thu Mar 07 20:49:18 IST 2019
2019-03-07 20:49:19,677 INFO  Time after invoking service In SUPER:Thu Mar 07 20:49:19 IST 2019
2019-03-07 20:49:19,678 INFO  Service responded successfully with required details
2019-03-07 20:49:19,678 INFO  Time after invoking service:Thu Mar 07 20:49:19 IST 2019
2019-03-07 20:49:19,678 INFO  User solution successfully verified
2019-03-07 20:49:19,679 INFO  Processing the response from verify service
2019-03-07 20:49:19,681 INFO  Starting to parse JSON response
2019-03-07 20:49:19,683 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:49:19,683 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:49:19,683 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:49:19,683 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:49:19,684 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:49:19,684 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:49:19,685 INFO  Successfully parsed JSON response
2019-03-07 20:49:19,685 INFO  In the process of generating verify response in HTML
2019-03-07 20:49:19,764 INFO  Successfully generated verify response in HTML
2019-03-07 20:49:19,764 INFO  Successfully processed the response from service
2019-03-07 20:49:28,047 INFO  Setting request parameters for VerifySolution
2019-03-07 20:49:28,047 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 20:49:28,047 INFO  Starting to parse the user solution
2019-03-07 20:49:28,048 INFO  Displaying user solution
2019-03-07 20:49:28,100 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-18\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self, customer_name):\r\n        self.__customer_name=customer_name\r\n        self.__payment_status= None\r\n\r\n    def get_customer_name(self):\r\n        return self.__customer_name\r\n\r\n\r\n    def get_payment_status(self):\r\n        return self.__payment_status\r\n\r\n    def pays_bill(self,bill):\r\n        self.__payment_status=\"Paid\"\r\n    \r\n    \r\n    \r\n    \r\nclass Bill:\r\n    counter=1000\r\n    def __init__(self):\r\n        self.__bill_id = None\r\n        self.__bill_amount=None\r\n\r\n    def get_bill_id(self):\r\n        return self.__bill_id\r\n\r\n\r\n    def get_bill_amount(self):\r\n        return self.__bill_amount\r\n\r\n    def generate_bill_amount(self,item_quantity,items):\r\n        Bill.counter+=1\r\n        self.__bill_id=\"B\"+str(Bill.counter)\r\n        tmp_dict=item_quantity  # temporary dict to change case of the items\r\n        #item_quantity={}\r\n        a={}\r\n        \r\n        for item in tmp_dict:\r\n            a[item.lower()]=tmp_dict[item]     #creatina dictionary with lower keys\r\n        \r\n        for prod,quan in a.items():\r\n            for item in items:\r\n                if item.get_item_id().lower()==prod:\r\n                    self.__bill_amount+=quan*item.get_price_per_quantity()\r\n                    break\r\n               \r\n    \r\n    \r\n    \r\nclass Item:\r\n    def __init__(self,item_id,description,price_per_quantity):\r\n        self.__item_id = item_id\r\n        self.__description = description\r\n        self.__price_per_quantity=price_per_quantity\r\n\r\n    def get_item_id(self):\r\n        return self.__item_id\r\n\r\n\r\n    def get_description(self):\r\n        return self.__description\r\n\r\n\r\n    def get_price_per_quantity(self):\r\n        return self.__price_per_quantity\r\n\r\n    \r\n    \r\n","asgnmtId":"18","SolutionFileName":"Assign18.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 20:49:28,100 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 20:49:28,100 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 20:49:28,100 INFO  Invoking the service to verify the user solution
2019-03-07 20:49:28,100 INFO  Time before invoking service:Thu Mar 07 20:49:28 IST 2019
2019-03-07 20:49:28,100 INFO  Initialising service address for VerifySolution
2019-03-07 20:49:28,101 INFO  Time before invoking service In SUPER:Thu Mar 07 20:49:28 IST 2019
2019-03-07 20:49:29,030 INFO  Time after invoking service In SUPER:Thu Mar 07 20:49:29 IST 2019
2019-03-07 20:49:29,030 INFO  Service responded successfully with required details
2019-03-07 20:49:29,031 INFO  Time after invoking service:Thu Mar 07 20:49:29 IST 2019
2019-03-07 20:49:29,031 INFO  User solution successfully verified
2019-03-07 20:49:29,031 INFO  Processing the response from verify service
2019-03-07 20:49:29,033 INFO  Starting to parse JSON response
2019-03-07 20:49:29,034 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:49:29,034 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:49:29,034 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:49:29,034 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:49:29,034 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:49:29,035 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:49:29,036 INFO  Successfully parsed JSON response
2019-03-07 20:49:29,036 INFO  In the process of generating verify response in HTML
2019-03-07 20:49:29,103 INFO  Successfully generated verify response in HTML
2019-03-07 20:49:29,103 INFO  Successfully processed the response from service
2019-03-07 20:49:33,324 INFO  Setting request parameters for VerifySolution
2019-03-07 20:49:33,324 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 20:49:33,324 INFO  Starting to parse the user solution
2019-03-07 20:49:33,325 INFO  Displaying user solution
2019-03-07 20:49:33,389 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-18\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self, customer_name):\r\n        self.__customer_name=customer_name\r\n        self.__payment_status= None\r\n\r\n    def get_customer_name(self):\r\n        return self.__customer_name\r\n\r\n\r\n    def get_payment_status(self):\r\n        return self.__payment_status\r\n\r\n    def pays_bill(self,bill):\r\n        self.__payment_status=\"Paid\"\r\n    \r\n    \r\n    \r\n    \r\nclass Bill:\r\n    counter=1000\r\n    def __init__(self):\r\n        self.__bill_id = None\r\n        self.__bill_amount=None\r\n\r\n    def get_bill_id(self):\r\n        return self.__bill_id\r\n\r\n\r\n    def get_bill_amount(self):\r\n        return self.__bill_amount\r\n\r\n    def generate_bill_amount(self,item_quantity,items):\r\n        Bill.counter+=1\r\n        self.__bill_id=\"B\"+str(Bill.counter)\r\n        tmp_dict=item_quantity\r\n        new_dict={} \r\n        for item in tmp_dict:\r\n            new_dict[item.lower()]=tmp_dict[item]\r\n        for prod,quan in new_dict.items():\r\n            for i in items:\r\n                if i.get_item_id().lower()==prod:\r\n                    self.__bill_amount+=quan*i.get_price_per_quantity()\r\n                    break\r\n               \r\n    \r\n    \r\n    \r\nclass Item:\r\n    def __init__(self,item_id,description,price_per_quantity):\r\n        self.__item_id = item_id\r\n        self.__description = description\r\n        self.__price_per_quantity=price_per_quantity\r\n\r\n    def get_item_id(self):\r\n        return self.__item_id\r\n\r\n\r\n    def get_description(self):\r\n        return self.__description\r\n\r\n\r\n    def get_price_per_quantity(self):\r\n        return self.__price_per_quantity\r\n\r\n    \r\n    \r\n","asgnmtId":"18","SolutionFileName":"Assign18.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 20:49:33,390 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 20:49:33,390 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 20:49:33,390 INFO  Invoking the service to verify the user solution
2019-03-07 20:49:33,390 INFO  Time before invoking service:Thu Mar 07 20:49:33 IST 2019
2019-03-07 20:49:33,390 INFO  Initialising service address for VerifySolution
2019-03-07 20:49:33,391 INFO  Time before invoking service In SUPER:Thu Mar 07 20:49:33 IST 2019
2019-03-07 20:49:34,396 INFO  Time after invoking service In SUPER:Thu Mar 07 20:49:34 IST 2019
2019-03-07 20:49:34,397 INFO  Service responded successfully with required details
2019-03-07 20:49:34,397 INFO  Time after invoking service:Thu Mar 07 20:49:34 IST 2019
2019-03-07 20:49:34,397 INFO  User solution successfully verified
2019-03-07 20:49:34,398 INFO  Processing the response from verify service
2019-03-07 20:49:34,400 INFO  Starting to parse JSON response
2019-03-07 20:49:34,402 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:49:34,402 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:49:34,402 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:49:34,402 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:49:34,402 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:49:34,402 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:49:34,403 INFO  Successfully parsed JSON response
2019-03-07 20:49:34,404 INFO  In the process of generating verify response in HTML
2019-03-07 20:49:34,468 INFO  Successfully generated verify response in HTML
2019-03-07 20:49:34,468 INFO  Successfully processed the response from service
2019-03-07 20:50:35,056 INFO  Setting request parameters for VerifySolution
2019-03-07 20:50:35,056 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 20:50:35,056 INFO  Starting to parse the user solution
2019-03-07 20:50:35,057 INFO  Displaying user solution
2019-03-07 20:50:35,144 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-18\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self, customer_name):\r\n        self.__customer_name=customer_name\r\n        self.__payment_status= None\r\n\r\n    def get_customer_name(self):\r\n        return self.__customer_name\r\n\r\n\r\n    def get_payment_status(self):\r\n        return self.__payment_status\r\n\r\n    def pays_bill(self,bill):\r\n        self.__payment_status=\"Paid\"\r\n    \r\n    \r\n    \r\n    \r\nclass Bill:\r\n    counter=1000\r\n    def __init__(self):\r\n        self.__bill_id = None\r\n        self.__bill_amount=None\r\n\r\n    def get_bill_id(self):\r\n        return self.__bill_id\r\n\r\n\r\n    def get_bill_amount(self):\r\n        return self.__bill_amount\r\n\r\n    def generate_bill_amount(self,item_quantity,items):\r\n        Bill.counter+=1\r\n        self.__bill_id=\"B\"+str(Bill.counter)\r\n        bill_amount = 0\r\n        for item_id, quantity in item_quantity.items():\r\n            item = next((x for x in items if x.get_item_id() == item_id), None)\r\n            \r\n            if item is not None:\r\n                bill_amount += item.get_price_per_quantity() * quantity\r\n        \r\n        self.__bill_amount = bill_amount\r\n               \r\n    \r\n    \r\n    \r\nclass Item:\r\n    def __init__(self,item_id,description,price_per_quantity):\r\n        self.__item_id = item_id\r\n        self.__description = description\r\n        self.__price_per_quantity=price_per_quantity\r\n\r\n    def get_item_id(self):\r\n        return self.__item_id\r\n\r\n\r\n    def get_description(self):\r\n        return self.__description\r\n\r\n\r\n    def get_price_per_quantity(self):\r\n        return self.__price_per_quantity\r\n\r\n    \r\n    \r\n","asgnmtId":"18","SolutionFileName":"Assign18.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 20:50:35,144 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 20:50:35,144 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 20:50:35,144 INFO  Invoking the service to verify the user solution
2019-03-07 20:50:35,145 INFO  Time before invoking service:Thu Mar 07 20:50:35 IST 2019
2019-03-07 20:50:35,145 INFO  Initialising service address for VerifySolution
2019-03-07 20:50:35,145 INFO  Time before invoking service In SUPER:Thu Mar 07 20:50:35 IST 2019
2019-03-07 20:50:36,501 INFO  Time after invoking service In SUPER:Thu Mar 07 20:50:36 IST 2019
2019-03-07 20:50:36,501 INFO  Service responded successfully with required details
2019-03-07 20:50:36,501 INFO  Time after invoking service:Thu Mar 07 20:50:36 IST 2019
2019-03-07 20:50:36,502 INFO  User solution successfully verified
2019-03-07 20:50:36,502 INFO  Processing the response from verify service
2019-03-07 20:50:36,504 INFO  Starting to parse JSON response
2019-03-07 20:50:36,504 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:50:36,504 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:50:36,504 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:50:36,504 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:50:36,504 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:50:36,504 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:50:36,505 INFO  Successfully parsed JSON response
2019-03-07 20:50:36,506 INFO  In the process of generating verify response in HTML
2019-03-07 20:50:36,578 INFO  Successfully generated verify response in HTML
2019-03-07 20:50:36,578 INFO  Successfully processed the response from service
2019-03-07 20:51:26,423 INFO  Setting request parameters for VerifySolution
2019-03-07 20:51:26,423 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 20:51:26,423 INFO  Starting to parse the user solution
2019-03-07 20:51:26,424 INFO  Displaying user solution
2019-03-07 20:51:26,479 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-18\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self, customer_name):\r\n        self.__customer_name=customer_name\r\n        self.__payment_status= None\r\n\r\n    def get_customer_name(self):\r\n        return self.__customer_name\r\n\r\n\r\n    def get_payment_status(self):\r\n        return self.__payment_status\r\n\r\n    def pays_bill(self,bill):\r\n        self.__payment_status=\"Paid\"\r\n    \r\n    \r\n    \r\n    \r\nclass Bill:\r\n    counter=1000\r\n    def __init__(self):\r\n        self.__bill_id = None\r\n        self.__bill_amount=None\r\n\r\n    def get_bill_id(self):\r\n        return self.__bill_id\r\n\r\n\r\n    def get_bill_amount(self):\r\n        return self.__bill_amount\r\n\r\n    def generate_bill_amount(self,item_quantity,items):\r\n        Bill.counter+=1\r\n        self.__bill_id=\"B\"+str(Bill.counter)\r\n        bill_amount = 0\r\n        for item_id, quantity in item_quantity.items():\r\n            item = next((x for x in items if x.get_item_id() == item_id), None)\r\n            \r\n            if item is not None:\r\n                bill_amount += item.get_price_per_quantity() * quantity\r\n        \r\n        self.__bill_amount = bill_amount\r\n               \r\n    \r\n    \r\n    \r\nclass Item:\r\n    def __init__(self,item_id,description,price_per_quantity):\r\n        self.__item_id = item_id\r\n        self.__description = description\r\n        self.__price_per_quantity=price_per_quantity\r\n\r\n    def get_item_id(self):\r\n        return self.__item_id\r\n\r\n\r\n    def get_description(self):\r\n        return self.__description\r\n\r\n\r\n    def get_price_per_quantity(self):\r\n        return self.__price_per_quantity\r\n\r\n    \r\n    \r\n","asgnmtId":"18","SolutionFileName":"Assign18.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 20:51:26,480 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 20:51:26,480 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 20:51:26,480 INFO  Invoking the service to verify the user solution
2019-03-07 20:51:26,480 INFO  Time before invoking service:Thu Mar 07 20:51:26 IST 2019
2019-03-07 20:51:26,480 INFO  Initialising service address for VerifySolution
2019-03-07 20:51:26,481 INFO  Time before invoking service In SUPER:Thu Mar 07 20:51:26 IST 2019
2019-03-07 20:51:27,739 INFO  Time after invoking service In SUPER:Thu Mar 07 20:51:27 IST 2019
2019-03-07 20:51:27,740 INFO  Service responded successfully with required details
2019-03-07 20:51:27,740 INFO  Time after invoking service:Thu Mar 07 20:51:27 IST 2019
2019-03-07 20:51:27,740 INFO  User solution successfully verified
2019-03-07 20:51:27,740 INFO  Processing the response from verify service
2019-03-07 20:51:27,742 INFO  Starting to parse JSON response
2019-03-07 20:51:27,743 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:51:27,743 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:51:27,743 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:51:27,743 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:51:27,743 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:51:27,743 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:51:27,744 INFO  Successfully parsed JSON response
2019-03-07 20:51:27,744 INFO  In the process of generating verify response in HTML
2019-03-07 20:51:27,803 INFO  Successfully generated verify response in HTML
2019-03-07 20:51:27,803 INFO  Successfully processed the response from service
2019-03-07 20:51:39,209 INFO  Setting request parameters for VerifySolution
2019-03-07 20:51:39,209 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 20:51:39,209 INFO  Starting to parse the user solution
2019-03-07 20:51:39,210 INFO  Displaying user solution
2019-03-07 20:51:39,262 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-18\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self, customer_name):\r\n        self.__customer_name=customer_name\r\n        self.__payment_status= None\r\n\r\n    def get_customer_name(self):\r\n        return self.__customer_name\r\n\r\n\r\n    def get_payment_status(self):\r\n        return self.__payment_status\r\n\r\n    def pays_bill(self,bill):\r\n        self.__payment_status=\"Paid\"\r\n    \r\n    \r\n    \r\n    \r\nclass Bill:\r\n    counter=1000\r\n    def __init__(self):\r\n        self.__bill_id = None\r\n        self.__bill_amount=None\r\n\r\n    def get_bill_id(self):\r\n        return self.__bill_id\r\n\r\n\r\n    def get_bill_amount(self):\r\n        return self.__bill_amount\r\n\r\n    def generate_bill_amount(self,item_quantity,items):\r\n        Bill.counter+=1\r\n        self.__bill_id=\"B\"+str(Bill.counter)\r\n        bill_amount = 0\r\n        for item_id, quantity in item_quantity.items():\r\n            item = next((x for x in items if x.get_item_id() == item_id), None)\r\n            \r\n            if item is not None:\r\n                bill_amount += item.get_price_per_quantity() * quantity\r\n        \r\n        self.__bill_amount = bill_amount\r\n               \r\n    \r\n    \r\n    \r\nclass Item:\r\n    def __init__(self,item_id,description,price_per_quantity):\r\n        self.__item_id = item_id\r\n        self.__description = description\r\n        self.__price_per_quantity=price_per_quantity\r\n\r\n    def get_item_id(self):\r\n        return self.__item_id\r\n\r\n\r\n    def get_description(self):\r\n        return self.__description\r\n\r\n\r\n    def get_price_per_quantity(self):\r\n        return self.__price_per_quantity\r\n\r\n    \r\n    \r\n","asgnmtId":"18","SolutionFileName":"Assign18.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 20:51:39,263 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 20:51:39,263 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 20:51:39,263 INFO  Invoking the service to verify the user solution
2019-03-07 20:51:39,264 INFO  Time before invoking service:Thu Mar 07 20:51:39 IST 2019
2019-03-07 20:51:39,264 INFO  Initialising service address for VerifySolution
2019-03-07 20:51:39,264 INFO  Time before invoking service In SUPER:Thu Mar 07 20:51:39 IST 2019
2019-03-07 20:51:40,578 INFO  Time after invoking service In SUPER:Thu Mar 07 20:51:40 IST 2019
2019-03-07 20:51:40,579 INFO  Service responded successfully with required details
2019-03-07 20:51:40,579 INFO  Time after invoking service:Thu Mar 07 20:51:40 IST 2019
2019-03-07 20:51:40,580 INFO  User solution successfully verified
2019-03-07 20:51:40,580 INFO  Processing the response from verify service
2019-03-07 20:51:40,583 INFO  Starting to parse JSON response
2019-03-07 20:51:40,585 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:51:40,585 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:51:40,585 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:51:40,585 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:51:40,585 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:51:40,585 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:51:40,587 INFO  Successfully parsed JSON response
2019-03-07 20:51:40,588 INFO  In the process of generating verify response in HTML
2019-03-07 20:51:40,654 INFO  Successfully generated verify response in HTML
2019-03-07 20:51:40,654 INFO  Successfully processed the response from service
2019-03-07 20:52:15,259 INFO  Setting request parameters for VerifySolution
2019-03-07 20:52:15,259 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 20:52:15,259 INFO  Starting to parse the user solution
2019-03-07 20:52:15,260 INFO  Displaying user solution
2019-03-07 20:52:15,317 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-18\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self, customer_name):\r\n        self.__customer_name=customer_name\r\n        self.__payment_status= None\r\n\r\n    def get_customer_name(self):\r\n        return self.__customer_name\r\n\r\n\r\n    def get_payment_status(self):\r\n        return self.__payment_status\r\n\r\n    def pays_bill(self,bill):\r\n        self.__payment_status=\"Paid\"\r\n    \r\n    \r\n    \r\n    \r\nclass Bill:\r\n    counter=1000\r\n    def __init__(self):\r\n        self.__bill_id = None\r\n        self.__bill_amount=None\r\n\r\n    def get_bill_id(self):\r\n        return self.__bill_id\r\n\r\n\r\n    def get_bill_amount(self):\r\n        return self.__bill_amount\r\n\r\n    def generate_bill_amount(self,item_quantity,items):\r\n        Bill.counter+=1\r\n        self.__bill_id=\"B\"+str(Bill.counter)\r\n        bill_amount = 0\r\n        for item_id, quantity in item_quantity.items():\r\n            item = next((x for x in items if x.get_item_id() == item_id), None)\r\n            \r\n            if item is not None:\r\n                bill_amount += item.get_price_per_quantity() * quantity\r\n        \r\n        self.__bill_amount = bill_amount\r\n               \r\n    \r\n    \r\n    \r\nclass Item:\r\n    def __init__(self,item_id,description,price_per_quantity):\r\n        self.__item_id = item_id\r\n        self.__description = description\r\n        self.__price_per_quantity=price_per_quantity\r\n\r\n    def get_item_id(self):\r\n        return self.__item_id\r\n\r\n\r\n    def get_description(self):\r\n        return self.__description\r\n\r\n\r\n    def get_price_per_quantity(self):\r\n        return self.__price_per_quantity\r\n\r\n    \r\n    \r\n","asgnmtId":"18","SolutionFileName":"Assign18.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 20:52:15,317 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 20:52:15,318 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 20:52:15,318 INFO  Invoking the service to verify the user solution
2019-03-07 20:52:15,318 INFO  Time before invoking service:Thu Mar 07 20:52:15 IST 2019
2019-03-07 20:52:15,318 INFO  Initialising service address for VerifySolution
2019-03-07 20:52:15,319 INFO  Time before invoking service In SUPER:Thu Mar 07 20:52:15 IST 2019
2019-03-07 20:52:16,591 INFO  Time after invoking service In SUPER:Thu Mar 07 20:52:16 IST 2019
2019-03-07 20:52:16,592 INFO  Service responded successfully with required details
2019-03-07 20:52:16,592 INFO  Time after invoking service:Thu Mar 07 20:52:16 IST 2019
2019-03-07 20:52:16,592 INFO  User solution successfully verified
2019-03-07 20:52:16,592 INFO  Processing the response from verify service
2019-03-07 20:52:16,599 INFO  Starting to parse JSON response
2019-03-07 20:52:16,601 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:52:16,601 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:52:16,601 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:52:16,601 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:52:16,601 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:52:16,601 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:52:16,602 INFO  Successfully parsed JSON response
2019-03-07 20:52:16,602 INFO  In the process of generating verify response in HTML
2019-03-07 20:52:16,671 INFO  Successfully generated verify response in HTML
2019-03-07 20:52:16,671 INFO  Successfully processed the response from service
2019-03-07 20:55:08,794 INFO  Setting request parameters for VerifySolution
2019-03-07 20:55:08,795 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 20:55:08,795 INFO  Starting to parse the user solution
2019-03-07 20:55:08,796 INFO  Displaying user solution
2019-03-07 20:55:08,903 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-18\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self, customer_name):\r\n        self.__customer_name=customer_name\r\n        self.__payment_status= None\r\n\r\n    def get_customer_name(self):\r\n        return self.__customer_name\r\n\r\n\r\n    def get_payment_status(self):\r\n        return self.__payment_status\r\n\r\n    def pays_bill(self,bill):\r\n        self.__payment_status=\"Paid\"\r\n    \r\n    \r\n    \r\n    \r\nclass Bill:\r\n    counter=1000\r\n    def __init__(self):\r\n        self.__bill_id = None\r\n        self.__bill_amount=None\r\n\r\n    def get_bill_id(self):\r\n        return self.__bill_id\r\n\r\n\r\n    def get_bill_amount(self):\r\n        return self.__bill_amount\r\n\r\n    def generate_bill_amount(self,item_quantity,items):\r\n        Bill.counter+=1\r\n        self.__bill_id=\"B\"+str(Bill.counter)\r\n        bill_amount = 0\r\n        for item_id, quantity in item_quantity.items():\r\n            item = next((x for x in items if x.get_item_id() == item_id), None)\r\n            \r\n            if item is not None:\r\n                bill_amount += item.get_price_per_quantity() * quantity\r\n        \r\n        self.__bill_amount = bill_amount\r\n               \r\n    \r\n    \r\n    \r\nclass Item:\r\n    def __init__(self,item_id,description,price_per_quantity):\r\n        self.__item_id = item_id\r\n        self.__description = description\r\n        self.__price_per_quantity=price_per_quantity\r\n\r\n    def get_item_id(self):\r\n        return self.__item_id\r\n\r\n\r\n    def get_description(self):\r\n        return self.__description\r\n\r\n\r\n    def get_price_per_quantity(self):\r\n        return self.__price_per_quantity\r\n\r\n    \r\n    \r\n","asgnmtId":"18","SolutionFileName":"Assign18.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 20:55:08,904 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 20:55:08,904 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 20:55:08,904 INFO  Invoking the service to verify the user solution
2019-03-07 20:55:08,904 INFO  Time before invoking service:Thu Mar 07 20:55:08 IST 2019
2019-03-07 20:55:08,904 INFO  Initialising service address for VerifySolution
2019-03-07 20:55:08,905 INFO  Time before invoking service In SUPER:Thu Mar 07 20:55:08 IST 2019
2019-03-07 20:55:10,258 INFO  Time after invoking service In SUPER:Thu Mar 07 20:55:10 IST 2019
2019-03-07 20:55:10,258 INFO  Service responded successfully with required details
2019-03-07 20:55:10,258 INFO  Time after invoking service:Thu Mar 07 20:55:10 IST 2019
2019-03-07 20:55:10,258 INFO  User solution successfully verified
2019-03-07 20:55:10,259 INFO  Processing the response from verify service
2019-03-07 20:55:10,262 INFO  Starting to parse JSON response
2019-03-07 20:55:10,263 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:55:10,263 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:55:10,263 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:55:10,264 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:55:10,264 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:55:10,264 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:55:10,265 INFO  Successfully parsed JSON response
2019-03-07 20:55:10,266 INFO  In the process of generating verify response in HTML
2019-03-07 20:55:10,351 INFO  Successfully generated verify response in HTML
2019-03-07 20:55:10,351 INFO  Successfully processed the response from service
2019-03-07 20:55:16,723 INFO  Setting request parameters for VerifySolution
2019-03-07 20:55:16,723 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 20:55:16,723 INFO  Starting to parse the user solution
2019-03-07 20:55:16,723 INFO  Displaying user solution
2019-03-07 20:55:16,797 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-18\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self, customer_name):\r\n        self.__customer_name=customer_name\r\n        self.__payment_status= None\r\n\r\n    def get_customer_name(self):\r\n        return self.__customer_name\r\n\r\n\r\n    def get_payment_status(self):\r\n        return self.__payment_status\r\n\r\n    def pays_bill(self,bill):\r\n        self.__payment_status=\"Paid\"\r\n    \r\n    \r\n    \r\n    \r\nclass Bill:\r\n    counter=1000\r\n    def __init__(self):\r\n        self.__bill_id = None\r\n        self.__bill_amount=None\r\n\r\n    def get_bill_id(self):\r\n        return self.__bill_id\r\n\r\n\r\n    def get_bill_amount(self):\r\n        return self.__bill_amount\r\n\r\n    def generate_bill_amount(self,item_quantity,items):\r\n        Bill.counter+=1\r\n        self.__bill_id=\"B\"+str(Bill.counter)\r\n        bill_amount = 0\r\n        for item_id, quantity in item_quantity.items():\r\n            item = next((x for x in items if x.get_item_id() == item_id), None)\r\n            \r\n            if item is not None:\r\n                bill_amount += item.get_price_per_quantity() * quantity\r\n        \r\n        self.__bill_amount = bill_amount\r\n               \r\n    \r\n    \r\n    \r\nclass Item:\r\n    def __init__(self,item_id,description,price_per_quantity):\r\n        self.__item_id = item_id\r\n        self.__description = description\r\n        self.__price_per_quantity=price_per_quantity\r\n\r\n    def get_item_id(self):\r\n        return self.__item_id\r\n\r\n\r\n    def get_description(self):\r\n        return self.__description\r\n\r\n\r\n    def get_price_per_quantity(self):\r\n        return self.__price_per_quantity\r\n\r\n    \r\n    \r\n","asgnmtId":"18","SolutionFileName":"Assign18.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 20:55:16,798 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 20:55:16,798 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 20:55:16,798 INFO  Invoking the service to verify the user solution
2019-03-07 20:55:16,798 INFO  Time before invoking service:Thu Mar 07 20:55:16 IST 2019
2019-03-07 20:55:16,798 INFO  Initialising service address for VerifySolution
2019-03-07 20:55:16,799 INFO  Time before invoking service In SUPER:Thu Mar 07 20:55:16 IST 2019
2019-03-07 20:55:18,065 INFO  Time after invoking service In SUPER:Thu Mar 07 20:55:18 IST 2019
2019-03-07 20:55:18,066 INFO  Service responded successfully with required details
2019-03-07 20:55:18,066 INFO  Time after invoking service:Thu Mar 07 20:55:18 IST 2019
2019-03-07 20:55:18,066 INFO  User solution successfully verified
2019-03-07 20:55:18,066 INFO  Processing the response from verify service
2019-03-07 20:55:18,068 INFO  Starting to parse JSON response
2019-03-07 20:55:18,069 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:55:18,069 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:55:18,069 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:55:18,070 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:55:18,070 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:55:18,070 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:55:18,071 INFO  Successfully parsed JSON response
2019-03-07 20:55:18,071 INFO  In the process of generating verify response in HTML
2019-03-07 20:55:18,159 INFO  Successfully generated verify response in HTML
2019-03-07 20:55:18,159 INFO  Successfully processed the response from service
2019-03-07 20:55:38,008 INFO  Setting request parameters for VerifySolution
2019-03-07 20:55:38,008 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 20:55:38,008 INFO  Starting to parse the user solution
2019-03-07 20:55:38,024 INFO  Displaying user solution
2019-03-07 20:55:38,092 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-18\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self, customer_name):\r\n        self.__customer_name=customer_name\r\n        self.__payment_status= None\r\n\r\n    def get_customer_name(self):\r\n        return self.__customer_name\r\n\r\n\r\n    def get_payment_status(self):\r\n        return self.__payment_status\r\n\r\n    def pays_bill(self,bill):\r\n        self.__payment_status=\"Paid\"\r\n    \r\n    \r\n    \r\n    \r\nclass Bill:\r\n    counter=1000\r\n    def __init__(self):\r\n        self.__bill_id = None\r\n        self.__bill_amount=None\r\n\r\n    def get_bill_id(self):\r\n        return self.__bill_id\r\n\r\n\r\n    def get_bill_amount(self):\r\n        return self.__bill_amount\r\n\r\n    def generate_bill_amount(self,item_quantity,items):\r\n        Bill.counter+=1\r\n        self.__bill_id=\"B\"+str(Bill.counter)\r\n        bill_amount = 0\r\n        for item_id, quantity in item_quantity.items():\r\n            item = next((x for x in items if x.get_item_id() == item_id), None)\r\n            \r\n            if item is not None:\r\n                bill_amount += item.get_price_per_quantity() * quantity\r\n        \r\n        self.__bill_amount = bill_amount\r\n               \r\n    \r\n    \r\n    \r\nclass Item:\r\n    def __init__(self,item_id,description,price_per_quantity):\r\n        self.__item_id = item_id\r\n        self.__description = description\r\n        self.__price_per_quantity=price_per_quantity\r\n\r\n    def get_item_id(self):\r\n        return self.__item_id\r\n\r\n\r\n    def get_description(self):\r\n        return self.__description\r\n\r\n\r\n    def get_price_per_quantity(self):\r\n        return self.__price_per_quantity\r\n\r\n    \r\n    \r\n","asgnmtId":"18","SolutionFileName":"Assign18.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 20:55:38,093 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 20:55:38,093 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 20:55:38,093 INFO  Invoking the service to verify the user solution
2019-03-07 20:55:38,093 INFO  Time before invoking service:Thu Mar 07 20:55:38 IST 2019
2019-03-07 20:55:38,094 INFO  Initialising service address for VerifySolution
2019-03-07 20:55:38,094 INFO  Time before invoking service In SUPER:Thu Mar 07 20:55:38 IST 2019
2019-03-07 20:55:39,441 INFO  Time after invoking service In SUPER:Thu Mar 07 20:55:39 IST 2019
2019-03-07 20:55:39,441 INFO  Service responded successfully with required details
2019-03-07 20:55:39,441 INFO  Time after invoking service:Thu Mar 07 20:55:39 IST 2019
2019-03-07 20:55:39,442 INFO  User solution successfully verified
2019-03-07 20:55:39,442 INFO  Processing the response from verify service
2019-03-07 20:55:39,444 INFO  Starting to parse JSON response
2019-03-07 20:55:39,445 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:55:39,445 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:55:39,445 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:55:39,445 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:55:39,445 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:55:39,445 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 20:55:39,446 INFO  Successfully parsed JSON response
2019-03-07 20:55:39,447 INFO  In the process of generating verify response in HTML
2019-03-07 20:55:39,527 INFO  Successfully generated verify response in HTML
2019-03-07 20:55:39,527 INFO  Successfully processed the response from service
2019-03-07 20:59:59,299 INFO  Setting request parameters for VerifySolution
2019-03-07 20:59:59,299 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 20:59:59,299 INFO  Starting to parse the user solution
2019-03-07 20:59:59,300 INFO  Displaying user solution
2019-03-07 20:59:59,422 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-19\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Ticket:\r\n    counter = 0\r\n    def __init__(self,passenger_name,source,destination):\r\n        self.__passenger_name = passenger_name\r\n        self.__ticket_id = None\r\n        self.__source = source\r\n        self.__destination = destination\r\n    \r\n    def validate_source_destination(self):\r\n        dest=['mumbai','chennai','pune','kolkata']\r\n        if self.__source.lower()=='delhi' and self.__destination.lower() in dest:\r\n            return True\r\n        return False\r\n        \r\n    def generate_ticket(self):\r\n        Ticket.counter+=1\r\n        if self.validate_source_destination():\r\n            if Ticket.counter<10:\r\n                self.__ticket_id=self.__source[0]+self.__destination[0]+'0'+str(Ticket.counter)\r\n            else:\r\n                self.__ticket_id=self.__source[0]+self.__destination[0]+str(Ticket.counter)\r\n    \r\n        \r\n    def get_ticket_id(self):\r\n        return self.__ticket_id\r\n    def get_passenger_name(self):\r\n        return self.__passenger_name\r\n    def get_source(self):\r\n        return self.__source\r\n    def get_destination (self):\r\n        return self.__destination\r\n","asgnmtId":"19","SolutionFileName":"Assign19.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 20:59:59,422 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 20:59:59,422 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 20:59:59,422 INFO  Invoking the service to verify the user solution
2019-03-07 20:59:59,424 INFO  Time before invoking service:Thu Mar 07 20:59:59 IST 2019
2019-03-07 20:59:59,424 INFO  Initialising service address for VerifySolution
2019-03-07 20:59:59,425 INFO  Time before invoking service In SUPER:Thu Mar 07 20:59:59 IST 2019
2019-03-07 21:00:00,413 INFO  Time after invoking service In SUPER:Thu Mar 07 21:00:00 IST 2019
2019-03-07 21:00:00,413 INFO  Service responded successfully with required details
2019-03-07 21:00:00,413 INFO  Time after invoking service:Thu Mar 07 21:00:00 IST 2019
2019-03-07 21:00:00,414 INFO  User solution successfully verified
2019-03-07 21:00:00,414 INFO  Processing the response from verify service
2019-03-07 21:00:00,421 INFO  Starting to parse JSON response
2019-03-07 21:00:00,425 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:00:00,426 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:00:00,426 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:00:00,426 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:00:00,426 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:00:00,426 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:00:00,426 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:00:00,426 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:00:00,426 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:00:00,426 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:00:00,427 INFO  Successfully parsed JSON response
2019-03-07 21:00:00,427 INFO  In the process of generating verify response in HTML
2019-03-07 21:00:00,527 INFO  Successfully generated verify response in HTML
2019-03-07 21:00:00,527 INFO  Successfully processed the response from service
2019-03-07 21:02:36,470 INFO  Setting request parameters for VerifySolution
2019-03-07 21:02:36,470 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 21:02:36,470 INFO  Starting to parse the user solution
2019-03-07 21:02:36,471 INFO  Displaying user solution
2019-03-07 21:02:36,570 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-19\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Ticket:\r\n    counter = 0\r\n    def __init__(self,passenger_name,source,destination):\r\n        self.__passenger_name = passenger_name\r\n        self.__ticket_id = None\r\n        self.__source = source\r\n        self.__destination = destination\r\n    \r\n    def validate_source_destination(self):\r\n        dest=['mumbai','chennai','pune','kolkata']\r\n        if(self.__source.lower()=='delhi' and \r\n            self.__destination.lower() in dest):\r\n            return True\r\n        return False\r\n        \r\n    def generate_ticket(self):\r\n        Ticket.counter+=1\r\n        if(self.validate_source_destination()):\r\n            if(Ticket.counter<10):\r\n                self.__ticket_id=self.__source[0]+self.__destination[0]+'0'+str(Ticket.counter)\r\n            else:\r\n                self.__ticket_id=self.__source[0]+self.__destination[0]+str(Ticket.counter)\r\n    \r\n        \r\n    def get_ticket_id(self):\r\n        return self.__ticket_id\r\n    def get_passenger_name(self):\r\n        return self.__passenger_name\r\n    def get_source(self):\r\n        return self.__source\r\n    def get_destination (self):\r\n        return self.__destination\r\n","asgnmtId":"19","SolutionFileName":"Assign19.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 21:02:36,572 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 21:02:36,573 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 21:02:36,573 INFO  Invoking the service to verify the user solution
2019-03-07 21:02:36,573 INFO  Time before invoking service:Thu Mar 07 21:02:36 IST 2019
2019-03-07 21:02:36,573 INFO  Initialising service address for VerifySolution
2019-03-07 21:02:36,574 INFO  Time before invoking service In SUPER:Thu Mar 07 21:02:36 IST 2019
2019-03-07 21:02:37,551 INFO  Time after invoking service In SUPER:Thu Mar 07 21:02:37 IST 2019
2019-03-07 21:02:37,551 INFO  Service responded successfully with required details
2019-03-07 21:02:37,551 INFO  Time after invoking service:Thu Mar 07 21:02:37 IST 2019
2019-03-07 21:02:37,551 INFO  User solution successfully verified
2019-03-07 21:02:37,552 INFO  Processing the response from verify service
2019-03-07 21:02:37,563 INFO  Starting to parse JSON response
2019-03-07 21:02:37,565 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:02:37,565 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:02:37,566 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:02:37,566 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:02:37,566 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:02:37,566 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:02:37,566 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:02:37,566 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:02:37,566 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:02:37,566 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:02:37,569 INFO  Successfully parsed JSON response
2019-03-07 21:02:37,569 INFO  In the process of generating verify response in HTML
2019-03-07 21:02:37,675 INFO  Successfully generated verify response in HTML
2019-03-07 21:02:37,676 INFO  Successfully processed the response from service
2019-03-07 21:03:25,017 INFO  Initiating to process and prepare Input for the submit service
2019-03-07 21:03:25,018 INFO  Displaying user solution
2019-03-07 21:03:25,027 INFO  Successfully processed and prepared the input for the submit service
2019-03-07 21:03:25,027 INFO  Invoking the service to submit the user solution
2019-03-07 21:03:25,027 INFO  Initialising service address for Submit
2019-03-07 21:03:25,028 INFO  Time before invoking service In SUPER:Thu Mar 07 21:03:25 IST 2019
2019-03-07 21:03:25,338 INFO  Time after invoking service In SUPER:Thu Mar 07 21:03:25 IST 2019
2019-03-07 21:03:25,338 INFO  Service responded successfully with required details
2019-03-07 21:03:25,338 INFO  User solution successfully submitted
2019-03-07 21:03:25,340 INFO  Displaying submission status
2019-03-07 21:03:25,340 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-07 21:03:27,727 INFO  Initiating to process and prepare Input for the submit service
2019-03-07 21:03:27,733 INFO  Displaying user solution
2019-03-07 21:03:27,745 INFO  Successfully processed and prepared the input for the submit service
2019-03-07 21:03:27,745 INFO  Invoking the service to submit the user solution
2019-03-07 21:03:27,745 INFO  Initialising service address for Submit
2019-03-07 21:03:27,746 INFO  Time before invoking service In SUPER:Thu Mar 07 21:03:27 IST 2019
2019-03-07 21:03:27,828 INFO  Time after invoking service In SUPER:Thu Mar 07 21:03:27 IST 2019
2019-03-07 21:03:27,828 INFO  Service responded successfully with required details
2019-03-07 21:03:27,828 INFO  User solution successfully submitted
2019-03-07 21:03:27,829 INFO  Displaying submission status
2019-03-07 21:03:27,829 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-07 21:05:53,511 INFO  Setting request parameters for VerifySolution
2019-03-07 21:05:53,512 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 21:05:53,512 INFO  Starting to parse the user solution
2019-03-07 21:05:53,512 INFO  Displaying user solution
2019-03-07 21:05:53,580 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-18\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self,customer_name):\r\n        self.__customer_name=customer_name\r\n        self.__payment_status=None\r\n    \r\n    def get_customer_name(self):\r\n        return self.__customer_name \r\n    \r\n    def get_payment_status(self):\r\n        return self.__payment_status\r\n\r\n    def pays_bill(self,bill):\r\n        self.__payment_status=\"Paid\"\r\n    \r\nclass Bill:\r\n    counter=1000\r\n    def __init__(self):\r\n        self.__bill_id = None\r\n        self.__bill_amount= None\r\n    \r\n    def get_bill_id(self):\r\n        return self.__bill_id\r\n    \r\n    def get_bill_amount(self):\r\n        return self.__bill_amount\r\n    \r\n    def generate_bill_amount (self,item_quantity,items):\r\n        Bill.counter+=1\r\n        \r\n        self.__bill_amount=0\r\n        self.__bill_id='B'+str(Bill.counter)  #Billid as per logic #B1001,B1002....\r\n        \r\n        tmp_dict=item_quantity  # temporary dict to change case of the items\r\n        #item_quantity={}\r\n        a={}\r\n        \r\n        for item in tmp_dict:\r\n            a[item.lower()]=tmp_dict[item]     #creatina dictionary with lower keys\r\n        \r\n        for prod,quan in a.items():\r\n            for item in items:\r\n                if item.get_item_id().lower()==prod:\r\n                    self.__bill_amount+=quan*item.get_price_per_quantity()\r\n                    break\r\nclass Item:\r\n    def __init__(self,item_id,description,price_per_quantity):\r\n        self.__item_id=item_id\r\n        self.__description=description\r\n        self.__price_per_quantity=price_per_quantity\r\n        \r\n    def get_item_id(self):\r\n        return self.__item_id\r\n    \r\n    def get_description(self):\r\n        return self.__description\r\n    \r\n    def get_price_per_quantity(self):\r\n        return self.__price_per_quantity\r\n    \r\nt1=Item('Ip789',\"cofee\",25)\r\nt3=Item('Ip777',\"cee\",245)\r\ndic={'ir658':4, 'IR987':3, 'IR123':2, 'Ir346':2}\r\n\r\ni1=Item('IR987' , 'Sunfeast Marie', 100)\r\ni2=Item('ir658' , 'Kellogs Oats',120)\r\ni3=Item('Ir346' , 'Maggie Noodles',130)\r\ni4=Item('iR234' , 'Kissan Jam',140)\r\ni5=Item('IR123' , 'Nescafe',150)\r\ni6=Item('IR111' , 'Milk',160)\r\n\r\ni=[i1,i2,i3,i4,i5,i6]\r\n\r\nb1=Bill()\r\nb1.generate_bill_amount(dic, i)\r\n    \r\n","asgnmtId":"18","SolutionFileName":"Assign18.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 21:05:53,580 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 21:05:53,581 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 21:05:53,581 INFO  Invoking the service to verify the user solution
2019-03-07 21:05:53,581 INFO  Time before invoking service:Thu Mar 07 21:05:53 IST 2019
2019-03-07 21:05:53,581 INFO  Initialising service address for VerifySolution
2019-03-07 21:05:53,582 INFO  Time before invoking service In SUPER:Thu Mar 07 21:05:53 IST 2019
2019-03-07 21:05:54,939 INFO  Time after invoking service In SUPER:Thu Mar 07 21:05:54 IST 2019
2019-03-07 21:05:54,939 INFO  Service responded successfully with required details
2019-03-07 21:05:54,939 INFO  Time after invoking service:Thu Mar 07 21:05:54 IST 2019
2019-03-07 21:05:54,939 INFO  User solution successfully verified
2019-03-07 21:05:54,940 INFO  Processing the response from verify service
2019-03-07 21:05:54,943 INFO  Starting to parse JSON response
2019-03-07 21:05:54,946 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:05:54,946 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:05:54,946 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:05:54,946 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:05:54,946 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:05:54,946 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:05:54,946 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:05:54,946 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:05:54,946 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:05:54,946 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:05:54,948 INFO  Successfully parsed JSON response
2019-03-07 21:05:54,950 INFO  In the process of generating verify response in HTML
2019-03-07 21:05:55,022 INFO  Successfully generated verify response in HTML
2019-03-07 21:05:55,022 INFO  Successfully processed the response from service
2019-03-07 21:06:25,562 INFO  Setting request parameters for VerifySolution
2019-03-07 21:06:25,562 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 21:06:25,562 INFO  Starting to parse the user solution
2019-03-07 21:06:25,563 INFO  Displaying user solution
2019-03-07 21:06:25,615 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-18\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self,customer_name):\r\n        self.__customer_name=customer_name\r\n        self.__payment_status=None\r\n    \r\n    def get_customer_name(self):\r\n        return self.__customer_name \r\n    \r\n    def get_payment_status(self):\r\n        return self.__payment_status\r\n\r\n    def pays_bill(self,bill):\r\n        self.__payment_status=\"Paid\"\r\n    \r\nclass Bill:\r\n    counter=1000\r\n    def __init__(self):\r\n        self.__bill_id = None\r\n        self.__bill_amount= None\r\n    \r\n    def get_bill_id(self):\r\n        return self.__bill_id\r\n    \r\n    def get_bill_amount(self):\r\n        return self.__bill_amount\r\n    \r\n    def generate_bill_amount (self,item_quantity,items):\r\n        Bill.counter+=1\r\n        \r\n        self.__bill_amount=0\r\n        self.__bill_id='B'+str(Bill.counter)\r\n        \r\n        tmp_dict=item_quantity  \r\n        a={}\r\n        \r\n        for item in tmp_dict:\r\n            a[item.lower()]=tmp_dict[item]     \r\n        \r\n        for prod,quan in a.items():\r\n            for item in items:\r\n                if item.get_item_id().lower()==prod:\r\n                    self.__bill_amount+=quan*item.get_price_per_quantity()\r\n                    break\r\nclass Item:\r\n    def __init__(self,item_id,description,price_per_quantity):\r\n        self.__item_id=item_id\r\n        self.__description=description\r\n        self.__price_per_quantity=price_per_quantity\r\n        \r\n    def get_item_id(self):\r\n        return self.__item_id\r\n    \r\n    def get_description(self):\r\n        return self.__description\r\n    \r\n    def get_price_per_quantity(self):\r\n        return self.__price_per_quantity\r\n    \r\nt1=Item('Ip789',\"cofee\",25)\r\nt3=Item('Ip777',\"cee\",245)\r\ndic={'ir658':4, 'IR987':3, 'IR123':2, 'Ir346':2}\r\n\r\ni1=Item('IR987' , 'Sunfeast Marie', 100)\r\ni2=Item('ir658' , 'Kellogs Oats',120)\r\ni3=Item('Ir346' , 'Maggie Noodles',130)\r\ni4=Item('iR234' , 'Kissan Jam',140)\r\ni5=Item('IR123' , 'Nescafe',150)\r\ni6=Item('IR111' , 'Milk',160)\r\n\r\ni=[i1,i2,i3,i4,i5,i6]\r\n\r\nb1=Bill()\r\nb1.generate_bill_amount(dic, i)\r\n    \r\n","asgnmtId":"18","SolutionFileName":"Assign18.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 21:06:25,615 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 21:06:25,615 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 21:06:25,615 INFO  Invoking the service to verify the user solution
2019-03-07 21:06:25,616 INFO  Time before invoking service:Thu Mar 07 21:06:25 IST 2019
2019-03-07 21:06:25,616 INFO  Initialising service address for VerifySolution
2019-03-07 21:06:25,616 INFO  Time before invoking service In SUPER:Thu Mar 07 21:06:25 IST 2019
2019-03-07 21:06:26,913 INFO  Time after invoking service In SUPER:Thu Mar 07 21:06:26 IST 2019
2019-03-07 21:06:26,913 INFO  Service responded successfully with required details
2019-03-07 21:06:26,913 INFO  Time after invoking service:Thu Mar 07 21:06:26 IST 2019
2019-03-07 21:06:26,914 INFO  User solution successfully verified
2019-03-07 21:06:26,914 INFO  Processing the response from verify service
2019-03-07 21:06:26,916 INFO  Starting to parse JSON response
2019-03-07 21:06:26,917 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:06:26,917 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:06:26,917 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:06:26,917 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:06:26,917 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:06:26,917 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:06:26,918 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:06:26,918 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:06:26,918 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:06:26,918 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:06:26,919 INFO  Successfully parsed JSON response
2019-03-07 21:06:26,920 INFO  In the process of generating verify response in HTML
2019-03-07 21:06:26,986 INFO  Successfully generated verify response in HTML
2019-03-07 21:06:26,987 INFO  Successfully processed the response from service
2019-03-07 21:06:34,632 INFO  Setting request parameters for VerifySolution
2019-03-07 21:06:34,632 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 21:06:34,632 INFO  Starting to parse the user solution
2019-03-07 21:06:34,632 INFO  Displaying user solution
2019-03-07 21:06:34,691 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-18\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self,customer_name):\r\n        self.__customer_name=customer_name\r\n        self.__payment_status=None\r\n    \r\n    def get_customer_name(self):\r\n        return self.__customer_name \r\n    \r\n    def get_payment_status(self):\r\n        return self.__payment_status\r\n\r\n    def pays_bill(self,bill):\r\n        self.__payment_status=\"Paid\"\r\n    \r\nclass Bill:\r\n    counter=1000\r\n    def __init__(self):\r\n        self.__bill_id = None\r\n        self.__bill_amount= None\r\n    \r\n    def get_bill_id(self):\r\n        return self.__bill_id\r\n    \r\n    def get_bill_amount(self):\r\n        return self.__bill_amount\r\n    \r\n    def generate_bill_amount (self,item_quantity,items):\r\n        Bill.counter+=1\r\n        \r\n        self.__bill_amount=0\r\n        self.__bill_id='B'+str(Bill.counter)\r\n        \r\n        tmp_dict=item_quantity  \r\n        a={}\r\n        \r\n        for item in tmp_dict:\r\n            a[item.lower()]=tmp_dict[item]     \r\n        \r\n        for prod,quan in a.items():\r\n            for item in items:\r\n                if item.get_item_id().lower()==prod:\r\n                    self.__bill_amount+=quan*item.get_price_per_quantity()\r\n                    break\r\nclass Item:\r\n    def __init__(self,item_id,description,price_per_quantity):\r\n        self.__item_id=item_id\r\n        self.__description=description\r\n        self.__price_per_quantity=price_per_quantity\r\n        \r\n    def get_item_id(self):\r\n        return self.__item_id\r\n    \r\n    def get_description(self):\r\n        return self.__description\r\n    \r\n    def get_price_per_quantity(self):\r\n        return self.__price_per_quantity\r\n    \r\nt1=Item('Ip789',\"cofee\",25)\r\nt3=Item('Ip777',\"cee\",245)\r\ndic={'ir658':4, 'IR987':3, 'IR123':2, 'Ir346':2}\r\n\r\ni1=Item('IR987' , 'Sunfeast Marie', 100)\r\ni2=Item('ir658' , 'Kellogs Oats',120)\r\ni3=Item('Ir346' , 'Maggie Noodles',130)\r\ni4=Item('iR234' , 'Kissan Jam',140)\r\ni5=Item('IR123' , 'Nescafe',150)\r\ni6=Item('IR111' , 'Milk',160)\r\n\r\ni=[i1,i2,i3,i4,i5,i6]\r\n\r\nb1=Bill()\r\nb1.generate_bill_amount(dic, i)\r\n    \r\n","asgnmtId":"18","SolutionFileName":"Assign18.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 21:06:34,692 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 21:06:34,692 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 21:06:34,692 INFO  Invoking the service to verify the user solution
2019-03-07 21:06:34,692 INFO  Time before invoking service:Thu Mar 07 21:06:34 IST 2019
2019-03-07 21:06:34,692 INFO  Initialising service address for VerifySolution
2019-03-07 21:06:34,693 INFO  Time before invoking service In SUPER:Thu Mar 07 21:06:34 IST 2019
2019-03-07 21:06:35,980 INFO  Time after invoking service In SUPER:Thu Mar 07 21:06:35 IST 2019
2019-03-07 21:06:35,981 INFO  Service responded successfully with required details
2019-03-07 21:06:35,981 INFO  Time after invoking service:Thu Mar 07 21:06:35 IST 2019
2019-03-07 21:06:35,981 INFO  User solution successfully verified
2019-03-07 21:06:35,982 INFO  Processing the response from verify service
2019-03-07 21:06:35,984 INFO  Starting to parse JSON response
2019-03-07 21:06:35,988 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:06:35,988 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:06:35,988 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:06:35,988 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:06:35,988 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:06:35,988 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:06:35,988 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:06:35,988 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:06:35,988 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:06:35,988 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:06:35,992 INFO  Successfully parsed JSON response
2019-03-07 21:06:35,993 INFO  In the process of generating verify response in HTML
2019-03-07 21:06:36,059 INFO  Successfully generated verify response in HTML
2019-03-07 21:06:36,059 INFO  Successfully processed the response from service
2019-03-07 21:06:38,664 INFO  Initiating to process and prepare Input for the submit service
2019-03-07 21:06:38,665 INFO  Displaying user solution
2019-03-07 21:06:38,676 INFO  Successfully processed and prepared the input for the submit service
2019-03-07 21:06:38,676 INFO  Invoking the service to submit the user solution
2019-03-07 21:06:38,676 INFO  Initialising service address for Submit
2019-03-07 21:06:38,677 INFO  Time before invoking service In SUPER:Thu Mar 07 21:06:38 IST 2019
2019-03-07 21:06:38,926 INFO  Time after invoking service In SUPER:Thu Mar 07 21:06:38 IST 2019
2019-03-07 21:06:38,927 INFO  Service responded successfully with required details
2019-03-07 21:06:38,927 INFO  User solution successfully submitted
2019-03-07 21:06:38,927 INFO  Displaying submission status
2019-03-07 21:06:38,927 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-07 21:06:41,584 INFO  Initiating to process and prepare Input for the submit service
2019-03-07 21:06:41,585 INFO  Displaying user solution
2019-03-07 21:06:41,594 INFO  Successfully processed and prepared the input for the submit service
2019-03-07 21:06:41,594 INFO  Invoking the service to submit the user solution
2019-03-07 21:06:41,594 INFO  Initialising service address for Submit
2019-03-07 21:06:41,594 INFO  Time before invoking service In SUPER:Thu Mar 07 21:06:41 IST 2019
2019-03-07 21:06:41,681 INFO  Time after invoking service In SUPER:Thu Mar 07 21:06:41 IST 2019
2019-03-07 21:06:41,682 INFO  Service responded successfully with required details
2019-03-07 21:06:41,682 INFO  User solution successfully submitted
2019-03-07 21:06:41,682 INFO  Displaying submission status
2019-03-07 21:06:41,682 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-07 21:08:21,890 INFO  Setting request parameters for VerifySolution
2019-03-07 21:08:21,890 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 21:08:21,890 INFO  Starting to parse the user solution
2019-03-07 21:08:21,891 INFO  Displaying user solution
2019-03-07 21:08:21,946 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-13\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Classroom:\r\n    classroom_list = []\r\n    @staticmethod\r\n    def search_classroom(class_room):\r\n        i=\" \"\r\n        if((i in Classroom.classroom_list)==class_room):\r\n            return \"Found\"\r\n        else:\r\n            return -1\r\n\r\nclassroom_list=['G015', 'G066', 'L123', 'L135', 'L143', 'L13'] \r\nClassroom.search_classroom('L123')          \r\n","asgnmtId":"13","SolutionFileName":"Assign13.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 21:08:21,947 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 21:08:21,947 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 21:08:21,947 INFO  Invoking the service to verify the user solution
2019-03-07 21:08:21,947 INFO  Time before invoking service:Thu Mar 07 21:08:21 IST 2019
2019-03-07 21:08:21,947 INFO  Initialising service address for VerifySolution
2019-03-07 21:08:21,949 INFO  Time before invoking service In SUPER:Thu Mar 07 21:08:21 IST 2019
2019-03-07 21:08:22,837 INFO  Time after invoking service In SUPER:Thu Mar 07 21:08:22 IST 2019
2019-03-07 21:08:22,837 INFO  Service responded successfully with required details
2019-03-07 21:08:22,837 INFO  Time after invoking service:Thu Mar 07 21:08:22 IST 2019
2019-03-07 21:08:22,837 INFO  User solution successfully verified
2019-03-07 21:08:22,838 INFO  Processing the response from verify service
2019-03-07 21:08:22,841 INFO  Starting to parse JSON response
2019-03-07 21:08:22,843 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:08:22,843 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:08:22,844 INFO  Successfully parsed JSON response
2019-03-07 21:08:22,844 INFO  In the process of generating verify response in HTML
2019-03-07 21:08:22,907 INFO  Successfully generated verify response in HTML
2019-03-07 21:08:22,907 INFO  Successfully processed the response from service
2019-03-07 21:09:11,721 INFO  Setting request parameters for VerifySolution
2019-03-07 21:09:11,721 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 21:09:11,721 INFO  Starting to parse the user solution
2019-03-07 21:09:11,722 INFO  Displaying user solution
2019-03-07 21:09:11,776 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-13\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Classroom:\r\n    classroom_list = None\r\n    @staticmethod\r\n    def search_classroom(class_room):\r\n        if(class_room in classroom_list):\r\n            return \"Found\"\r\n        else:\r\n            return -1\r\n\r\nclassroom_list=['G015', 'G066', 'L123', 'L135', 'L143', 'L13'] \r\nClassroom.search_classroom('L123')          \r\n","asgnmtId":"13","SolutionFileName":"Assign13.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 21:09:11,776 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 21:09:11,776 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 21:09:11,776 INFO  Invoking the service to verify the user solution
2019-03-07 21:09:11,777 INFO  Time before invoking service:Thu Mar 07 21:09:11 IST 2019
2019-03-07 21:09:11,777 INFO  Initialising service address for VerifySolution
2019-03-07 21:09:11,777 INFO  Time before invoking service In SUPER:Thu Mar 07 21:09:11 IST 2019
2019-03-07 21:09:12,622 INFO  Time after invoking service In SUPER:Thu Mar 07 21:09:12 IST 2019
2019-03-07 21:09:12,623 INFO  Service responded successfully with required details
2019-03-07 21:09:12,623 INFO  Time after invoking service:Thu Mar 07 21:09:12 IST 2019
2019-03-07 21:09:12,623 INFO  User solution successfully verified
2019-03-07 21:09:12,623 INFO  Processing the response from verify service
2019-03-07 21:09:12,625 INFO  Starting to parse JSON response
2019-03-07 21:09:12,626 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:09:12,626 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:09:12,628 INFO  Successfully parsed JSON response
2019-03-07 21:09:12,628 INFO  In the process of generating verify response in HTML
2019-03-07 21:09:12,703 INFO  Successfully generated verify response in HTML
2019-03-07 21:09:12,704 INFO  Successfully processed the response from service
2019-03-07 21:09:55,443 INFO  Setting request parameters for VerifySolution
2019-03-07 21:09:55,443 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 21:09:55,443 INFO  Starting to parse the user solution
2019-03-07 21:09:55,444 INFO  Displaying user solution
2019-03-07 21:09:55,509 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-13\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Classroom:\r\n    classroom_list = None\r\n    @staticmethod\r\n    def search_classroom(class_room):\r\n        for room in Classroom.classroom_list:\r\n            if class_room.lower() == room.lower():\r\n                return 'Found'\r\n        else:\r\n            return -1\r\n\r\nclassroom_list=['G015', 'G066', 'L123', 'L135', 'L143', 'L13'] \r\nClassroom.search_classroom('L123')          \r\n","asgnmtId":"13","SolutionFileName":"Assign13.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 21:09:55,510 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 21:09:55,510 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 21:09:55,510 INFO  Invoking the service to verify the user solution
2019-03-07 21:09:55,510 INFO  Time before invoking service:Thu Mar 07 21:09:55 IST 2019
2019-03-07 21:09:55,510 INFO  Initialising service address for VerifySolution
2019-03-07 21:09:55,510 INFO  Time before invoking service In SUPER:Thu Mar 07 21:09:55 IST 2019
2019-03-07 21:09:56,450 INFO  Time after invoking service In SUPER:Thu Mar 07 21:09:56 IST 2019
2019-03-07 21:09:56,450 INFO  Service responded successfully with required details
2019-03-07 21:09:56,451 INFO  Time after invoking service:Thu Mar 07 21:09:56 IST 2019
2019-03-07 21:09:56,451 INFO  User solution successfully verified
2019-03-07 21:09:56,451 INFO  Processing the response from verify service
2019-03-07 21:09:56,452 INFO  Starting to parse JSON response
2019-03-07 21:09:56,453 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:09:56,453 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:09:56,454 INFO  Successfully parsed JSON response
2019-03-07 21:09:56,454 INFO  In the process of generating verify response in HTML
2019-03-07 21:09:56,519 INFO  Successfully generated verify response in HTML
2019-03-07 21:09:56,520 INFO  Successfully processed the response from service
2019-03-07 21:11:39,385 INFO  Setting request parameters for VerifySolution
2019-03-07 21:11:39,386 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 21:11:39,386 INFO  Starting to parse the user solution
2019-03-07 21:11:39,386 INFO  Displaying user solution
2019-03-07 21:11:39,437 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-13\r\n'''\r\nCreated on Mar 6, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Classroom:\r\n    classroom_list = None\r\n    @staticmethod\r\n    def search_classroom(class_room):\r\n        for i in Classroom.classroom_list:\r\n            if (class_room.upper() == i.upper()):\r\n                return 'Found'\r\n        else:\r\n            return -1         \r\n","asgnmtId":"13","SolutionFileName":"Assign13.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 21:11:39,437 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 21:11:39,437 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 21:11:39,437 INFO  Invoking the service to verify the user solution
2019-03-07 21:11:39,438 INFO  Time before invoking service:Thu Mar 07 21:11:39 IST 2019
2019-03-07 21:11:39,438 INFO  Initialising service address for VerifySolution
2019-03-07 21:11:39,439 INFO  Time before invoking service In SUPER:Thu Mar 07 21:11:39 IST 2019
2019-03-07 21:11:40,291 INFO  Time after invoking service In SUPER:Thu Mar 07 21:11:40 IST 2019
2019-03-07 21:11:40,291 INFO  Service responded successfully with required details
2019-03-07 21:11:40,291 INFO  Time after invoking service:Thu Mar 07 21:11:40 IST 2019
2019-03-07 21:11:40,292 INFO  User solution successfully verified
2019-03-07 21:11:40,292 INFO  Processing the response from verify service
2019-03-07 21:11:40,296 INFO  Starting to parse JSON response
2019-03-07 21:11:40,298 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:11:40,298 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:11:40,300 INFO  Successfully parsed JSON response
2019-03-07 21:11:40,300 INFO  In the process of generating verify response in HTML
2019-03-07 21:11:40,373 INFO  Successfully generated verify response in HTML
2019-03-07 21:11:40,373 INFO  Successfully processed the response from service
2019-03-07 21:11:44,078 INFO  Initiating to process and prepare Input for the submit service
2019-03-07 21:11:44,082 INFO  Displaying user solution
2019-03-07 21:11:44,092 INFO  Successfully processed and prepared the input for the submit service
2019-03-07 21:11:44,093 INFO  Invoking the service to submit the user solution
2019-03-07 21:11:44,093 INFO  Initialising service address for Submit
2019-03-07 21:11:44,094 INFO  Time before invoking service In SUPER:Thu Mar 07 21:11:44 IST 2019
2019-03-07 21:11:44,363 INFO  Time after invoking service In SUPER:Thu Mar 07 21:11:44 IST 2019
2019-03-07 21:11:44,363 INFO  Service responded successfully with required details
2019-03-07 21:11:44,363 INFO  User solution successfully submitted
2019-03-07 21:11:44,364 INFO  Displaying submission status
2019-03-07 21:11:44,364 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-07 21:11:59,957 INFO  Setting request parameters for VerifySolution
2019-03-07 21:11:59,957 INFO  Initiating to process and prepare Input for the verify service
2019-03-07 21:11:59,957 INFO  Starting to parse the user solution
2019-03-07 21:11:59,958 INFO  Displaying user solution
2019-03-07 21:12:00,020 INFO  Successfully parsed the user solution{"CourseShortName":"OOPR","UserSolution":"#OOPR-Assgn-18\r\n'''\r\nCreated on Mar 7, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n#Start writing your code here\r\nclass Customer:\r\n    def __init__(self,customer_name):\r\n        self.__customer_name=customer_name\r\n        self.__payment_status=None\r\n    \r\n    def get_customer_name(self):\r\n        return self.__customer_name \r\n    \r\n    def get_payment_status(self):\r\n        return self.__payment_status\r\n\r\n    def pays_bill(self,bill):\r\n        self.__payment_status=\"Paid\"\r\n    \r\nclass Bill:\r\n    counter=1000\r\n    def __init__(self):\r\n        self.__bill_id = None\r\n        self.__bill_amount= None\r\n    \r\n    def get_bill_id(self):\r\n        return self.__bill_id\r\n    \r\n    def get_bill_amount(self):\r\n        return self.__bill_amount\r\n    \r\n    def generate_bill_amount (self,item_quantity,items):\r\n        Bill.counter+=1\r\n        \r\n        self.__bill_amount=0\r\n        self.__bill_id='B'+str(Bill.counter)\r\n        \r\n        tmp_dict=item_quantity  \r\n        a={}\r\n        \r\n        for item in tmp_dict:\r\n            a[item.lower()]=tmp_dict[item]     \r\n        \r\n        for prod,quan in a.items():\r\n            for item in items:\r\n                if item.get_item_id().lower()==prod:\r\n                    self.__bill_amount+=quan*item.get_price_per_quantity()\r\n                    break\r\nclass Item:\r\n    def __init__(self,item_id,description,price_per_quantity):\r\n        self.__item_id=item_id\r\n        self.__description=description\r\n        self.__price_per_quantity=price_per_quantity\r\n        \r\n    def get_item_id(self):\r\n        return self.__item_id\r\n    \r\n    def get_description(self):\r\n        return self.__description\r\n    \r\n    def get_price_per_quantity(self):\r\n        return self.__price_per_quantity\r\n    \r\nt1=Item('Ip789',\"cofee\",25)\r\nt3=Item('Ip777',\"cee\",245)\r\ndic={'ir658':4, 'IR987':3, 'IR123':2, 'Ir346':2}\r\n\r\ni1=Item('IR987' , 'Sunfeast Marie', 100)\r\ni2=Item('ir658' , 'Kellogs Oats',120)\r\ni3=Item('Ir346' , 'Maggie Noodles',130)\r\ni4=Item('iR234' , 'Kissan Jam',140)\r\ni5=Item('IR123' , 'Nescafe',150)\r\ni6=Item('IR111' , 'Milk',160)\r\n\r\ni=[i1,i2,i3,i4,i5,i6]\r\n\r\nb1=Bill()\r\nb1.generate_bill_amount(dic, i)\r\n    \r\n","asgnmtId":"18","SolutionFileName":"Assign18.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-07 21:12:00,021 INFO  Successfully processed and prepared the input for the verify service
2019-03-07 21:12:00,021 INFO  Successfully set the request parameters for VerifySolution
2019-03-07 21:12:00,021 INFO  Invoking the service to verify the user solution
2019-03-07 21:12:00,022 INFO  Time before invoking service:Thu Mar 07 21:12:00 IST 2019
2019-03-07 21:12:00,022 INFO  Initialising service address for VerifySolution
2019-03-07 21:12:00,022 INFO  Time before invoking service In SUPER:Thu Mar 07 21:12:00 IST 2019
2019-03-07 21:12:01,390 INFO  Time after invoking service In SUPER:Thu Mar 07 21:12:01 IST 2019
2019-03-07 21:12:01,390 INFO  Service responded successfully with required details
2019-03-07 21:12:01,391 INFO  Time after invoking service:Thu Mar 07 21:12:01 IST 2019
2019-03-07 21:12:01,391 INFO  User solution successfully verified
2019-03-07 21:12:01,391 INFO  Processing the response from verify service
2019-03-07 21:12:01,393 INFO  Starting to parse JSON response
2019-03-07 21:12:01,394 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:12:01,394 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:12:01,394 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:12:01,394 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:12:01,394 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:12:01,395 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:12:01,395 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:12:01,395 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:12:01,395 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:12:01,395 ERROR Keys used to parse test result JSON might be incorrect
2019-03-07 21:12:01,396 INFO  Successfully parsed JSON response
2019-03-07 21:12:01,397 INFO  In the process of generating verify response in HTML
2019-03-07 21:12:01,470 INFO  Successfully generated verify response in HTML
2019-03-07 21:12:01,470 INFO  Successfully processed the response from service
2019-03-07 21:12:05,548 INFO  Initiating to process and prepare Input for the submit service
2019-03-07 21:12:05,549 INFO  Displaying user solution
2019-03-07 21:12:05,559 INFO  Successfully processed and prepared the input for the submit service
2019-03-07 21:12:05,559 INFO  Invoking the service to submit the user solution
2019-03-07 21:12:05,559 INFO  Initialising service address for Submit
2019-03-07 21:12:05,560 INFO  Time before invoking service In SUPER:Thu Mar 07 21:12:05 IST 2019
2019-03-07 21:12:05,662 INFO  Time after invoking service In SUPER:Thu Mar 07 21:12:05 IST 2019
2019-03-07 21:12:05,662 INFO  Service responded successfully with required details
2019-03-07 21:12:05,662 INFO  User solution successfully submitted
2019-03-07 21:12:05,663 INFO  Displaying submission status
2019-03-07 21:12:05,663 INFO  Displayed submission status successfullySuccessfully Submitted!
