2019-03-13 12:13:47,761 INFO  Loading Baseframework Plugin
2019-03-13 12:13:47,761 INFO  Initializing the platform to load the Menu - HandsOn
2019-03-13 12:13:48,464 INFO  Loading the Menu - HandsOn
2019-03-13 12:13:48,527 INFO  Successfully loaded the Menu - HandsOn
2019-03-13 12:25:42,744 INFO  Loading Programming Assignment Plugin
2019-03-13 12:25:42,744 INFO  Creating Layout for the perspective : 
2019-03-13 12:25:42,744 INFO  Creating Layout for the perspective : Programming Assignment V4.1
2019-03-13 12:25:42,744 INFO  Successfully created Layout for the perspective : Programming Assignment V4.1
2019-03-13 12:25:42,744 INFO  Successfully created Layout for the perspective : 
2019-03-13 12:25:51,479 INFO  Setting request parameters for VerifySolution
2019-03-13 12:25:51,479 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 12:25:51,479 INFO  Starting to parse the user solution
2019-03-13 12:25:51,479 INFO  Displaying user solution
2019-03-13 12:25:51,557 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Exer-1\r\n\r\ndef update_mark_list(mark_list, new_element, pos):\r\n    #Write your logic here\r\n    mark_list.insert(pos, new_element)\r\n    return mark_list\r\n\r\ndef find_mark(mark_list,pos1,pos2):\r\n    '''Remove pass and write your logic here to return a list containing\r\n    the marks at pos1 and pos2 respectively.'''\r\n    return mark_list[pos1],mark_list[pos2]\r\n        \r\n\r\n#Provide different values for the variables and test your program\r\nmark_list=[89,78,99,76,77,67,99,98,90]\r\nnew_element=78\r\npos=8\r\npos1=5\r\npos2=7\r\nprint(update_mark_list(mark_list, new_element, pos))\r\nprint(find_mark(mark_list, pos1, pos2))\r\n","asgnmtId":"1","SolutionFileName":"excer1.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-13 12:25:51,557 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 12:25:51,557 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 12:25:51,557 INFO  Invoking the service to verify the user solution
2019-03-13 12:25:51,557 INFO  Time before invoking service:Wed Mar 13 12:25:51 IST 2019
2019-03-13 12:25:51,557 INFO  Initialising service address for VerifySolution
2019-03-13 12:25:51,557 INFO  Time before invoking service In SUPER:Wed Mar 13 12:25:51 IST 2019
2019-03-13 12:25:52,557 INFO  Time after invoking service In SUPER:Wed Mar 13 12:25:52 IST 2019
2019-03-13 12:25:52,557 INFO  Service responded successfully with required details
2019-03-13 12:25:52,557 INFO  Time after invoking service:Wed Mar 13 12:25:52 IST 2019
2019-03-13 12:25:52,557 INFO  User solution successfully verified
2019-03-13 12:25:52,557 INFO  Processing the response from verify service
2019-03-13 12:25:52,604 INFO  Starting to parse JSON response
2019-03-13 12:25:52,619 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 12:25:52,619 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 12:25:52,619 INFO  Successfully parsed JSON response
2019-03-13 12:25:52,619 INFO  In the process of generating verify response in HTML
2019-03-13 12:25:52,729 INFO  Successfully generated verify response in HTML
2019-03-13 12:25:52,729 INFO  Successfully processed the response from service
2019-03-13 12:27:11,450 INFO  Setting request parameters for VerifySolution
2019-03-13 12:27:11,450 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 12:27:11,450 INFO  Starting to parse the user solution
2019-03-13 12:27:11,450 INFO  Displaying user solution
2019-03-13 12:27:11,466 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Exer-1\r\n\r\ndef update_mark_list(mark_list, new_element, pos):\r\n    #Write your logic here\r\n    mark_list.insert(pos, new_element)\r\n    return mark_list\r\n\r\ndef find_mark(mark_list,pos1,pos2):\r\n    '''Remove pass and write your logic here to return a list containing\r\n    the marks at pos1 and pos2 respectively.'''\r\n    if(pos1<pos2):\r\n      return mark_list[pos1],mark_list[pos2]\r\n        \r\n\r\n#Provide different values for the variables and test your program\r\nmark_list=[89,78,99,76,77,67,99,98,90]\r\nnew_element=78\r\npos=8\r\npos1=5\r\npos2=7\r\nprint(update_mark_list(mark_list, new_element, pos))\r\nprint(find_mark(mark_list, pos1, pos2))\r\n","asgnmtId":"1","SolutionFileName":"excer1.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-13 12:27:11,466 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 12:27:11,466 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 12:27:11,466 INFO  Invoking the service to verify the user solution
2019-03-13 12:27:11,466 INFO  Time before invoking service:Wed Mar 13 12:27:11 IST 2019
2019-03-13 12:27:11,466 INFO  Initialising service address for VerifySolution
2019-03-13 12:27:11,466 INFO  Time before invoking service In SUPER:Wed Mar 13 12:27:11 IST 2019
2019-03-13 12:27:12,497 INFO  Time after invoking service In SUPER:Wed Mar 13 12:27:12 IST 2019
2019-03-13 12:27:12,497 INFO  Service responded successfully with required details
2019-03-13 12:27:12,497 INFO  Time after invoking service:Wed Mar 13 12:27:12 IST 2019
2019-03-13 12:27:12,497 INFO  User solution successfully verified
2019-03-13 12:27:12,497 INFO  Processing the response from verify service
2019-03-13 12:27:12,497 INFO  Starting to parse JSON response
2019-03-13 12:27:12,497 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 12:27:12,497 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 12:27:12,497 INFO  Successfully parsed JSON response
2019-03-13 12:27:12,497 INFO  In the process of generating verify response in HTML
2019-03-13 12:27:12,575 INFO  Successfully generated verify response in HTML
2019-03-13 12:27:12,575 INFO  Successfully processed the response from service
2019-03-13 12:28:47,077 INFO  Setting request parameters for VerifySolution
2019-03-13 12:28:47,077 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 12:28:47,077 INFO  Starting to parse the user solution
2019-03-13 12:28:47,077 INFO  Displaying user solution
2019-03-13 12:28:47,092 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Exer-1\r\n\r\ndef update_mark_list(mark_list, new_element, pos):\r\n    #Write your logic here\r\n    mark_list.insert(pos, new_element)\r\n    return mark_list\r\n\r\ndef find_mark(mark_list,pos1,pos2):\r\n    '''Remove pass and write your logic here to return a list containing\r\n    the marks at pos1 and pos2 respectively.'''\r\n    if(pos1<pos2):\r\n      return mark_list[pos1],mark_list[pos2]\r\n        \r\n\r\n#Provide different values for the variables and test your program\r\nmark_list=[89,78,99,76,77,67,99,98,90]\r\nnew_element=78\r\npos=8\r\npos1=5\r\npos2=7\r\nprint(update_mark_list(mark_list, new_element, pos))\r\nprint(find_mark(mark_list, pos1, pos2))\r\n","asgnmtId":"1","SolutionFileName":"excer1.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-13 12:28:47,092 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 12:28:47,092 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 12:28:47,092 INFO  Invoking the service to verify the user solution
2019-03-13 12:28:47,092 INFO  Time before invoking service:Wed Mar 13 12:28:47 IST 2019
2019-03-13 12:28:47,092 INFO  Initialising service address for VerifySolution
2019-03-13 12:28:47,092 INFO  Time before invoking service In SUPER:Wed Mar 13 12:28:47 IST 2019
2019-03-13 12:28:47,999 INFO  Time after invoking service In SUPER:Wed Mar 13 12:28:47 IST 2019
2019-03-13 12:28:47,999 INFO  Service responded successfully with required details
2019-03-13 12:28:47,999 INFO  Time after invoking service:Wed Mar 13 12:28:47 IST 2019
2019-03-13 12:28:47,999 INFO  User solution successfully verified
2019-03-13 12:28:47,999 INFO  Processing the response from verify service
2019-03-13 12:28:47,999 INFO  Starting to parse JSON response
2019-03-13 12:28:48,014 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 12:28:48,014 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 12:28:48,014 INFO  Successfully parsed JSON response
2019-03-13 12:28:48,014 INFO  In the process of generating verify response in HTML
2019-03-13 12:28:48,092 INFO  Successfully generated verify response in HTML
2019-03-13 12:28:48,092 INFO  Successfully processed the response from service
2019-03-13 12:29:14,954 INFO  Setting request parameters for VerifySolution
2019-03-13 12:29:14,954 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 12:29:14,954 INFO  Starting to parse the user solution
2019-03-13 12:29:14,954 INFO  Displaying user solution
2019-03-13 12:29:14,985 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Exer-1\r\n\r\ndef update_mark_list(mark_list, new_element, pos):\r\n    #Write your logic here\r\n    mark_list.insert(pos, new_element)\r\n    return mark_list\r\n\r\ndef find_mark(mark_list,pos1,pos2):\r\n    '''Remove pass and write your logic here to return a list containing\r\n    the marks at pos1 and pos2 respectively.'''\r\n    return mark_list[pos1],mark_list[pos2]\r\n        \r\n\r\n#Provide different values for the variables and test your program\r\nmark_list=[89,78,99,76,77,67,99,98,90]\r\nnew_element=78\r\npos=8\r\npos1=5\r\npos2=8\r\nprint(update_mark_list(mark_list, new_element, pos))\r\nprint(find_mark(mark_list, pos1, pos2))\r\n","asgnmtId":"1","SolutionFileName":"excer1.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-13 12:29:14,985 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 12:29:14,985 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 12:29:14,985 INFO  Invoking the service to verify the user solution
2019-03-13 12:29:14,985 INFO  Time before invoking service:Wed Mar 13 12:29:14 IST 2019
2019-03-13 12:29:14,985 INFO  Initialising service address for VerifySolution
2019-03-13 12:29:14,985 INFO  Time before invoking service In SUPER:Wed Mar 13 12:29:14 IST 2019
2019-03-13 12:29:16,438 INFO  Time after invoking service In SUPER:Wed Mar 13 12:29:16 IST 2019
2019-03-13 12:29:16,438 INFO  Service responded successfully with required details
2019-03-13 12:29:16,438 INFO  Time after invoking service:Wed Mar 13 12:29:16 IST 2019
2019-03-13 12:29:16,438 INFO  User solution successfully verified
2019-03-13 12:29:16,438 INFO  Processing the response from verify service
2019-03-13 12:29:16,438 INFO  Starting to parse JSON response
2019-03-13 12:29:16,438 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 12:29:16,438 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 12:29:16,438 INFO  Successfully parsed JSON response
2019-03-13 12:29:16,438 INFO  In the process of generating verify response in HTML
2019-03-13 12:29:16,532 INFO  Successfully generated verify response in HTML
2019-03-13 12:29:16,532 INFO  Successfully processed the response from service
2019-03-13 12:33:17,665 INFO  Setting request parameters for VerifySolution
2019-03-13 12:33:17,665 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 12:33:17,665 INFO  Starting to parse the user solution
2019-03-13 12:33:17,665 INFO  Displaying user solution
2019-03-13 12:33:17,697 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Exer-1\r\n\r\ndef update_mark_list(mark_list, new_element, pos):\r\n    #Write your logic here\r\n    mark_list.insert(pos, new_element)\r\n    return mark_list\r\n\r\ndef find_mark(mark_list,pos1,pos2):\r\n    '''Remove pass and write your logic here to return a list containing\r\n    the marks at pos1 and pos2 respectively.'''\r\n    return mark_list[pos1],mark_list[pos2]\r\n        \r\n\r\n#Provide different values for the variables and test your program\r\nmark_list=[89,78,99,76,77,67,99,98,90]\r\nnew_element=78\r\npos=8\r\npos1=5\r\npos2=8\r\nprint(update_mark_list(mark_list, new_element, pos))\r\nprint(find_mark(mark_list, pos1, pos2))\r\n","asgnmtId":"1","SolutionFileName":"excer1.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-13 12:33:17,697 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 12:33:17,697 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 12:33:17,697 INFO  Invoking the service to verify the user solution
2019-03-13 12:33:17,697 INFO  Time before invoking service:Wed Mar 13 12:33:17 IST 2019
2019-03-13 12:33:17,697 INFO  Initialising service address for VerifySolution
2019-03-13 12:33:17,697 INFO  Time before invoking service In SUPER:Wed Mar 13 12:33:17 IST 2019
2019-03-13 12:33:18,618 INFO  Time after invoking service In SUPER:Wed Mar 13 12:33:18 IST 2019
2019-03-13 12:33:18,618 INFO  Service responded successfully with required details
2019-03-13 12:33:18,618 INFO  Time after invoking service:Wed Mar 13 12:33:18 IST 2019
2019-03-13 12:33:18,618 INFO  User solution successfully verified
2019-03-13 12:33:18,618 INFO  Processing the response from verify service
2019-03-13 12:33:18,618 INFO  Starting to parse JSON response
2019-03-13 12:33:18,618 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 12:33:18,618 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 12:33:18,618 INFO  Successfully parsed JSON response
2019-03-13 12:33:18,618 INFO  In the process of generating verify response in HTML
2019-03-13 12:33:18,743 INFO  Successfully generated verify response in HTML
2019-03-13 12:33:18,743 INFO  Successfully processed the response from service
2019-03-13 12:33:37,761 INFO  Setting request parameters for VerifySolution
2019-03-13 12:33:37,761 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 12:33:37,761 INFO  Starting to parse the user solution
2019-03-13 12:33:37,761 INFO  Displaying user solution
2019-03-13 12:33:37,792 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Exer-1\r\n\r\ndef update_mark_list(mark_list, new_element, pos):\r\n    #Write your logic here\r\n    mark_list.insert(pos, new_element)\r\n    return mark_list\r\n\r\ndef find_mark(mark_list,pos1,pos2):\r\n    '''Remove pass and write your logic here to return a list containing\r\n    the marks at pos1 and pos2 respectively.'''\r\n    return [mark_list[pos1],mark_list[pos2]]\r\n        \r\n\r\n#Provide different values for the variables and test your program\r\nmark_list=[89,78,99,76,77,67,99,98,90]\r\nnew_element=78\r\npos=8\r\npos1=5\r\npos2=8\r\nprint(update_mark_list(mark_list, new_element, pos))\r\nprint(find_mark(mark_list, pos1, pos2))\r\n","asgnmtId":"1","SolutionFileName":"excer1.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-13 12:33:37,792 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 12:33:37,792 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 12:33:37,792 INFO  Invoking the service to verify the user solution
2019-03-13 12:33:37,792 INFO  Time before invoking service:Wed Mar 13 12:33:37 IST 2019
2019-03-13 12:33:37,792 INFO  Initialising service address for VerifySolution
2019-03-13 12:33:37,792 INFO  Time before invoking service In SUPER:Wed Mar 13 12:33:37 IST 2019
2019-03-13 12:33:38,792 INFO  Time after invoking service In SUPER:Wed Mar 13 12:33:38 IST 2019
2019-03-13 12:33:38,792 INFO  Service responded successfully with required details
2019-03-13 12:33:38,792 INFO  Time after invoking service:Wed Mar 13 12:33:38 IST 2019
2019-03-13 12:33:38,792 INFO  User solution successfully verified
2019-03-13 12:33:38,792 INFO  Processing the response from verify service
2019-03-13 12:33:38,855 INFO  Starting to parse JSON response
2019-03-13 12:33:38,855 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 12:33:38,855 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 12:33:38,855 INFO  Successfully parsed JSON response
2019-03-13 12:33:38,855 INFO  In the process of generating verify response in HTML
2019-03-13 12:33:38,948 INFO  Successfully generated verify response in HTML
2019-03-13 12:33:38,948 INFO  Successfully processed the response from service
2019-03-13 12:33:50,882 INFO  Initiating to process and prepare Input for the submit service
2019-03-13 12:33:50,898 INFO  Displaying user solution
2019-03-13 12:33:50,898 INFO  Successfully processed and prepared the input for the submit service
2019-03-13 12:33:50,898 INFO  Invoking the service to submit the user solution
2019-03-13 12:33:50,898 INFO  Initialising service address for Submit
2019-03-13 12:33:50,898 INFO  Time before invoking service In SUPER:Wed Mar 13 12:33:50 IST 2019
2019-03-13 12:33:51,179 INFO  Time after invoking service In SUPER:Wed Mar 13 12:33:51 IST 2019
2019-03-13 12:33:51,179 INFO  Service responded successfully with required details
2019-03-13 12:33:51,179 INFO  User solution successfully submitted
2019-03-13 12:33:51,179 INFO  Displaying submission status
2019-03-13 12:33:51,179 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-13 12:33:53,976 INFO  Initiating to process and prepare Input for the submit service
2019-03-13 12:33:53,976 INFO  Displaying user solution
2019-03-13 12:33:53,991 INFO  Successfully processed and prepared the input for the submit service
2019-03-13 12:33:53,991 INFO  Invoking the service to submit the user solution
2019-03-13 12:33:53,991 INFO  Initialising service address for Submit
2019-03-13 12:33:53,991 INFO  Time before invoking service In SUPER:Wed Mar 13 12:33:53 IST 2019
2019-03-13 12:33:54,070 INFO  Time after invoking service In SUPER:Wed Mar 13 12:33:54 IST 2019
2019-03-13 12:33:54,070 INFO  Service responded successfully with required details
2019-03-13 12:33:54,070 INFO  User solution successfully submitted
2019-03-13 12:33:54,070 INFO  Displaying submission status
2019-03-13 12:33:54,070 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-13 12:34:59,706 INFO  Setting request parameters for VerifySolution
2019-03-13 12:34:59,706 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 12:34:59,706 INFO  Starting to parse the user solution
2019-03-13 12:34:59,706 INFO  Displaying user solution
2019-03-13 12:34:59,737 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Exer-2\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Node:\r\n    def __init__(self,data):\r\n        self.__data=data\r\n        self.__next=None\r\n    \r\n    def get_data(self):\r\n        return self.__data\r\n    \r\n    def set_data(self,data):\r\n        self.__data=data\r\n    \r\n    def get_next(self):\r\n        return self.__next\r\n    \r\n    def set_next(self,next_node):\r\n        self.__next=next_node\r\n    \r\nclass LinkedList:\r\n    def __init__(self):\r\n        self.__head=None\r\n        self.__tail=None\r\n    \r\n    def get_head(self):\r\n        return self.__head\r\n    \r\n    def get_tail(self):\r\n        return self.__tail\r\n    \r\n    def add(self,data):\r\n        new_node=Node(data)\r\n        if(self.__head is None):\r\n            self.__head=self.__tail=new_node\r\n        else:\r\n            self.__tail.set_next(new_node)\r\n            self.__tail=new_node\r\n    \r\n    def display(self):\r\n        temp=self.__head\r\n        while(temp is not None):\r\n            print(temp.get_data())\r\n            temp=temp.get_next()\r\n                                              \r\n    #You can use the below __str__() to print the elements of the DS object while debugging\r\n    def __str__(self):\r\n        temp=self.__head\r\n        msg=[]\r\n        while(temp is not None):\r\n           msg.append(str(temp.get_data()))\r\n           temp=temp.get_next()\r\n        msg=\" \".join(msg)\r\n        msg=\"Linkedlist data(Head to Tail): \"+ msg\r\n        return msg\r\n\r\ndef count_nodes(biscuit_list):\r\n    count=0\r\n    # Write your logic here\r\n\r\n    return count\r\n\r\nbiscuit_list=LinkedList()\r\nbiscuit_list.add(\"Goodday\")\r\nbiscuit_list.add(\"Bourbon\")\r\nbiscuit_list.add(\"Hide&Seek\")\r\nbiscuit_list.add(\"Nutrichoice\")\r\n\r\nprint(count_nodes(biscuit_list))\r\n                                              \r\n","asgnmtId":"2","SolutionFileName":"excer2.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-13 12:34:59,752 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 12:34:59,752 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 12:34:59,752 INFO  Invoking the service to verify the user solution
2019-03-13 12:34:59,752 INFO  Time before invoking service:Wed Mar 13 12:34:59 IST 2019
2019-03-13 12:34:59,752 INFO  Initialising service address for VerifySolution
2019-03-13 12:34:59,752 INFO  Time before invoking service In SUPER:Wed Mar 13 12:34:59 IST 2019
2019-03-13 12:35:00,737 INFO  Time after invoking service In SUPER:Wed Mar 13 12:35:00 IST 2019
2019-03-13 12:35:00,737 INFO  Service responded successfully with required details
2019-03-13 12:35:00,737 INFO  Time after invoking service:Wed Mar 13 12:35:00 IST 2019
2019-03-13 12:35:00,737 INFO  User solution successfully verified
2019-03-13 12:35:00,737 INFO  Processing the response from verify service
2019-03-13 12:35:00,752 INFO  Starting to parse JSON response
2019-03-13 12:35:00,752 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 12:35:00,752 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 12:35:00,752 INFO  Successfully parsed JSON response
2019-03-13 12:35:00,752 INFO  In the process of generating verify response in HTML
2019-03-13 12:35:00,831 INFO  Successfully generated verify response in HTML
2019-03-13 12:35:00,831 INFO  Successfully processed the response from service
2019-03-13 14:04:43,501 INFO  Verification Failed : Incorrect #tag
->Please provide the correct #tag in thefirst line as per ILP starter code
2019-03-13 14:49:22,057 INFO  Setting request parameters for VerifySolution
2019-03-13 14:49:22,057 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 14:49:22,057 INFO  Starting to parse the user solution
2019-03-13 14:49:22,073 INFO  Displaying user solution
2019-03-13 14:49:22,182 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Exer-2\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Node:\r\n    def __init__(self,data):\r\n        self.__data=data\r\n        self.__next=None\r\n    \r\n    def get_data(self):\r\n        return self.__data\r\n    \r\n    def set_data(self,data):\r\n        self.__data=data\r\n    \r\n    def get_next(self):\r\n        return self.__next\r\n    \r\n    def set_next(self,next_node):\r\n        self.__next=next_node\r\n    \r\nclass LinkedList:\r\n    def __init__(self):\r\n        self.__head=None\r\n        self.__tail=None\r\n    \r\n    def get_head(self):\r\n        return self.__head\r\n    \r\n    def get_tail(self):\r\n        return self.__tail\r\n    \r\n    def add(self,data):\r\n        new_node=Node(data)\r\n        if(self.__head is None):\r\n            self.__head=self.__tail=new_node\r\n        else:\r\n            self.__tail.set_next(new_node)\r\n            self.__tail=new_node\r\n    \r\n    def display(self):\r\n        temp=self.__head\r\n        while(temp is not None):\r\n            print(temp.get_data())\r\n            temp=temp.get_next()\r\n                                              \r\n    #You can use the below __str__() to print the elements of the DS object while debugging\r\n    def __str__(self):\r\n        temp=self.__head\r\n        msg=[]\r\n        while(temp is not None):\r\n            msg.append(str(temp.get_data()))\r\n            temp=temp.get_next()\r\n        msg=\" \".join(msg)\r\n        msg=\"Linkedlist data(Head to Tail): \"+ msg\r\n        return msg\r\n\r\ndef count_nodes(biscuit_list):\r\n    count=0\r\n     \r\n    # Write your logic here \r\n    while(biscuit_list is not None):\r\n        count +=1 \r\n          \r\n            \r\n\r\n    return count\r\n\r\nbiscuit_list=LinkedList()\r\nbiscuit_list.add(\"Goodday\")\r\nbiscuit_list.add(\"Bourbon\")\r\nbiscuit_list.add(\"Hide&Seek\")\r\nbiscuit_list.add(\"Nutrichoice\")\r\n\r\nprint(count_nodes(biscuit_list))\r\n","asgnmtId":"2","SolutionFileName":"excer2.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-13 14:49:22,182 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 14:49:22,182 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 14:49:22,182 INFO  Invoking the service to verify the user solution
2019-03-13 14:49:22,182 INFO  Time before invoking service:Wed Mar 13 14:49:22 IST 2019
2019-03-13 14:49:22,182 INFO  Initialising service address for VerifySolution
2019-03-13 14:49:22,182 INFO  Time before invoking service In SUPER:Wed Mar 13 14:49:22 IST 2019
2019-03-13 14:49:27,404 INFO  Time after invoking service In SUPER:Wed Mar 13 14:49:27 IST 2019
2019-03-13 14:49:27,404 INFO  Service responded successfully with required details
2019-03-13 14:49:27,404 INFO  Time after invoking service:Wed Mar 13 14:49:27 IST 2019
2019-03-13 14:49:27,404 INFO  User solution successfully verified
2019-03-13 14:49:27,404 INFO  Processing the response from verify service
2019-03-13 14:49:27,420 INFO  Starting to parse JSON response
2019-03-13 14:49:27,420 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 14:49:27,420 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 14:49:27,420 INFO  Successfully parsed JSON response
2019-03-13 14:49:27,420 INFO  In the process of generating verify response in HTML
2019-03-13 14:49:27,513 INFO  Successfully generated verify response in HTML
2019-03-13 14:49:27,513 INFO  Successfully processed the response from service
2019-03-13 14:50:08,698 INFO  Setting request parameters for VerifySolution
2019-03-13 14:50:08,698 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 14:50:08,698 INFO  Starting to parse the user solution
2019-03-13 14:50:08,698 INFO  Displaying user solution
2019-03-13 14:50:08,745 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Exer-2\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Node:\r\n    def __init__(self,data):\r\n        self.__data=data\r\n        self.__next=None\r\n    \r\n    def get_data(self):\r\n        return self.__data\r\n    \r\n    def set_data(self,data):\r\n        self.__data=data\r\n    \r\n    def get_next(self):\r\n        return self.__next\r\n    \r\n    def set_next(self,next_node):\r\n        self.__next=next_node\r\n    \r\nclass LinkedList:\r\n    def __init__(self):\r\n        self.__head=None\r\n        self.__tail=None\r\n    \r\n    def get_head(self):\r\n        return self.__head\r\n    \r\n    def get_tail(self):\r\n        return self.__tail\r\n    \r\n    def add(self,data):\r\n        new_node=Node(data)\r\n        if(self.__head is None):\r\n            self.__head=self.__tail=new_node\r\n        else:\r\n            self.__tail.set_next(new_node)\r\n            self.__tail=new_node\r\n    \r\n    def display(self):\r\n        temp=self.__head\r\n        while(temp is not None):\r\n            print(temp.get_data())\r\n            temp=temp.get_next()\r\n                                              \r\n    #You can use the below __str__() to print the elements of the DS object while debugging\r\n    def __str__(self):\r\n        temp=self.__head\r\n        msg=[]\r\n        while(temp is not None):\r\n            msg.append(str(temp.get_data()))\r\n            temp=temp.get_next()\r\n        msg=\" \".join(msg)\r\n        msg=\"Linkedlist data(Head to Tail): \"+ msg\r\n        return msg\r\n\r\ndef count_nodes(biscuit_list):\r\n    count=0\r\n     \r\n    # Write your logic here \r\n    while(biscuit_list is not None):\r\n        count +=1 \r\n          \r\n            \r\n\r\n    return count\r\n\r\nbiscuit_list=LinkedList()\r\nbiscuit_list.add(\"Goodday\")\r\nbiscuit_list.add(\"Bourbon\")\r\nbiscuit_list.add(\"Hide&Seek\")\r\nbiscuit_list.add(\"Nutrichoice\")\r\n\r\nprint(count_nodes(biscuit_list))\r\n","asgnmtId":"2","SolutionFileName":"excer2.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-13 14:50:08,745 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 14:50:08,745 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 14:50:08,745 INFO  Invoking the service to verify the user solution
2019-03-13 14:50:08,745 INFO  Time before invoking service:Wed Mar 13 14:50:08 IST 2019
2019-03-13 14:50:08,745 INFO  Initialising service address for VerifySolution
2019-03-13 14:50:08,745 INFO  Time before invoking service In SUPER:Wed Mar 13 14:50:08 IST 2019
2019-03-13 14:50:14,214 INFO  Time after invoking service In SUPER:Wed Mar 13 14:50:14 IST 2019
2019-03-13 14:50:14,214 INFO  Service responded successfully with required details
2019-03-13 14:50:14,214 INFO  Time after invoking service:Wed Mar 13 14:50:14 IST 2019
2019-03-13 14:50:14,214 INFO  User solution successfully verified
2019-03-13 14:50:14,214 INFO  Processing the response from verify service
2019-03-13 14:50:14,214 INFO  Starting to parse JSON response
2019-03-13 14:50:14,214 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 14:50:14,214 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 14:50:14,214 INFO  Successfully parsed JSON response
2019-03-13 14:50:14,214 INFO  In the process of generating verify response in HTML
2019-03-13 14:50:14,292 INFO  Successfully generated verify response in HTML
2019-03-13 14:50:14,292 INFO  Successfully processed the response from service
2019-03-13 14:50:21,917 INFO  Setting request parameters for VerifySolution
2019-03-13 14:50:21,917 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 14:50:21,917 INFO  Starting to parse the user solution
2019-03-13 14:50:21,933 INFO  Displaying user solution
2019-03-13 14:50:21,964 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Exer-1\r\n\r\ndef update_mark_list(mark_list, new_element, pos):\r\n    #Write your logic here\r\n    mark_list.insert(pos, new_element)\r\n    return mark_list\r\n\r\ndef find_mark(mark_list,pos1,pos2):\r\n    '''Remove pass and write your logic here to return a list containing\r\n    the marks at pos1 and pos2 respectively.'''\r\n    return [mark_list[pos1],mark_list[pos2]]\r\n        \r\n\r\n#Provide different values for the variables and test your program\r\nmark_list=[89,78,99,76,77,67,99,98,90]\r\nnew_element=78\r\npos=8\r\npos1=5\r\npos2=8\r\nprint(update_mark_list(mark_list, new_element, pos))\r\nprint(find_mark(mark_list, pos1, pos2))\r\n","asgnmtId":"1","SolutionFileName":"excer1.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-13 14:50:21,964 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 14:50:21,964 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 14:50:21,964 INFO  Invoking the service to verify the user solution
2019-03-13 14:50:21,964 INFO  Time before invoking service:Wed Mar 13 14:50:21 IST 2019
2019-03-13 14:50:21,964 INFO  Initialising service address for VerifySolution
2019-03-13 14:50:21,964 INFO  Time before invoking service In SUPER:Wed Mar 13 14:50:21 IST 2019
2019-03-13 14:50:22,995 INFO  Time after invoking service In SUPER:Wed Mar 13 14:50:22 IST 2019
2019-03-13 14:50:23,011 INFO  Service responded successfully with required details
2019-03-13 14:50:23,011 INFO  Time after invoking service:Wed Mar 13 14:50:23 IST 2019
2019-03-13 14:50:23,011 INFO  User solution successfully verified
2019-03-13 14:50:23,011 INFO  Processing the response from verify service
2019-03-13 14:50:23,011 INFO  Starting to parse JSON response
2019-03-13 14:50:23,011 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 14:50:23,011 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 14:50:23,011 INFO  Successfully parsed JSON response
2019-03-13 14:50:23,011 INFO  In the process of generating verify response in HTML
2019-03-13 14:50:23,089 INFO  Successfully generated verify response in HTML
2019-03-13 14:50:23,089 INFO  Successfully processed the response from service
2019-03-13 14:50:26,261 INFO  Initiating to process and prepare Input for the submit service
2019-03-13 14:50:26,261 INFO  Displaying user solution
2019-03-13 14:50:26,261 INFO  Successfully processed and prepared the input for the submit service
2019-03-13 14:50:26,261 INFO  Invoking the service to submit the user solution
2019-03-13 14:50:26,261 INFO  Initialising service address for Submit
2019-03-13 14:50:26,261 INFO  Time before invoking service In SUPER:Wed Mar 13 14:50:26 IST 2019
2019-03-13 14:50:26,402 INFO  Time after invoking service In SUPER:Wed Mar 13 14:50:26 IST 2019
2019-03-13 14:50:26,417 INFO  Service responded successfully with required details
2019-03-13 14:50:26,417 INFO  User solution successfully submitted
2019-03-13 14:50:26,417 INFO  Displaying submission status
2019-03-13 14:50:26,417 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-13 14:55:53,701 INFO  Setting request parameters for VerifySolution
2019-03-13 14:55:53,701 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 14:55:53,701 INFO  Starting to parse the user solution
2019-03-13 14:55:53,701 INFO  Displaying user solution
2019-03-13 14:55:53,764 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-1\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\ndef merge_list(list1, list2):\r\n    merged_data=\"\"\r\n    #write your logic here\r\n    return resultant_data\r\n\r\n#Provide different values for the variables and test your program\r\nlist1=['A', 'app','a', 'd', 'ke', 'th', 'doc', 'awa']\r\nlist2=['y','tor','e','eps','ay',None,'le','n']\r\nmerged_data=merge_list(list1,list2)\r\nprint(merged_data)\r\n","asgnmtId":"1","SolutionFileName":"Assign1.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 14:55:53,764 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 14:55:53,764 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 14:55:53,764 INFO  Invoking the service to verify the user solution
2019-03-13 14:55:53,764 INFO  Time before invoking service:Wed Mar 13 14:55:53 IST 2019
2019-03-13 14:55:53,764 INFO  Initialising service address for VerifySolution
2019-03-13 14:55:53,764 INFO  Time before invoking service In SUPER:Wed Mar 13 14:55:53 IST 2019
2019-03-13 14:55:54,861 INFO  Time after invoking service In SUPER:Wed Mar 13 14:55:54 IST 2019
2019-03-13 14:55:54,861 INFO  Service responded successfully with required details
2019-03-13 14:55:54,861 INFO  Time after invoking service:Wed Mar 13 14:55:54 IST 2019
2019-03-13 14:55:54,861 INFO  User solution successfully verified
2019-03-13 14:55:54,861 INFO  Processing the response from verify service
2019-03-13 14:55:54,861 INFO  Starting to parse JSON response
2019-03-13 14:55:54,861 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 14:55:54,861 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 14:55:54,861 INFO  Successfully parsed JSON response
2019-03-13 14:55:54,861 INFO  In the process of generating verify response in HTML
2019-03-13 14:55:54,955 INFO  Successfully generated verify response in HTML
2019-03-13 14:55:54,955 INFO  Successfully processed the response from service
2019-03-13 15:48:55,677 INFO  Setting request parameters for VerifySolution
2019-03-13 15:48:55,677 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 15:48:55,677 INFO  Starting to parse the user solution
2019-03-13 15:48:55,677 INFO  Displaying user solution
2019-03-13 15:48:55,739 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Exer-2\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Node:\r\n    def __init__(self,data):\r\n        self.__data=data\r\n        self.__next=None\r\n    \r\n    def get_data(self):\r\n        return self.__data\r\n    \r\n    def set_data(self,data):\r\n        self.__data=data\r\n    \r\n    def get_next(self):\r\n        return self.__next\r\n    \r\n    def set_next(self,next_node):\r\n        self.__next=next_node\r\n    \r\nclass LinkedList:\r\n    def __init__(self):\r\n        self.__head=None\r\n        self.__tail=None\r\n    \r\n    def get_head(self):\r\n        return self.__head\r\n    \r\n    def get_tail(self):\r\n        return self.__tail\r\n    \r\n    def add(self,data):\r\n        new_node=Node(data)\r\n        if(self.__head is None):\r\n            self.__head=self.__tail=new_node\r\n        else:\r\n            self.__tail.set_next(new_node)\r\n            self.__tail=new_node\r\n    \r\n    def display(self):\r\n        temp=self.__head\r\n        while(temp is not None):\r\n            print(temp.get_data())\r\n            temp=temp.get_next()\r\n                                              \r\n    #You can use the below __str__() to print the elements of the DS object while debugging\r\n    def __str__(self):\r\n        temp=self.__head\r\n        msg=[]\r\n        while(temp is not None):\r\n            msg.append(str(temp.get_data()))\r\n            temp=temp.get_next()\r\n        msg=\" \".join(msg)\r\n        msg=\"Linkedlist data(Head to Tail): \"+ msg\r\n        return msg\r\n\r\ndef count_nodes(biscuit_list):\r\n    count=0\r\n    temp = biscuit_list.get_head()\r\n    while( temp is not None):\r\n        count+=1 \r\n        temp = temp.get_next()\r\n    \r\n\r\nbiscuit_list=LinkedList()\r\nbiscuit_list.add(\"Goodday\")\r\nbiscuit_list.add(\"Bourbon\")\r\nbiscuit_list.add(\"Hide&Seek\")\r\nbiscuit_list.add(\"Nutrichoice\")\r\n\r\nprint(count_nodes(biscuit_list))\r\n","asgnmtId":"2","SolutionFileName":"excer2.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-13 15:48:55,739 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 15:48:55,739 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 15:48:55,739 INFO  Invoking the service to verify the user solution
2019-03-13 15:48:55,739 INFO  Time before invoking service:Wed Mar 13 15:48:55 IST 2019
2019-03-13 15:48:55,739 INFO  Initialising service address for VerifySolution
2019-03-13 15:48:55,739 INFO  Time before invoking service In SUPER:Wed Mar 13 15:48:55 IST 2019
2019-03-13 15:48:56,656 INFO  Time after invoking service In SUPER:Wed Mar 13 15:48:56 IST 2019
2019-03-13 15:48:56,672 INFO  Service responded successfully with required details
2019-03-13 15:48:56,672 INFO  Time after invoking service:Wed Mar 13 15:48:56 IST 2019
2019-03-13 15:48:56,672 INFO  User solution successfully verified
2019-03-13 15:48:56,672 INFO  Processing the response from verify service
2019-03-13 15:48:56,672 INFO  Starting to parse JSON response
2019-03-13 15:48:56,672 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 15:48:56,672 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 15:48:56,672 INFO  Successfully parsed JSON response
2019-03-13 15:48:56,672 INFO  In the process of generating verify response in HTML
2019-03-13 15:48:56,750 INFO  Successfully generated verify response in HTML
2019-03-13 15:48:56,750 INFO  Successfully processed the response from service
2019-03-13 15:49:02,343 INFO  Setting request parameters for VerifySolution
2019-03-13 15:49:02,343 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 15:49:02,343 INFO  Starting to parse the user solution
2019-03-13 15:49:02,343 INFO  Displaying user solution
2019-03-13 15:49:02,374 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Exer-2\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Node:\r\n    def __init__(self,data):\r\n        self.__data=data\r\n        self.__next=None\r\n    \r\n    def get_data(self):\r\n        return self.__data\r\n    \r\n    def set_data(self,data):\r\n        self.__data=data\r\n    \r\n    def get_next(self):\r\n        return self.__next\r\n    \r\n    def set_next(self,next_node):\r\n        self.__next=next_node\r\n    \r\nclass LinkedList:\r\n    def __init__(self):\r\n        self.__head=None\r\n        self.__tail=None\r\n    \r\n    def get_head(self):\r\n        return self.__head\r\n    \r\n    def get_tail(self):\r\n        return self.__tail\r\n    \r\n    def add(self,data):\r\n        new_node=Node(data)\r\n        if(self.__head is None):\r\n            self.__head=self.__tail=new_node\r\n        else:\r\n            self.__tail.set_next(new_node)\r\n            self.__tail=new_node\r\n    \r\n    def display(self):\r\n        temp=self.__head\r\n        while(temp is not None):\r\n            print(temp.get_data())\r\n            temp=temp.get_next()\r\n                                              \r\n    #You can use the below __str__() to print the elements of the DS object while debugging\r\n    def __str__(self):\r\n        temp=self.__head\r\n        msg=[]\r\n        while(temp is not None):\r\n            msg.append(str(temp.get_data()))\r\n            temp=temp.get_next()\r\n        msg=\" \".join(msg)\r\n        msg=\"Linkedlist data(Head to Tail): \"+ msg\r\n        return msg\r\n\r\ndef count_nodes(biscuit_list):\r\n    count=0\r\n    temp = biscuit_list.get_head()\r\n    while( temp is not None):\r\n        count+=1 \r\n        temp = temp.get_next()\r\n    \r\n    return count\r\nbiscuit_list=LinkedList()\r\nbiscuit_list.add(\"Goodday\")\r\nbiscuit_list.add(\"Bourbon\")\r\nbiscuit_list.add(\"Hide&Seek\")\r\nbiscuit_list.add(\"Nutrichoice\")\r\n\r\nprint(count_nodes(biscuit_list))\r\n","asgnmtId":"2","SolutionFileName":"excer2.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-13 15:49:02,374 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 15:49:02,374 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 15:49:02,374 INFO  Invoking the service to verify the user solution
2019-03-13 15:49:02,374 INFO  Time before invoking service:Wed Mar 13 15:49:02 IST 2019
2019-03-13 15:49:02,374 INFO  Initialising service address for VerifySolution
2019-03-13 15:49:02,374 INFO  Time before invoking service In SUPER:Wed Mar 13 15:49:02 IST 2019
2019-03-13 15:49:03,393 INFO  Time after invoking service In SUPER:Wed Mar 13 15:49:03 IST 2019
2019-03-13 15:49:03,393 INFO  Service responded successfully with required details
2019-03-13 15:49:03,393 INFO  Time after invoking service:Wed Mar 13 15:49:03 IST 2019
2019-03-13 15:49:03,393 INFO  User solution successfully verified
2019-03-13 15:49:03,393 INFO  Processing the response from verify service
2019-03-13 15:49:03,393 INFO  Starting to parse JSON response
2019-03-13 15:49:03,393 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 15:49:03,393 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 15:49:03,393 INFO  Successfully parsed JSON response
2019-03-13 15:49:03,393 INFO  In the process of generating verify response in HTML
2019-03-13 15:49:03,471 INFO  Successfully generated verify response in HTML
2019-03-13 15:49:03,471 INFO  Successfully processed the response from service
2019-03-13 15:49:21,047 INFO  Setting request parameters for VerifySolution
2019-03-13 15:49:21,047 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 15:49:21,047 INFO  Starting to parse the user solution
2019-03-13 15:49:21,047 INFO  Displaying user solution
2019-03-13 15:49:21,094 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Exer-2\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Node:\r\n    def __init__(self,data):\r\n        self.__data=data\r\n        self.__next=None\r\n    \r\n    def get_data(self):\r\n        return self.__data\r\n    \r\n    def set_data(self,data):\r\n        self.__data=data\r\n    \r\n    def get_next(self):\r\n        return self.__next\r\n    \r\n    def set_next(self,next_node):\r\n        self.__next=next_node\r\n    \r\nclass LinkedList:\r\n    def __init__(self):\r\n        self.__head=None\r\n        self.__tail=None\r\n    \r\n    def get_head(self):\r\n        return self.__head\r\n    \r\n    def get_tail(self):\r\n        return self.__tail\r\n    \r\n    def add(self,data):\r\n        new_node=Node(data)\r\n        if(self.__head is None):\r\n            self.__head=self.__tail=new_node\r\n        else:\r\n            self.__tail.set_next(new_node)\r\n            self.__tail=new_node\r\n    \r\n    def display(self):\r\n        temp=self.__head\r\n        while(temp is not None):\r\n            print(temp.get_data())\r\n            temp=temp.get_next()\r\n                                              \r\n   \r\n    def __str__(self):\r\n        temp=self.__head\r\n        msg=[]\r\n        while(temp is not None):\r\n            msg.append(str(temp.get_data()))\r\n            temp=temp.get_next()\r\n        msg=\" \".join(msg)\r\n        msg=\"Linkedlist data(Head to Tail): \"+ msg\r\n        return msg\r\n\r\ndef count_nodes(biscuit_list):\r\n    count=0\r\n    temp = biscuit_list.get_head()\r\n    while( temp is not None):\r\n        count+=1 \r\n        temp = temp.get_next()\r\n    \r\n    return count\r\nbiscuit_list=LinkedList()\r\nbiscuit_list.add(\"Goodday\")\r\nbiscuit_list.add(\"Bourbon\")\r\nbiscuit_list.add(\"Hide&Seek\")\r\nbiscuit_list.add(\"Nutrichoice\")\r\n\r\nprint(count_nodes(biscuit_list))\r\n","asgnmtId":"2","SolutionFileName":"excer2.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-13 15:49:21,094 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 15:49:21,094 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 15:49:21,094 INFO  Invoking the service to verify the user solution
2019-03-13 15:49:21,094 INFO  Time before invoking service:Wed Mar 13 15:49:21 IST 2019
2019-03-13 15:49:21,094 INFO  Initialising service address for VerifySolution
2019-03-13 15:49:21,094 INFO  Time before invoking service In SUPER:Wed Mar 13 15:49:21 IST 2019
2019-03-13 15:49:22,030 INFO  Time after invoking service In SUPER:Wed Mar 13 15:49:22 IST 2019
2019-03-13 15:49:22,030 INFO  Service responded successfully with required details
2019-03-13 15:49:22,030 INFO  Time after invoking service:Wed Mar 13 15:49:22 IST 2019
2019-03-13 15:49:22,030 INFO  User solution successfully verified
2019-03-13 15:49:22,030 INFO  Processing the response from verify service
2019-03-13 15:49:22,030 INFO  Starting to parse JSON response
2019-03-13 15:49:22,030 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 15:49:22,030 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 15:49:22,030 INFO  Successfully parsed JSON response
2019-03-13 15:49:22,030 INFO  In the process of generating verify response in HTML
2019-03-13 15:49:22,093 INFO  Successfully generated verify response in HTML
2019-03-13 15:49:22,093 INFO  Successfully processed the response from service
2019-03-13 15:49:32,031 INFO  Initiating to process and prepare Input for the submit service
2019-03-13 15:49:32,031 INFO  Displaying user solution
2019-03-13 15:49:32,031 INFO  Successfully processed and prepared the input for the submit service
2019-03-13 15:49:32,031 INFO  Invoking the service to submit the user solution
2019-03-13 15:49:32,031 INFO  Initialising service address for Submit
2019-03-13 15:49:32,031 INFO  Time before invoking service In SUPER:Wed Mar 13 15:49:32 IST 2019
2019-03-13 15:49:32,330 INFO  Time after invoking service In SUPER:Wed Mar 13 15:49:32 IST 2019
2019-03-13 15:49:32,330 INFO  Service responded successfully with required details
2019-03-13 15:49:32,330 INFO  User solution successfully submitted
2019-03-13 15:49:32,330 INFO  Displaying submission status
2019-03-13 15:49:32,330 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-13 15:49:34,956 INFO  Initiating to process and prepare Input for the submit service
2019-03-13 15:49:34,956 INFO  Displaying user solution
2019-03-13 15:49:34,972 INFO  Successfully processed and prepared the input for the submit service
2019-03-13 15:49:34,972 INFO  Invoking the service to submit the user solution
2019-03-13 15:49:34,972 INFO  Initialising service address for Submit
2019-03-13 15:49:34,972 INFO  Time before invoking service In SUPER:Wed Mar 13 15:49:34 IST 2019
2019-03-13 15:49:35,081 INFO  Time after invoking service In SUPER:Wed Mar 13 15:49:35 IST 2019
2019-03-13 15:49:35,081 INFO  Service responded successfully with required details
2019-03-13 15:49:35,081 INFO  User solution successfully submitted
2019-03-13 15:49:35,081 INFO  Displaying submission status
2019-03-13 15:49:35,081 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-13 15:50:26,015 INFO  Setting request parameters for VerifySolution
2019-03-13 15:50:26,015 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 15:50:26,015 INFO  Starting to parse the user solution
2019-03-13 15:50:26,015 INFO  Displaying user solution
2019-03-13 15:50:26,046 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Exer-2\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Node:\r\n    def __init__(self,data):\r\n        self.__data=data\r\n        self.__next=None\r\n    \r\n    def get_data(self):\r\n        return self.__data\r\n    \r\n    def set_data(self,data):\r\n        self.__data=data\r\n    \r\n    def get_next(self):\r\n        return self.__next\r\n    \r\n    def set_next(self,next_node):\r\n        self.__next=next_node\r\n    \r\nclass LinkedList:\r\n    def __init__(self):\r\n        self.__head=None\r\n        self.__tail=None\r\n    \r\n    def get_head(self):\r\n        return self.__head\r\n    \r\n    def get_tail(self):\r\n        return self.__tail\r\n    \r\n    def add(self,data):\r\n        new_node=Node(data)\r\n        if(self.__head is None):\r\n            self.__head=self.__tail=new_node\r\n        else:\r\n            self.__tail.set_next(new_node)\r\n            self.__tail=new_node\r\n    \r\n    def display(self):\r\n        temp=self.__head\r\n        while(temp is not None):\r\n            print(temp.get_data())\r\n            temp=temp.get_next()\r\n                                              \r\n   \r\n    def __str__(self):\r\n        temp=self.__head\r\n        msg=[]\r\n        while(temp is not None):\r\n            msg.append(str(temp.get_data()))\r\n            temp=temp.get_next()\r\n        msg=\" \".join(msg)\r\n        msg=\"Linkedlist data(Head to Tail): \"+ msg\r\n        return msg\r\n\r\ndef count_nodes(biscuit_list):\r\n    count=0\r\n    temp = biscuit_list.get_head()\r\n    while( temp is not None):\r\n        count+=1 \r\n        temp = temp.get_next()\r\n    \r\n    return count\r\nbiscuit_list=LinkedList()\r\nbiscuit_list.add(\"Goodday\")\r\nbiscuit_list.add(\"Bourbon\")\r\nbiscuit_list.add(\"Hide&Seek\")\r\nbiscuit_list.add(\"Nutrichoice\")\r\n\r\nprint(count_nodes(biscuit_list))\r\n","asgnmtId":"2","SolutionFileName":"excer2.py","AsgnmtTyp":"E","TestcaseFileName":""}
2019-03-13 15:50:26,046 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 15:50:26,046 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 15:50:26,046 INFO  Invoking the service to verify the user solution
2019-03-13 15:50:26,046 INFO  Time before invoking service:Wed Mar 13 15:50:26 IST 2019
2019-03-13 15:50:26,046 INFO  Initialising service address for VerifySolution
2019-03-13 15:50:26,046 INFO  Time before invoking service In SUPER:Wed Mar 13 15:50:26 IST 2019
2019-03-13 15:50:27,002 INFO  Time after invoking service In SUPER:Wed Mar 13 15:50:27 IST 2019
2019-03-13 15:50:27,002 INFO  Service responded successfully with required details
2019-03-13 15:50:27,002 INFO  Time after invoking service:Wed Mar 13 15:50:27 IST 2019
2019-03-13 15:50:27,002 INFO  User solution successfully verified
2019-03-13 15:50:27,002 INFO  Processing the response from verify service
2019-03-13 15:50:27,002 INFO  Starting to parse JSON response
2019-03-13 15:50:27,002 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 15:50:27,002 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 15:50:27,002 INFO  Successfully parsed JSON response
2019-03-13 15:50:27,002 INFO  In the process of generating verify response in HTML
2019-03-13 15:50:27,080 INFO  Successfully generated verify response in HTML
2019-03-13 15:50:27,080 INFO  Successfully processed the response from service
2019-03-13 15:50:37,655 INFO  Initiating to process and prepare Input for the submit service
2019-03-13 15:50:37,671 INFO  Displaying user solution
2019-03-13 15:50:37,671 INFO  Successfully processed and prepared the input for the submit service
2019-03-13 15:50:37,671 INFO  Invoking the service to submit the user solution
2019-03-13 15:50:37,671 INFO  Initialising service address for Submit
2019-03-13 15:50:37,686 INFO  Time before invoking service In SUPER:Wed Mar 13 15:50:37 IST 2019
2019-03-13 15:50:37,875 INFO  Time after invoking service In SUPER:Wed Mar 13 15:50:37 IST 2019
2019-03-13 15:50:37,875 INFO  Service responded successfully with required details
2019-03-13 15:50:37,875 INFO  User solution successfully submitted
2019-03-13 15:50:37,875 INFO  Displaying submission status
2019-03-13 15:50:37,875 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-13 16:18:39,957 INFO  Setting request parameters for VerifySolution
2019-03-13 16:18:39,957 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 16:18:39,957 INFO  Starting to parse the user solution
2019-03-13 16:18:39,957 INFO  Displaying user solution
2019-03-13 16:18:40,036 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-1\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\ndef merge_list(list1, list2):\r\n    merged_data=\"\"\r\n    #write your logic here\r\n    list2.reverse()\r\n    for i in range(0,len(list2)):\r\n        if(list2[i] is not None):\r\n            if(i==0):\r\n                merged_data = merged_data+list1[i]+list2[i]\r\n            else:\r\n                merged_data = merged_data+\" \"+list1[i]+list2[i]\r\n        else:\r\n            merged_data = merged_data+\" \"+list1[i]\r\n        \r\n            \r\n    return merged_data\r\n\r\n#Provide different values for the variables and test your program\r\nlist1=['A', 'app','a', 'd', 'ke', 'th', 'doc', 'awa']\r\nlist2=['y','tor','e','eps','ay',None,'le','n']\r\nmerged_data=merge_list(list1,list2)\r\nprint(merged_data)\r\n","asgnmtId":"1","SolutionFileName":"Assign1.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 16:18:40,036 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 16:18:40,036 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 16:18:40,036 INFO  Invoking the service to verify the user solution
2019-03-13 16:18:40,036 INFO  Time before invoking service:Wed Mar 13 16:18:40 IST 2019
2019-03-13 16:18:40,036 INFO  Initialising service address for VerifySolution
2019-03-13 16:18:40,036 INFO  Time before invoking service In SUPER:Wed Mar 13 16:18:40 IST 2019
2019-03-13 16:18:40,992 INFO  Time after invoking service In SUPER:Wed Mar 13 16:18:40 IST 2019
2019-03-13 16:18:40,992 INFO  Service responded successfully with required details
2019-03-13 16:18:40,992 INFO  Time after invoking service:Wed Mar 13 16:18:40 IST 2019
2019-03-13 16:18:40,992 INFO  User solution successfully verified
2019-03-13 16:18:40,992 INFO  Processing the response from verify service
2019-03-13 16:18:40,992 INFO  Starting to parse JSON response
2019-03-13 16:18:40,992 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 16:18:40,992 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 16:18:40,992 INFO  Successfully parsed JSON response
2019-03-13 16:18:40,992 INFO  In the process of generating verify response in HTML
2019-03-13 16:18:41,101 INFO  Successfully generated verify response in HTML
2019-03-13 16:18:41,101 INFO  Successfully processed the response from service
2019-03-13 16:18:49,944 INFO  Setting request parameters for VerifySolution
2019-03-13 16:18:49,944 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 16:18:49,944 INFO  Starting to parse the user solution
2019-03-13 16:18:49,944 INFO  Displaying user solution
2019-03-13 16:18:50,006 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-1\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\ndef merge_list(list1, list2):\r\n    merged_data=\"\"\r\n    #write your logic here\r\n    list2.reverse()\r\n    for i in range(0,len(list2)):\r\n        if(list2[i] is not None):\r\n            if(i==0):\r\n                merged_data = merged_data+list1[i]+list2[i]\r\n            else:\r\n                merged_data = merged_data+\" \"+list1[i]+list2[i]\r\n        else:\r\n            merged_data = merged_data+\" \"+list1[i]\r\n        \r\n            \r\n    return merged_data\r\n\r\n#Provide different values for the variables and test your program\r\nlist1=['A', 'app','a', 'd', 'ke', 'th', 'doc', 'awa']\r\nlist2=['y','tor','e','eps','ay',None,'le','n']\r\nmerged_data=merge_list(list1,list2)\r\nprint(merged_data)\r\n","asgnmtId":"1","SolutionFileName":"Assign1.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 16:18:50,006 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 16:18:50,006 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 16:18:50,006 INFO  Invoking the service to verify the user solution
2019-03-13 16:18:50,006 INFO  Time before invoking service:Wed Mar 13 16:18:50 IST 2019
2019-03-13 16:18:50,006 INFO  Initialising service address for VerifySolution
2019-03-13 16:18:50,006 INFO  Time before invoking service In SUPER:Wed Mar 13 16:18:50 IST 2019
2019-03-13 16:18:51,036 INFO  Time after invoking service In SUPER:Wed Mar 13 16:18:51 IST 2019
2019-03-13 16:18:51,036 INFO  Service responded successfully with required details
2019-03-13 16:18:51,036 INFO  Time after invoking service:Wed Mar 13 16:18:51 IST 2019
2019-03-13 16:18:51,036 INFO  User solution successfully verified
2019-03-13 16:18:51,036 INFO  Processing the response from verify service
2019-03-13 16:18:51,036 INFO  Starting to parse JSON response
2019-03-13 16:18:51,036 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 16:18:51,036 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 16:18:51,036 INFO  Successfully parsed JSON response
2019-03-13 16:18:51,036 INFO  In the process of generating verify response in HTML
2019-03-13 16:18:51,114 INFO  Successfully generated verify response in HTML
2019-03-13 16:18:51,114 INFO  Successfully processed the response from service
2019-03-13 16:20:16,439 INFO  Setting request parameters for VerifySolution
2019-03-13 16:20:16,439 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 16:20:16,439 INFO  Starting to parse the user solution
2019-03-13 16:20:16,439 INFO  Displaying user solution
2019-03-13 16:20:16,486 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-1\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\ndef merge_list(list1, list2):\r\n    merged_data=\"\"\r\n    #write your logic here\r\n    list2.reverse()\r\n    for i in range(0,len(list2)):\r\n        if(list2[i] is not None):\r\n            if(i==0):\r\n                merged_data = merged_data+list1[i]+list2[i]\r\n            else:\r\n                merged_data = merged_data+\" \"+list1[i]+list2[i]\r\n        else:\r\n            merged_data = merged_data+\" \"+list1[i]\r\n        \r\n        resultant_data= merged_data   \r\n    return resultant_data \r\n\r\n#Provide different values for the variables and test your program\r\nlist1=['A', 'app','a', 'd', 'ke', 'th', 'doc', 'awa']\r\nlist2=['y','tor','e','eps','ay',None,'le','n']\r\nmerged_data=merge_list(list1,list2)\r\nprint(merged_data)\r\n","asgnmtId":"1","SolutionFileName":"Assign1.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 16:20:16,486 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 16:20:16,486 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 16:20:16,486 INFO  Invoking the service to verify the user solution
2019-03-13 16:20:16,486 INFO  Time before invoking service:Wed Mar 13 16:20:16 IST 2019
2019-03-13 16:20:16,486 INFO  Initialising service address for VerifySolution
2019-03-13 16:20:16,486 INFO  Time before invoking service In SUPER:Wed Mar 13 16:20:16 IST 2019
2019-03-13 16:20:17,441 INFO  Time after invoking service In SUPER:Wed Mar 13 16:20:17 IST 2019
2019-03-13 16:20:17,441 INFO  Service responded successfully with required details
2019-03-13 16:20:17,441 INFO  Time after invoking service:Wed Mar 13 16:20:17 IST 2019
2019-03-13 16:20:17,441 INFO  User solution successfully verified
2019-03-13 16:20:17,441 INFO  Processing the response from verify service
2019-03-13 16:20:17,441 INFO  Starting to parse JSON response
2019-03-13 16:20:17,457 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 16:20:17,457 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 16:20:17,457 INFO  Successfully parsed JSON response
2019-03-13 16:20:17,457 INFO  In the process of generating verify response in HTML
2019-03-13 16:20:17,551 INFO  Successfully generated verify response in HTML
2019-03-13 16:20:17,551 INFO  Successfully processed the response from service
2019-03-13 16:25:08,525 INFO  Setting request parameters for VerifySolution
2019-03-13 16:25:08,525 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 16:25:08,525 INFO  Starting to parse the user solution
2019-03-13 16:25:08,525 INFO  Displaying user solution
2019-03-13 16:25:08,604 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-1\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\ndef merge_list(list1, list2):\r\n    merged_data=\"\"\r\n    #write your logic here\r\n    list2.reverse()\r\n    for i in range(0,len(list2)):\r\n        if(list2[i] is not None):\r\n            if(i==0):\r\n                merged_data = merged_data+list1[i]+list2[i]\r\n            else:\r\n                merged_data = merged_data+\" \"+list1[i]+list2[i]\r\n        else:\r\n            merged_data = merged_data+\" \"+list1[i]\r\n        \r\n        resultant_data= merged_data   \r\n    return resultant_data \r\n\r\n#Provide different values for the variables and test your program\r\nlist1=['A', 'app','a', 'd', 'ke', 'th', 'doc', 'awa']\r\nlist2=['y','tor','e','eps','ay',None,'le','n']\r\nmerged_data=merge_list(list1,list2)\r\nprint(merged_data)\r\n","asgnmtId":"1","SolutionFileName":"Assign1.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 16:25:08,635 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 16:25:08,635 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 16:25:08,635 INFO  Invoking the service to verify the user solution
2019-03-13 16:25:08,635 INFO  Time before invoking service:Wed Mar 13 16:25:08 IST 2019
2019-03-13 16:25:08,635 INFO  Initialising service address for VerifySolution
2019-03-13 16:25:08,635 INFO  Time before invoking service In SUPER:Wed Mar 13 16:25:08 IST 2019
2019-03-13 16:25:09,569 INFO  Time after invoking service In SUPER:Wed Mar 13 16:25:09 IST 2019
2019-03-13 16:25:09,569 INFO  Service responded successfully with required details
2019-03-13 16:25:09,569 INFO  Time after invoking service:Wed Mar 13 16:25:09 IST 2019
2019-03-13 16:25:09,569 INFO  User solution successfully verified
2019-03-13 16:25:09,569 INFO  Processing the response from verify service
2019-03-13 16:25:09,585 INFO  Starting to parse JSON response
2019-03-13 16:25:09,585 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 16:25:09,585 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 16:25:09,585 INFO  Successfully parsed JSON response
2019-03-13 16:25:09,585 INFO  In the process of generating verify response in HTML
2019-03-13 16:25:09,694 INFO  Successfully generated verify response in HTML
2019-03-13 16:25:09,694 INFO  Successfully processed the response from service
2019-03-13 16:29:29,263 INFO  Setting request parameters for VerifySolution
2019-03-13 16:29:29,263 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 16:29:29,263 INFO  Starting to parse the user solution
2019-03-13 16:29:29,263 INFO  Displaying user solution
2019-03-13 16:29:29,317 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-1\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\ndef merge_list(list1, list2):\r\n    merged_data=\"\"\r\n    #write your logic here\r\n    list2.reverse()\r\n    for i in range(0,len(list2)):\r\n        if((list1[i] and list2[i]) is not None):\r\n            if(i==0):\r\n                merged_data = merged_data+list1[i]+list2[i]\r\n            else:\r\n                merged_data = merged_data+\" \"+list1[i]+list2[i]\r\n        else:\r\n            if(list2[i] is None):\r\n                merged_data = merged_data+\" \"+list1[i]\r\n            else:\r\n                merged_data = merged_data+\" \"+list2[i]\r\n        \r\n        resultant_data= merged_data   \r\n    return resultant_data \r\n\r\n#Provide different values for the variables and test your program\r\nlist1=['A', 'app','a', 'd', 'ke', 'th', 'doc', 'awa']\r\nlist2=['y','tor','e','eps','ay',None,'le','n']\r\nmerged_data=merge_list(list1,list2)\r\nprint(merged_data)\r\n","asgnmtId":"1","SolutionFileName":"Assign1.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 16:29:29,317 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 16:29:29,317 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 16:29:29,317 INFO  Invoking the service to verify the user solution
2019-03-13 16:29:29,317 INFO  Time before invoking service:Wed Mar 13 16:29:29 IST 2019
2019-03-13 16:29:29,317 INFO  Initialising service address for VerifySolution
2019-03-13 16:29:29,317 INFO  Time before invoking service In SUPER:Wed Mar 13 16:29:29 IST 2019
2019-03-13 16:29:30,791 INFO  Time after invoking service In SUPER:Wed Mar 13 16:29:30 IST 2019
2019-03-13 16:29:30,791 INFO  Service responded successfully with required details
2019-03-13 16:29:30,791 INFO  Time after invoking service:Wed Mar 13 16:29:30 IST 2019
2019-03-13 16:29:30,791 INFO  User solution successfully verified
2019-03-13 16:29:30,791 INFO  Processing the response from verify service
2019-03-13 16:29:30,791 INFO  Starting to parse JSON response
2019-03-13 16:29:30,791 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 16:29:30,791 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 16:29:30,791 INFO  Successfully parsed JSON response
2019-03-13 16:29:30,791 INFO  In the process of generating verify response in HTML
2019-03-13 16:29:30,885 INFO  Successfully generated verify response in HTML
2019-03-13 16:29:30,885 INFO  Successfully processed the response from service
2019-03-13 16:35:08,310 INFO  Setting request parameters for VerifySolution
2019-03-13 16:35:08,310 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 16:35:08,310 INFO  Starting to parse the user solution
2019-03-13 16:35:08,310 INFO  Displaying user solution
2019-03-13 16:35:08,388 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-1\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\ndef merge_list(list1, list2):\r\n    merged_data=\"\"\r\n    #write your logic here\r\n    list2.reverse()\r\n    for i in range(0,len(list2)):\r\n        if((list1[i] and list2[i]) is not None):\r\n            if(i==0):\r\n                merged_data = merged_data+list1[i]+list2[i]\r\n            else:\r\n                merged_data = merged_data+\" \"+list1[i]+list2[i]\r\n        else:\r\n            if(list2[i] is None):\r\n                if(list2[0] is None):\r\n                    merged_data = merged_data+list1[i]\r\n                else:\r\n                    merged_data = merged_data+\" \"+list1[i]\r\n            else:\r\n                if(list1[0] is None):\r\n                    merged_data = merged_data+list2[i]\r\n                else:\r\n                    merged_data = merged_data+\" \"+list2[i]\r\n        \r\n        resultant_data= merged_data   \r\n    return resultant_data \r\n\r\n#Provide different values for the variables and test your program\r\nlist1=['A', 'app','a', 'd', 'ke', 'th', 'doc', 'awa']\r\nlist2=['y','tor','e','eps','ay',None,'le','n']\r\nmerged_data=merge_list(list1,list2)\r\nprint(merged_data)\r\n","asgnmtId":"1","SolutionFileName":"Assign1.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 16:35:08,388 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 16:35:08,388 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 16:35:08,388 INFO  Invoking the service to verify the user solution
2019-03-13 16:35:08,388 INFO  Time before invoking service:Wed Mar 13 16:35:08 IST 2019
2019-03-13 16:35:08,388 INFO  Initialising service address for VerifySolution
2019-03-13 16:35:08,388 INFO  Time before invoking service In SUPER:Wed Mar 13 16:35:08 IST 2019
2019-03-13 16:35:09,452 INFO  Time after invoking service In SUPER:Wed Mar 13 16:35:09 IST 2019
2019-03-13 16:35:09,452 INFO  Service responded successfully with required details
2019-03-13 16:35:09,452 INFO  Time after invoking service:Wed Mar 13 16:35:09 IST 2019
2019-03-13 16:35:09,452 INFO  User solution successfully verified
2019-03-13 16:35:09,452 INFO  Processing the response from verify service
2019-03-13 16:35:09,452 INFO  Starting to parse JSON response
2019-03-13 16:35:09,452 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 16:35:09,452 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 16:35:09,468 INFO  Successfully parsed JSON response
2019-03-13 16:35:09,468 INFO  In the process of generating verify response in HTML
2019-03-13 16:35:09,562 INFO  Successfully generated verify response in HTML
2019-03-13 16:35:09,562 INFO  Successfully processed the response from service
2019-03-13 16:37:03,095 INFO  Setting request parameters for VerifySolution
2019-03-13 16:37:03,095 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 16:37:03,095 INFO  Starting to parse the user solution
2019-03-13 16:37:03,095 INFO  Displaying user solution
2019-03-13 16:37:03,157 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-1\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\ndef merge_list(list1, list2):\r\n    merged_data=\"\"\r\n    #write your logic here\r\n    list2.reverse()\r\n    for i in range(0,len(list2)):\r\n        if((list1[i] and list2[i]) is not None):\r\n            if(i==0):\r\n                merged_data = merged_data+list1[i]+list2[i]\r\n            else:\r\n                merged_data = merged_data+\" \"+list1[i]+list2[i]\r\n        else:\r\n            if(list2[i] is None):\r\n                if(list2[0] is None):\r\n                    merged_data = merged_data+list1[i]+\" \"\r\n                else:\r\n                    merged_data = merged_data+\" \"+list1[i]\r\n            else:\r\n                if(list1[0] is None):\r\n                    merged_data = merged_data+list2[i]\r\n                else:\r\n                    merged_data = merged_data+\" \"+list2[i]\r\n        \r\n        resultant_data= merged_data   \r\n    return resultant_data \r\n\r\n#Provide different values for the variables and test your program\r\nlist1=['A', 'app','a', 'd', 'ke', 'th', 'doc', 'awa']\r\nlist2=['y','tor','e','eps','ay',None,'le','n']\r\nmerged_data=merge_list(list1,list2)\r\nprint(merged_data)\r\n","asgnmtId":"1","SolutionFileName":"Assign1.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 16:37:03,157 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 16:37:03,157 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 16:37:03,157 INFO  Invoking the service to verify the user solution
2019-03-13 16:37:03,157 INFO  Time before invoking service:Wed Mar 13 16:37:03 IST 2019
2019-03-13 16:37:03,157 INFO  Initialising service address for VerifySolution
2019-03-13 16:37:03,157 INFO  Time before invoking service In SUPER:Wed Mar 13 16:37:03 IST 2019
2019-03-13 16:37:04,128 INFO  Time after invoking service In SUPER:Wed Mar 13 16:37:04 IST 2019
2019-03-13 16:37:04,128 INFO  Service responded successfully with required details
2019-03-13 16:37:04,128 INFO  Time after invoking service:Wed Mar 13 16:37:04 IST 2019
2019-03-13 16:37:04,128 INFO  User solution successfully verified
2019-03-13 16:37:04,128 INFO  Processing the response from verify service
2019-03-13 16:37:04,128 INFO  Starting to parse JSON response
2019-03-13 16:37:04,143 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 16:37:04,143 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 16:37:04,143 INFO  Successfully parsed JSON response
2019-03-13 16:37:04,143 INFO  In the process of generating verify response in HTML
2019-03-13 16:37:04,222 INFO  Successfully generated verify response in HTML
2019-03-13 16:37:04,222 INFO  Successfully processed the response from service
2019-03-13 16:38:29,012 INFO  Setting request parameters for VerifySolution
2019-03-13 16:38:29,012 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 16:38:29,012 INFO  Starting to parse the user solution
2019-03-13 16:38:29,012 INFO  Displaying user solution
2019-03-13 16:38:29,059 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-1\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\ndef merge_list(list1, list2):\r\n    merged_data=\"\"\r\n    #write your logic here\r\n    list2.reverse()\r\n    for i in range(0,len(list2)):\r\n        if((list1[i] and list2[i]) is not None):\r\n            if(i==0):\r\n                merged_data = merged_data+list1[i]+list2[i]\r\n            else:\r\n                merged_data = merged_data+\" \"+list1[i]+list2[i]\r\n        else:\r\n            if(list2[i] is None):\r\n                if(list2[0] is None):\r\n                    merged_data = merged_data+list1[i]+\" \"\r\n                else:\r\n                    merged_data = merged_data+\" \"+list1[i]\r\n            else:\r\n                if(list1[0] is None):\r\n                    merged_data = merged_data+list2[i]\r\n                else:\r\n                    merged_data = merged_data+\" \"+list2[i]\r\n        \r\n        resultant_data= merged_data   \r\n    return resultant_data \r\n\r\n#Provide different values for the variables and test your program\r\nlist1=['A', 'app','a', 'd', 'ke', 'th', 'doc', 'awa']\r\nlist2=['y','tor','e','eps','ay',None,'le','n']\r\nmerged_data=merge_list(list1,list2)\r\nprint(merged_data)\r\n","asgnmtId":"1","SolutionFileName":"Assign1.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 16:38:29,059 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 16:38:29,059 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 16:38:29,059 INFO  Invoking the service to verify the user solution
2019-03-13 16:38:29,059 INFO  Time before invoking service:Wed Mar 13 16:38:29 IST 2019
2019-03-13 16:38:29,059 INFO  Initialising service address for VerifySolution
2019-03-13 16:38:29,059 INFO  Time before invoking service In SUPER:Wed Mar 13 16:38:29 IST 2019
2019-03-13 16:38:30,014 INFO  Time after invoking service In SUPER:Wed Mar 13 16:38:30 IST 2019
2019-03-13 16:38:30,014 INFO  Service responded successfully with required details
2019-03-13 16:38:30,014 INFO  Time after invoking service:Wed Mar 13 16:38:30 IST 2019
2019-03-13 16:38:30,014 INFO  User solution successfully verified
2019-03-13 16:38:30,014 INFO  Processing the response from verify service
2019-03-13 16:38:30,014 INFO  Starting to parse JSON response
2019-03-13 16:38:30,014 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 16:38:30,014 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 16:38:30,030 INFO  Successfully parsed JSON response
2019-03-13 16:38:30,030 INFO  In the process of generating verify response in HTML
2019-03-13 16:38:30,108 INFO  Successfully generated verify response in HTML
2019-03-13 16:38:30,108 INFO  Successfully processed the response from service
2019-03-13 16:40:06,268 INFO  Setting request parameters for VerifySolution
2019-03-13 16:40:06,268 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 16:40:06,268 INFO  Starting to parse the user solution
2019-03-13 16:40:06,268 INFO  Displaying user solution
2019-03-13 16:40:06,333 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-1\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\ndef merge_list(list1, list2):\r\n    merged_data=\"\"\r\n    #write your logic here\r\n    list2.reverse()\r\n    for i in range(0,len(list2)):\r\n        if((list1[i] and list2[i]) is not None):\r\n            if(i==0):\r\n                merged_data = merged_data+list1[i]+list2[i]\r\n            else:\r\n                merged_data = merged_data+\" \"+list1[i]+list2[i]\r\n        else:\r\n            if(list2[i] is None):\r\n                if(i==0):\r\n                    merged_data = merged_data+list1[i]\r\n                else:\r\n                    merged_data = merged_data+\" \"+list1[i]\r\n            else:\r\n                if(list1[0] is None):\r\n                    merged_data = merged_data+list2[i]\r\n                else:\r\n                    merged_data = merged_data+\" \"+list2[i]\r\n        \r\n        resultant_data= merged_data   \r\n    return resultant_data \r\n\r\n#Provide different values for the variables and test your program\r\nlist1=['A', 'app','a', 'd', 'ke', 'th', 'doc', 'awa']\r\nlist2=['y','tor','e','eps','ay',None,'le','n']\r\nmerged_data=merge_list(list1,list2)\r\nprint(merged_data)\r\n","asgnmtId":"1","SolutionFileName":"Assign1.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 16:40:06,333 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 16:40:06,333 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 16:40:06,333 INFO  Invoking the service to verify the user solution
2019-03-13 16:40:06,333 INFO  Time before invoking service:Wed Mar 13 16:40:06 IST 2019
2019-03-13 16:40:06,333 INFO  Initialising service address for VerifySolution
2019-03-13 16:40:06,333 INFO  Time before invoking service In SUPER:Wed Mar 13 16:40:06 IST 2019
2019-03-13 16:40:10,302 INFO  Time after invoking service In SUPER:Wed Mar 13 16:40:10 IST 2019
2019-03-13 16:40:10,302 INFO  Service responded successfully with required details
2019-03-13 16:40:10,302 INFO  Time after invoking service:Wed Mar 13 16:40:10 IST 2019
2019-03-13 16:40:10,302 INFO  User solution successfully verified
2019-03-13 16:40:10,302 INFO  Processing the response from verify service
2019-03-13 16:40:10,302 INFO  Starting to parse JSON response
2019-03-13 16:40:10,302 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 16:40:10,302 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 16:40:10,318 INFO  Successfully parsed JSON response
2019-03-13 16:40:10,318 INFO  In the process of generating verify response in HTML
2019-03-13 16:40:10,396 INFO  Successfully generated verify response in HTML
2019-03-13 16:40:10,396 INFO  Successfully processed the response from service
2019-03-13 16:40:37,517 INFO  Setting request parameters for VerifySolution
2019-03-13 16:40:37,517 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 16:40:37,517 INFO  Starting to parse the user solution
2019-03-13 16:40:37,517 INFO  Displaying user solution
2019-03-13 16:40:37,548 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-1\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\ndef merge_list(list1, list2):\r\n    merged_data=\"\"\r\n    #write your logic here\r\n    list2.reverse()\r\n    for i in range(0,len(list2)):\r\n        if((list1[i] and list2[i]) is not None):\r\n            if(i==0):\r\n                merged_data = merged_data+list1[i]+list2[i]\r\n            else:\r\n                merged_data = merged_data+\" \"+list1[i]+list2[i]\r\n        else:\r\n            if(list2[i] is None):\r\n                if(i==0):\r\n                    merged_data = merged_data+list1[i]\r\n                else:\r\n                    merged_data = merged_data+\" \"+list1[i]\r\n            else:\r\n                if(list1[0] is None):\r\n                    merged_data = merged_data+list2[i]\r\n                else:\r\n                    merged_data = merged_data+\" \"+list2[i]\r\n        \r\n        resultant_data= merged_data   \r\n    return resultant_data \r\n\r\n#Provide different values for the variables and test your program\r\nlist1=['A', 'app','a', 'd', 'ke', 'th', 'doc', 'awa']\r\nlist2=['y','tor','e','eps','ay',None,'le','n']\r\nmerged_data=merge_list(list1,list2)\r\nprint(merged_data)\r\n","asgnmtId":"1","SolutionFileName":"Assign1.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 16:40:37,548 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 16:40:37,548 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 16:40:37,548 INFO  Invoking the service to verify the user solution
2019-03-13 16:40:37,548 INFO  Time before invoking service:Wed Mar 13 16:40:37 IST 2019
2019-03-13 16:40:37,548 INFO  Initialising service address for VerifySolution
2019-03-13 16:40:37,548 INFO  Time before invoking service In SUPER:Wed Mar 13 16:40:37 IST 2019
2019-03-13 16:40:38,488 INFO  Time after invoking service In SUPER:Wed Mar 13 16:40:38 IST 2019
2019-03-13 16:40:38,488 INFO  Service responded successfully with required details
2019-03-13 16:40:38,488 INFO  Time after invoking service:Wed Mar 13 16:40:38 IST 2019
2019-03-13 16:40:38,488 INFO  User solution successfully verified
2019-03-13 16:40:38,488 INFO  Processing the response from verify service
2019-03-13 16:40:38,488 INFO  Starting to parse JSON response
2019-03-13 16:40:38,488 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 16:40:38,488 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 16:40:38,488 INFO  Successfully parsed JSON response
2019-03-13 16:40:38,488 INFO  In the process of generating verify response in HTML
2019-03-13 16:40:38,581 INFO  Successfully generated verify response in HTML
2019-03-13 16:40:38,581 INFO  Successfully processed the response from service
2019-03-13 16:40:43,129 INFO  Initiating to process and prepare Input for the submit service
2019-03-13 16:40:43,129 INFO  Displaying user solution
2019-03-13 16:40:43,129 INFO  Successfully processed and prepared the input for the submit service
2019-03-13 16:40:43,129 INFO  Invoking the service to submit the user solution
2019-03-13 16:40:43,129 INFO  Initialising service address for Submit
2019-03-13 16:40:43,129 INFO  Time before invoking service In SUPER:Wed Mar 13 16:40:43 IST 2019
2019-03-13 16:40:43,302 INFO  Time after invoking service In SUPER:Wed Mar 13 16:40:43 IST 2019
2019-03-13 16:40:43,302 INFO  Service responded successfully with required details
2019-03-13 16:40:43,302 INFO  User solution successfully submitted
2019-03-13 16:40:43,302 INFO  Displaying submission status
2019-03-13 16:40:43,302 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-13 16:40:45,924 INFO  Initiating to process and prepare Input for the submit service
2019-03-13 16:40:45,924 INFO  Displaying user solution
2019-03-13 16:40:45,940 INFO  Successfully processed and prepared the input for the submit service
2019-03-13 16:40:45,940 INFO  Invoking the service to submit the user solution
2019-03-13 16:40:45,940 INFO  Initialising service address for Submit
2019-03-13 16:40:45,940 INFO  Time before invoking service In SUPER:Wed Mar 13 16:40:45 IST 2019
2019-03-13 16:40:46,034 INFO  Time after invoking service In SUPER:Wed Mar 13 16:40:46 IST 2019
2019-03-13 16:40:46,034 INFO  Service responded successfully with required details
2019-03-13 16:40:46,034 INFO  User solution successfully submitted
2019-03-13 16:40:46,034 INFO  Displaying submission status
2019-03-13 16:40:46,034 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-13 16:42:18,189 INFO  Setting request parameters for VerifySolution
2019-03-13 16:42:18,189 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 16:42:18,189 INFO  Starting to parse the user solution
2019-03-13 16:42:18,189 INFO  Displaying user solution
2019-03-13 16:42:18,235 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-1\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\ndef merge_list(list1, list2):\r\n    merged_data=\"\"\r\n    #write your logic here\r\n    list2.reverse()\r\n    for i in range(0,len(list2)):\r\n        if((list1[i] and list2[i]) is not None):\r\n            if(i==0):\r\n                merged_data = merged_data+list1[i]+list2[i]\r\n            else:\r\n                merged_data = merged_data+\" \"+list1[i]+list2[i]\r\n        else:\r\n            if(list2[i] is None):\r\n                if(i==0):\r\n                    merged_data = merged_data+list1[i]\r\n                else:\r\n                    merged_data = merged_data+\" \"+list1[i]\r\n            else:\r\n                if(i==0):\r\n                    merged_data = merged_data+list2[i]\r\n                else:\r\n                    merged_data = merged_data+\" \"+list2[i]\r\n        \r\n        resultant_data= merged_data   \r\n    return resultant_data \r\n\r\n#Provide different values for the variables and test your program\r\nlist1=['A', 'app','a', 'd', 'ke', 'th', 'doc', 'awa']\r\nlist2=['y','tor','e','eps','ay',None,'le','n']\r\nmerged_data=merge_list(list1,list2)\r\nprint(merged_data)\r\n","asgnmtId":"1","SolutionFileName":"Assign1.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 16:42:18,235 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 16:42:18,235 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 16:42:18,235 INFO  Invoking the service to verify the user solution
2019-03-13 16:42:18,235 INFO  Time before invoking service:Wed Mar 13 16:42:18 IST 2019
2019-03-13 16:42:18,235 INFO  Initialising service address for VerifySolution
2019-03-13 16:42:18,235 INFO  Time before invoking service In SUPER:Wed Mar 13 16:42:18 IST 2019
2019-03-13 16:42:19,253 INFO  Time after invoking service In SUPER:Wed Mar 13 16:42:19 IST 2019
2019-03-13 16:42:19,253 INFO  Service responded successfully with required details
2019-03-13 16:42:19,253 INFO  Time after invoking service:Wed Mar 13 16:42:19 IST 2019
2019-03-13 16:42:19,253 INFO  User solution successfully verified
2019-03-13 16:42:19,253 INFO  Processing the response from verify service
2019-03-13 16:42:19,253 INFO  Starting to parse JSON response
2019-03-13 16:42:19,253 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 16:42:19,253 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 16:42:19,253 INFO  Successfully parsed JSON response
2019-03-13 16:42:19,253 INFO  In the process of generating verify response in HTML
2019-03-13 16:42:19,348 INFO  Successfully generated verify response in HTML
2019-03-13 16:42:19,348 INFO  Successfully processed the response from service
2019-03-13 16:42:23,126 INFO  Setting request parameters for VerifySolution
2019-03-13 16:42:23,126 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 16:42:23,126 INFO  Starting to parse the user solution
2019-03-13 16:42:23,126 INFO  Displaying user solution
2019-03-13 16:42:23,173 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-1\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\ndef merge_list(list1, list2):\r\n    merged_data=\"\"\r\n    #write your logic here\r\n    list2.reverse()\r\n    for i in range(0,len(list2)):\r\n        if((list1[i] and list2[i]) is not None):\r\n            if(i==0):\r\n                merged_data = merged_data+list1[i]+list2[i]\r\n            else:\r\n                merged_data = merged_data+\" \"+list1[i]+list2[i]\r\n        else:\r\n            if(list2[i] is None):\r\n                if(i==0):\r\n                    merged_data = merged_data+list1[i]\r\n                else:\r\n                    merged_data = merged_data+\" \"+list1[i]\r\n            else:\r\n                if(i==0):\r\n                    merged_data = merged_data+list2[i]\r\n                else:\r\n                    merged_data = merged_data+\" \"+list2[i]\r\n        \r\n        resultant_data= merged_data   \r\n    return resultant_data \r\n\r\n#Provide different values for the variables and test your program\r\nlist1=['A', 'app','a', 'd', 'ke', 'th', 'doc', 'awa']\r\nlist2=['y','tor','e','eps','ay',None,'le','n']\r\nmerged_data=merge_list(list1,list2)\r\nprint(merged_data)\r\n","asgnmtId":"1","SolutionFileName":"Assign1.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 16:42:23,173 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 16:42:23,173 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 16:42:23,173 INFO  Invoking the service to verify the user solution
2019-03-13 16:42:23,173 INFO  Time before invoking service:Wed Mar 13 16:42:23 IST 2019
2019-03-13 16:42:23,173 INFO  Initialising service address for VerifySolution
2019-03-13 16:42:23,173 INFO  Time before invoking service In SUPER:Wed Mar 13 16:42:23 IST 2019
2019-03-13 16:42:23,925 INFO  Time after invoking service In SUPER:Wed Mar 13 16:42:23 IST 2019
2019-03-13 16:42:23,925 INFO  Service responded successfully with required details
2019-03-13 16:42:23,925 INFO  Time after invoking service:Wed Mar 13 16:42:23 IST 2019
2019-03-13 16:42:23,925 INFO  User solution successfully verified
2019-03-13 16:42:23,925 INFO  Processing the response from verify service
2019-03-13 16:42:23,941 INFO  Starting to parse JSON response
2019-03-13 16:42:23,941 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 16:42:23,941 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 16:42:23,941 INFO  Successfully parsed JSON response
2019-03-13 16:42:23,941 INFO  In the process of generating verify response in HTML
2019-03-13 16:42:24,019 INFO  Successfully generated verify response in HTML
2019-03-13 16:42:24,019 INFO  Successfully processed the response from service
2019-03-13 16:42:39,882 INFO  Initiating to process and prepare Input for the submit service
2019-03-13 16:42:39,882 INFO  Displaying user solution
2019-03-13 16:42:39,882 INFO  Successfully processed and prepared the input for the submit service
2019-03-13 16:42:39,898 INFO  Invoking the service to submit the user solution
2019-03-13 16:42:39,898 INFO  Initialising service address for Submit
2019-03-13 16:42:39,898 INFO  Time before invoking service In SUPER:Wed Mar 13 16:42:39 IST 2019
2019-03-13 16:42:40,273 INFO  Time after invoking service In SUPER:Wed Mar 13 16:42:40 IST 2019
2019-03-13 16:42:40,273 INFO  Service responded successfully with required details
2019-03-13 16:42:40,273 INFO  User solution successfully submitted
2019-03-13 16:42:40,273 INFO  Displaying submission status
2019-03-13 16:42:40,273 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-13 16:42:43,050 INFO  Initiating to process and prepare Input for the submit service
2019-03-13 16:42:43,066 INFO  Displaying user solution
2019-03-13 16:42:43,066 INFO  Successfully processed and prepared the input for the submit service
2019-03-13 16:42:43,066 INFO  Invoking the service to submit the user solution
2019-03-13 16:42:43,066 INFO  Initialising service address for Submit
2019-03-13 16:42:43,066 INFO  Time before invoking service In SUPER:Wed Mar 13 16:42:43 IST 2019
2019-03-13 16:42:43,144 INFO  Time after invoking service In SUPER:Wed Mar 13 16:42:43 IST 2019
2019-03-13 16:42:43,144 INFO  Service responded successfully with required details
2019-03-13 16:42:43,144 INFO  User solution successfully submitted
2019-03-13 16:42:43,144 INFO  Displaying submission status
2019-03-13 16:42:43,144 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-13 16:43:59,850 INFO  Initiating to process and prepare Input for the submit service
2019-03-13 16:43:59,865 INFO  Displaying user solution
2019-03-13 16:43:59,865 INFO  Successfully processed and prepared the input for the submit service
2019-03-13 16:43:59,865 INFO  Invoking the service to submit the user solution
2019-03-13 16:43:59,865 INFO  Initialising service address for Submit
2019-03-13 16:43:59,865 INFO  Time before invoking service In SUPER:Wed Mar 13 16:43:59 IST 2019
2019-03-13 16:44:00,037 INFO  Time after invoking service In SUPER:Wed Mar 13 16:44:00 IST 2019
2019-03-13 16:44:00,037 INFO  Service responded successfully with required details
2019-03-13 16:44:00,037 INFO  User solution successfully submitted
2019-03-13 16:44:00,037 INFO  Displaying submission status
2019-03-13 16:44:00,037 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-13 16:44:02,678 INFO  Initiating to process and prepare Input for the submit service
2019-03-13 16:44:02,678 INFO  Displaying user solution
2019-03-13 16:44:02,693 INFO  Successfully processed and prepared the input for the submit service
2019-03-13 16:44:02,693 INFO  Invoking the service to submit the user solution
2019-03-13 16:44:02,693 INFO  Initialising service address for Submit
2019-03-13 16:44:02,693 INFO  Time before invoking service In SUPER:Wed Mar 13 16:44:02 IST 2019
2019-03-13 16:44:02,787 INFO  Time after invoking service In SUPER:Wed Mar 13 16:44:02 IST 2019
2019-03-13 16:44:02,787 INFO  Service responded successfully with required details
2019-03-13 16:44:02,787 INFO  User solution successfully submitted
2019-03-13 16:44:02,803 INFO  Displaying submission status
2019-03-13 16:44:02,803 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-13 17:51:04,993 INFO  Setting request parameters for VerifySolution
2019-03-13 17:51:04,993 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 17:51:04,993 INFO  Starting to parse the user solution
2019-03-13 17:51:04,993 INFO  Displaying user solution
2019-03-13 17:51:05,150 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-3\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\ndef check_double(list1,list2):\r\n    new_list=[]\r\n    #write your logic here\r\n    for i in list1:\r\n        for j in list2:\r\n            if(2*i==j):\r\n                new_list.append(j)\r\n    return new_list\r\n\r\n#Provide different values for the variables and test your program\r\nlist1=[11,8,23,7,25,15]\r\nlist2=[6,33,50,31,46,78,16,34]\r\nprint(check_double(list1, list2))\r\n","asgnmtId":"3","SolutionFileName":"Assign3.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 17:51:05,150 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 17:51:05,150 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 17:51:05,150 INFO  Invoking the service to verify the user solution
2019-03-13 17:51:05,150 INFO  Time before invoking service:Wed Mar 13 17:51:05 IST 2019
2019-03-13 17:51:05,150 INFO  Initialising service address for VerifySolution
2019-03-13 17:51:05,150 INFO  Time before invoking service In SUPER:Wed Mar 13 17:51:05 IST 2019
2019-03-13 17:51:06,181 INFO  Time after invoking service In SUPER:Wed Mar 13 17:51:06 IST 2019
2019-03-13 17:51:06,181 INFO  Service responded successfully with required details
2019-03-13 17:51:06,181 INFO  Time after invoking service:Wed Mar 13 17:51:06 IST 2019
2019-03-13 17:51:06,181 INFO  User solution successfully verified
2019-03-13 17:51:06,181 INFO  Processing the response from verify service
2019-03-13 17:51:06,196 INFO  Starting to parse JSON response
2019-03-13 17:51:06,196 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 17:51:06,196 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 17:51:06,196 INFO  Successfully parsed JSON response
2019-03-13 17:51:06,196 INFO  In the process of generating verify response in HTML
2019-03-13 17:51:06,306 INFO  Successfully generated verify response in HTML
2019-03-13 17:51:06,306 INFO  Successfully processed the response from service
2019-03-13 17:52:50,137 INFO  Setting request parameters for VerifySolution
2019-03-13 17:52:50,137 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 17:52:50,137 INFO  Starting to parse the user solution
2019-03-13 17:52:50,137 INFO  Displaying user solution
2019-03-13 17:52:50,199 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-3\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\ndef check_double(list1,list2):\r\n    new_list=[]\r\n    #write your logic here\r\n    for i in list2:\r\n        for j in list1:\r\n            if(2*i==j):\r\n                new_list.append(j)\r\n    return new_list\r\n\r\n#Provide different values for the variables and test your program\r\nlist1=[11,8,23,7,25,15]\r\nlist2=[6,33,50,31,46,78,16,34]\r\nprint(check_double(list1, list2))\r\n","asgnmtId":"3","SolutionFileName":"Assign3.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 17:52:50,199 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 17:52:50,199 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 17:52:50,199 INFO  Invoking the service to verify the user solution
2019-03-13 17:52:50,199 INFO  Time before invoking service:Wed Mar 13 17:52:50 IST 2019
2019-03-13 17:52:50,199 INFO  Initialising service address for VerifySolution
2019-03-13 17:52:50,199 INFO  Time before invoking service In SUPER:Wed Mar 13 17:52:50 IST 2019
2019-03-13 17:52:51,246 INFO  Time after invoking service In SUPER:Wed Mar 13 17:52:51 IST 2019
2019-03-13 17:52:51,246 INFO  Service responded successfully with required details
2019-03-13 17:52:51,246 INFO  Time after invoking service:Wed Mar 13 17:52:51 IST 2019
2019-03-13 17:52:51,246 INFO  User solution successfully verified
2019-03-13 17:52:51,262 INFO  Processing the response from verify service
2019-03-13 17:52:51,262 INFO  Starting to parse JSON response
2019-03-13 17:52:51,262 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 17:52:51,262 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 17:52:51,262 INFO  Successfully parsed JSON response
2019-03-13 17:52:51,262 INFO  In the process of generating verify response in HTML
2019-03-13 17:52:51,340 INFO  Successfully generated verify response in HTML
2019-03-13 17:52:51,340 INFO  Successfully processed the response from service
2019-03-13 17:53:11,657 INFO  Setting request parameters for VerifySolution
2019-03-13 17:53:11,657 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 17:53:11,657 INFO  Starting to parse the user solution
2019-03-13 17:53:11,673 INFO  Displaying user solution
2019-03-13 17:53:11,720 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-3\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\ndef check_double(list1,list2):\r\n    new_list=[]\r\n    #write your logic here\r\n    for i in list2:\r\n        for j in list1:\r\n            if(2*i==j):\r\n                new_list.append(j)\r\n    return new_list\r\n\r\n#Provide different values for the variables and test your program\r\nlist1=[11,8,23,7,25,15]\r\nlist2=[6,33,50,31,46,78,16,34]\r\nprint(check_double(list1, list2))\r\n","asgnmtId":"3","SolutionFileName":"Assign3.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 17:53:11,720 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 17:53:11,720 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 17:53:11,720 INFO  Invoking the service to verify the user solution
2019-03-13 17:53:11,735 INFO  Time before invoking service:Wed Mar 13 17:53:11 IST 2019
2019-03-13 17:53:11,735 INFO  Initialising service address for VerifySolution
2019-03-13 17:53:11,735 INFO  Time before invoking service In SUPER:Wed Mar 13 17:53:11 IST 2019
2019-03-13 17:53:12,610 INFO  Time after invoking service In SUPER:Wed Mar 13 17:53:12 IST 2019
2019-03-13 17:53:12,610 INFO  Service responded successfully with required details
2019-03-13 17:53:12,610 INFO  Time after invoking service:Wed Mar 13 17:53:12 IST 2019
2019-03-13 17:53:12,610 INFO  User solution successfully verified
2019-03-13 17:53:12,610 INFO  Processing the response from verify service
2019-03-13 17:53:12,610 INFO  Starting to parse JSON response
2019-03-13 17:53:12,610 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 17:53:12,610 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 17:53:12,610 INFO  Successfully parsed JSON response
2019-03-13 17:53:12,610 INFO  In the process of generating verify response in HTML
2019-03-13 17:53:12,704 INFO  Successfully generated verify response in HTML
2019-03-13 17:53:12,704 INFO  Successfully processed the response from service
2019-03-13 17:53:22,495 INFO  Setting request parameters for VerifySolution
2019-03-13 17:53:22,495 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 17:53:22,495 INFO  Starting to parse the user solution
2019-03-13 17:53:22,495 INFO  Displaying user solution
2019-03-13 17:53:22,542 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-3\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\ndef check_double(list1,list2):\r\n    new_list=[]\r\n    #write your logic here\r\n    for i in list1:\r\n        for j in list2:\r\n            if(2*i==j):\r\n                new_list.append(j)\r\n    return new_list\r\n\r\n#Provide different values for the variables and test your program\r\nlist1=[11,8,23,7,25,15]\r\nlist2=[6,33,50,31,46,78,16,34]\r\nprint(check_double(list1, list2))\r\n","asgnmtId":"3","SolutionFileName":"Assign3.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 17:53:22,542 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 17:53:22,542 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 17:53:22,542 INFO  Invoking the service to verify the user solution
2019-03-13 17:53:22,542 INFO  Time before invoking service:Wed Mar 13 17:53:22 IST 2019
2019-03-13 17:53:22,542 INFO  Initialising service address for VerifySolution
2019-03-13 17:53:22,558 INFO  Time before invoking service In SUPER:Wed Mar 13 17:53:22 IST 2019
2019-03-13 17:53:23,541 INFO  Time after invoking service In SUPER:Wed Mar 13 17:53:23 IST 2019
2019-03-13 17:53:23,541 INFO  Service responded successfully with required details
2019-03-13 17:53:23,541 INFO  Time after invoking service:Wed Mar 13 17:53:23 IST 2019
2019-03-13 17:53:23,541 INFO  User solution successfully verified
2019-03-13 17:53:23,541 INFO  Processing the response from verify service
2019-03-13 17:53:23,541 INFO  Starting to parse JSON response
2019-03-13 17:53:23,541 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 17:53:23,541 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 17:53:23,541 INFO  Successfully parsed JSON response
2019-03-13 17:53:23,541 INFO  In the process of generating verify response in HTML
2019-03-13 17:53:23,619 INFO  Successfully generated verify response in HTML
2019-03-13 17:53:23,619 INFO  Successfully processed the response from service
2019-03-13 17:56:23,583 INFO  Setting request parameters for VerifySolution
2019-03-13 17:56:23,583 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 17:56:23,583 INFO  Starting to parse the user solution
2019-03-13 17:56:23,598 INFO  Displaying user solution
2019-03-13 17:56:23,661 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-3\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\ndef check_double(list1,list2):\r\n    new_list=[]\r\n    #write your logic here\r\n    for i in list1:\r\n        for j in list2:\r\n            if(2*i==j):\r\n                new_list.append(i)\r\n    return new_list\r\n\r\n#Provide different values for the variables and test your program\r\nlist1=[11,8,23,7,25,15]\r\nlist2=[6,33,50,31,46,78,16,34]\r\nprint(check_double(list1, list2))\r\n","asgnmtId":"3","SolutionFileName":"Assign3.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 17:56:23,661 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 17:56:23,661 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 17:56:23,661 INFO  Invoking the service to verify the user solution
2019-03-13 17:56:23,661 INFO  Time before invoking service:Wed Mar 13 17:56:23 IST 2019
2019-03-13 17:56:23,661 INFO  Initialising service address for VerifySolution
2019-03-13 17:56:23,661 INFO  Time before invoking service In SUPER:Wed Mar 13 17:56:23 IST 2019
2019-03-13 17:56:24,676 INFO  Time after invoking service In SUPER:Wed Mar 13 17:56:24 IST 2019
2019-03-13 17:56:24,676 INFO  Service responded successfully with required details
2019-03-13 17:56:24,676 INFO  Time after invoking service:Wed Mar 13 17:56:24 IST 2019
2019-03-13 17:56:24,676 INFO  User solution successfully verified
2019-03-13 17:56:24,676 INFO  Processing the response from verify service
2019-03-13 17:56:24,676 INFO  Starting to parse JSON response
2019-03-13 17:56:24,676 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 17:56:24,676 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 17:56:24,676 INFO  Successfully parsed JSON response
2019-03-13 17:56:24,676 INFO  In the process of generating verify response in HTML
2019-03-13 17:56:24,754 INFO  Successfully generated verify response in HTML
2019-03-13 17:56:24,754 INFO  Successfully processed the response from service
2019-03-13 17:56:32,434 INFO  Initiating to process and prepare Input for the submit service
2019-03-13 17:56:32,434 INFO  Displaying user solution
2019-03-13 17:56:32,450 INFO  Successfully processed and prepared the input for the submit service
2019-03-13 17:56:32,450 INFO  Invoking the service to submit the user solution
2019-03-13 17:56:32,450 INFO  Initialising service address for Submit
2019-03-13 17:56:32,450 INFO  Time before invoking service In SUPER:Wed Mar 13 17:56:32 IST 2019
2019-03-13 17:56:33,249 INFO  Time after invoking service In SUPER:Wed Mar 13 17:56:33 IST 2019
2019-03-13 17:56:33,249 INFO  Service responded successfully with required details
2019-03-13 17:56:33,249 INFO  User solution successfully submitted
2019-03-13 17:56:33,249 INFO  Displaying submission status
2019-03-13 17:56:33,249 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-13 17:56:36,030 INFO  Initiating to process and prepare Input for the submit service
2019-03-13 17:56:36,030 INFO  Displaying user solution
2019-03-13 17:56:36,030 INFO  Successfully processed and prepared the input for the submit service
2019-03-13 17:56:36,030 INFO  Invoking the service to submit the user solution
2019-03-13 17:56:36,030 INFO  Initialising service address for Submit
2019-03-13 17:56:36,030 INFO  Time before invoking service In SUPER:Wed Mar 13 17:56:36 IST 2019
2019-03-13 17:56:36,264 INFO  Time after invoking service In SUPER:Wed Mar 13 17:56:36 IST 2019
2019-03-13 17:56:36,264 INFO  Service responded successfully with required details
2019-03-13 17:56:36,264 INFO  User solution successfully submitted
2019-03-13 17:56:36,264 INFO  Displaying submission status
2019-03-13 17:56:36,264 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-13 17:56:39,890 INFO  Initiating to process and prepare Input for the submit service
2019-03-13 17:56:39,890 INFO  Displaying user solution
2019-03-13 17:56:39,890 INFO  Successfully processed and prepared the input for the submit service
2019-03-13 17:56:39,890 INFO  Invoking the service to submit the user solution
2019-03-13 17:56:39,890 INFO  Initialising service address for Submit
2019-03-13 17:56:39,890 INFO  Time before invoking service In SUPER:Wed Mar 13 17:56:39 IST 2019
2019-03-13 17:56:40,015 INFO  Time after invoking service In SUPER:Wed Mar 13 17:56:40 IST 2019
2019-03-13 17:56:40,015 INFO  Service responded successfully with required details
2019-03-13 17:56:40,015 INFO  User solution successfully submitted
2019-03-13 17:56:40,015 INFO  Displaying submission status
2019-03-13 17:56:40,015 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-13 17:56:43,500 INFO  Setting request parameters for VerifySolution
2019-03-13 17:56:43,500 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 17:56:43,500 INFO  Starting to parse the user solution
2019-03-13 17:56:43,500 INFO  Displaying user solution
2019-03-13 17:56:43,562 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-3\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\ndef check_double(list1,list2):\r\n    new_list=[]\r\n    #write your logic here\r\n    for i in list1:\r\n        for j in list2:\r\n            if(2*i==j):\r\n                new_list.append(i)\r\n    return new_list\r\n\r\n#Provide different values for the variables and test your program\r\nlist1=[11,8,23,7,25,15]\r\nlist2=[6,33,50,31,46,78,16,34]\r\nprint(check_double(list1, list2))\r\n","asgnmtId":"3","SolutionFileName":"Assign3.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 17:56:43,562 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 17:56:43,562 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 17:56:43,562 INFO  Invoking the service to verify the user solution
2019-03-13 17:56:43,562 INFO  Time before invoking service:Wed Mar 13 17:56:43 IST 2019
2019-03-13 17:56:43,562 INFO  Initialising service address for VerifySolution
2019-03-13 17:56:43,562 INFO  Time before invoking service In SUPER:Wed Mar 13 17:56:43 IST 2019
2019-03-13 17:56:44,312 INFO  Time after invoking service In SUPER:Wed Mar 13 17:56:44 IST 2019
2019-03-13 17:56:44,312 INFO  Service responded successfully with required details
2019-03-13 17:56:44,312 INFO  Time after invoking service:Wed Mar 13 17:56:44 IST 2019
2019-03-13 17:56:44,312 INFO  User solution successfully verified
2019-03-13 17:56:44,312 INFO  Processing the response from verify service
2019-03-13 17:56:44,312 INFO  Starting to parse JSON response
2019-03-13 17:56:44,312 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 17:56:44,312 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 17:56:44,312 INFO  Successfully parsed JSON response
2019-03-13 17:56:44,312 INFO  In the process of generating verify response in HTML
2019-03-13 17:56:44,390 INFO  Successfully generated verify response in HTML
2019-03-13 17:56:44,390 INFO  Successfully processed the response from service
2019-03-13 18:02:41,177 INFO  Setting request parameters for VerifySolution
2019-03-13 18:02:41,177 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 18:02:41,177 INFO  Starting to parse the user solution
2019-03-13 18:02:41,177 INFO  Displaying user solution
2019-03-13 18:02:41,255 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-4\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Player:\r\n    def __init__(self,name,experience):\r\n        self.__name=name\r\n        self.__experience=experience\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n\r\n    def get_experience(self):\r\n        return self.__experience\r\n\r\n    def __str__(self):\r\n        return(self.__name+\" \"+(str)(self.__experience))\r\n\r\n#Implement Game class here\r\nclass Game:\r\n    def __init__(self,player_list):\r\n        self.__player_list = player_list\r\n\r\nplayer1=Player(\"Dhoni\",15)\r\nplayer2=Player(\"Virat\",10)\r\nplayer3=Player(\"Rohit\",12)\r\nplayer4=Player(\"Raina\",11)\r\nplayer5=Player(\"Jadeja\",13)\r\nplayer6=Player(\"Ishant\",9)\r\nplayer7=Player(\"Shikhar\",8)\r\nplayer8=Player(\"Axar\",7.5)\r\nplayer9=Player(\"Ashwin\",6)\r\nplayer10=Player(\"Stuart\",7)\r\nplayer11=Player(\"Bhuvneshwar\",5)\r\n#Add different values to the list and test the program\r\nplayers_list=[player1,player2,player3,player4,player5,player6,player7,player8,player9,player10,player11]\r\n#Create object of Game class, invoke the methods and test your program\r\n","asgnmtId":"4","SolutionFileName":"Assign4.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 18:02:41,255 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 18:02:41,255 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 18:02:41,255 INFO  Invoking the service to verify the user solution
2019-03-13 18:02:41,255 INFO  Time before invoking service:Wed Mar 13 18:02:41 IST 2019
2019-03-13 18:02:41,255 INFO  Initialising service address for VerifySolution
2019-03-13 18:02:41,255 INFO  Time before invoking service In SUPER:Wed Mar 13 18:02:41 IST 2019
2019-03-13 18:02:42,350 INFO  Time after invoking service In SUPER:Wed Mar 13 18:02:42 IST 2019
2019-03-13 18:02:42,350 INFO  Service responded successfully with required details
2019-03-13 18:02:42,350 INFO  Time after invoking service:Wed Mar 13 18:02:42 IST 2019
2019-03-13 18:02:42,350 INFO  User solution successfully verified
2019-03-13 18:02:42,350 INFO  Processing the response from verify service
2019-03-13 18:02:42,366 INFO  Starting to parse JSON response
2019-03-13 18:02:42,366 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:02:42,366 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:02:42,366 INFO  Successfully parsed JSON response
2019-03-13 18:02:42,366 INFO  In the process of generating verify response in HTML
2019-03-13 18:02:42,495 INFO  Successfully generated verify response in HTML
2019-03-13 18:02:42,495 INFO  Successfully processed the response from service
2019-03-13 18:04:28,038 INFO  Setting request parameters for VerifySolution
2019-03-13 18:04:28,038 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 18:04:28,038 INFO  Starting to parse the user solution
2019-03-13 18:04:28,054 INFO  Displaying user solution
2019-03-13 18:04:28,117 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-4\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Player:\r\n    def __init__(self,name,experience):\r\n        self.__name=name\r\n        self.__experience=experience\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n\r\n    def get_experience(self):\r\n        return self.__experience\r\n\r\n    def __str__(self):\r\n        return(self.__name+\" \"+(str)(self.__experience))\r\n\r\n#Implement Game class here\r\nclass Game:\r\n    def __init__(self,player_list):\r\n        self.__player_list = player_list\r\n    def sort_players_based_on_experience(self):\r\n        pass\r\n    def shift_player_to_new_position(self,old_index_position, new_index_position):\r\n        pass\r\n    def display_player_details(self):\r\n        pass\r\n\r\nplayer1=Player(\"Dhoni\",15)\r\nplayer2=Player(\"Virat\",10)\r\nplayer3=Player(\"Rohit\",12)\r\nplayer4=Player(\"Raina\",11)\r\nplayer5=Player(\"Jadeja\",13)\r\nplayer6=Player(\"Ishant\",9)\r\nplayer7=Player(\"Shikhar\",8)\r\nplayer8=Player(\"Axar\",7.5)\r\nplayer9=Player(\"Ashwin\",6)\r\nplayer10=Player(\"Stuart\",7)\r\nplayer11=Player(\"Bhuvneshwar\",5)\r\n#Add different values to the list and test the program\r\nplayers_list=[player1,player2,player3,player4,player5,player6,player7,player8,player9,player10,player11]\r\n#Create object of Game class, invoke the methods and test your program\r\n","asgnmtId":"4","SolutionFileName":"Assign4.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 18:04:28,117 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 18:04:28,117 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 18:04:28,117 INFO  Invoking the service to verify the user solution
2019-03-13 18:04:28,117 INFO  Time before invoking service:Wed Mar 13 18:04:28 IST 2019
2019-03-13 18:04:28,117 INFO  Initialising service address for VerifySolution
2019-03-13 18:04:28,117 INFO  Time before invoking service In SUPER:Wed Mar 13 18:04:28 IST 2019
2019-03-13 18:04:29,257 INFO  Time after invoking service In SUPER:Wed Mar 13 18:04:29 IST 2019
2019-03-13 18:04:29,257 INFO  Service responded successfully with required details
2019-03-13 18:04:29,257 INFO  Time after invoking service:Wed Mar 13 18:04:29 IST 2019
2019-03-13 18:04:29,257 INFO  User solution successfully verified
2019-03-13 18:04:29,257 INFO  Processing the response from verify service
2019-03-13 18:04:29,257 INFO  Starting to parse JSON response
2019-03-13 18:04:29,257 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:04:29,257 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:04:29,257 INFO  Successfully parsed JSON response
2019-03-13 18:04:29,257 INFO  In the process of generating verify response in HTML
2019-03-13 18:04:29,367 INFO  Successfully generated verify response in HTML
2019-03-13 18:04:29,367 INFO  Successfully processed the response from service
2019-03-13 18:04:57,573 INFO  Setting request parameters for VerifySolution
2019-03-13 18:04:57,573 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 18:04:57,573 INFO  Starting to parse the user solution
2019-03-13 18:04:57,573 INFO  Displaying user solution
2019-03-13 18:04:57,646 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-4\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Player:\r\n    def __init__(self,name,experience):\r\n        self.__name=name\r\n        self.__experience=experience\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n\r\n    def get_experience(self):\r\n        return self.__experience\r\n\r\n    def __str__(self):\r\n        return(self.__name+\" \"+(str)(self.__experience))\r\n\r\n#Implement Game class here\r\nclass Game:\r\n    def __init__(self,player_list):\r\n        self.__player_list = player_list\r\n    def sort_players_based_on_experience(self):\r\n        pass\r\n    def shift_player_to_new_position(self,old_index_position, new_index_position):\r\n        pass\r\n    def display_player_details(self):\r\n        pass\r\n\r\nplayer1=Player(\"Dhoni\",15)\r\nplayer2=Player(\"Virat\",10)\r\nplayer3=Player(\"Rohit\",12)\r\nplayer4=Player(\"Raina\",11)\r\nplayer5=Player(\"Jadeja\",13)\r\nplayer6=Player(\"Ishant\",9)\r\nplayer7=Player(\"Shikhar\",8)\r\nplayer8=Player(\"Axar\",7.5)\r\nplayer9=Player(\"Ashwin\",6)\r\nplayer10=Player(\"Stuart\",7)\r\nplayer11=Player(\"Bhuvneshwar\",5)\r\n#Add different values to the list and test the program\r\nplayers_list=[player1,player2,player3,player4,player5,player6,player7,player8,player9,player10,player11]\r\n#Create object of Game class, invoke the methods and test your program\r\n","asgnmtId":"4","SolutionFileName":"Assign4.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 18:04:57,646 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 18:04:57,646 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 18:04:57,646 INFO  Invoking the service to verify the user solution
2019-03-13 18:04:57,646 INFO  Time before invoking service:Wed Mar 13 18:04:57 IST 2019
2019-03-13 18:04:57,646 INFO  Initialising service address for VerifySolution
2019-03-13 18:04:57,646 INFO  Time before invoking service In SUPER:Wed Mar 13 18:04:57 IST 2019
2019-03-13 18:04:58,834 INFO  Time after invoking service In SUPER:Wed Mar 13 18:04:58 IST 2019
2019-03-13 18:04:58,834 INFO  Service responded successfully with required details
2019-03-13 18:04:58,834 INFO  Time after invoking service:Wed Mar 13 18:04:58 IST 2019
2019-03-13 18:04:58,849 INFO  User solution successfully verified
2019-03-13 18:04:58,849 INFO  Processing the response from verify service
2019-03-13 18:04:58,849 INFO  Starting to parse JSON response
2019-03-13 18:04:58,849 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:04:58,849 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:04:58,849 INFO  Successfully parsed JSON response
2019-03-13 18:04:58,849 INFO  In the process of generating verify response in HTML
2019-03-13 18:04:58,927 INFO  Successfully generated verify response in HTML
2019-03-13 18:04:58,927 INFO  Successfully processed the response from service
2019-03-13 18:05:29,460 INFO  Setting request parameters for VerifySolution
2019-03-13 18:05:29,460 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 18:05:29,460 INFO  Starting to parse the user solution
2019-03-13 18:05:29,460 INFO  Displaying user solution
2019-03-13 18:05:29,538 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-4\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Player:\r\n    def __init__(self,name,experience):\r\n        self.__name=name\r\n        self.__experience=experience\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n\r\n    def get_experience(self):\r\n        return self.__experience\r\n\r\n    def __str__(self):\r\n        return(self.__name+\" \"+(str)(self.__experience))\r\n\r\n#Implement Game class here\r\nclass Game:\r\n    def __init__(self,players_list):\r\n        self.__players_list = players_list\r\n    def sort_players_based_on_experience(self):\r\n        pass\r\n    def shift_player_to_new_position(self,old_index_position, new_index_position):\r\n        pass\r\n    def display_player_details(self):\r\n        pass\r\n\r\nplayer1=Player(\"Dhoni\",15)\r\nplayer2=Player(\"Virat\",10)\r\nplayer3=Player(\"Rohit\",12)\r\nplayer4=Player(\"Raina\",11)\r\nplayer5=Player(\"Jadeja\",13)\r\nplayer6=Player(\"Ishant\",9)\r\nplayer7=Player(\"Shikhar\",8)\r\nplayer8=Player(\"Axar\",7.5)\r\nplayer9=Player(\"Ashwin\",6)\r\nplayer10=Player(\"Stuart\",7)\r\nplayer11=Player(\"Bhuvneshwar\",5)\r\n#Add different values to the list and test the program\r\nplayers_list=[player1,player2,player3,player4,player5,player6,player7,player8,player9,player10,player11]\r\n#Create object of Game class, invoke the methods and test your program\r\n","asgnmtId":"4","SolutionFileName":"Assign4.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 18:05:29,538 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 18:05:29,538 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 18:05:29,538 INFO  Invoking the service to verify the user solution
2019-03-13 18:05:29,538 INFO  Time before invoking service:Wed Mar 13 18:05:29 IST 2019
2019-03-13 18:05:29,538 INFO  Initialising service address for VerifySolution
2019-03-13 18:05:29,538 INFO  Time before invoking service In SUPER:Wed Mar 13 18:05:29 IST 2019
2019-03-13 18:05:30,616 INFO  Time after invoking service In SUPER:Wed Mar 13 18:05:30 IST 2019
2019-03-13 18:05:30,616 INFO  Service responded successfully with required details
2019-03-13 18:05:30,616 INFO  Time after invoking service:Wed Mar 13 18:05:30 IST 2019
2019-03-13 18:05:30,616 INFO  User solution successfully verified
2019-03-13 18:05:30,616 INFO  Processing the response from verify service
2019-03-13 18:05:30,632 INFO  Starting to parse JSON response
2019-03-13 18:05:30,632 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:05:30,632 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:05:30,632 INFO  Successfully parsed JSON response
2019-03-13 18:05:30,632 INFO  In the process of generating verify response in HTML
2019-03-13 18:05:30,725 INFO  Successfully generated verify response in HTML
2019-03-13 18:05:30,725 INFO  Successfully processed the response from service
2019-03-13 18:12:08,434 INFO  Setting request parameters for VerifySolution
2019-03-13 18:12:08,434 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 18:12:08,434 INFO  Starting to parse the user solution
2019-03-13 18:12:08,434 INFO  Displaying user solution
2019-03-13 18:12:08,496 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-4\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Player:\r\n    def __init__(self,name,experience):\r\n        self.__name=name\r\n        self.__experience=experience\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n\r\n    def get_experience(self):\r\n        return self.__experience\r\n\r\n    def __str__(self):\r\n        return(self.__name+\" \"+(str)(self.__experience))\r\n\r\n#Implement Game class here\r\nclass Game:\r\n    def __init__(self,players_list):\r\n        self.__players_list = players_list\r\n    def sort_players_based_on_experience(self):\r\n        pass\r\n    def shift_player_to_new_position(self,old_index_position, new_index_position):\r\n        pass\r\n    def display_player_details(self):\r\n        pass\r\n\r\nplayer1=Player(\"Dhoni\",15)\r\nplayer2=Player(\"Virat\",10)\r\nplayer3=Player(\"Rohit\",12)\r\nplayer4=Player(\"Raina\",11)\r\nplayer5=Player(\"Jadeja\",13)\r\nplayer6=Player(\"Ishant\",9)\r\nplayer7=Player(\"Shikhar\",8)\r\nplayer8=Player(\"Axar\",7.5)\r\nplayer9=Player(\"Ashwin\",6)\r\nplayer10=Player(\"Stuart\",7)\r\nplayer11=Player(\"Bhuvneshwar\",5)\r\n#Add different values to the list and test the program\r\nplayers_list=[player1,player2,player3,player4,player5,player6,player7,player8,player9,player10,player11]\r\n#Create object of Game class, invoke the methods and test your program\r\n","asgnmtId":"4","SolutionFileName":"Assign4.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 18:12:08,496 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 18:12:08,496 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 18:12:08,496 INFO  Invoking the service to verify the user solution
2019-03-13 18:12:08,496 INFO  Time before invoking service:Wed Mar 13 18:12:08 IST 2019
2019-03-13 18:12:08,496 INFO  Initialising service address for VerifySolution
2019-03-13 18:12:08,496 INFO  Time before invoking service In SUPER:Wed Mar 13 18:12:08 IST 2019
2019-03-13 18:12:09,636 INFO  Time after invoking service In SUPER:Wed Mar 13 18:12:09 IST 2019
2019-03-13 18:12:09,636 INFO  Service responded successfully with required details
2019-03-13 18:12:09,636 INFO  Time after invoking service:Wed Mar 13 18:12:09 IST 2019
2019-03-13 18:12:09,636 INFO  User solution successfully verified
2019-03-13 18:12:09,636 INFO  Processing the response from verify service
2019-03-13 18:12:09,636 INFO  Starting to parse JSON response
2019-03-13 18:12:09,636 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:12:09,636 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:12:09,636 INFO  Successfully parsed JSON response
2019-03-13 18:12:09,636 INFO  In the process of generating verify response in HTML
2019-03-13 18:12:09,777 INFO  Successfully generated verify response in HTML
2019-03-13 18:12:09,792 INFO  Successfully processed the response from service
2019-03-13 18:14:02,515 INFO  Setting request parameters for VerifySolution
2019-03-13 18:14:02,515 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 18:14:02,515 INFO  Starting to parse the user solution
2019-03-13 18:14:02,515 INFO  Displaying user solution
2019-03-13 18:14:02,593 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-2\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\nclass Car:\r\n    def __init__(self,model,year,registration_number):\r\n        self.__model=model\r\n        self.__year=year\r\n        self.__registration_number=registration_number\r\n\r\n    def get_model(self):\r\n        return self.__model\r\n\r\n    def get_year(self):\r\n        return self.__year\r\n\r\n    def get_registration_number(self):\r\n        return self.__registration_number\r\n\r\n    def __str__(self):\r\n        return(self.__model+\" \"+self.__registration_number+\" \"+(str)(self.__year))\r\n\r\nclass Service:\r\n    def __init__(self,car_list):\r\n        self.__car_list = car_list \r\n     \r\n    def get_car_list(self):\r\n        return self.__car_list\r\n    \r\n    def find_cars_by_year(self,year):\r\n        cars_year_wise_list =[]\r\n        for car_object in self.__car_list:\r\n            if car_object.get_year() == year:\r\n                cars_year_wise_list.append(car_object.get_model())\r\n        if len(cars_year_wise_list) == 0:\r\n            return None\r\n        return cars_year_wise_list\r\n         \r\n    \r\n    def add_cars(self,new_car_list):\r\n        \r\n        self.__car_list += new_car_list\r\n        self.__car_list.sort(key=lambda car : car.get_year(), reverse=False)\r\n            \r\n    def remove_cars_from_karnataka(self):\r\n        carlist = self.__car_list\r\n        self.__car_list=[]\r\n        for car in carlist:\r\n            \r\n            if car.get_registration_number()[:2] != 'KA':\r\n                self.__car_list.append(car)\r\n#Implement Service class here\r\n\r\ncar1=Car(\"WagonR\",2010,\"KA09 3056\")\r\ncar2=Car(\"Beat\", 2011, \"KA10 6776\")\r\ncar3=Car(\"Ritz\", 2013,\"KA12 9098\")\r\ncar4=Car(\"Polo\",2013,\"GJ01 7854\")\r\ncar5=Car(\"Amaze\",2014,\"KL07 4332\")\r\n#Add different values to the list and test the program\r\ncar_list=[car1, car2, car3, car4,car5]\r\ncar_list1=[car1, car2, car3, car4,car5]\r\nser=Service(car_list)\r\nser.add_cars(car_list1)\r\n","asgnmtId":"2","SolutionFileName":"rough.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 18:14:02,593 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 18:14:02,593 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 18:14:02,608 INFO  Invoking the service to verify the user solution
2019-03-13 18:14:02,608 INFO  Time before invoking service:Wed Mar 13 18:14:02 IST 2019
2019-03-13 18:14:02,608 INFO  Initialising service address for VerifySolution
2019-03-13 18:14:02,608 INFO  Time before invoking service In SUPER:Wed Mar 13 18:14:02 IST 2019
2019-03-13 18:14:03,826 INFO  Time after invoking service In SUPER:Wed Mar 13 18:14:03 IST 2019
2019-03-13 18:14:03,826 INFO  Service responded successfully with required details
2019-03-13 18:14:03,826 INFO  Time after invoking service:Wed Mar 13 18:14:03 IST 2019
2019-03-13 18:14:03,826 INFO  User solution successfully verified
2019-03-13 18:14:03,826 INFO  Processing the response from verify service
2019-03-13 18:14:03,826 INFO  Starting to parse JSON response
2019-03-13 18:14:03,826 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:14:03,826 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:14:03,826 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:14:03,826 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:14:03,826 INFO  Successfully parsed JSON response
2019-03-13 18:14:03,826 INFO  In the process of generating verify response in HTML
2019-03-13 18:14:03,948 INFO  Successfully generated verify response in HTML
2019-03-13 18:14:03,949 INFO  Successfully processed the response from service
2019-03-13 18:26:31,951 INFO  Setting request parameters for VerifySolution
2019-03-13 18:26:31,952 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 18:26:31,952 INFO  Starting to parse the user solution
2019-03-13 18:26:31,952 INFO  Displaying user solution
2019-03-13 18:26:32,067 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-2\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Car:\r\n    def __init__(self,model,year,registration_number):\r\n        self.__model=model\r\n        self.__year=year\r\n        self.__registration_number=registration_number\r\n\r\n    def get_model(self):\r\n        return self.__model\r\n\r\n    def get_year(self):\r\n        return self.__year\r\n\r\n    def get_registration_number(self):\r\n        return self.__registration_number\r\n\r\n    def __str__(self):\r\n        return(self.__model+\" \"+self.__registration_number+\" \"+(str)(self.__year))\r\n\r\n#Implement Service class here\r\nclass Service:\r\n    def __init__(self,car_list):\r\n        self.__car_list = car_list\r\n\r\n    def get_car_list(self):\r\n        return self.__car_list\r\n\r\n    def find_cars_by_year(self,year):\r\n        car_list =[]\r\n        for i in self.__car_list:\r\n            if(i.get_year()==year):\r\n                car_list.append(i.get_model())\r\n        if(len(car_list)==0):\r\n            return None\r\n        return car_list\r\n    def add_cars(self,new_car_list):\r\n        self.__car_list+=new_car_list\r\n        self.__car_list.sort(self.__car_list.get_year(), reverse=False)\r\n        \r\n    def remove_cars_from_karnataka(self):\r\n        temp = self.__car_list\r\n        self.__car_list=[]\r\n        for i in temp:\r\n            if(i.get_registration_number()[:2]!='KA'):\r\n                self.__car_list.append(i)\r\n            \r\n            \r\n         \r\n        \r\n\r\ncar1=Car(\"WagonR\",2010,\"KA09 3056\")\r\ncar2=Car(\"Beat\", 2011, \"MH10 6776\")\r\ncar3=Car(\"Ritz\", 2013,\"KA12 9098\")\r\ncar4=Car(\"Polo\",2013,\"GJ01 7854\")\r\ncar5=Car(\"Amaze\",2014,\"KL07 4332\")\r\n#Add different values to the list and test the program\r\ncar_list=[car1, car2, car3, car4,car5]\r\n#Create object of Service class, invoke the methods and test your program\r\n","asgnmtId":"2","SolutionFileName":"Assign2.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 18:26:32,067 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 18:26:32,067 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 18:26:32,067 INFO  Invoking the service to verify the user solution
2019-03-13 18:26:32,067 INFO  Time before invoking service:Wed Mar 13 18:26:32 IST 2019
2019-03-13 18:26:32,067 INFO  Initialising service address for VerifySolution
2019-03-13 18:26:32,067 INFO  Time before invoking service In SUPER:Wed Mar 13 18:26:32 IST 2019
2019-03-13 18:26:33,240 INFO  Time after invoking service In SUPER:Wed Mar 13 18:26:33 IST 2019
2019-03-13 18:26:33,240 INFO  Service responded successfully with required details
2019-03-13 18:26:33,240 INFO  Time after invoking service:Wed Mar 13 18:26:33 IST 2019
2019-03-13 18:26:33,240 INFO  User solution successfully verified
2019-03-13 18:26:33,255 INFO  Processing the response from verify service
2019-03-13 18:26:33,255 INFO  Starting to parse JSON response
2019-03-13 18:26:33,255 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:26:33,255 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:26:33,255 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:26:33,255 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:26:33,271 INFO  Successfully parsed JSON response
2019-03-13 18:26:33,271 INFO  In the process of generating verify response in HTML
2019-03-13 18:26:33,396 INFO  Successfully generated verify response in HTML
2019-03-13 18:26:33,396 INFO  Successfully processed the response from service
2019-03-13 18:28:03,476 INFO  Setting request parameters for VerifySolution
2019-03-13 18:28:03,476 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 18:28:03,476 INFO  Starting to parse the user solution
2019-03-13 18:28:03,476 INFO  Displaying user solution
2019-03-13 18:28:03,554 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-2\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Car:\r\n    def __init__(self,model,year,registration_number):\r\n        self.__model=model\r\n        self.__year=year\r\n        self.__registration_number=registration_number\r\n\r\n    def get_model(self):\r\n        return self.__model\r\n\r\n    def get_year(self):\r\n        return self.__year\r\n\r\n    def get_registration_number(self):\r\n        return self.__registration_number\r\n\r\n    def __str__(self):\r\n        return(self.__model+\" \"+self.__registration_number+\" \"+(str)(self.__year))\r\n\r\n#Implement Service class here\r\nclass Service:\r\n    def __init__(self,car_list):\r\n        self.__car_list = car_list\r\n\r\n    def get_car_list(self):\r\n        return self.__car_list\r\n\r\n    def find_cars_by_year(self,year):\r\n        car_list =[]\r\n        for i in self.__car_list:\r\n            if(i.get_year()==year):\r\n                car_list.append(i.get_model())\r\n        if(len(car_list)==0):\r\n            return None\r\n        return car_list\r\n    def add_cars(self,new_car_list):\r\n        self.__car_list+=new_car_list\r\n        self.__car_list.sort(key=lambda car:car.get_year(), reverse=False)\r\n        \r\n    def remove_cars_from_karnataka(self):\r\n        temp = self.__car_list\r\n        self.__car_list=[]\r\n        for i in temp:\r\n            if(i.get_registration_number()[:2]!='KA'):\r\n                self.__car_list.append(i)\r\n            \r\n            \r\n         \r\n        \r\n\r\ncar1=Car(\"WagonR\",2010,\"KA09 3056\")\r\ncar2=Car(\"Beat\", 2011, \"MH10 6776\")\r\ncar3=Car(\"Ritz\", 2013,\"KA12 9098\")\r\ncar4=Car(\"Polo\",2013,\"GJ01 7854\")\r\ncar5=Car(\"Amaze\",2014,\"KL07 4332\")\r\n#Add different values to the list and test the program\r\ncar_list=[car1, car2, car3, car4,car5]\r\n#Create object of Service class, invoke the methods and test your program\r\n","asgnmtId":"2","SolutionFileName":"Assign2.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 18:28:03,554 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 18:28:03,554 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 18:28:03,554 INFO  Invoking the service to verify the user solution
2019-03-13 18:28:03,554 INFO  Time before invoking service:Wed Mar 13 18:28:03 IST 2019
2019-03-13 18:28:03,554 INFO  Initialising service address for VerifySolution
2019-03-13 18:28:03,554 INFO  Time before invoking service In SUPER:Wed Mar 13 18:28:03 IST 2019
2019-03-13 18:28:04,787 INFO  Time after invoking service In SUPER:Wed Mar 13 18:28:04 IST 2019
2019-03-13 18:28:04,787 INFO  Service responded successfully with required details
2019-03-13 18:28:04,787 INFO  Time after invoking service:Wed Mar 13 18:28:04 IST 2019
2019-03-13 18:28:04,787 INFO  User solution successfully verified
2019-03-13 18:28:04,787 INFO  Processing the response from verify service
2019-03-13 18:28:04,787 INFO  Starting to parse JSON response
2019-03-13 18:28:04,787 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:28:04,787 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:28:04,787 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:28:04,787 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:28:04,787 INFO  Successfully parsed JSON response
2019-03-13 18:28:04,787 INFO  In the process of generating verify response in HTML
2019-03-13 18:28:04,866 INFO  Successfully generated verify response in HTML
2019-03-13 18:28:04,866 INFO  Successfully processed the response from service
2019-03-13 18:28:19,835 INFO  Setting request parameters for VerifySolution
2019-03-13 18:28:19,835 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 18:28:19,835 INFO  Starting to parse the user solution
2019-03-13 18:28:19,835 INFO  Displaying user solution
2019-03-13 18:28:19,913 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-2\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Car:\r\n    def __init__(self,model,year,registration_number):\r\n        self.__model=model\r\n        self.__year=year\r\n        self.__registration_number=registration_number\r\n\r\n    def get_model(self):\r\n        return self.__model\r\n\r\n    def get_year(self):\r\n        return self.__year\r\n\r\n    def get_registration_number(self):\r\n        return self.__registration_number\r\n\r\n    def __str__(self):\r\n        return(self.__model+\" \"+self.__registration_number+\" \"+(str)(self.__year))\r\n\r\n#Implement Service class here\r\nclass Service:\r\n    def __init__(self,car_list):\r\n        self.__car_list = car_list\r\n\r\n    def get_car_list(self):\r\n        return self.__car_list\r\n\r\n    def find_cars_by_year(self,year):\r\n        car_list =[]\r\n        for i in self.__car_list:\r\n            if(i.get_year()==year):\r\n                car_list.append(i.get_model())\r\n        if(len(car_list)==0):\r\n            return None\r\n        return car_list\r\n    def add_cars(self,new_car_list):\r\n        self.__car_list+=new_car_list\r\n        self.__car_list.sort(key=lambda car:car.get_year(), reverse=False)\r\n        \r\n    def remove_cars_from_karnataka(self):\r\n        temp = self.__car_list\r\n        self.__car_list=[]\r\n        for i in temp:\r\n            if(i.get_registration_number()[:2]!='KA'):\r\n                self.__car_list.append(i)\r\n            \r\n            \r\n         \r\n        \r\n\r\ncar1=Car(\"WagonR\",2010,\"KA09 3056\")\r\ncar2=Car(\"Beat\", 2011, \"MH10 6776\")\r\ncar3=Car(\"Ritz\", 2013,\"KA12 9098\")\r\ncar4=Car(\"Polo\",2013,\"GJ01 7854\")\r\ncar5=Car(\"Amaze\",2014,\"KL07 4332\")\r\n#Add different values to the list and test the program\r\ncar_list=[car1, car2, car3, car4,car5]\r\n#Create object of Service class, invoke the methods and test your program\r\n","asgnmtId":"2","SolutionFileName":"Assign2.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 18:28:19,913 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 18:28:19,913 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 18:28:19,913 INFO  Invoking the service to verify the user solution
2019-03-13 18:28:19,913 INFO  Time before invoking service:Wed Mar 13 18:28:19 IST 2019
2019-03-13 18:28:19,913 INFO  Initialising service address for VerifySolution
2019-03-13 18:28:19,913 INFO  Time before invoking service In SUPER:Wed Mar 13 18:28:19 IST 2019
2019-03-13 18:28:20,952 INFO  Time after invoking service In SUPER:Wed Mar 13 18:28:20 IST 2019
2019-03-13 18:28:20,952 INFO  Service responded successfully with required details
2019-03-13 18:28:20,953 INFO  Time after invoking service:Wed Mar 13 18:28:20 IST 2019
2019-03-13 18:28:20,953 INFO  User solution successfully verified
2019-03-13 18:28:20,953 INFO  Processing the response from verify service
2019-03-13 18:28:20,955 INFO  Starting to parse JSON response
2019-03-13 18:28:20,956 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:28:20,956 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:28:20,956 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:28:20,956 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:28:20,958 INFO  Successfully parsed JSON response
2019-03-13 18:28:20,958 INFO  In the process of generating verify response in HTML
2019-03-13 18:28:21,076 INFO  Successfully generated verify response in HTML
2019-03-13 18:28:21,076 INFO  Successfully processed the response from service
2019-03-13 18:28:37,007 INFO  Setting request parameters for VerifySolution
2019-03-13 18:28:37,007 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 18:28:37,007 INFO  Starting to parse the user solution
2019-03-13 18:28:37,007 INFO  Displaying user solution
2019-03-13 18:28:37,070 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-2\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Car:\r\n    def __init__(self,model,year,registration_number):\r\n        self.__model=model\r\n        self.__year=year\r\n        self.__registration_number=registration_number\r\n\r\n    def get_model(self):\r\n        return self.__model\r\n\r\n    def get_year(self):\r\n        return self.__year\r\n\r\n    def get_registration_number(self):\r\n        return self.__registration_number\r\n\r\n    def __str__(self):\r\n        return(self.__model+\" \"+self.__registration_number+\" \"+(str)(self.__year))\r\n\r\n\r\nclass Service:\r\n    def __init__(self,car_list):\r\n        self.__car_list = car_list\r\n\r\n    def get_car_list(self):\r\n        return self.__car_list\r\n\r\n    def find_cars_by_year(self,year):\r\n        car_list =[]\r\n        for i in self.__car_list:\r\n            if(i.get_year()==year):\r\n                car_list.append(i.get_model())\r\n        if(len(car_list)==0):\r\n            return None\r\n        return car_list\r\n    def add_cars(self,new_car_list):\r\n        self.__car_list+=new_car_list\r\n        self.__car_list.sort(key=lambda car:car.get_year(), reverse=False)\r\n        \r\n    def remove_cars_from_karnataka(self):\r\n        temp = self.__car_list\r\n        self.__car_list=[]\r\n        for i in temp:\r\n            if(i.get_registration_number()[:2]!='KA'):\r\n                self.__car_list.append(i)\r\n            \r\n            \r\n         \r\n        \r\n\r\ncar1=Car(\"WagonR\",2010,\"KA09 3056\")\r\ncar2=Car(\"Beat\", 2011, \"MH10 6776\")\r\ncar3=Car(\"Ritz\", 2013,\"KA12 9098\")\r\ncar4=Car(\"Polo\",2013,\"GJ01 7854\")\r\ncar5=Car(\"Amaze\",2014,\"KL07 4332\")\r\n#Add different values to the list and test the program\r\ncar_list=[car1, car2, car3, car4,car5]\r\n#Create object of Service class, invoke the methods and test your program\r\n","asgnmtId":"2","SolutionFileName":"Assign2.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 18:28:37,070 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 18:28:37,070 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 18:28:37,070 INFO  Invoking the service to verify the user solution
2019-03-13 18:28:37,070 INFO  Time before invoking service:Wed Mar 13 18:28:37 IST 2019
2019-03-13 18:28:37,070 INFO  Initialising service address for VerifySolution
2019-03-13 18:28:37,070 INFO  Time before invoking service In SUPER:Wed Mar 13 18:28:37 IST 2019
2019-03-13 18:28:38,178 INFO  Time after invoking service In SUPER:Wed Mar 13 18:28:38 IST 2019
2019-03-13 18:28:38,178 INFO  Service responded successfully with required details
2019-03-13 18:28:38,178 INFO  Time after invoking service:Wed Mar 13 18:28:38 IST 2019
2019-03-13 18:28:38,178 INFO  User solution successfully verified
2019-03-13 18:28:38,178 INFO  Processing the response from verify service
2019-03-13 18:28:38,178 INFO  Starting to parse JSON response
2019-03-13 18:28:38,194 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:28:38,194 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:28:38,194 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:28:38,194 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:28:38,194 INFO  Successfully parsed JSON response
2019-03-13 18:28:38,194 INFO  In the process of generating verify response in HTML
2019-03-13 18:28:38,303 INFO  Successfully generated verify response in HTML
2019-03-13 18:28:38,303 INFO  Successfully processed the response from service
2019-03-13 18:29:14,914 INFO  Setting request parameters for VerifySolution
2019-03-13 18:29:14,914 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 18:29:14,914 INFO  Starting to parse the user solution
2019-03-13 18:29:14,914 INFO  Displaying user solution
2019-03-13 18:29:14,999 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-2\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Car:\r\n    def __init__(self,model,year,registration_number):\r\n        self.__model=model\r\n        self.__year=year\r\n        self.__registration_number=registration_number\r\n\r\n    def get_model(self):\r\n        return self.__model\r\n\r\n    def get_year(self):\r\n        return self.__year\r\n\r\n    def get_registration_number(self):\r\n        return self.__registration_number\r\n\r\n    def __str__(self):\r\n        return(self.__model+\" \"+self.__registration_number+\" \"+(str)(self.__year))\r\n#Implement Service class here\r\nclass Service:\r\n    def __init__(self,car_list):\r\n        self.__car_list = car_list\r\n\r\n    def get_car_list(self):\r\n        return self.__car_list\r\n\r\n    def find_cars_by_year(self,year):\r\n        car_list =[]\r\n        for i in self.__car_list:\r\n            if(i.get_year()==year):\r\n                car_list.append(i.get_model())\r\n        if(len(car_list)==0):\r\n            return None\r\n        return car_list\r\n    def add_cars(self,new_car_list):\r\n        self.__car_list+=new_car_list\r\n        self.__car_list.sort(key=lambda car:car.get_year(), reverse=False)\r\n        \r\n    def remove_cars_from_karnataka(self):\r\n        temp = self.__car_list\r\n        self.__car_list=[]\r\n        for i in temp:\r\n            if(i.get_registration_number()[:2]!='KA'):\r\n                self.__car_list.append(i)\r\n            \r\n            \r\n         \r\n        \r\n\r\ncar1=Car(\"WagonR\",2010,\"KA09 3056\")\r\ncar2=Car(\"Beat\", 2011, \"MH10 6776\")\r\ncar3=Car(\"Ritz\", 2013,\"KA12 9098\")\r\ncar4=Car(\"Polo\",2013,\"GJ01 7854\")\r\ncar5=Car(\"Amaze\",2014,\"KL07 4332\")\r\n#Add different values to the list and test the program\r\ncar_list=[car1, car2, car3, car4,car5]\r\n#Create object of Service class, invoke the methods and test your program\r\n","asgnmtId":"2","SolutionFileName":"Assign2.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 18:29:14,999 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 18:29:14,999 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 18:29:14,999 INFO  Invoking the service to verify the user solution
2019-03-13 18:29:14,999 INFO  Time before invoking service:Wed Mar 13 18:29:14 IST 2019
2019-03-13 18:29:14,999 INFO  Initialising service address for VerifySolution
2019-03-13 18:29:14,999 INFO  Time before invoking service In SUPER:Wed Mar 13 18:29:14 IST 2019
2019-03-13 18:29:16,306 INFO  Time after invoking service In SUPER:Wed Mar 13 18:29:16 IST 2019
2019-03-13 18:29:16,306 INFO  Service responded successfully with required details
2019-03-13 18:29:16,306 INFO  Time after invoking service:Wed Mar 13 18:29:16 IST 2019
2019-03-13 18:29:16,306 INFO  User solution successfully verified
2019-03-13 18:29:16,306 INFO  Processing the response from verify service
2019-03-13 18:29:16,306 INFO  Starting to parse JSON response
2019-03-13 18:29:16,306 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:29:16,306 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:29:16,306 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:29:16,306 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:29:16,321 INFO  Successfully parsed JSON response
2019-03-13 18:29:16,321 INFO  In the process of generating verify response in HTML
2019-03-13 18:29:16,454 INFO  Successfully generated verify response in HTML
2019-03-13 18:29:16,455 INFO  Successfully processed the response from service
2019-03-13 18:29:43,315 INFO  Setting request parameters for VerifySolution
2019-03-13 18:29:43,315 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 18:29:43,315 INFO  Starting to parse the user solution
2019-03-13 18:29:43,315 INFO  Displaying user solution
2019-03-13 18:29:43,409 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-2\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Car:\r\n    def __init__(self,model,year,registration_number):\r\n        self.__model=model\r\n        self.__year=year\r\n        self.__registration_number=registration_number\r\n\r\n    def get_model(self):\r\n        return self.__model\r\n\r\n    def get_year(self):\r\n        return self.__year\r\n\r\n    def get_registration_number(self):\r\n        return self.__registration_number\r\n\r\n    def __str__(self):\r\n        return(self.__model+\" \"+\r\n               self.__registration_number+\" \"+\r\n               (str)(self.__year))\r\n#Implement Service class here\r\nclass Service:\r\n    def __init__(self,car_list):\r\n        self.__car_list = car_list\r\n\r\n    def get_car_list(self):\r\n        return self.__car_list\r\n\r\n    def find_cars_by_year(self,year):\r\n        car_list =[]\r\n        for i in self.__car_list:\r\n            if(i.get_year()==year):\r\n                car_list.append(i.get_model())\r\n        if(len(car_list)==0):\r\n            return None\r\n        return car_list\r\n    def add_cars(self,new_car_list):\r\n        self.__car_list+=new_car_list\r\n        self.__car_list.sort(key=lambda car:car.get_year(), reverse=False)\r\n        \r\n    def remove_cars_from_karnataka(self):\r\n        temp = self.__car_list\r\n        self.__car_list=[]\r\n        for i in temp:\r\n            if(i.get_registration_number()[:2]!='KA'):\r\n                self.__car_list.append(i)\r\n            \r\n            \r\n         \r\n        \r\n\r\ncar1=Car(\"WagonR\",2010,\"KA09 3056\")\r\ncar2=Car(\"Beat\", 2011, \"MH10 6776\")\r\ncar3=Car(\"Ritz\", 2013,\"KA12 9098\")\r\ncar4=Car(\"Polo\",2013,\"GJ01 7854\")\r\ncar5=Car(\"Amaze\",2014,\"KL07 4332\")\r\n#Add different values to the list and test the program\r\ncar_list=[car1, car2, car3, car4,car5]\r\n#Create object of Service class, invoke the methods and test your program\r\n","asgnmtId":"2","SolutionFileName":"Assign2.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 18:29:43,409 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 18:29:43,409 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 18:29:43,409 INFO  Invoking the service to verify the user solution
2019-03-13 18:29:43,409 INFO  Time before invoking service:Wed Mar 13 18:29:43 IST 2019
2019-03-13 18:29:43,409 INFO  Initialising service address for VerifySolution
2019-03-13 18:29:43,409 INFO  Time before invoking service In SUPER:Wed Mar 13 18:29:43 IST 2019
2019-03-13 18:29:44,550 INFO  Time after invoking service In SUPER:Wed Mar 13 18:29:44 IST 2019
2019-03-13 18:29:44,550 INFO  Service responded successfully with required details
2019-03-13 18:29:44,550 INFO  Time after invoking service:Wed Mar 13 18:29:44 IST 2019
2019-03-13 18:29:44,550 INFO  User solution successfully verified
2019-03-13 18:29:44,550 INFO  Processing the response from verify service
2019-03-13 18:29:44,565 INFO  Starting to parse JSON response
2019-03-13 18:29:44,565 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:29:44,565 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:29:44,565 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:29:44,565 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:29:44,565 INFO  Successfully parsed JSON response
2019-03-13 18:29:44,565 INFO  In the process of generating verify response in HTML
2019-03-13 18:29:44,659 INFO  Successfully generated verify response in HTML
2019-03-13 18:29:44,659 INFO  Successfully processed the response from service
2019-03-13 18:30:55,629 INFO  Setting request parameters for VerifySolution
2019-03-13 18:30:55,629 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 18:30:55,645 INFO  Starting to parse the user solution
2019-03-13 18:30:55,645 INFO  Displaying user solution
2019-03-13 18:30:55,708 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-2\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Car:\r\n    def __init__(self,model,year,registration_number):\r\n        self.__model=model\r\n        self.__year=year\r\n        self.__registration_number=registration_number\r\n\r\n    def get_model(self):\r\n        return self.__model\r\n\r\n    def get_year(self):\r\n        return self.__year\r\n\r\n    def get_registration_number(self):\r\n        return self.__registration_number\r\n\r\n    def __str__(self):\r\n        return(self.__model+\" \"+\r\n               self.__registration_number+\" \"+\r\n               (str)(self.__year))\r\n#Implement Service class here\r\nclass Service:\r\n    def __init__(self,car_list):\r\n        self.__car_list = car_list\r\n\r\n    def get_car_list(self):\r\n        return self.__car_list\r\n\r\n    def find_cars_by_year(self,year):\r\n        car_list =[]\r\n        for i in self.__car_list:\r\n            if(i.get_year()==year):\r\n                car_list.append(i.get_model())\r\n        if(len(car_list)==0):\r\n            return None\r\n        return car_list\r\n    def add_cars(self,new_car_list):\r\n        self.__car_list+=new_car_list\r\n        sorted(self.__car_list.get_year())\r\n        \r\n    def remove_cars_from_karnataka(self):\r\n        temp = self.__car_list\r\n        self.__car_list=[]\r\n        for i in temp:\r\n            if(i.get_registration_number()[:2]!='KA'):\r\n                self.__car_list.append(i)\r\n            \r\n            \r\n         \r\n        \r\n\r\ncar1=Car(\"WagonR\",2010,\"KA09 3056\")\r\ncar2=Car(\"Beat\", 2011, \"MH10 6776\")\r\ncar3=Car(\"Ritz\", 2013,\"KA12 9098\")\r\ncar4=Car(\"Polo\",2013,\"GJ01 7854\")\r\ncar5=Car(\"Amaze\",2014,\"KL07 4332\")\r\n#Add different values to the list and test the program\r\ncar_list=[car1, car2, car3, car4,car5]\r\n#Create object of Service class, invoke the methods and test your program\r\n","asgnmtId":"2","SolutionFileName":"Assign2.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 18:30:55,708 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 18:30:55,708 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 18:30:55,708 INFO  Invoking the service to verify the user solution
2019-03-13 18:30:55,708 INFO  Time before invoking service:Wed Mar 13 18:30:55 IST 2019
2019-03-13 18:30:55,708 INFO  Initialising service address for VerifySolution
2019-03-13 18:30:55,708 INFO  Time before invoking service In SUPER:Wed Mar 13 18:30:55 IST 2019
2019-03-13 18:30:56,853 INFO  Time after invoking service In SUPER:Wed Mar 13 18:30:56 IST 2019
2019-03-13 18:30:56,853 INFO  Service responded successfully with required details
2019-03-13 18:30:56,853 INFO  Time after invoking service:Wed Mar 13 18:30:56 IST 2019
2019-03-13 18:30:56,853 INFO  User solution successfully verified
2019-03-13 18:30:56,853 INFO  Processing the response from verify service
2019-03-13 18:30:56,853 INFO  Starting to parse JSON response
2019-03-13 18:30:56,853 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:30:56,853 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:30:56,853 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:30:56,853 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:30:56,853 INFO  Successfully parsed JSON response
2019-03-13 18:30:56,853 INFO  In the process of generating verify response in HTML
2019-03-13 18:30:56,947 INFO  Successfully generated verify response in HTML
2019-03-13 18:30:56,947 INFO  Successfully processed the response from service
2019-03-13 18:32:24,451 INFO  Setting request parameters for VerifySolution
2019-03-13 18:32:24,452 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 18:32:24,452 INFO  Starting to parse the user solution
2019-03-13 18:32:24,453 INFO  Displaying user solution
2019-03-13 18:32:24,537 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-2\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Car:\r\n    def __init__(self,model,year,registration_number):\r\n        self.__model=model\r\n        self.__year=year\r\n        self.__registration_number=registration_number\r\n\r\n    def get_model(self):\r\n        return self.__model\r\n\r\n    def get_year(self):\r\n        return self.__year\r\n\r\n    def get_registration_number(self):\r\n        return self.__registration_number\r\n\r\n    def __str__(self):\r\n        return(self.__model+\" \"+\r\n               self.__registration_number+\" \"+\r\n               (str)(self.__year))\r\n#Implement Service class here\r\nclass Service:\r\n    def __init__(self,car_list):\r\n        self.__car_list = car_list\r\n\r\n    def get_car_list(self):\r\n        return self.__car_list\r\n\r\n    def find_cars_by_year(self,year):\r\n        car_list =[]\r\n        for i in self.__car_list:\r\n            if(i.get_year()==year):\r\n                car_list.append(i.get_model())\r\n        if(len(car_list)==0):\r\n            return None\r\n        return car_list\r\n    def add_cars(self,new_car_list):\r\n        self.__car_list+=new_car_list\r\n        sorted(.get_year())\r\n        \r\n    def remove_cars_from_karnataka(self):\r\n        temp = self.__car_list\r\n        self.__car_list=[]\r\n        for i in temp:\r\n            if(i.get_registration_number()[:2]!='KA'):\r\n                self.__car_list.append(i)\r\n            \r\n            \r\n         \r\n        \r\n\r\ncar1=Car(\"WagonR\",2010,\"KA09 3056\")\r\ncar2=Car(\"Beat\", 2011, \"MH10 6776\")\r\ncar3=Car(\"Ritz\", 2013,\"KA12 9098\")\r\ncar4=Car(\"Polo\",2013,\"GJ01 7854\")\r\ncar5=Car(\"Amaze\",2014,\"KL07 4332\")\r\n#Add different values to the list and test the program\r\ncar_list=[car1, car2, car3, car4,car5]\r\n#Create object of Service class, invoke the methods and test your program\r\n","asgnmtId":"2","SolutionFileName":"Assign2.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 18:32:24,537 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 18:32:24,537 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 18:32:24,537 INFO  Invoking the service to verify the user solution
2019-03-13 18:32:24,537 INFO  Time before invoking service:Wed Mar 13 18:32:24 IST 2019
2019-03-13 18:32:24,537 INFO  Initialising service address for VerifySolution
2019-03-13 18:32:24,537 INFO  Time before invoking service In SUPER:Wed Mar 13 18:32:24 IST 2019
2019-03-13 18:32:25,647 INFO  Time after invoking service In SUPER:Wed Mar 13 18:32:25 IST 2019
2019-03-13 18:32:25,647 INFO  Service responded successfully with required details
2019-03-13 18:32:25,647 INFO  Time after invoking service:Wed Mar 13 18:32:25 IST 2019
2019-03-13 18:32:25,647 INFO  User solution successfully verified
2019-03-13 18:32:25,647 INFO  Processing the response from verify service
2019-03-13 18:32:25,662 INFO  Starting to parse JSON response
2019-03-13 18:32:25,662 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:32:25,662 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:32:25,662 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:32:25,662 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:32:25,662 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:32:25,662 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:32:25,662 INFO  Successfully parsed JSON response
2019-03-13 18:32:25,662 INFO  In the process of generating verify response in HTML
2019-03-13 18:32:25,756 INFO  Successfully generated verify response in HTML
2019-03-13 18:32:25,756 INFO  Successfully processed the response from service
2019-03-13 18:32:42,933 INFO  Setting request parameters for VerifySolution
2019-03-13 18:32:42,933 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 18:32:42,933 INFO  Starting to parse the user solution
2019-03-13 18:32:42,949 INFO  Displaying user solution
2019-03-13 18:32:43,011 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-2\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Car:\r\n    def __init__(self,model,year,registration_number):\r\n        self.__model=model\r\n        self.__year=year\r\n        self.__registration_number=registration_number\r\n\r\n    def get_model(self):\r\n        return self.__model\r\n\r\n    def get_year(self):\r\n        return self.__year\r\n\r\n    def get_registration_number(self):\r\n        return self.__registration_number\r\n\r\n    def __str__(self):\r\n        return(self.__model+\" \"+\r\n               self.__registration_number+\" \"+\r\n               (str)(self.__year))\r\n#Implement Service class here\r\nclass Service:\r\n    def __init__(self,car_list):\r\n        self.__car_list = car_list\r\n\r\n    def get_car_list(self):\r\n        return self.__car_list\r\n\r\n    def find_cars_by_year(self,year):\r\n        car_list =[]\r\n        for i in self.__car_list:\r\n            if(i.get_year()==year):\r\n                car_list.append(i.get_model())\r\n        if(len(car_list)==0):\r\n            return None\r\n        return car_list\r\n    def add_cars(self,new_car_list):\r\n        self.__car_list+=new_car_list\r\n        sorted(self.__car_list.get_year())\r\n        \r\n    def remove_cars_from_karnataka(self):\r\n        temp = self.__car_list\r\n        self.__car_list=[]\r\n        for i in temp:\r\n            if(i.get_registration_number()[:2]!='KA'):\r\n                self.__car_list.append(i)\r\n            \r\n            \r\n         \r\n        \r\n\r\ncar1=Car(\"WagonR\",2010,\"KA09 3056\")\r\ncar2=Car(\"Beat\", 2011, \"MH10 6776\")\r\ncar3=Car(\"Ritz\", 2013,\"KA12 9098\")\r\ncar4=Car(\"Polo\",2013,\"GJ01 7854\")\r\ncar5=Car(\"Amaze\",2014,\"KL07 4332\")\r\n#Add different values to the list and test the program\r\ncar_list=[car1, car2, car3, car4,car5]\r\n#Create object of Service class, invoke the methods and test your program\r\n","asgnmtId":"2","SolutionFileName":"Assign2.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 18:32:43,011 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 18:32:43,011 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 18:32:43,011 INFO  Invoking the service to verify the user solution
2019-03-13 18:32:43,011 INFO  Time before invoking service:Wed Mar 13 18:32:43 IST 2019
2019-03-13 18:32:43,011 INFO  Initialising service address for VerifySolution
2019-03-13 18:32:43,011 INFO  Time before invoking service In SUPER:Wed Mar 13 18:32:43 IST 2019
2019-03-13 18:32:44,199 INFO  Time after invoking service In SUPER:Wed Mar 13 18:32:44 IST 2019
2019-03-13 18:32:44,199 INFO  Service responded successfully with required details
2019-03-13 18:32:44,199 INFO  Time after invoking service:Wed Mar 13 18:32:44 IST 2019
2019-03-13 18:32:44,199 INFO  User solution successfully verified
2019-03-13 18:32:44,199 INFO  Processing the response from verify service
2019-03-13 18:32:44,199 INFO  Starting to parse JSON response
2019-03-13 18:32:44,199 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:32:44,199 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:32:44,199 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:32:44,199 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:32:44,199 INFO  Successfully parsed JSON response
2019-03-13 18:32:44,199 INFO  In the process of generating verify response in HTML
2019-03-13 18:32:44,308 INFO  Successfully generated verify response in HTML
2019-03-13 18:32:44,308 INFO  Successfully processed the response from service
2019-03-13 18:40:16,157 INFO  Setting request parameters for VerifySolution
2019-03-13 18:40:16,157 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 18:40:16,157 INFO  Starting to parse the user solution
2019-03-13 18:40:16,157 INFO  Displaying user solution
2019-03-13 18:40:16,235 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-2\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Car:\r\n    def __init__(self,model,year,registration_number):\r\n        self.__model=model\r\n        self.__year=year\r\n        self.__registration_number=registration_number\r\n\r\n    def get_model(self):\r\n        return self.__model\r\n\r\n    def get_year(self):\r\n        return self.__year\r\n\r\n    def get_registration_number(self):\r\n        return self.__registration_number\r\n\r\n    def __str__(self):\r\n        return(self.__model+\" \"+\r\n               self.__registration_number+\" \"+\r\n               (str)(self.__year))\r\n#Implement Service class here\r\nclass Service:\r\n    def __init__(self,car_list):\r\n        self.__car_list = car_list\r\n\r\n    def get_car_list(self):\r\n        return self.__car_list\r\n\r\n    def find_cars_by_year(self,year):\r\n        car_list =[]\r\n        for i in self.__car_list:\r\n            if(i.get_year()==year):\r\n                car_list.append(i.get_model())\r\n        if(len(car_list)==0):\r\n            return None\r\n        return car_list\r\n    def add_cars(self,new_car_list):\r\n        self.__car_list+=new_car_list\r\n        self.__car_list.sort(key=Car.get_year(), reverse=False)\r\n        \r\n    def remove_cars_from_karnataka(self):\r\n        temp = self.__car_list\r\n        self.__car_list=[]\r\n        for i in temp:\r\n            if(i.get_registration_number()[:2]!='KA'):\r\n                self.__car_list.append(i)\r\n            \r\n            \r\n         \r\n        \r\n\r\ncar1=Car(\"WagonR\",2010,\"KA09 3056\")\r\ncar2=Car(\"Beat\", 2011, \"MH10 6776\")\r\ncar3=Car(\"Ritz\", 2013,\"KA12 9098\")\r\ncar4=Car(\"Polo\",2013,\"GJ01 7854\")\r\ncar5=Car(\"Amaze\",2014,\"KL07 4332\")\r\n#Add different values to the list and test the program\r\ncar_list=[car1, car2, car3, car4,car5]\r\n#Create object of Service class, invoke the methods and test your program\r\n","asgnmtId":"2","SolutionFileName":"Assign2.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 18:40:16,235 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 18:40:16,235 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 18:40:16,235 INFO  Invoking the service to verify the user solution
2019-03-13 18:40:16,235 INFO  Time before invoking service:Wed Mar 13 18:40:16 IST 2019
2019-03-13 18:40:16,235 INFO  Initialising service address for VerifySolution
2019-03-13 18:40:16,235 INFO  Time before invoking service In SUPER:Wed Mar 13 18:40:16 IST 2019
2019-03-13 18:40:17,391 INFO  Time after invoking service In SUPER:Wed Mar 13 18:40:17 IST 2019
2019-03-13 18:40:17,391 INFO  Service responded successfully with required details
2019-03-13 18:40:17,391 INFO  Time after invoking service:Wed Mar 13 18:40:17 IST 2019
2019-03-13 18:40:17,391 INFO  User solution successfully verified
2019-03-13 18:40:17,391 INFO  Processing the response from verify service
2019-03-13 18:40:17,391 INFO  Starting to parse JSON response
2019-03-13 18:40:17,391 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:40:17,407 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:40:17,407 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:40:17,407 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:40:17,407 INFO  Successfully parsed JSON response
2019-03-13 18:40:17,407 INFO  In the process of generating verify response in HTML
2019-03-13 18:40:17,503 INFO  Successfully generated verify response in HTML
2019-03-13 18:40:17,503 INFO  Successfully processed the response from service
2019-03-13 18:44:23,962 INFO  Setting request parameters for VerifySolution
2019-03-13 18:44:23,962 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 18:44:23,962 INFO  Starting to parse the user solution
2019-03-13 18:44:23,963 INFO  Displaying user solution
2019-03-13 18:44:24,066 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-2\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Car:\r\n    def __init__(self,model,year,registration_number):\r\n        self.__model=model\r\n        self.__year=year\r\n        self.__registration_number=registration_number\r\n\r\n    def get_model(self):\r\n        return self.__model\r\n\r\n    def get_year(self):\r\n        return self.__year\r\n\r\n    def get_registration_number(self):\r\n        return self.__registration_number\r\n\r\n    def __str__(self):\r\n        return(self.__model+\" \"+\r\n               self.__registration_number+\" \"+\r\n               (str)(self.__year))\r\n#Implement Service class here\r\nclass Service:\r\n    def __init__(self,car_list):\r\n        self.__car_list = car_list\r\n\r\n    def get_car_list(self):\r\n        return self.__car_list\r\n\r\n    def find_cars_by_year(self,year):\r\n        car_list =[]\r\n        for i in self.__car_list:\r\n            if(i.get_year()==year):\r\n                car_list.append(i.get_model())\r\n        if(len(car_list)==0):\r\n            return None\r\n        return car_list\r\n    def add_cars(self,new_car_list):\r\n        self.__car_list+=new_car_list\r\n        self.__car_list.sort(key=lambda car : car.get_year(), reverse=False)\r\n        \r\n    def remove_cars_from_karnataka(self):\r\n        temp = self.__car_list\r\n        self.__car_list=[]\r\n        for i in temp:\r\n            if(i.get_registration_number()[:2]!='KA'):\r\n                self.__car_list.append(i)\r\n            \r\n            \r\n         \r\n        \r\n\r\ncar1=Car(\"WagonR\",2010,\"KA09 3056\")\r\ncar2=Car(\"Beat\", 2011, \"MH10 6776\")\r\ncar3=Car(\"Ritz\", 2013,\"KA12 9098\")\r\ncar4=Car(\"Polo\",2013,\"GJ01 7854\")\r\ncar5=Car(\"Amaze\",2014,\"KL07 4332\")\r\n#Add different values to the list and test the program\r\ncar_list=[car1, car2, car3, car4,car5]\r\n#Create object of Service class, invoke the methods and test your program\r\n","asgnmtId":"2","SolutionFileName":"Assign2.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 18:44:24,067 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 18:44:24,067 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 18:44:24,067 INFO  Invoking the service to verify the user solution
2019-03-13 18:44:24,067 INFO  Time before invoking service:Wed Mar 13 18:44:24 IST 2019
2019-03-13 18:44:24,067 INFO  Initialising service address for VerifySolution
2019-03-13 18:44:24,068 INFO  Time before invoking service In SUPER:Wed Mar 13 18:44:24 IST 2019
2019-03-13 18:44:25,145 INFO  Time after invoking service In SUPER:Wed Mar 13 18:44:25 IST 2019
2019-03-13 18:44:25,145 INFO  Service responded successfully with required details
2019-03-13 18:44:25,146 INFO  Time after invoking service:Wed Mar 13 18:44:25 IST 2019
2019-03-13 18:44:25,146 INFO  User solution successfully verified
2019-03-13 18:44:25,146 INFO  Processing the response from verify service
2019-03-13 18:44:25,150 INFO  Starting to parse JSON response
2019-03-13 18:44:25,151 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:44:25,151 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:44:25,151 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:44:25,151 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:44:25,153 INFO  Successfully parsed JSON response
2019-03-13 18:44:25,153 INFO  In the process of generating verify response in HTML
2019-03-13 18:44:25,268 INFO  Successfully generated verify response in HTML
2019-03-13 18:44:25,268 INFO  Successfully processed the response from service
2019-03-13 18:46:10,827 INFO  Setting request parameters for VerifySolution
2019-03-13 18:46:10,827 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 18:46:10,827 INFO  Starting to parse the user solution
2019-03-13 18:46:10,827 INFO  Displaying user solution
2019-03-13 18:46:10,890 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-2\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Car:\r\n    def __init__(self,model,year,registration_number):\r\n        self.__model=model\r\n        self.__year=year\r\n        self.__registration_number=registration_number\r\n\r\n    def get_model(self):\r\n        return self.__model\r\n\r\n    def get_year(self):\r\n        return self.__year\r\n\r\n    def get_registration_number(self):\r\n        return self.__registration_number\r\n\r\n    def __str__(self):\r\n        return(self.__model+\" \"+\r\n               self.__registration_number+\" \"+\r\n               (str)(self.__year))\r\n#Implement Service class here\r\nclass Service:\r\n    def __init__(self,car_list):\r\n        self.__car_list = car_list\r\n\r\n    def get_car_list(self):\r\n        return self.__car_list\r\n\r\n    def find_cars_by_year(self,year):\r\n        car_list =[]\r\n        for i in self.__car_list:\r\n            if(i.get_year()==year):\r\n                car_list.append(i.get_model())\r\n        if(len(car_list)==0):\r\n            return None\r\n        return car_list\r\n    def add_cars(self,new_car_list):\r\n        self.__car_list+=new_car_list\r\n        self.__car_list.sort(key=lambda i : i.get_year(), reverse=False)\r\n        \r\n    def remove_cars_from_karnataka(self):\r\n        temp = self.__car_list\r\n        self.__car_list=[]\r\n        for i in temp:\r\n            if(i.get_registration_number()[:2]!='KA'):\r\n                self.__car_list.append(i)\r\n            \r\n            \r\n         \r\n        \r\n\r\ncar1=Car(\"WagonR\",2010,\"KA09 3056\")\r\ncar2=Car(\"Beat\", 2011, \"MH10 6776\")\r\ncar3=Car(\"Ritz\", 2013,\"KA12 9098\")\r\ncar4=Car(\"Polo\",2013,\"GJ01 7854\")\r\ncar5=Car(\"Amaze\",2014,\"KL07 4332\")\r\n#Add different values to the list and test the program\r\ncar_list=[car1, car2, car3, car4,car5]\r\n#Create object of Service class, invoke the methods and test your program\r\n","asgnmtId":"2","SolutionFileName":"Assign2.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 18:46:10,890 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 18:46:10,890 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 18:46:10,890 INFO  Invoking the service to verify the user solution
2019-03-13 18:46:10,890 INFO  Time before invoking service:Wed Mar 13 18:46:10 IST 2019
2019-03-13 18:46:10,890 INFO  Initialising service address for VerifySolution
2019-03-13 18:46:10,890 INFO  Time before invoking service In SUPER:Wed Mar 13 18:46:10 IST 2019
2019-03-13 18:46:11,996 INFO  Time after invoking service In SUPER:Wed Mar 13 18:46:11 IST 2019
2019-03-13 18:46:12,012 INFO  Service responded successfully with required details
2019-03-13 18:46:12,012 INFO  Time after invoking service:Wed Mar 13 18:46:12 IST 2019
2019-03-13 18:46:12,012 INFO  User solution successfully verified
2019-03-13 18:46:12,012 INFO  Processing the response from verify service
2019-03-13 18:46:12,012 INFO  Starting to parse JSON response
2019-03-13 18:46:12,012 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:46:12,012 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:46:12,012 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:46:12,012 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:46:12,012 INFO  Successfully parsed JSON response
2019-03-13 18:46:12,012 INFO  In the process of generating verify response in HTML
2019-03-13 18:46:12,106 INFO  Successfully generated verify response in HTML
2019-03-13 18:46:12,106 INFO  Successfully processed the response from service
2019-03-13 18:47:24,060 INFO  Setting request parameters for VerifySolution
2019-03-13 18:47:24,060 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 18:47:24,060 INFO  Starting to parse the user solution
2019-03-13 18:47:24,060 INFO  Displaying user solution
2019-03-13 18:47:24,122 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-2\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Car:\r\n    def __init__(self,model,year,registration_number):\r\n        self.__model=model\r\n        self.__year=year\r\n        self.__registration_number=registration_number\r\n\r\n    def get_model(self):\r\n        return self.__model\r\n\r\n    def get_year(self):\r\n        return self.__year\r\n\r\n    def get_registration_number(self):\r\n        return self.__registration_number\r\n\r\n    def __str__(self):\r\n        return(self.__model+\" \"+\r\n               self.__registration_number+\" \"+\r\n               (str)(self.__year))\r\n#Implement Service class here\r\nclass Service:\r\n    def __init__(self,car_list):\r\n        self.__car_list = car_list\r\n\r\n    def get_car_list(self):\r\n        return self.__car_list\r\n\r\n    def find_cars_by_year(self,year):\r\n        car_list =[]\r\n        for i in self.__car_list:\r\n            if(i.get_year()==year):\r\n                car_list.append(i.get_model())\r\n        if(len(car_list)==0):\r\n            return None\r\n        return car_list\r\n    def add_cars(self,new_car_list):\r\n        self.__car_list+=new_car_list\r\n        self.__car_list.sort(key=lambda i : i.get_year(), reverse=False)\r\n        \r\n    def remove_cars_from_karnataka(self):\r\n        temp = self.__car_list\r\n        self.__car_list=[]\r\n        for i in temp:\r\n            if(i.get_registration_number()[:2]!='KA'):\r\n                self.__car_list.append(i)\r\n            \r\n            \r\n         \r\n        \r\n\r\ncar1=Car(\"WagonR\",2010,\"KA09 3056\")\r\ncar2=Car(\"Beat\", 2011, \"MH10 6776\")\r\ncar3=Car(\"Ritz\", 2013,\"KA12 9098\")\r\ncar4=Car(\"Polo\",2013,\"GJ01 7854\")\r\ncar5=Car(\"Amaze\",2014,\"KL07 4332\")\r\n#Add different values to the list and test the program\r\ncar_list=[car1, car2, car3, car4,car5]\r\n#Create object of Service class, invoke the methods and test your program\r\n","asgnmtId":"2","SolutionFileName":"Assign2.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 18:47:24,122 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 18:47:24,122 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 18:47:24,122 INFO  Invoking the service to verify the user solution
2019-03-13 18:47:24,122 INFO  Time before invoking service:Wed Mar 13 18:47:24 IST 2019
2019-03-13 18:47:24,122 INFO  Initialising service address for VerifySolution
2019-03-13 18:47:24,122 INFO  Time before invoking service In SUPER:Wed Mar 13 18:47:24 IST 2019
2019-03-13 18:47:25,324 INFO  Time after invoking service In SUPER:Wed Mar 13 18:47:25 IST 2019
2019-03-13 18:47:25,324 INFO  Service responded successfully with required details
2019-03-13 18:47:25,324 INFO  Time after invoking service:Wed Mar 13 18:47:25 IST 2019
2019-03-13 18:47:25,324 INFO  User solution successfully verified
2019-03-13 18:47:25,324 INFO  Processing the response from verify service
2019-03-13 18:47:25,340 INFO  Starting to parse JSON response
2019-03-13 18:47:25,340 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:47:25,340 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:47:25,340 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:47:25,340 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:47:25,340 INFO  Successfully parsed JSON response
2019-03-13 18:47:25,340 INFO  In the process of generating verify response in HTML
2019-03-13 18:47:25,434 INFO  Successfully generated verify response in HTML
2019-03-13 18:47:25,434 INFO  Successfully processed the response from service
2019-03-13 18:52:09,759 INFO  Setting request parameters for VerifySolution
2019-03-13 18:52:09,759 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 18:52:09,759 INFO  Starting to parse the user solution
2019-03-13 18:52:09,759 INFO  Displaying user solution
2019-03-13 18:52:09,837 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-2\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Car:\r\n    def __init__(self,model,year,registration_number):\r\n        self.__model=model\r\n        self.__year=year\r\n        self.__registration_number=registration_number\r\n\r\n    def get_model(self):\r\n        return self.__model\r\n\r\n    def get_year(self):\r\n        return self.__year\r\n\r\n    def get_registration_number(self):\r\n        return self.__registration_number\r\n\r\n    def __str__(self):\r\n        return(self.__model+\" \"+\r\n               self.__registration_number+\" \"+\r\n               (str)(self.__year))\r\n#Implement Service class here\r\nclass Service:\r\n    def __init__(self,car_list):\r\n        self.__car_list = car_list\r\n\r\n    def get_car_list(self):\r\n        return self.__car_list\r\n\r\n    def find_cars_by_year(self,year):\r\n        car_list =[]\r\n        for i in self.__car_list:\r\n            if(i.get_year()==year):\r\n                car_list.append(i.get_model())\r\n        if(len(car_list)==0):\r\n            return None\r\n        return car_list\r\n    def add_cars(self,new_car_list):\r\n        self.__car_list+=new_car_list\r\n        sorted(self.__car_list,key=lambda i:i.get_year())\r\n        \r\n    def remove_cars_from_karnataka(self):\r\n        temp = self.__car_list\r\n        self.__car_list=[]\r\n        for i in temp:\r\n            if(i.get_registration_number()[:2]!='KA'):\r\n                self.__car_list.append(i)\r\n            \r\n            \r\n         \r\n        \r\n\r\ncar1=Car(\"WagonR\",2010,\"KA09 3056\")\r\ncar2=Car(\"Beat\", 2011, \"MH10 6776\")\r\ncar3=Car(\"Ritz\", 2013,\"KA12 9098\")\r\ncar4=Car(\"Polo\",2013,\"GJ01 7854\")\r\ncar5=Car(\"Amaze\",2014,\"KL07 4332\")\r\n#Add different values to the list and test the program\r\ncar_list=[car1, car2, car3, car4,car5]\r\n#Create object of Service class, invoke the methods and test your program\r\n","asgnmtId":"2","SolutionFileName":"Assign2.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 18:52:09,837 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 18:52:09,837 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 18:52:09,837 INFO  Invoking the service to verify the user solution
2019-03-13 18:52:09,837 INFO  Time before invoking service:Wed Mar 13 18:52:09 IST 2019
2019-03-13 18:52:09,837 INFO  Initialising service address for VerifySolution
2019-03-13 18:52:09,837 INFO  Time before invoking service In SUPER:Wed Mar 13 18:52:09 IST 2019
2019-03-13 18:52:10,938 INFO  Time after invoking service In SUPER:Wed Mar 13 18:52:10 IST 2019
2019-03-13 18:52:10,938 INFO  Service responded successfully with required details
2019-03-13 18:52:10,938 INFO  Time after invoking service:Wed Mar 13 18:52:10 IST 2019
2019-03-13 18:52:10,938 INFO  User solution successfully verified
2019-03-13 18:52:10,938 INFO  Processing the response from verify service
2019-03-13 18:52:10,953 INFO  Starting to parse JSON response
2019-03-13 18:52:10,953 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:52:10,953 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:52:10,953 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:52:10,953 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:52:10,953 INFO  Successfully parsed JSON response
2019-03-13 18:52:10,953 INFO  In the process of generating verify response in HTML
2019-03-13 18:52:11,041 INFO  Successfully generated verify response in HTML
2019-03-13 18:52:11,041 INFO  Successfully processed the response from service
2019-03-13 18:52:59,803 INFO  Setting request parameters for VerifySolution
2019-03-13 18:52:59,803 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 18:52:59,803 INFO  Starting to parse the user solution
2019-03-13 18:52:59,819 INFO  Displaying user solution
2019-03-13 18:52:59,881 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-2\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Car:\r\n    def __init__(self,model,year,registration_number):\r\n        self.__model=model\r\n        self.__year=year\r\n        self.__registration_number=registration_number\r\n\r\n    def get_model(self):\r\n        return self.__model\r\n\r\n    def get_year(self):\r\n        return self.__year\r\n\r\n    def get_registration_number(self):\r\n        return self.__registration_number\r\n\r\n    def __str__(self):\r\n        return(self.__model+\" \"+\r\n               self.__registration_number+\" \"+\r\n               (str)(self.__year))\r\n#Implement Service class here\r\nclass Service:\r\n    def __init__(self,car_list):\r\n        self.__car_list = car_list\r\n\r\n    def get_car_list(self):\r\n        return self.__car_list\r\n\r\n    def find_cars_by_year(self,year):\r\n        car_list =[]\r\n        for i in self.__car_list:\r\n            if(i.get_year()==year):\r\n                car_list.append(i.get_model())\r\n        if(len(car_list)==0):\r\n            return None\r\n        return car_list\r\n    def add_cars(self,new_car_list):\r\n        self.__car_list+=new_car_list\r\n        self.__car_list.sort(key=Car.get_year(self), reverse=False)\r\n        \r\n    def remove_cars_from_karnataka(self):\r\n        temp = self.__car_list\r\n        self.__car_list=[]\r\n        for i in temp:\r\n            if(i.get_registration_number()[:2]!='KA'):\r\n                self.__car_list.append(i)\r\n            \r\n            \r\n         \r\n        \r\n\r\ncar1=Car(\"WagonR\",2010,\"KA09 3056\")\r\ncar2=Car(\"Beat\", 2011, \"MH10 6776\")\r\ncar3=Car(\"Ritz\", 2013,\"KA12 9098\")\r\ncar4=Car(\"Polo\",2013,\"GJ01 7854\")\r\ncar5=Car(\"Amaze\",2014,\"KL07 4332\")\r\n#Add different values to the list and test the program\r\ncar_list=[car1, car2, car3, car4,car5]\r\n#Create object of Service class, invoke the methods and test your program\r\n","asgnmtId":"2","SolutionFileName":"Assign2.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 18:52:59,881 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 18:52:59,881 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 18:52:59,881 INFO  Invoking the service to verify the user solution
2019-03-13 18:52:59,881 INFO  Time before invoking service:Wed Mar 13 18:52:59 IST 2019
2019-03-13 18:52:59,881 INFO  Initialising service address for VerifySolution
2019-03-13 18:52:59,881 INFO  Time before invoking service In SUPER:Wed Mar 13 18:52:59 IST 2019
2019-03-13 18:53:01,181 INFO  Time after invoking service In SUPER:Wed Mar 13 18:53:01 IST 2019
2019-03-13 18:53:01,197 INFO  Service responded successfully with required details
2019-03-13 18:53:01,197 INFO  Time after invoking service:Wed Mar 13 18:53:01 IST 2019
2019-03-13 18:53:01,197 INFO  User solution successfully verified
2019-03-13 18:53:01,197 INFO  Processing the response from verify service
2019-03-13 18:53:01,197 INFO  Starting to parse JSON response
2019-03-13 18:53:01,197 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:53:01,197 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:53:01,197 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:53:01,197 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:53:01,197 INFO  Successfully parsed JSON response
2019-03-13 18:53:01,197 INFO  In the process of generating verify response in HTML
2019-03-13 18:53:01,272 INFO  Successfully generated verify response in HTML
2019-03-13 18:53:01,272 INFO  Successfully processed the response from service
2019-03-13 18:53:20,293 INFO  Setting request parameters for VerifySolution
2019-03-13 18:53:20,293 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 18:53:20,293 INFO  Starting to parse the user solution
2019-03-13 18:53:20,293 INFO  Displaying user solution
2019-03-13 18:53:20,365 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-2\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Car:\r\n    def __init__(self,model,year,registration_number):\r\n        self.__model=model\r\n        self.__year=year\r\n        self.__registration_number=registration_number\r\n\r\n    def get_model(self):\r\n        return self.__model\r\n\r\n    def get_year(self):\r\n        return self.__year\r\n\r\n    def get_registration_number(self):\r\n        return self.__registration_number\r\n\r\n    def __str__(self):\r\n        return(self.__model+\" \"+\r\n               self.__registration_number+\" \"+\r\n               (str)(self.__year))\r\n#Implement Service class here\r\nclass Service:\r\n    def __init__(self,car_list):\r\n        self.__car_list = car_list\r\n\r\n    def get_car_list(self):\r\n        return self.__car_list\r\n\r\n    def find_cars_by_year(self,year):\r\n        car_list =[]\r\n        for i in self.__car_list:\r\n            if(i.get_year()==year):\r\n                car_list.append(i.get_model())\r\n        if(len(car_list)==0):\r\n            return None\r\n        return car_list\r\n    def add_cars(self,new_car_list):\r\n        self.__car_list+=new_car_list\r\n        self.__car_list.sort(key=lambda Car:Car.get_year(self), reverse=False)\r\n        \r\n    def remove_cars_from_karnataka(self):\r\n        temp = self.__car_list\r\n        self.__car_list=[]\r\n        for i in temp:\r\n            if(i.get_registration_number()[:2]!='KA'):\r\n                self.__car_list.append(i)\r\n            \r\n            \r\n         \r\n        \r\n\r\ncar1=Car(\"WagonR\",2010,\"KA09 3056\")\r\ncar2=Car(\"Beat\", 2011, \"MH10 6776\")\r\ncar3=Car(\"Ritz\", 2013,\"KA12 9098\")\r\ncar4=Car(\"Polo\",2013,\"GJ01 7854\")\r\ncar5=Car(\"Amaze\",2014,\"KL07 4332\")\r\n#Add different values to the list and test the program\r\ncar_list=[car1, car2, car3, car4,car5]\r\n#Create object of Service class, invoke the methods and test your program\r\n","asgnmtId":"2","SolutionFileName":"Assign2.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 18:53:20,365 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 18:53:20,365 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 18:53:20,365 INFO  Invoking the service to verify the user solution
2019-03-13 18:53:20,365 INFO  Time before invoking service:Wed Mar 13 18:53:20 IST 2019
2019-03-13 18:53:20,365 INFO  Initialising service address for VerifySolution
2019-03-13 18:53:20,365 INFO  Time before invoking service In SUPER:Wed Mar 13 18:53:20 IST 2019
2019-03-13 18:53:21,598 INFO  Time after invoking service In SUPER:Wed Mar 13 18:53:21 IST 2019
2019-03-13 18:53:21,598 INFO  Service responded successfully with required details
2019-03-13 18:53:21,598 INFO  Time after invoking service:Wed Mar 13 18:53:21 IST 2019
2019-03-13 18:53:21,598 INFO  User solution successfully verified
2019-03-13 18:53:21,598 INFO  Processing the response from verify service
2019-03-13 18:53:21,598 INFO  Starting to parse JSON response
2019-03-13 18:53:21,598 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:53:21,598 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:53:21,598 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:53:21,598 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:53:21,598 INFO  Successfully parsed JSON response
2019-03-13 18:53:21,598 INFO  In the process of generating verify response in HTML
2019-03-13 18:53:21,663 INFO  Successfully generated verify response in HTML
2019-03-13 18:53:21,663 INFO  Successfully processed the response from service
2019-03-13 18:53:34,774 INFO  Setting request parameters for VerifySolution
2019-03-13 18:53:34,774 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 18:53:34,774 INFO  Starting to parse the user solution
2019-03-13 18:53:34,774 INFO  Displaying user solution
2019-03-13 18:53:34,859 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-2\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Car:\r\n    def __init__(self,model,year,registration_number):\r\n        self.__model=model\r\n        self.__year=year\r\n        self.__registration_number=registration_number\r\n\r\n    def get_model(self):\r\n        return self.__model\r\n\r\n    def get_year(self):\r\n        return self.__year\r\n\r\n    def get_registration_number(self):\r\n        return self.__registration_number\r\n\r\n    def __str__(self):\r\n        return(self.__model+\" \"+\r\n               self.__registration_number+\" \"+\r\n               (str)(self.__year))\r\n#Implement Service class here\r\nclass Service:\r\n    def __init__(self,car_list):\r\n        self.__car_list = car_list\r\n\r\n    def get_car_list(self):\r\n        return self.__car_list\r\n\r\n    def find_cars_by_year(self,year):\r\n        car_list =[]\r\n        for i in self.__car_list:\r\n            if(i.get_year()==year):\r\n                car_list.append(i.get_model())\r\n        if(len(car_list)==0):\r\n            return None\r\n        return car_list\r\n    def add_cars(self,new_car_list):\r\n        self.__car_list+=new_car_list\r\n        self.__car_list.sort(key=lambda car:car.get_year(self), reverse=False)\r\n        \r\n    def remove_cars_from_karnataka(self):\r\n        temp = self.__car_list\r\n        self.__car_list=[]\r\n        for i in temp:\r\n            if(i.get_registration_number()[:2]!='KA'):\r\n                self.__car_list.append(i)\r\n            \r\n            \r\n         \r\n        \r\n\r\ncar1=Car(\"WagonR\",2010,\"KA09 3056\")\r\ncar2=Car(\"Beat\", 2011, \"MH10 6776\")\r\ncar3=Car(\"Ritz\", 2013,\"KA12 9098\")\r\ncar4=Car(\"Polo\",2013,\"GJ01 7854\")\r\ncar5=Car(\"Amaze\",2014,\"KL07 4332\")\r\n#Add different values to the list and test the program\r\ncar_list=[car1, car2, car3, car4,car5]\r\n#Create object of Service class, invoke the methods and test your program\r\n","asgnmtId":"2","SolutionFileName":"Assign2.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 18:53:34,859 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 18:53:34,859 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 18:53:34,859 INFO  Invoking the service to verify the user solution
2019-03-13 18:53:34,859 INFO  Time before invoking service:Wed Mar 13 18:53:34 IST 2019
2019-03-13 18:53:34,859 INFO  Initialising service address for VerifySolution
2019-03-13 18:53:34,859 INFO  Time before invoking service In SUPER:Wed Mar 13 18:53:34 IST 2019
2019-03-13 18:53:35,938 INFO  Time after invoking service In SUPER:Wed Mar 13 18:53:35 IST 2019
2019-03-13 18:53:35,938 INFO  Service responded successfully with required details
2019-03-13 18:53:35,938 INFO  Time after invoking service:Wed Mar 13 18:53:35 IST 2019
2019-03-13 18:53:35,938 INFO  User solution successfully verified
2019-03-13 18:53:35,938 INFO  Processing the response from verify service
2019-03-13 18:53:35,938 INFO  Starting to parse JSON response
2019-03-13 18:53:35,938 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:53:35,938 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:53:35,938 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:53:35,938 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:53:35,938 INFO  Successfully parsed JSON response
2019-03-13 18:53:35,938 INFO  In the process of generating verify response in HTML
2019-03-13 18:53:36,015 INFO  Successfully generated verify response in HTML
2019-03-13 18:53:36,015 INFO  Successfully processed the response from service
2019-03-13 18:53:48,462 INFO  Setting request parameters for VerifySolution
2019-03-13 18:53:48,462 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 18:53:48,462 INFO  Starting to parse the user solution
2019-03-13 18:53:48,462 INFO  Displaying user solution
2019-03-13 18:53:48,556 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-2\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Car:\r\n    def __init__(self,model,year,registration_number):\r\n        self.__model=model\r\n        self.__year=year\r\n        self.__registration_number=registration_number\r\n\r\n    def get_model(self):\r\n        return self.__model\r\n\r\n    def get_year(self):\r\n        return self.__year\r\n\r\n    def get_registration_number(self):\r\n        return self.__registration_number\r\n\r\n    def __str__(self):\r\n        return(self.__model+\" \"+\r\n               self.__registration_number+\" \"+\r\n               (str)(self.__year))\r\n#Implement Service class here\r\nclass Service:\r\n    def __init__(self,car_list):\r\n        self.__car_list = car_list\r\n\r\n    def get_car_list(self):\r\n        return self.__car_list\r\n\r\n    def find_cars_by_year(self,year):\r\n        car_list =[]\r\n        for i in self.__car_list:\r\n            if(i.get_year()==year):\r\n                car_list.append(i.get_model())\r\n        if(len(car_list)==0):\r\n            return None\r\n        return car_list\r\n    def add_cars(self,new_car_list):\r\n        self.__car_list+=new_car_list\r\n        self.__car_list.sort(key=lambda car:car.get_year(self), reverse=False)\r\n        \r\n    def remove_cars_from_karnataka(self):\r\n        temp = self.__car_list\r\n        self.__car_list=[]\r\n        for i in temp:\r\n            if(i.get_registration_number()[:2]!='KA'):\r\n                self.__car_list.append(i)\r\n            \r\n            \r\n         \r\n        \r\n\r\ncar1=Car(\"WagonR\",2010,\"KA09 3056\")\r\ncar2=Car(\"Beat\", 2011, \"MH10 6776\")\r\ncar3=Car(\"Ritz\", 2013,\"KA12 9098\")\r\ncar4=Car(\"Polo\",2013,\"GJ01 7854\")\r\ncar5=Car(\"Amaze\",2014,\"KL07 4332\")\r\n#Add different values to the list and test the program\r\ncar_list=[car1, car2, car3, car4,car5]\r\n#Create object of Service class, invoke the methods and test your program\r\n","asgnmtId":"2","SolutionFileName":"Assign2.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 18:53:48,556 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 18:53:48,556 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 18:53:48,556 INFO  Invoking the service to verify the user solution
2019-03-13 18:53:48,556 INFO  Time before invoking service:Wed Mar 13 18:53:48 IST 2019
2019-03-13 18:53:48,556 INFO  Initialising service address for VerifySolution
2019-03-13 18:53:48,556 INFO  Time before invoking service In SUPER:Wed Mar 13 18:53:48 IST 2019
2019-03-13 18:53:49,573 INFO  Time after invoking service In SUPER:Wed Mar 13 18:53:49 IST 2019
2019-03-13 18:53:49,573 INFO  Service responded successfully with required details
2019-03-13 18:53:49,573 INFO  Time after invoking service:Wed Mar 13 18:53:49 IST 2019
2019-03-13 18:53:49,573 INFO  User solution successfully verified
2019-03-13 18:53:49,573 INFO  Processing the response from verify service
2019-03-13 18:53:49,589 INFO  Starting to parse JSON response
2019-03-13 18:53:49,589 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:53:49,589 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:53:49,589 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:53:49,589 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:53:49,589 INFO  Successfully parsed JSON response
2019-03-13 18:53:49,589 INFO  In the process of generating verify response in HTML
2019-03-13 18:53:49,658 INFO  Successfully generated verify response in HTML
2019-03-13 18:53:49,658 INFO  Successfully processed the response from service
2019-03-13 18:53:56,858 INFO  Setting request parameters for VerifySolution
2019-03-13 18:53:56,858 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 18:53:56,858 INFO  Starting to parse the user solution
2019-03-13 18:53:56,858 INFO  Displaying user solution
2019-03-13 18:53:56,939 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-2\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Car:\r\n    def __init__(self,model,year,registration_number):\r\n        self.__model=model\r\n        self.__year=year\r\n        self.__registration_number=registration_number\r\n\r\n    def get_model(self):\r\n        return self.__model\r\n\r\n    def get_year(self):\r\n        return self.__year\r\n\r\n    def get_registration_number(self):\r\n        return self.__registration_number\r\n\r\n    def __str__(self):\r\n        return(self.__model+\" \"+\r\n               self.__registration_number+\" \"+\r\n               (str)(self.__year))\r\n#Implement Service class here\r\nclass Service:\r\n    def __init__(self,car_list):\r\n        self.__car_list = car_list\r\n\r\n    def get_car_list(self):\r\n        return self.__car_list\r\n\r\n    def find_cars_by_year(self,year):\r\n        car_list =[]\r\n        for i in self.__car_list:\r\n            if(i.get_year()==year):\r\n                car_list.append(i.get_model())\r\n        if(len(car_list)==0):\r\n            return None\r\n        return car_list\r\n    def add_cars(self,new_car_list):\r\n        self.__car_list+=new_car_list\r\n        self.__car_list.sort(key=lambda car:car.get_year(), reverse=False)\r\n        \r\n    def remove_cars_from_karnataka(self):\r\n        temp = self.__car_list\r\n        self.__car_list=[]\r\n        for i in temp:\r\n            if(i.get_registration_number()[:2]!='KA'):\r\n                self.__car_list.append(i)\r\n            \r\n            \r\n         \r\n        \r\n\r\ncar1=Car(\"WagonR\",2010,\"KA09 3056\")\r\ncar2=Car(\"Beat\", 2011, \"MH10 6776\")\r\ncar3=Car(\"Ritz\", 2013,\"KA12 9098\")\r\ncar4=Car(\"Polo\",2013,\"GJ01 7854\")\r\ncar5=Car(\"Amaze\",2014,\"KL07 4332\")\r\n#Add different values to the list and test the program\r\ncar_list=[car1, car2, car3, car4,car5]\r\n#Create object of Service class, invoke the methods and test your program\r\n","asgnmtId":"2","SolutionFileName":"Assign2.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 18:53:56,939 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 18:53:56,939 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 18:53:56,939 INFO  Invoking the service to verify the user solution
2019-03-13 18:53:56,939 INFO  Time before invoking service:Wed Mar 13 18:53:56 IST 2019
2019-03-13 18:53:56,939 INFO  Initialising service address for VerifySolution
2019-03-13 18:53:56,939 INFO  Time before invoking service In SUPER:Wed Mar 13 18:53:56 IST 2019
2019-03-13 18:53:57,995 INFO  Time after invoking service In SUPER:Wed Mar 13 18:53:57 IST 2019
2019-03-13 18:53:57,995 INFO  Service responded successfully with required details
2019-03-13 18:53:57,995 INFO  Time after invoking service:Wed Mar 13 18:53:57 IST 2019
2019-03-13 18:53:57,995 INFO  User solution successfully verified
2019-03-13 18:53:57,995 INFO  Processing the response from verify service
2019-03-13 18:53:58,011 INFO  Starting to parse JSON response
2019-03-13 18:53:58,011 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:53:58,011 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:53:58,011 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:53:58,011 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:53:58,011 INFO  Successfully parsed JSON response
2019-03-13 18:53:58,011 INFO  In the process of generating verify response in HTML
2019-03-13 18:53:58,073 INFO  Successfully generated verify response in HTML
2019-03-13 18:53:58,073 INFO  Successfully processed the response from service
2019-03-13 18:54:08,385 INFO  Initiating to process and prepare Input for the submit service
2019-03-13 18:54:08,385 INFO  Displaying user solution
2019-03-13 18:54:08,401 INFO  Successfully processed and prepared the input for the submit service
2019-03-13 18:54:08,401 INFO  Invoking the service to submit the user solution
2019-03-13 18:54:08,401 INFO  Initialising service address for Submit
2019-03-13 18:54:08,401 INFO  Time before invoking service In SUPER:Wed Mar 13 18:54:08 IST 2019
2019-03-13 18:54:09,102 INFO  Time after invoking service In SUPER:Wed Mar 13 18:54:09 IST 2019
2019-03-13 18:54:09,102 INFO  Service responded successfully with required details
2019-03-13 18:54:09,102 INFO  User solution successfully submitted
2019-03-13 18:54:09,102 INFO  Displaying submission status
2019-03-13 18:54:09,102 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-13 18:54:11,681 INFO  Initiating to process and prepare Input for the submit service
2019-03-13 18:54:11,681 INFO  Displaying user solution
2019-03-13 18:54:11,697 INFO  Successfully processed and prepared the input for the submit service
2019-03-13 18:54:11,697 INFO  Invoking the service to submit the user solution
2019-03-13 18:54:11,697 INFO  Initialising service address for Submit
2019-03-13 18:54:11,697 INFO  Time before invoking service In SUPER:Wed Mar 13 18:54:11 IST 2019
2019-03-13 18:54:12,027 INFO  Time after invoking service In SUPER:Wed Mar 13 18:54:12 IST 2019
2019-03-13 18:54:12,027 INFO  Service responded successfully with required details
2019-03-13 18:54:12,027 INFO  User solution successfully submitted
2019-03-13 18:54:12,027 INFO  Displaying submission status
2019-03-13 18:54:12,027 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-13 18:54:14,188 INFO  Setting request parameters for VerifySolution
2019-03-13 18:54:14,188 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 18:54:14,188 INFO  Starting to parse the user solution
2019-03-13 18:54:14,188 INFO  Displaying user solution
2019-03-13 18:54:14,287 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-2\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Car:\r\n    def __init__(self,model,year,registration_number):\r\n        self.__model=model\r\n        self.__year=year\r\n        self.__registration_number=registration_number\r\n\r\n    def get_model(self):\r\n        return self.__model\r\n\r\n    def get_year(self):\r\n        return self.__year\r\n\r\n    def get_registration_number(self):\r\n        return self.__registration_number\r\n\r\n    def __str__(self):\r\n        return(self.__model+\" \"+\r\n               self.__registration_number+\" \"+\r\n               (str)(self.__year))\r\n#Implement Service class here\r\nclass Service:\r\n    def __init__(self,car_list):\r\n        self.__car_list = car_list\r\n\r\n    def get_car_list(self):\r\n        return self.__car_list\r\n\r\n    def find_cars_by_year(self,year):\r\n        car_list =[]\r\n        for i in self.__car_list:\r\n            if(i.get_year()==year):\r\n                car_list.append(i.get_model())\r\n        if(len(car_list)==0):\r\n            return None\r\n        return car_list\r\n    def add_cars(self,new_car_list):\r\n        self.__car_list+=new_car_list\r\n        self.__car_list.sort(key=lambda car:car.get_year(), reverse=False)\r\n        \r\n    def remove_cars_from_karnataka(self):\r\n        temp = self.__car_list\r\n        self.__car_list=[]\r\n        for i in temp:\r\n            if(i.get_registration_number()[:2]!='KA'):\r\n                self.__car_list.append(i)\r\n            \r\n            \r\n         \r\n        \r\n\r\ncar1=Car(\"WagonR\",2010,\"KA09 3056\")\r\ncar2=Car(\"Beat\", 2011, \"MH10 6776\")\r\ncar3=Car(\"Ritz\", 2013,\"KA12 9098\")\r\ncar4=Car(\"Polo\",2013,\"GJ01 7854\")\r\ncar5=Car(\"Amaze\",2014,\"KL07 4332\")\r\n#Add different values to the list and test the program\r\ncar_list=[car1, car2, car3, car4,car5]\r\n#Create object of Service class, invoke the methods and test your program\r\n","asgnmtId":"2","SolutionFileName":"Assign2.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 18:54:14,287 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 18:54:14,287 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 18:54:14,287 INFO  Invoking the service to verify the user solution
2019-03-13 18:54:14,287 INFO  Time before invoking service:Wed Mar 13 18:54:14 IST 2019
2019-03-13 18:54:14,287 INFO  Initialising service address for VerifySolution
2019-03-13 18:54:14,287 INFO  Time before invoking service In SUPER:Wed Mar 13 18:54:14 IST 2019
2019-03-13 18:54:15,280 INFO  Time after invoking service In SUPER:Wed Mar 13 18:54:15 IST 2019
2019-03-13 18:54:15,280 INFO  Service responded successfully with required details
2019-03-13 18:54:15,280 INFO  Time after invoking service:Wed Mar 13 18:54:15 IST 2019
2019-03-13 18:54:15,280 INFO  User solution successfully verified
2019-03-13 18:54:15,280 INFO  Processing the response from verify service
2019-03-13 18:54:15,280 INFO  Starting to parse JSON response
2019-03-13 18:54:15,280 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:54:15,280 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:54:15,280 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:54:15,280 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:54:15,280 INFO  Successfully parsed JSON response
2019-03-13 18:54:15,280 INFO  In the process of generating verify response in HTML
2019-03-13 18:54:15,389 INFO  Successfully generated verify response in HTML
2019-03-13 18:54:15,389 INFO  Successfully processed the response from service
2019-03-13 18:54:24,180 INFO  Setting request parameters for VerifySolution
2019-03-13 18:54:24,180 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 18:54:24,180 INFO  Starting to parse the user solution
2019-03-13 18:54:24,180 INFO  Displaying user solution
2019-03-13 18:54:24,243 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-4\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Player:\r\n    def __init__(self,name,experience):\r\n        self.__name=name\r\n        self.__experience=experience\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n\r\n    def get_experience(self):\r\n        return self.__experience\r\n\r\n    def __str__(self):\r\n        return(self.__name+\" \"+(str)(self.__experience))\r\n\r\n#Implement Game class here\r\nclass Game(Player):\r\n    def __init__(self,players_list):\r\n        self.__players_list = players_list\r\n    def sort_players_based_on_experience(self):\r\n        pass\r\n    def shift_player_to_new_position(self,old_index_position, new_index_position):\r\n        pass\r\n    def display_player_details(self):\r\n        pass\r\n\r\nplayer1=Player(\"Dhoni\",15)\r\nplayer2=Player(\"Virat\",10)\r\nplayer3=Player(\"Rohit\",12)\r\nplayer4=Player(\"Raina\",11)\r\nplayer5=Player(\"Jadeja\",13)\r\nplayer6=Player(\"Ishant\",9)\r\nplayer7=Player(\"Shikhar\",8)\r\nplayer8=Player(\"Axar\",7.5)\r\nplayer9=Player(\"Ashwin\",6)\r\nplayer10=Player(\"Stuart\",7)\r\nplayer11=Player(\"Bhuvneshwar\",5)\r\n#Add different values to the list and test the program\r\nplayers_list=[player1,player2,player3,player4,player5,player6,player7,player8,player9,player10,player11]\r\n#Create object of Game class, invoke the methods and test your program\r\n","asgnmtId":"4","SolutionFileName":"Assign4.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 18:54:24,243 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 18:54:24,243 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 18:54:24,243 INFO  Invoking the service to verify the user solution
2019-03-13 18:54:24,258 INFO  Time before invoking service:Wed Mar 13 18:54:24 IST 2019
2019-03-13 18:54:24,258 INFO  Initialising service address for VerifySolution
2019-03-13 18:54:24,258 INFO  Time before invoking service In SUPER:Wed Mar 13 18:54:24 IST 2019
2019-03-13 18:54:25,324 INFO  Time after invoking service In SUPER:Wed Mar 13 18:54:25 IST 2019
2019-03-13 18:54:25,339 INFO  Service responded successfully with required details
2019-03-13 18:54:25,339 INFO  Time after invoking service:Wed Mar 13 18:54:25 IST 2019
2019-03-13 18:54:25,339 INFO  User solution successfully verified
2019-03-13 18:54:25,339 INFO  Processing the response from verify service
2019-03-13 18:54:25,339 INFO  Starting to parse JSON response
2019-03-13 18:54:25,339 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:54:25,339 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:54:25,339 INFO  Successfully parsed JSON response
2019-03-13 18:54:25,339 INFO  In the process of generating verify response in HTML
2019-03-13 18:54:25,433 INFO  Successfully generated verify response in HTML
2019-03-13 18:54:25,433 INFO  Successfully processed the response from service
2019-03-13 18:55:28,551 INFO  Setting request parameters for VerifySolution
2019-03-13 18:55:28,551 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 18:55:28,551 INFO  Starting to parse the user solution
2019-03-13 18:55:28,567 INFO  Displaying user solution
2019-03-13 18:55:28,629 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-2\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Car:\r\n    def __init__(self,model,year,registration_number):\r\n        self.__model=model\r\n        self.__year=year\r\n        self.__registration_number=registration_number\r\n\r\n    def get_model(self):\r\n        return self.__model\r\n\r\n    def get_year(self):\r\n        return self.__year\r\n\r\n    def get_registration_number(self):\r\n        return self.__registration_number\r\n\r\n    def __str__(self):\r\n        return(self.__model+\" \"+\r\n               self.__registration_number+\" \"+\r\n               (str)(self.__year))\r\n#Implement Service class here\r\nclass Service:\r\n    def __init__(self,car_list):\r\n        self.__car_list = car_list\r\n\r\n    def get_car_list(self):\r\n        return self.__car_list\r\n\r\n    def find_cars_by_year(self,year):\r\n        car_list =[]\r\n        for i in self.__car_list:\r\n            if(i.get_year()==year):\r\n                car_list.append(i.get_model())\r\n        if(len(car_list)==0):\r\n            return None\r\n        return car_list\r\n    def add_cars(self,new_car_list):\r\n        self.__car_list+=new_car_list\r\n        self.__car_list.sort(key=lambda i:i.get_year(), reverse=False)\r\n        \r\n    def remove_cars_from_karnataka(self):\r\n        temp = self.__car_list\r\n        self.__car_list=[]\r\n        for i in temp:\r\n            if(i.get_registration_number()[:2]!='KA'):\r\n                self.__car_list.append(i)\r\n            \r\n            \r\n         \r\n        \r\n\r\ncar1=Car(\"WagonR\",2010,\"KA09 3056\")\r\ncar2=Car(\"Beat\", 2011, \"MH10 6776\")\r\ncar3=Car(\"Ritz\", 2013,\"KA12 9098\")\r\ncar4=Car(\"Polo\",2013,\"GJ01 7854\")\r\ncar5=Car(\"Amaze\",2014,\"KL07 4332\")\r\n#Add different values to the list and test the program\r\ncar_list=[car1, car2, car3, car4,car5]\r\n#Create object of Service class, invoke the methods and test your program\r\n","asgnmtId":"2","SolutionFileName":"Assign2.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 18:55:28,629 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 18:55:28,629 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 18:55:28,629 INFO  Invoking the service to verify the user solution
2019-03-13 18:55:28,629 INFO  Time before invoking service:Wed Mar 13 18:55:28 IST 2019
2019-03-13 18:55:28,629 INFO  Initialising service address for VerifySolution
2019-03-13 18:55:28,629 INFO  Time before invoking service In SUPER:Wed Mar 13 18:55:28 IST 2019
2019-03-13 18:55:29,779 INFO  Time after invoking service In SUPER:Wed Mar 13 18:55:29 IST 2019
2019-03-13 18:55:29,779 INFO  Service responded successfully with required details
2019-03-13 18:55:29,779 INFO  Time after invoking service:Wed Mar 13 18:55:29 IST 2019
2019-03-13 18:55:29,779 INFO  User solution successfully verified
2019-03-13 18:55:29,779 INFO  Processing the response from verify service
2019-03-13 18:55:29,794 INFO  Starting to parse JSON response
2019-03-13 18:55:29,794 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:55:29,794 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:55:29,794 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:55:29,794 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:55:29,794 INFO  Successfully parsed JSON response
2019-03-13 18:55:29,794 INFO  In the process of generating verify response in HTML
2019-03-13 18:55:29,886 INFO  Successfully generated verify response in HTML
2019-03-13 18:55:29,886 INFO  Successfully processed the response from service
2019-03-13 18:55:55,607 INFO  Setting request parameters for VerifySolution
2019-03-13 18:55:55,607 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 18:55:55,607 INFO  Starting to parse the user solution
2019-03-13 18:55:55,607 INFO  Displaying user solution
2019-03-13 18:55:55,710 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-2\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Car:\r\n    def __init__(self,model,year,registration_number):\r\n        self.__model=model\r\n        self.__year=year\r\n        self.__registration_number=registration_number\r\n\r\n    def get_model(self):\r\n        return self.__model\r\n\r\n    def get_year(self):\r\n        return self.__year\r\n\r\n    def get_registration_number(self):\r\n        return self.__registration_number\r\n\r\n    def __str__(self):\r\n        return(self.__model+\" \"+\r\n               self.__registration_number+\" \"+\r\n               (str)(self.__year))\r\n#Implement Service class here\r\nclass Service:\r\n    def __init__(self,car_list):\r\n        self.__car_list = car_list\r\n\r\n    def get_car_list(self):\r\n        return self.__car_list\r\n\r\n    def find_cars_by_year(self,year):\r\n        car_list =[]\r\n        for i in self.__car_list:\r\n            if(i.get_year()==year):\r\n                car_list.append(i.get_model())\r\n        if(len(car_list)==0):\r\n            return None\r\n        return car_list\r\n    def add_cars(self,new_car_list):\r\n        self.__car_list+=new_car_list\r\n        self.__car_list.sort(key=lambda i:i.get_year(), reverse=False)\r\n        \r\n    def remove_cars_from_karnataka(self):\r\n        temp = self.__car_list\r\n        self.__car_list=[]\r\n        for i in temp:\r\n            if(i.get_registration_number()[:2]!='KA'):\r\n                self.__car_list.append(i)\r\n            \r\n            \r\n         \r\n        \r\n\r\ncar1=Car(\"WagonR\",2010,\"KA09 3056\")\r\ncar2=Car(\"Beat\", 2011, \"MH10 6776\")\r\ncar3=Car(\"Ritz\", 2013,\"KA12 9098\")\r\ncar4=Car(\"Polo\",2013,\"GJ01 7854\")\r\ncar5=Car(\"Amaze\",2014,\"KL07 4332\")\r\n#Add different values to the list and test the program\r\ncar_list=[car1, car2, car3, car4,car5]\r\n#Create object of Service class, invoke the methods and test your program\r\n","asgnmtId":"2","SolutionFileName":"Assign2.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 18:55:55,710 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 18:55:55,710 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 18:55:55,710 INFO  Invoking the service to verify the user solution
2019-03-13 18:55:55,710 INFO  Time before invoking service:Wed Mar 13 18:55:55 IST 2019
2019-03-13 18:55:55,710 INFO  Initialising service address for VerifySolution
2019-03-13 18:55:55,710 INFO  Time before invoking service In SUPER:Wed Mar 13 18:55:55 IST 2019
2019-03-13 18:55:56,776 INFO  Time after invoking service In SUPER:Wed Mar 13 18:55:56 IST 2019
2019-03-13 18:55:56,776 INFO  Service responded successfully with required details
2019-03-13 18:55:56,776 INFO  Time after invoking service:Wed Mar 13 18:55:56 IST 2019
2019-03-13 18:55:56,776 INFO  User solution successfully verified
2019-03-13 18:55:56,791 INFO  Processing the response from verify service
2019-03-13 18:55:56,791 INFO  Starting to parse JSON response
2019-03-13 18:55:56,791 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:55:56,791 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:55:56,791 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:55:56,791 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:55:56,791 INFO  Successfully parsed JSON response
2019-03-13 18:55:56,791 INFO  In the process of generating verify response in HTML
2019-03-13 18:55:56,870 INFO  Successfully generated verify response in HTML
2019-03-13 18:55:56,870 INFO  Successfully processed the response from service
2019-03-13 18:55:59,929 INFO  Initiating to process and prepare Input for the submit service
2019-03-13 18:55:59,930 INFO  Displaying user solution
2019-03-13 18:55:59,938 INFO  Successfully processed and prepared the input for the submit service
2019-03-13 18:55:59,938 INFO  Invoking the service to submit the user solution
2019-03-13 18:55:59,939 INFO  Initialising service address for Submit
2019-03-13 18:55:59,939 INFO  Time before invoking service In SUPER:Wed Mar 13 18:55:59 IST 2019
2019-03-13 18:56:00,196 INFO  Time after invoking service In SUPER:Wed Mar 13 18:56:00 IST 2019
2019-03-13 18:56:00,196 INFO  Service responded successfully with required details
2019-03-13 18:56:00,196 INFO  User solution successfully submitted
2019-03-13 18:56:00,196 INFO  Displaying submission status
2019-03-13 18:56:00,196 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-13 18:58:26,737 INFO  Setting request parameters for VerifySolution
2019-03-13 18:58:26,737 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 18:58:26,737 INFO  Starting to parse the user solution
2019-03-13 18:58:26,737 INFO  Displaying user solution
2019-03-13 18:58:26,783 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-2\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Car:\r\n    def __init__(self,model,year,registration_number):\r\n        self.__model=model\r\n        self.__year=year\r\n        self.__registration_number=registration_number\r\n\r\n    def get_model(self):\r\n        return self.__model\r\n\r\n    def get_year(self):\r\n        return self.__year\r\n\r\n    def get_registration_number(self):\r\n        return self.__registration_number\r\n\r\n    def __str__(self):\r\n        return(self.__model+\" \"+\r\n               self.__registration_number+\" \"+\r\n               (str)(self.__year))\r\n#Implement Service class here\r\nclass Service:\r\n    def __init__(self,car_list):\r\n        self.__car_list = car_list\r\n\r\n    def get_car_list(self):\r\n        return self.__car_list\r\n\r\n    def find_cars_by_year(self,year):\r\n        car_list =[]\r\n        for i in self.__car_list:\r\n            if(i.get_year()==year):\r\n                car_list.append(i.get_model())\r\n        if(len(car_list)==0):\r\n            return None\r\n        return car_list\r\n    def add_cars(self,new_car_list):\r\n        self.__car_list+=new_car_list\r\n        self.__car_list.sort(key=lambda i:i.get_year(), reverse=False)\r\n        \r\n    def remove_cars_from_karnataka(self):\r\n        temp = self.__car_list\r\n        self.__car_list=[]\r\n        for i in temp:\r\n            if(i.get_registration_number()[:2]!='KA'):\r\n                self.__car_list.append(i)\r\n            \r\n            \r\n         \r\n        \r\n\r\ncar1=Car(\"WagonR\",2010,\"KA09 3056\")\r\ncar2=Car(\"Beat\", 2011, \"MH10 6776\")\r\ncar3=Car(\"Ritz\", 2013,\"KA12 9098\")\r\ncar4=Car(\"Polo\",2013,\"GJ01 7854\")\r\ncar5=Car(\"Amaze\",2014,\"KL07 4332\")\r\n#Add different values to the list and test the program\r\ncar_list=[car1, car2, car3, car4,car5]\r\n#Create object of Service class, invoke the methods and test your program\r\n","asgnmtId":"2","SolutionFileName":"Assign2.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 18:58:26,783 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 18:58:26,783 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 18:58:26,783 INFO  Invoking the service to verify the user solution
2019-03-13 18:58:26,799 INFO  Time before invoking service:Wed Mar 13 18:58:26 IST 2019
2019-03-13 18:58:26,799 INFO  Initialising service address for VerifySolution
2019-03-13 18:58:26,799 INFO  Time before invoking service In SUPER:Wed Mar 13 18:58:26 IST 2019
2019-03-13 18:58:27,987 INFO  Time after invoking service In SUPER:Wed Mar 13 18:58:27 IST 2019
2019-03-13 18:58:27,987 INFO  Service responded successfully with required details
2019-03-13 18:58:27,987 INFO  Time after invoking service:Wed Mar 13 18:58:27 IST 2019
2019-03-13 18:58:27,987 INFO  User solution successfully verified
2019-03-13 18:58:27,987 INFO  Processing the response from verify service
2019-03-13 18:58:27,989 INFO  Starting to parse JSON response
2019-03-13 18:58:28,005 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:58:28,005 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:58:28,005 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:58:28,005 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:58:28,005 INFO  Successfully parsed JSON response
2019-03-13 18:58:28,005 INFO  In the process of generating verify response in HTML
2019-03-13 18:58:28,083 INFO  Successfully generated verify response in HTML
2019-03-13 18:58:28,083 INFO  Successfully processed the response from service
2019-03-13 18:58:36,830 INFO  Setting request parameters for VerifySolution
2019-03-13 18:58:36,830 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 18:58:36,830 INFO  Starting to parse the user solution
2019-03-13 18:58:36,830 INFO  Displaying user solution
2019-03-13 18:58:36,893 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-2\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Car:\r\n    def __init__(self,model,year,registration_number):\r\n        self.__model=model\r\n        self.__year=year\r\n        self.__registration_number=registration_number\r\n\r\n    def get_model(self):\r\n        return self.__model\r\n\r\n    def get_year(self):\r\n        return self.__year\r\n\r\n    def get_registration_number(self):\r\n        return self.__registration_number\r\n\r\n    def __str__(self):\r\n        return(self.__model+\" \"+\r\n               self.__registration_number+\" \"+\r\n               (str)(self.__year))\r\n#Implement Service class here\r\nclass Service:\r\n    def __init__(self,car_list):\r\n        self.__car_list = car_list\r\n\r\n    def get_car_list(self):\r\n        return self.__car_list\r\n\r\n    def find_cars_by_year(self,year):\r\n        car_list =[]\r\n        for i in self.__car_list:\r\n            if(i.get_year()==year):\r\n                car_list.append(i.get_model())\r\n        if(len(car_list)==0):\r\n            return None\r\n        return car_list\r\n    def add_cars(self,new_car_list):\r\n        self.__car_list+=new_car_list\r\n        \r\n        sorted(self.__car_list, key=lambda i:i.get_year())\r\n        \r\n    def remove_cars_from_karnataka(self):\r\n        temp = self.__car_list\r\n        self.__car_list=[]\r\n        for i in temp:\r\n            if(i.get_registration_number()[:2]!='KA'):\r\n                self.__car_list.append(i)\r\n            \r\n            \r\n         \r\n        \r\n\r\ncar1=Car(\"WagonR\",2010,\"KA09 3056\")\r\ncar2=Car(\"Beat\", 2011, \"MH10 6776\")\r\ncar3=Car(\"Ritz\", 2013,\"KA12 9098\")\r\ncar4=Car(\"Polo\",2013,\"GJ01 7854\")\r\ncar5=Car(\"Amaze\",2014,\"KL07 4332\")\r\n#Add different values to the list and test the program\r\ncar_list=[car1, car2, car3, car4,car5]\r\n#Create object of Service class, invoke the methods and test your program\r\n","asgnmtId":"2","SolutionFileName":"Assign2.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 18:58:36,893 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 18:58:36,893 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 18:58:36,893 INFO  Invoking the service to verify the user solution
2019-03-13 18:58:36,893 INFO  Time before invoking service:Wed Mar 13 18:58:36 IST 2019
2019-03-13 18:58:36,893 INFO  Initialising service address for VerifySolution
2019-03-13 18:58:36,893 INFO  Time before invoking service In SUPER:Wed Mar 13 18:58:36 IST 2019
2019-03-13 18:58:38,159 INFO  Time after invoking service In SUPER:Wed Mar 13 18:58:38 IST 2019
2019-03-13 18:58:38,159 INFO  Service responded successfully with required details
2019-03-13 18:58:38,159 INFO  Time after invoking service:Wed Mar 13 18:58:38 IST 2019
2019-03-13 18:58:38,159 INFO  User solution successfully verified
2019-03-13 18:58:38,159 INFO  Processing the response from verify service
2019-03-13 18:58:38,159 INFO  Starting to parse JSON response
2019-03-13 18:58:38,159 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:58:38,159 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:58:38,159 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:58:38,159 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:58:38,174 INFO  Successfully parsed JSON response
2019-03-13 18:58:38,174 INFO  In the process of generating verify response in HTML
2019-03-13 18:58:38,252 INFO  Successfully generated verify response in HTML
2019-03-13 18:58:38,252 INFO  Successfully processed the response from service
2019-03-13 18:58:46,518 INFO  Setting request parameters for VerifySolution
2019-03-13 18:58:46,518 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 18:58:46,518 INFO  Starting to parse the user solution
2019-03-13 18:58:46,518 INFO  Displaying user solution
2019-03-13 18:58:46,572 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-2\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Car:\r\n    def __init__(self,model,year,registration_number):\r\n        self.__model=model\r\n        self.__year=year\r\n        self.__registration_number=registration_number\r\n\r\n    def get_model(self):\r\n        return self.__model\r\n\r\n    def get_year(self):\r\n        return self.__year\r\n\r\n    def get_registration_number(self):\r\n        return self.__registration_number\r\n\r\n    def __str__(self):\r\n        return(self.__model+\" \"+\r\n               self.__registration_number+\" \"+\r\n               (str)(self.__year))\r\n#Implement Service class here\r\nclass Service:\r\n    def __init__(self,car_list):\r\n        self.__car_list = car_list\r\n\r\n    def get_car_list(self):\r\n        return self.__car_list\r\n\r\n    def find_cars_by_year(self,year):\r\n        car_list =[]\r\n        for i in self.__car_list:\r\n            if(i.get_year()==year):\r\n                car_list.append(i.get_model())\r\n        if(len(car_list)==0):\r\n            return None\r\n        return car_list\r\n    def add_cars(self,new_car_list):\r\n        self.__car_list+=new_car_list\r\n        \r\n        sorted(self.__car_list, key=lambda i:i.get_year())\r\n        \r\n    def remove_cars_from_karnataka(self):\r\n        temp = self.__car_list\r\n        self.__car_list=[]\r\n        for i in temp:\r\n            if(i.get_registration_number()[:2]!='KA'):\r\n                self.__car_list.append(i)\r\n            \r\n            \r\n         \r\n        \r\n\r\ncar1=Car(\"WagonR\",2010,\"KA09 3056\")\r\ncar2=Car(\"Beat\", 2011, \"MH10 6776\")\r\ncar3=Car(\"Ritz\", 2013,\"KA12 9098\")\r\ncar4=Car(\"Polo\",2013,\"GJ01 7854\")\r\ncar5=Car(\"Amaze\",2014,\"KL07 4332\")\r\n#Add different values to the list and test the program\r\ncar_list=[car1, car2, car3, car4,car5]\r\n#Create object of Service class, invoke the methods and test your program\r\n","asgnmtId":"2","SolutionFileName":"Assign2.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 18:58:46,587 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 18:58:46,587 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 18:58:46,587 INFO  Invoking the service to verify the user solution
2019-03-13 18:58:46,587 INFO  Time before invoking service:Wed Mar 13 18:58:46 IST 2019
2019-03-13 18:58:46,587 INFO  Initialising service address for VerifySolution
2019-03-13 18:58:46,587 INFO  Time before invoking service In SUPER:Wed Mar 13 18:58:46 IST 2019
2019-03-13 18:58:47,641 INFO  Time after invoking service In SUPER:Wed Mar 13 18:58:47 IST 2019
2019-03-13 18:58:47,641 INFO  Service responded successfully with required details
2019-03-13 18:58:47,641 INFO  Time after invoking service:Wed Mar 13 18:58:47 IST 2019
2019-03-13 18:58:47,641 INFO  User solution successfully verified
2019-03-13 18:58:47,641 INFO  Processing the response from verify service
2019-03-13 18:58:47,641 INFO  Starting to parse JSON response
2019-03-13 18:58:47,641 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:58:47,641 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:58:47,641 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:58:47,641 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:58:47,641 INFO  Successfully parsed JSON response
2019-03-13 18:58:47,641 INFO  In the process of generating verify response in HTML
2019-03-13 18:58:47,735 INFO  Successfully generated verify response in HTML
2019-03-13 18:58:47,735 INFO  Successfully processed the response from service
2019-03-13 18:59:04,846 INFO  Setting request parameters for VerifySolution
2019-03-13 18:59:04,846 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 18:59:04,846 INFO  Starting to parse the user solution
2019-03-13 18:59:04,846 INFO  Displaying user solution
2019-03-13 18:59:04,893 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-2\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Car:\r\n    def __init__(self,model,year,registration_number):\r\n        self.__model=model\r\n        self.__year=year\r\n        self.__registration_number=registration_number\r\n\r\n    def get_model(self):\r\n        return self.__model\r\n\r\n    def get_year(self):\r\n        return self.__year\r\n\r\n    def get_registration_number(self):\r\n        return self.__registration_number\r\n\r\n    def __str__(self):\r\n        return(self.__model+\" \"+\r\n               self.__registration_number+\" \"+\r\n               (str)(self.__year))\r\n#Implement Service class here\r\nclass Service:\r\n    def __init__(self,car_list):\r\n        self.__car_list = car_list\r\n\r\n    def get_car_list(self):\r\n        return self.__car_list\r\n\r\n    def find_cars_by_year(self,year):\r\n        car_list =[]\r\n        for i in self.__car_list:\r\n            if(i.get_year()==year):\r\n                car_list.append(i.get_model())\r\n        if(len(car_list)==0):\r\n            return None\r\n        return car_list\r\n    def add_cars(self,new_car_list):\r\n        self.__car_list+=new_car_list\r\n        self.__car_list.sort(key=lambda i:i.get_year(), reverse=False)\r\n        \r\n        \r\n    def remove_cars_from_karnataka(self):\r\n        temp = self.__car_list\r\n        self.__car_list=[]\r\n        for i in temp:\r\n            if(i.get_registration_number()[:2]!='KA'):\r\n                self.__car_list.append(i)\r\n            \r\n            \r\n         \r\n        \r\n\r\ncar1=Car(\"WagonR\",2010,\"KA09 3056\")\r\ncar2=Car(\"Beat\", 2011, \"MH10 6776\")\r\ncar3=Car(\"Ritz\", 2013,\"KA12 9098\")\r\ncar4=Car(\"Polo\",2013,\"GJ01 7854\")\r\ncar5=Car(\"Amaze\",2014,\"KL07 4332\")\r\n#Add different values to the list and test the program\r\ncar_list=[car1, car2, car3, car4,car5]\r\n#Create object of Service class, invoke the methods and test your program\r\n","asgnmtId":"2","SolutionFileName":"Assign2.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 18:59:04,893 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 18:59:04,893 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 18:59:04,893 INFO  Invoking the service to verify the user solution
2019-03-13 18:59:04,893 INFO  Time before invoking service:Wed Mar 13 18:59:04 IST 2019
2019-03-13 18:59:04,893 INFO  Initialising service address for VerifySolution
2019-03-13 18:59:04,893 INFO  Time before invoking service In SUPER:Wed Mar 13 18:59:04 IST 2019
2019-03-13 18:59:06,628 INFO  Time after invoking service In SUPER:Wed Mar 13 18:59:06 IST 2019
2019-03-13 18:59:06,628 INFO  Service responded successfully with required details
2019-03-13 18:59:06,628 INFO  Time after invoking service:Wed Mar 13 18:59:06 IST 2019
2019-03-13 18:59:06,628 INFO  User solution successfully verified
2019-03-13 18:59:06,628 INFO  Processing the response from verify service
2019-03-13 18:59:06,628 INFO  Starting to parse JSON response
2019-03-13 18:59:06,628 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:59:06,628 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:59:06,628 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:59:06,628 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 18:59:06,628 INFO  Successfully parsed JSON response
2019-03-13 18:59:06,628 INFO  In the process of generating verify response in HTML
2019-03-13 18:59:06,721 INFO  Successfully generated verify response in HTML
2019-03-13 18:59:06,721 INFO  Successfully processed the response from service
2019-03-13 18:59:09,706 INFO  Initiating to process and prepare Input for the submit service
2019-03-13 18:59:09,706 INFO  Displaying user solution
2019-03-13 18:59:09,721 INFO  Successfully processed and prepared the input for the submit service
2019-03-13 18:59:09,721 INFO  Invoking the service to submit the user solution
2019-03-13 18:59:09,721 INFO  Initialising service address for Submit
2019-03-13 18:59:09,721 INFO  Time before invoking service In SUPER:Wed Mar 13 18:59:09 IST 2019
2019-03-13 18:59:09,956 INFO  Time after invoking service In SUPER:Wed Mar 13 18:59:09 IST 2019
2019-03-13 18:59:09,956 INFO  Service responded successfully with required details
2019-03-13 18:59:09,956 INFO  User solution successfully submitted
2019-03-13 18:59:09,956 INFO  Displaying submission status
2019-03-13 18:59:09,956 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-13 19:10:47,341 INFO  Setting request parameters for VerifySolution
2019-03-13 19:10:47,341 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 19:10:47,341 INFO  Starting to parse the user solution
2019-03-13 19:10:47,341 INFO  Displaying user solution
2019-03-13 19:10:47,403 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-2\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Car:\r\n    def __init__(self,model,year,registration_number):\r\n        self.__model=model\r\n        self.__year=year\r\n        self.__registration_number=registration_number\r\n\r\n    def get_model(self):\r\n        return self.__model\r\n\r\n    def get_year(self):\r\n        return self.__year\r\n\r\n    def get_registration_number(self):\r\n        return self.__registration_number\r\n\r\n    def __str__(self):\r\n        return(self.__model+\" \"+\r\n               self.__registration_number+\" \"+\r\n               (str)(self.__year))\r\n#Implement Service class here\r\nclass Service:\r\n    def __init__(self,car_list):\r\n        self.__car_list = car_list\r\n\r\n    def get_car_list(self):\r\n        return self.__car_list\r\n\r\n    def find_cars_by_year(self,year):\r\n        car_list =[]\r\n        for i in self.__car_list:\r\n            if(i.get_year()==year):\r\n                car_list.append(i.get_model())\r\n        if(len(car_list)==0):\r\n            return None\r\n        return car_list\r\n    def add_cars(self,new_car_list):\r\n        self.__car_list+=new_car_list\r\n        for i in range(0,len(self.__car_list)):\r\n            for j in range(i+1,len(self.__car_list)):\r\n                if(self.__car_list[i].get_year()>self.__car_list[j].get_year()):\r\n                    temp=self.__car_list[i]\r\n                    self.__car_list[i]=self.__car_list[j]\r\n                    self.__car_list[j]=temp\r\n   \r\n    def remove_cars_from_karnataka(self):\r\n        temp = self.__car_list\r\n        self.__car_list=[]\r\n        for i in temp:\r\n            if(i.get_registration_number()[:2]!='KA'):\r\n                self.__car_list.append(i)\r\n            \r\n            \r\n         \r\n        \r\n\r\ncar1=Car(\"WagonR\",2010,\"KA09 3056\")\r\ncar2=Car(\"Beat\", 2011, \"MH10 6776\")\r\ncar3=Car(\"Ritz\", 2013,\"KA12 9098\")\r\ncar4=Car(\"Polo\",2013,\"GJ01 7854\")\r\ncar5=Car(\"Amaze\",2014,\"KL07 4332\")\r\n#Add different values to the list and test the program\r\ncar_list=[car1, car2, car3, car4,car5]\r\n#Create object of Service class, invoke the methods and test your program\r\n","asgnmtId":"2","SolutionFileName":"Assign2.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 19:10:47,403 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 19:10:47,403 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 19:10:47,403 INFO  Invoking the service to verify the user solution
2019-03-13 19:10:47,403 INFO  Time before invoking service:Wed Mar 13 19:10:47 IST 2019
2019-03-13 19:10:47,403 INFO  Initialising service address for VerifySolution
2019-03-13 19:10:47,403 INFO  Time before invoking service In SUPER:Wed Mar 13 19:10:47 IST 2019
2019-03-13 19:10:48,513 INFO  Time after invoking service In SUPER:Wed Mar 13 19:10:48 IST 2019
2019-03-13 19:10:48,513 INFO  Service responded successfully with required details
2019-03-13 19:10:48,513 INFO  Time after invoking service:Wed Mar 13 19:10:48 IST 2019
2019-03-13 19:10:48,513 INFO  User solution successfully verified
2019-03-13 19:10:48,513 INFO  Processing the response from verify service
2019-03-13 19:10:48,528 INFO  Starting to parse JSON response
2019-03-13 19:10:48,528 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 19:10:48,528 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 19:10:48,528 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 19:10:48,528 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 19:10:48,528 INFO  Successfully parsed JSON response
2019-03-13 19:10:48,528 INFO  In the process of generating verify response in HTML
2019-03-13 19:10:48,622 INFO  Successfully generated verify response in HTML
2019-03-13 19:10:48,622 INFO  Successfully processed the response from service
2019-03-13 19:10:56,030 INFO  Setting request parameters for VerifySolution
2019-03-13 19:10:56,030 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 19:10:56,030 INFO  Starting to parse the user solution
2019-03-13 19:10:56,030 INFO  Displaying user solution
2019-03-13 19:10:56,108 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-2\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Car:\r\n    def __init__(self,model,year,registration_number):\r\n        self.__model=model\r\n        self.__year=year\r\n        self.__registration_number=registration_number\r\n\r\n    def get_model(self):\r\n        return self.__model\r\n\r\n    def get_year(self):\r\n        return self.__year\r\n\r\n    def get_registration_number(self):\r\n        return self.__registration_number\r\n\r\n    def __str__(self):\r\n        return(self.__model+\" \"+\r\n               self.__registration_number+\" \"+\r\n               (str)(self.__year))\r\n#Implement Service class here\r\nclass Service:\r\n    def __init__(self,car_list):\r\n        self.__car_list = car_list\r\n\r\n    def get_car_list(self):\r\n        return self.__car_list\r\n\r\n    def find_cars_by_year(self,year):\r\n        car_list =[]\r\n        for i in self.__car_list:\r\n            if(i.get_year()==year):\r\n                car_list.append(i.get_model())\r\n        if(len(car_list)==0):\r\n            return None\r\n        return car_list\r\n    def add_cars(self,new_car_list):\r\n        self.__car_list+=new_car_list\r\n        for i in range(0,len(self.__car_list)):\r\n            for j in range(i+1,len(self.__car_list)):\r\n                if(self.__car_list[i].get_year()>self.__car_list[j].get_year()):\r\n                    temp=self.__car_list[i]\r\n                    self.__car_list[i]=self.__car_list[j]\r\n                    self.__car_list[j]=temp\r\n   \r\n    def remove_cars_from_karnataka(self):\r\n        temp = self.__car_list\r\n        self.__car_list=[]\r\n        for i in temp:\r\n            if(i.get_registration_number()[:2]!='KA'):\r\n                self.__car_list.append(i)\r\n            \r\n            \r\n         \r\n        \r\n\r\ncar1=Car(\"WagonR\",2010,\"KA09 3056\")\r\ncar2=Car(\"Beat\", 2011, \"MH10 6776\")\r\ncar3=Car(\"Ritz\", 2013,\"KA12 9098\")\r\ncar4=Car(\"Polo\",2013,\"GJ01 7854\")\r\ncar5=Car(\"Amaze\",2014,\"KL07 4332\")\r\n#Add different values to the list and test the program\r\ncar_list=[car1, car2, car3, car4,car5]\r\n#Create object of Service class, invoke the methods and test your program\r\n","asgnmtId":"2","SolutionFileName":"Assign2.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 19:10:56,108 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 19:10:56,108 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 19:10:56,108 INFO  Invoking the service to verify the user solution
2019-03-13 19:10:56,108 INFO  Time before invoking service:Wed Mar 13 19:10:56 IST 2019
2019-03-13 19:10:56,108 INFO  Initialising service address for VerifySolution
2019-03-13 19:10:56,108 INFO  Time before invoking service In SUPER:Wed Mar 13 19:10:56 IST 2019
2019-03-13 19:10:57,155 INFO  Time after invoking service In SUPER:Wed Mar 13 19:10:57 IST 2019
2019-03-13 19:10:57,155 INFO  Service responded successfully with required details
2019-03-13 19:10:57,155 INFO  Time after invoking service:Wed Mar 13 19:10:57 IST 2019
2019-03-13 19:10:57,155 INFO  User solution successfully verified
2019-03-13 19:10:57,155 INFO  Processing the response from verify service
2019-03-13 19:10:57,155 INFO  Starting to parse JSON response
2019-03-13 19:10:57,155 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 19:10:57,155 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 19:10:57,155 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 19:10:57,155 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 19:10:57,155 INFO  Successfully parsed JSON response
2019-03-13 19:10:57,155 INFO  In the process of generating verify response in HTML
2019-03-13 19:10:57,248 INFO  Successfully generated verify response in HTML
2019-03-13 19:10:57,248 INFO  Successfully processed the response from service
2019-03-13 19:11:00,655 INFO  Initiating to process and prepare Input for the submit service
2019-03-13 19:11:00,655 INFO  Displaying user solution
2019-03-13 19:11:00,670 INFO  Successfully processed and prepared the input for the submit service
2019-03-13 19:11:00,670 INFO  Invoking the service to submit the user solution
2019-03-13 19:11:00,670 INFO  Initialising service address for Submit
2019-03-13 19:11:00,670 INFO  Time before invoking service In SUPER:Wed Mar 13 19:11:00 IST 2019
2019-03-13 19:11:00,905 INFO  Time after invoking service In SUPER:Wed Mar 13 19:11:00 IST 2019
2019-03-13 19:11:00,905 INFO  Service responded successfully with required details
2019-03-13 19:11:00,905 INFO  User solution successfully submitted
2019-03-13 19:11:00,905 INFO  Displaying submission status
2019-03-13 19:11:00,905 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-13 19:11:04,044 INFO  Initiating to process and prepare Input for the submit service
2019-03-13 19:11:04,044 INFO  Displaying user solution
2019-03-13 19:11:04,044 INFO  Successfully processed and prepared the input for the submit service
2019-03-13 19:11:04,044 INFO  Invoking the service to submit the user solution
2019-03-13 19:11:04,044 INFO  Initialising service address for Submit
2019-03-13 19:11:04,044 INFO  Time before invoking service In SUPER:Wed Mar 13 19:11:04 IST 2019
2019-03-13 19:11:04,232 INFO  Time after invoking service In SUPER:Wed Mar 13 19:11:04 IST 2019
2019-03-13 19:11:04,232 INFO  Service responded successfully with required details
2019-03-13 19:11:04,232 INFO  User solution successfully submitted
2019-03-13 19:11:04,232 INFO  Displaying submission status
2019-03-13 19:11:04,232 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-13 19:12:47,609 INFO  Initiating to process and prepare Input for the submit service
2019-03-13 19:12:47,609 INFO  Displaying user solution
2019-03-13 19:12:47,625 INFO  Successfully processed and prepared the input for the submit service
2019-03-13 19:12:47,625 INFO  Invoking the service to submit the user solution
2019-03-13 19:12:47,625 INFO  Initialising service address for Submit
2019-03-13 19:12:47,625 INFO  Time before invoking service In SUPER:Wed Mar 13 19:12:47 IST 2019
2019-03-13 19:12:47,891 INFO  Time after invoking service In SUPER:Wed Mar 13 19:12:47 IST 2019
2019-03-13 19:12:47,891 INFO  Service responded successfully with required details
2019-03-13 19:12:47,891 INFO  User solution successfully submitted
2019-03-13 19:12:47,891 INFO  Displaying submission status
2019-03-13 19:12:47,891 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-13 19:12:50,343 INFO  Initiating to process and prepare Input for the submit service
2019-03-13 19:12:50,343 INFO  Displaying user solution
2019-03-13 19:12:50,358 INFO  Successfully processed and prepared the input for the submit service
2019-03-13 19:12:50,358 INFO  Invoking the service to submit the user solution
2019-03-13 19:12:50,358 INFO  Initialising service address for Submit
2019-03-13 19:12:50,358 INFO  Time before invoking service In SUPER:Wed Mar 13 19:12:50 IST 2019
2019-03-13 19:12:50,483 INFO  Time after invoking service In SUPER:Wed Mar 13 19:12:50 IST 2019
2019-03-13 19:12:50,483 INFO  Service responded successfully with required details
2019-03-13 19:12:50,483 INFO  User solution successfully submitted
2019-03-13 19:12:50,483 INFO  Displaying submission status
2019-03-13 19:12:50,483 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-13 19:12:52,733 INFO  Setting request parameters for VerifySolution
2019-03-13 19:12:52,733 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 19:12:52,733 INFO  Starting to parse the user solution
2019-03-13 19:12:52,733 INFO  Displaying user solution
2019-03-13 19:12:52,795 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-2\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Car:\r\n    def __init__(self,model,year,registration_number):\r\n        self.__model=model\r\n        self.__year=year\r\n        self.__registration_number=registration_number\r\n\r\n    def get_model(self):\r\n        return self.__model\r\n\r\n    def get_year(self):\r\n        return self.__year\r\n\r\n    def get_registration_number(self):\r\n        return self.__registration_number\r\n\r\n    def __str__(self):\r\n        return(self.__model+\" \"+\r\n               self.__registration_number+\" \"+\r\n               (str)(self.__year))\r\n#Implement Service class here\r\nclass Service:\r\n    def __init__(self,car_list):\r\n        self.__car_list = car_list\r\n\r\n    def get_car_list(self):\r\n        return self.__car_list\r\n\r\n    def find_cars_by_year(self,year):\r\n        car_list =[]\r\n        for i in self.__car_list:\r\n            if(i.get_year()==year):\r\n                car_list.append(i.get_model())\r\n        if(len(car_list)==0):\r\n            return None\r\n        return car_list\r\n    def add_cars(self,new_car_list):\r\n        self.__car_list+=new_car_list\r\n        for i in range(0,len(self.__car_list)):\r\n            for j in range(i+1,len(self.__car_list)):\r\n                if(self.__car_list[i].get_year()>self.__car_list[j].get_year()):\r\n                    temp=self.__car_list[i]\r\n                    self.__car_list[i]=self.__car_list[j]\r\n                    self.__car_list[j]=temp\r\n   \r\n    def remove_cars_from_karnataka(self):\r\n        temp = self.__car_list\r\n        self.__car_list=[]\r\n        for i in temp:\r\n            if(i.get_registration_number()[:2]!='KA'):\r\n                self.__car_list.append(i)\r\n            \r\n            \r\n         \r\n        \r\n\r\ncar1=Car(\"WagonR\",2010,\"KA09 3056\")\r\ncar2=Car(\"Beat\", 2011, \"MH10 6776\")\r\ncar3=Car(\"Ritz\", 2013,\"KA12 9098\")\r\ncar4=Car(\"Polo\",2013,\"GJ01 7854\")\r\ncar5=Car(\"Amaze\",2014,\"KL07 4332\")\r\n#Add different values to the list and test the program\r\ncar_list=[car1, car2, car3, car4,car5]\r\n#Create object of Service class, invoke the methods and test your program\r\n","asgnmtId":"2","SolutionFileName":"Assign2.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 19:12:52,795 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 19:12:52,795 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 19:12:52,795 INFO  Invoking the service to verify the user solution
2019-03-13 19:12:52,795 INFO  Time before invoking service:Wed Mar 13 19:12:52 IST 2019
2019-03-13 19:12:52,795 INFO  Initialising service address for VerifySolution
2019-03-13 19:12:52,795 INFO  Time before invoking service In SUPER:Wed Mar 13 19:12:52 IST 2019
2019-03-13 19:12:53,952 INFO  Time after invoking service In SUPER:Wed Mar 13 19:12:53 IST 2019
2019-03-13 19:12:53,952 INFO  Service responded successfully with required details
2019-03-13 19:12:53,952 INFO  Time after invoking service:Wed Mar 13 19:12:53 IST 2019
2019-03-13 19:12:53,952 INFO  User solution successfully verified
2019-03-13 19:12:53,952 INFO  Processing the response from verify service
2019-03-13 19:12:53,952 INFO  Starting to parse JSON response
2019-03-13 19:12:53,952 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 19:12:53,952 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 19:12:53,952 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 19:12:53,952 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 19:12:53,952 INFO  Successfully parsed JSON response
2019-03-13 19:12:53,952 INFO  In the process of generating verify response in HTML
2019-03-13 19:12:54,031 INFO  Successfully generated verify response in HTML
2019-03-13 19:12:54,031 INFO  Successfully processed the response from service
2019-03-13 19:15:54,361 INFO  Setting request parameters for VerifySolution
2019-03-13 19:15:54,361 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 19:15:54,361 INFO  Starting to parse the user solution
2019-03-13 19:15:54,361 INFO  Displaying user solution
2019-03-13 19:15:54,439 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-2\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Car:\r\n    def __init__(self,model,year,registration_number):\r\n        self.__model=model\r\n        self.__year=year\r\n        self.__registration_number=registration_number\r\n\r\n    def get_model(self):\r\n        return self.__model\r\n\r\n    def get_year(self):\r\n        return self.__year\r\n\r\n    def get_registration_number(self):\r\n        return self.__registration_number\r\n\r\n    def __str__(self):\r\n        return(self.__model+\" \"+\r\n               self.__registration_number+\" \"+\r\n               (str)(self.__year))\r\n#Implement Service class here\r\nclass Service:\r\n    def __init__(self,car_list):\r\n        self.__car_list = car_list\r\n\r\n    def get_car_list(self):\r\n        return self.__car_list\r\n\r\n    def find_cars_by_year(self,year):\r\n        car_list =[]\r\n        for i in self.__car_list:\r\n            if(i.get_year()==year):\r\n                car_list.append(i.get_model())\r\n        if(len(car_list)==0):\r\n            return None\r\n        return car_list\r\n    def add_cars(self,new_car_list):\r\n        self.__car_list+=new_car_list\r\n        for i in range(0,len(self.__car_list)):\r\n            for j in range(i+1,len(self.__car_list)):\r\n                if(self.__car_list[i].get_year()>self.__car_list[j].get_year()):\r\n                    temp=self.__car_list[i]\r\n                    self.__car_list[i]=self.__car_list[j]\r\n                    self.__car_list[j]=temp\r\n   \r\n    def remove_cars_from_karnataka(self):\r\n        temp = self.__car_list\r\n        self.__car_list=[]\r\n        for i in temp:\r\n            if(i.get_registration_number()[:2]!='KA'):\r\n                self.__car_list.append(i)\r\n            \r\n            \r\n         \r\n        \r\n\r\ncar1=Car(\"WagonR\",2010,\"KA09 3056\")\r\ncar2=Car(\"Beat\", 2011, \"MH10 6776\")\r\ncar3=Car(\"Ritz\", 2013,\"KA12 9098\")\r\ncar4=Car(\"Polo\",2013,\"GJ01 7854\")\r\ncar5=Car(\"Amaze\",2014,\"KL07 4332\")\r\n#Add different values to the list and test the program\r\ncar_list=[car1, car2, car3, car4,car5]\r\n#Create object of Service class, invoke the methods and test your program\r\n","asgnmtId":"2","SolutionFileName":"Assign2.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 19:15:54,439 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 19:15:54,439 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 19:15:54,439 INFO  Invoking the service to verify the user solution
2019-03-13 19:15:54,439 INFO  Time before invoking service:Wed Mar 13 19:15:54 IST 2019
2019-03-13 19:15:54,439 INFO  Initialising service address for VerifySolution
2019-03-13 19:15:54,439 INFO  Time before invoking service In SUPER:Wed Mar 13 19:15:54 IST 2019
2019-03-13 19:15:55,908 INFO  Time after invoking service In SUPER:Wed Mar 13 19:15:55 IST 2019
2019-03-13 19:15:55,908 INFO  Service responded successfully with required details
2019-03-13 19:15:55,908 INFO  Time after invoking service:Wed Mar 13 19:15:55 IST 2019
2019-03-13 19:15:55,908 INFO  User solution successfully verified
2019-03-13 19:15:55,908 INFO  Processing the response from verify service
2019-03-13 19:15:55,908 INFO  Starting to parse JSON response
2019-03-13 19:15:55,908 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 19:15:55,908 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 19:15:55,908 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 19:15:55,908 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 19:15:55,908 INFO  Successfully parsed JSON response
2019-03-13 19:15:55,923 INFO  In the process of generating verify response in HTML
2019-03-13 19:15:56,001 INFO  Successfully generated verify response in HTML
2019-03-13 19:15:56,001 INFO  Successfully processed the response from service
2019-03-13 19:28:42,576 INFO  Setting request parameters for VerifySolution
2019-03-13 19:28:42,576 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 19:28:42,576 INFO  Starting to parse the user solution
2019-03-13 19:28:42,576 INFO  Displaying user solution
2019-03-13 19:28:42,654 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-4\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Player:\r\n    def __init__(self,name,experience):\r\n        self.__name=name\r\n        self.__experience=experience\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n\r\n    def get_experience(self):\r\n        return self.__experience\r\n\r\n    def __str__(self):\r\n        return(self.__name+\" \"+(str)(self.__experience))\r\n\r\n#Implement Game class here\r\nclass Game:\r\n    def __init__(self,players_list):\r\n        self.__players_list = players_list\r\n    def sort_players_based_on_experience(self):\r\n        for i in range(0,len(self.__players_list)):\r\n            for j in range(i+1,len(self.__players_list)):\r\n                if(self.__players_list[i].get_experience()>self.__players_list[j].get_experience()):\r\n                    temp=self.__players_list[i]\r\n                    self.__players_list[i]=self.__players_list[j]\r\n                    self.__players_list[j]=temp\r\n    def shift_player_to_new_position(self,old_index_position, new_index_position):\r\n        self.__players_list.insert(new_index_position,self.__players_list[old_index_position])\r\n        self.__players_list.pop(old_index_position)\r\n        \r\n    def display_player_details(self):\r\n        player_list =[]\r\n        for i in self.__players_list:\r\n            player_list.append(i.get_name(),i.get_experience())\r\n        if(len(players_list)==0):\r\n            return None\r\n        return player_list\r\n\r\nplayer1=Player(\"Dhoni\",15)\r\nplayer2=Player(\"Virat\",10)\r\nplayer3=Player(\"Rohit\",12)\r\nplayer4=Player(\"Raina\",11)\r\nplayer5=Player(\"Jadeja\",13)\r\nplayer6=Player(\"Ishant\",9)\r\nplayer7=Player(\"Shikhar\",8)\r\nplayer8=Player(\"Axar\",7.5)\r\nplayer9=Player(\"Ashwin\",6)\r\nplayer10=Player(\"Stuart\",7)\r\nplayer11=Player(\"Bhuvneshwar\",5)\r\n#Add different values to the list and test the program\r\nplayers_list=[player1,player2,player3,player4,player5,player6,player7,player8,player9,player10,player11]\r\n#Create object of Game class, invoke the methods and test your program\r\n","asgnmtId":"4","SolutionFileName":"Assign4.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 19:28:42,654 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 19:28:42,654 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 19:28:42,654 INFO  Invoking the service to verify the user solution
2019-03-13 19:28:42,654 INFO  Time before invoking service:Wed Mar 13 19:28:42 IST 2019
2019-03-13 19:28:42,654 INFO  Initialising service address for VerifySolution
2019-03-13 19:28:42,654 INFO  Time before invoking service In SUPER:Wed Mar 13 19:28:42 IST 2019
2019-03-13 19:28:43,857 INFO  Time after invoking service In SUPER:Wed Mar 13 19:28:43 IST 2019
2019-03-13 19:28:43,857 INFO  Service responded successfully with required details
2019-03-13 19:28:43,857 INFO  Time after invoking service:Wed Mar 13 19:28:43 IST 2019
2019-03-13 19:28:43,857 INFO  User solution successfully verified
2019-03-13 19:28:43,857 INFO  Processing the response from verify service
2019-03-13 19:28:43,873 INFO  Starting to parse JSON response
2019-03-13 19:28:43,873 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 19:28:43,873 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 19:28:43,873 INFO  Successfully parsed JSON response
2019-03-13 19:28:43,873 INFO  In the process of generating verify response in HTML
2019-03-13 19:28:43,967 INFO  Successfully generated verify response in HTML
2019-03-13 19:28:43,967 INFO  Successfully processed the response from service
2019-03-13 19:28:58,717 INFO  Setting request parameters for VerifySolution
2019-03-13 19:28:58,717 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 19:28:58,717 INFO  Starting to parse the user solution
2019-03-13 19:28:58,717 INFO  Displaying user solution
2019-03-13 19:28:58,779 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-4\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Player:\r\n    def __init__(self,name,experience):\r\n        self.__name=name\r\n        self.__experience=experience\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n\r\n    def get_experience(self):\r\n        return self.__experience\r\n\r\n    def __str__(self):\r\n        return(self.__name+\" \"+(str)(self.__experience))\r\n\r\n#Implement Game class here\r\nclass Game:\r\n    def __init__(self,players_list):\r\n        self.__players_list = players_list\r\n    def sort_players_based_on_experience(self):\r\n        for i in range(0,len(self.__players_list)):\r\n            for j in range(i+1,len(self.__players_list)):\r\n                if(self.__players_list[i].get_experience()>self.__players_list[j].get_experience()):\r\n                    temp=self.__players_list[i]\r\n                    self.__players_list[i]=self.__players_list[j]\r\n                    self.__players_list[j]=temp\r\n    def shift_player_to_new_position(self,old_index_position, new_index_position):\r\n        self.__players_list.insert(new_index_position,self.__players_list[old_index_position])\r\n        self.__players_list.pop(old_index_position)\r\n        \r\n    def display_player_details(self):\r\n        player_list =[]\r\n        for i in self.__players_list:\r\n            player_list.append(i.get_name())\r\n        if(len(players_list)==0):\r\n            return None\r\n        return player_list\r\n\r\nplayer1=Player(\"Dhoni\",15)\r\nplayer2=Player(\"Virat\",10)\r\nplayer3=Player(\"Rohit\",12)\r\nplayer4=Player(\"Raina\",11)\r\nplayer5=Player(\"Jadeja\",13)\r\nplayer6=Player(\"Ishant\",9)\r\nplayer7=Player(\"Shikhar\",8)\r\nplayer8=Player(\"Axar\",7.5)\r\nplayer9=Player(\"Ashwin\",6)\r\nplayer10=Player(\"Stuart\",7)\r\nplayer11=Player(\"Bhuvneshwar\",5)\r\n#Add different values to the list and test the program\r\nplayers_list=[player1,player2,player3,player4,player5,player6,player7,player8,player9,player10,player11]\r\n#Create object of Game class, invoke the methods and test your program\r\n","asgnmtId":"4","SolutionFileName":"Assign4.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 19:28:58,779 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 19:28:58,779 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 19:28:58,779 INFO  Invoking the service to verify the user solution
2019-03-13 19:28:58,779 INFO  Time before invoking service:Wed Mar 13 19:28:58 IST 2019
2019-03-13 19:28:58,779 INFO  Initialising service address for VerifySolution
2019-03-13 19:28:58,779 INFO  Time before invoking service In SUPER:Wed Mar 13 19:28:58 IST 2019
2019-03-13 19:28:59,857 INFO  Time after invoking service In SUPER:Wed Mar 13 19:28:59 IST 2019
2019-03-13 19:28:59,857 INFO  Service responded successfully with required details
2019-03-13 19:28:59,857 INFO  Time after invoking service:Wed Mar 13 19:28:59 IST 2019
2019-03-13 19:28:59,857 INFO  User solution successfully verified
2019-03-13 19:28:59,857 INFO  Processing the response from verify service
2019-03-13 19:28:59,873 INFO  Starting to parse JSON response
2019-03-13 19:28:59,873 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 19:28:59,873 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 19:28:59,873 INFO  Successfully parsed JSON response
2019-03-13 19:28:59,873 INFO  In the process of generating verify response in HTML
2019-03-13 19:28:59,951 INFO  Successfully generated verify response in HTML
2019-03-13 19:28:59,951 INFO  Successfully processed the response from service
2019-03-13 19:31:14,961 INFO  Setting request parameters for VerifySolution
2019-03-13 19:31:14,961 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 19:31:14,961 INFO  Starting to parse the user solution
2019-03-13 19:31:14,961 INFO  Displaying user solution
2019-03-13 19:31:15,039 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-4\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Player:\r\n    def __init__(self,name,experience):\r\n        self.__name=name\r\n        self.__experience=experience\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n\r\n    def get_experience(self):\r\n        return self.__experience\r\n\r\n    def __str__(self):\r\n        return(self.__name+\" \"+(str)(self.__experience))\r\n\r\n#Implement Game class here\r\nclass Game:\r\n    def __init__(self,players_list):\r\n        self.__players_list = players_list\r\n    def sort_players_based_on_experience(self):\r\n        for i in range(0,len(self.__players_list)):\r\n            for j in range(i+1,len(self.__players_list)):\r\n                if(self.__players_list[i].get_experience()>self.__players_list[j].get_experience()):\r\n                    temp=self.__players_list[i]\r\n                    self.__players_list[i]=self.__players_list[j]\r\n                    self.__players_list[j]=temp\r\n    def shift_player_to_new_position(self,old_index_position, new_index_position):\r\n        self.__players_list.insert(new_index_position,self.__players_list[old_index_position])\r\n        self.__players_list.pop(old_index_position)\r\n        \r\n    def display_player_details(self):\r\n        player_list =[]\r\n        for i in self.__players_list:\r\n            player_list.append(i.get_name())\r\n        if(len(players_list)==0):\r\n            return None\r\n        return player_list\r\n\r\nplayer1=Player(\"Dhoni\",15)\r\nplayer2=Player(\"Virat\",10)\r\nplayer3=Player(\"Rohit\",12)\r\nplayer4=Player(\"Raina\",11)\r\nplayer5=Player(\"Jadeja\",13)\r\nplayer6=Player(\"Ishant\",9)\r\nplayer7=Player(\"Shikhar\",8)\r\nplayer8=Player(\"Axar\",7.5)\r\nplayer9=Player(\"Ashwin\",6)\r\nplayer10=Player(\"Stuart\",7)\r\nplayer11=Player(\"Bhuvneshwar\",5)\r\n#Add different values to the list and test the program\r\nplayers_list=[player1,player2,player3,player4,player5,player6,player7,player8,player9,player10,player11]\r\n#Create object of Game class, invoke the methods and test your program\r\n","asgnmtId":"4","SolutionFileName":"Assign4.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 19:31:15,039 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 19:31:15,039 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 19:31:15,039 INFO  Invoking the service to verify the user solution
2019-03-13 19:31:15,039 INFO  Time before invoking service:Wed Mar 13 19:31:15 IST 2019
2019-03-13 19:31:15,039 INFO  Initialising service address for VerifySolution
2019-03-13 19:31:15,039 INFO  Time before invoking service In SUPER:Wed Mar 13 19:31:15 IST 2019
2019-03-13 19:31:16,180 INFO  Time after invoking service In SUPER:Wed Mar 13 19:31:16 IST 2019
2019-03-13 19:31:16,180 INFO  Service responded successfully with required details
2019-03-13 19:31:16,180 INFO  Time after invoking service:Wed Mar 13 19:31:16 IST 2019
2019-03-13 19:31:16,180 INFO  User solution successfully verified
2019-03-13 19:31:16,180 INFO  Processing the response from verify service
2019-03-13 19:31:16,180 INFO  Starting to parse JSON response
2019-03-13 19:31:16,180 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 19:31:16,180 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 19:31:16,180 INFO  Successfully parsed JSON response
2019-03-13 19:31:16,180 INFO  In the process of generating verify response in HTML
2019-03-13 19:31:16,273 INFO  Successfully generated verify response in HTML
2019-03-13 19:31:16,273 INFO  Successfully processed the response from service
2019-03-13 19:33:59,295 INFO  Setting request parameters for VerifySolution
2019-03-13 19:33:59,295 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 19:33:59,295 INFO  Starting to parse the user solution
2019-03-13 19:33:59,295 INFO  Displaying user solution
2019-03-13 19:33:59,373 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-4\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Player:\r\n    def __init__(self,name,experience):\r\n        self.__name=name\r\n        self.__experience=experience\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n\r\n    def get_experience(self):\r\n        return self.__experience\r\n\r\n    def __str__(self):\r\n        return(self.__name+\" \"+(str)(self.__experience))\r\n\r\n#Implement Game class here\r\nclass Game:\r\n    def __init__(self,players_list):\r\n        self.__players_list = players_list\r\n    def sort_players_based_on_experience(self):\r\n        for i in range(0,len(self.__players_list)):\r\n            for j in range(i+1,len(self.__players_list)):\r\n                if(self.__players_list[i].get_experience()>self.__players_list[j].get_experience()):\r\n                    temp=self.__players_list[i]\r\n                    self.__players_list[i]=self.__players_list[j]\r\n                    self.__players_list[j]=temp\r\n    def shift_player_to_new_position(self,old_index_position, new_index_position):\r\n        self.__players_list.insert(new_index_position,self.__players_list[old_index_position])\r\n        self.__players_list.pop(old_index_position)\r\n        \r\n    def display_player_details(self):\r\n        player_list =[]\r\n        for i in self.__players_list:\r\n            player_list.append(i.get_name(),i.get_experience())\r\n        if(len(players_list)==0):\r\n            return None\r\n        return player_list\r\n\r\nplayer1=Player(\"Dhoni\",15)\r\nplayer2=Player(\"Virat\",10)\r\nplayer3=Player(\"Rohit\",12)\r\nplayer4=Player(\"Raina\",11)\r\nplayer5=Player(\"Jadeja\",13)\r\nplayer6=Player(\"Ishant\",9)\r\nplayer7=Player(\"Shikhar\",8)\r\nplayer8=Player(\"Axar\",7.5)\r\nplayer9=Player(\"Ashwin\",6)\r\nplayer10=Player(\"Stuart\",7)\r\nplayer11=Player(\"Bhuvneshwar\",5)\r\n#Add different values to the list and test the program\r\nplayers_list=[player1,player2,player3,player4,player5,player6,player7,player8,player9,player10,player11]\r\n#Create object of Game class, invoke the methods and test your program\r\n","asgnmtId":"4","SolutionFileName":"Assign4.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 19:33:59,373 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 19:33:59,389 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 19:33:59,389 INFO  Invoking the service to verify the user solution
2019-03-13 19:33:59,389 INFO  Time before invoking service:Wed Mar 13 19:33:59 IST 2019
2019-03-13 19:33:59,389 INFO  Initialising service address for VerifySolution
2019-03-13 19:33:59,389 INFO  Time before invoking service In SUPER:Wed Mar 13 19:33:59 IST 2019
2019-03-13 19:34:00,436 INFO  Time after invoking service In SUPER:Wed Mar 13 19:34:00 IST 2019
2019-03-13 19:34:00,436 INFO  Service responded successfully with required details
2019-03-13 19:34:00,436 INFO  Time after invoking service:Wed Mar 13 19:34:00 IST 2019
2019-03-13 19:34:00,436 INFO  User solution successfully verified
2019-03-13 19:34:00,436 INFO  Processing the response from verify service
2019-03-13 19:34:00,436 INFO  Starting to parse JSON response
2019-03-13 19:34:00,436 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 19:34:00,436 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 19:34:00,436 INFO  Successfully parsed JSON response
2019-03-13 19:34:00,436 INFO  In the process of generating verify response in HTML
2019-03-13 19:34:00,533 INFO  Successfully generated verify response in HTML
2019-03-13 19:34:00,533 INFO  Successfully processed the response from service
2019-03-13 19:34:11,611 INFO  Setting request parameters for VerifySolution
2019-03-13 19:34:11,611 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 19:34:11,611 INFO  Starting to parse the user solution
2019-03-13 19:34:11,611 INFO  Displaying user solution
2019-03-13 19:34:11,674 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-4\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Player:\r\n    def __init__(self,name,experience):\r\n        self.__name=name\r\n        self.__experience=experience\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n\r\n    def get_experience(self):\r\n        return self.__experience\r\n\r\n    def __str__(self):\r\n        return(self.__name+\" \"+(str)(self.__experience))\r\n\r\n#Implement Game class here\r\nclass Game:\r\n    def __init__(self,players_list):\r\n        self.__players_list = players_list\r\n    def sort_players_based_on_experience(self):\r\n        for i in range(0,len(self.__players_list)):\r\n            for j in range(i+1,len(self.__players_list)):\r\n                if(self.__players_list[i].get_experience()>self.__players_list[j].get_experience()):\r\n                    temp=self.__players_list[i]\r\n                    self.__players_list[i]=self.__players_list[j]\r\n                    self.__players_list[j]=temp\r\n    def shift_player_to_new_position(self,old_index_position, new_index_position):\r\n        self.__players_list.insert(new_index_position,self.__players_list[old_index_position])\r\n        self.__players_list.pop(old_index_position)\r\n        \r\n    def display_player_details(self):\r\n        player_list =[]\r\n        for i in self.__players_list:\r\n            player_list.append(i.get_name(),i.get_experience())\r\n        if(len(players_list)==0):\r\n            return None\r\n        return player_list\r\n\r\nplayer1=Player(\"Dhoni\",15)\r\nplayer2=Player(\"Virat\",10)\r\nplayer3=Player(\"Rohit\",12)\r\nplayer4=Player(\"Raina\",11)\r\nplayer5=Player(\"Jadeja\",13)\r\nplayer6=Player(\"Ishant\",9)\r\nplayer7=Player(\"Shikhar\",8)\r\nplayer8=Player(\"Axar\",7.5)\r\nplayer9=Player(\"Ashwin\",6)\r\nplayer10=Player(\"Stuart\",7)\r\nplayer11=Player(\"Bhuvneshwar\",5)\r\n#Add different values to the list and test the program\r\nplayers_list=[player1,player2,player3,player4,player5,player6,player7,player8,player9,player10,player11]\r\n#Create object of Game class, invoke the methods and test your program\r\n","asgnmtId":"4","SolutionFileName":"Assign4.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 19:34:11,674 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 19:34:11,674 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 19:34:11,674 INFO  Invoking the service to verify the user solution
2019-03-13 19:34:11,674 INFO  Time before invoking service:Wed Mar 13 19:34:11 IST 2019
2019-03-13 19:34:11,674 INFO  Initialising service address for VerifySolution
2019-03-13 19:34:11,674 INFO  Time before invoking service In SUPER:Wed Mar 13 19:34:11 IST 2019
2019-03-13 19:34:12,721 INFO  Time after invoking service In SUPER:Wed Mar 13 19:34:12 IST 2019
2019-03-13 19:34:12,721 INFO  Service responded successfully with required details
2019-03-13 19:34:12,721 INFO  Time after invoking service:Wed Mar 13 19:34:12 IST 2019
2019-03-13 19:34:12,721 INFO  User solution successfully verified
2019-03-13 19:34:12,721 INFO  Processing the response from verify service
2019-03-13 19:34:12,721 INFO  Starting to parse JSON response
2019-03-13 19:34:12,721 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 19:34:12,721 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 19:34:12,721 INFO  Successfully parsed JSON response
2019-03-13 19:34:12,721 INFO  In the process of generating verify response in HTML
2019-03-13 19:34:12,815 INFO  Successfully generated verify response in HTML
2019-03-13 19:34:12,815 INFO  Successfully processed the response from service
2019-03-13 19:35:25,347 INFO  Setting request parameters for VerifySolution
2019-03-13 19:35:25,347 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 19:35:25,347 INFO  Starting to parse the user solution
2019-03-13 19:35:25,347 INFO  Displaying user solution
2019-03-13 19:35:25,410 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-4\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Player:\r\n    def __init__(self,name,experience):\r\n        self.__name=name\r\n        self.__experience=experience\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n\r\n    def get_experience(self):\r\n        return self.__experience\r\n\r\n    def __str__(self):\r\n        return(self.__name+\" \"+(str)(self.__experience))\r\n\r\n#Implement Game class here\r\nclass Game:\r\n    def __init__(self,players_list):\r\n        self.__players_list = players_list\r\n    def sort_players_based_on_experience(self):\r\n        for i in range(0,len(self.__players_list)):\r\n            for j in range(i+1,len(self.__players_list)):\r\n                if(self.__players_list[i].get_experience()<self.__players_list[j].get_experience()):\r\n                    temp=self.__players_list[i]\r\n                    self.__players_list[i]=self.__players_list[j]\r\n                    self.__players_list[j]=temp\r\n    def shift_player_to_new_position(self,old_index_position, new_index_position):\r\n        self.__players_list.insert(new_index_position,self.__players_list[old_index_position])\r\n        self.__players_list.pop(old_index_position)\r\n        \r\n    def display_player_details(self):\r\n        player_list =[]\r\n        for i in self.__players_list:\r\n            player_list.append(i.get_name(),i.get_experience())\r\n        if(len(players_list)==0):\r\n            return None\r\n        return player_list\r\n\r\nplayer1=Player(\"Dhoni\",15)\r\nplayer2=Player(\"Virat\",10)\r\nplayer3=Player(\"Rohit\",12)\r\nplayer4=Player(\"Raina\",11)\r\nplayer5=Player(\"Jadeja\",13)\r\nplayer6=Player(\"Ishant\",9)\r\nplayer7=Player(\"Shikhar\",8)\r\nplayer8=Player(\"Axar\",7.5)\r\nplayer9=Player(\"Ashwin\",6)\r\nplayer10=Player(\"Stuart\",7)\r\nplayer11=Player(\"Bhuvneshwar\",5)\r\n#Add different values to the list and test the program\r\nplayers_list=[player1,player2,player3,player4,player5,player6,player7,player8,player9,player10,player11]\r\n#Create object of Game class, invoke the methods and test your program\r\n","asgnmtId":"4","SolutionFileName":"Assign4.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 19:35:25,410 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 19:35:25,410 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 19:35:25,410 INFO  Invoking the service to verify the user solution
2019-03-13 19:35:25,410 INFO  Time before invoking service:Wed Mar 13 19:35:25 IST 2019
2019-03-13 19:35:25,410 INFO  Initialising service address for VerifySolution
2019-03-13 19:35:25,410 INFO  Time before invoking service In SUPER:Wed Mar 13 19:35:25 IST 2019
2019-03-13 19:35:26,456 INFO  Time after invoking service In SUPER:Wed Mar 13 19:35:26 IST 2019
2019-03-13 19:35:26,456 INFO  Service responded successfully with required details
2019-03-13 19:35:26,456 INFO  Time after invoking service:Wed Mar 13 19:35:26 IST 2019
2019-03-13 19:35:26,456 INFO  User solution successfully verified
2019-03-13 19:35:26,456 INFO  Processing the response from verify service
2019-03-13 19:35:26,456 INFO  Starting to parse JSON response
2019-03-13 19:35:26,471 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 19:35:26,471 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 19:35:26,471 INFO  Successfully parsed JSON response
2019-03-13 19:35:26,471 INFO  In the process of generating verify response in HTML
2019-03-13 19:35:26,554 INFO  Successfully generated verify response in HTML
2019-03-13 19:35:26,554 INFO  Successfully processed the response from service
2019-03-13 19:36:09,551 INFO  Setting request parameters for VerifySolution
2019-03-13 19:36:09,551 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 19:36:09,551 INFO  Starting to parse the user solution
2019-03-13 19:36:09,551 INFO  Displaying user solution
2019-03-13 19:36:09,645 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-4\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Player:\r\n    def __init__(self,name,experience):\r\n        self.__name=name\r\n        self.__experience=experience\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n\r\n    def get_experience(self):\r\n        return self.__experience\r\n\r\n    def __str__(self):\r\n        return(self.__name+\" \"+(str)(self.__experience))\r\n\r\n#Implement Game class here\r\nclass Game:\r\n    def __init__(self,players_list):\r\n        self.__players_list = players_list\r\n    def sort_players_based_on_experience(self):\r\n        for i in range(0,len(self.__players_list)):\r\n            for j in range(i+1,len(self.__players_list)):\r\n                if(self.__players_list[i].get_experience()<self.__players_list[j].get_experience()):\r\n                    temp=self.__players_list[i]\r\n                    self.__players_list[i]=self.__players_list[j]\r\n                    self.__players_list[j]=temp\r\n    def shift_player_to_new_position(self,old_index_position, new_index_position):\r\n        self.__players_list.insert(new_index_position,self.__players_list[old_index_position])\r\n        self.__players_list.pop(old_index_position)\r\n        \r\n    def display_player_details(self):\r\n        player_list =[]\r\n        for i in self.__players_list:\r\n            player_list.append(i.get_name())\r\n        if(len(players_list)==0):\r\n            return None\r\n        return player_list\r\n\r\nplayer1=Player(\"Dhoni\",15)\r\nplayer2=Player(\"Virat\",10)\r\nplayer3=Player(\"Rohit\",12)\r\nplayer4=Player(\"Raina\",11)\r\nplayer5=Player(\"Jadeja\",13)\r\nplayer6=Player(\"Ishant\",9)\r\nplayer7=Player(\"Shikhar\",8)\r\nplayer8=Player(\"Axar\",7.5)\r\nplayer9=Player(\"Ashwin\",6)\r\nplayer10=Player(\"Stuart\",7)\r\nplayer11=Player(\"Bhuvneshwar\",5)\r\n#Add different values to the list and test the program\r\nplayers_list=[player1,player2,player3,player4,player5,player6,player7,player8,player9,player10,player11]\r\n#Create object of Game class, invoke the methods and test your program\r\n","asgnmtId":"4","SolutionFileName":"Assign4.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 19:36:09,645 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 19:36:09,645 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 19:36:09,645 INFO  Invoking the service to verify the user solution
2019-03-13 19:36:09,645 INFO  Time before invoking service:Wed Mar 13 19:36:09 IST 2019
2019-03-13 19:36:09,645 INFO  Initialising service address for VerifySolution
2019-03-13 19:36:09,645 INFO  Time before invoking service In SUPER:Wed Mar 13 19:36:09 IST 2019
2019-03-13 19:36:10,769 INFO  Time after invoking service In SUPER:Wed Mar 13 19:36:10 IST 2019
2019-03-13 19:36:10,769 INFO  Service responded successfully with required details
2019-03-13 19:36:10,769 INFO  Time after invoking service:Wed Mar 13 19:36:10 IST 2019
2019-03-13 19:36:10,769 INFO  User solution successfully verified
2019-03-13 19:36:10,769 INFO  Processing the response from verify service
2019-03-13 19:36:10,769 INFO  Starting to parse JSON response
2019-03-13 19:36:10,784 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 19:36:10,784 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 19:36:10,784 INFO  Successfully parsed JSON response
2019-03-13 19:36:10,784 INFO  In the process of generating verify response in HTML
2019-03-13 19:36:10,878 INFO  Successfully generated verify response in HTML
2019-03-13 19:36:10,878 INFO  Successfully processed the response from service
2019-03-13 19:39:19,580 INFO  Setting request parameters for VerifySolution
2019-03-13 19:39:19,580 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 19:39:19,580 INFO  Starting to parse the user solution
2019-03-13 19:39:19,580 INFO  Displaying user solution
2019-03-13 19:39:19,658 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-4\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Player:\r\n    def __init__(self,name,experience):\r\n        self.__name=name\r\n        self.__experience=experience\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n\r\n    def get_experience(self):\r\n        return self.__experience\r\n\r\n    def __str__(self):\r\n        return(self.__name+\" \"+(str)(self.__experience))\r\n\r\n#Implement Game class here\r\nclass Game:\r\n    def __init__(self,players_list):\r\n        self.__players_list = players_list\r\n    def sort_players_based_on_experience(self):\r\n        for i in range(0,len(self.__players_list)):\r\n            for j in range(i+1,len(self.__players_list)):\r\n                if(self.__players_list[i].get_experience()<self.__players_list[j].get_experience()):\r\n                    temp=self.__players_list[i]\r\n                    self.__players_list[i]=self.__players_list[j]\r\n                    self.__players_list[j]=temp\r\n    def shift_player_to_new_position(self,old_index_position, new_index_position):\r\n        A = self.__players_list[old_index_position]\r\n        self.__players_list.insert(new_index_position)\r\n        self.__players_list.pop(old_index_position)\r\n        \r\n    def display_player_details(self):\r\n        player_list =[]\r\n        for i in self.__players_list:\r\n            player_list.append(i.get_name())\r\n        if(len(players_list)==0):\r\n            return None\r\n        return player_list\r\n\r\nplayer1=Player(\"Dhoni\",15)\r\nplayer2=Player(\"Virat\",10)\r\nplayer3=Player(\"Rohit\",12)\r\nplayer4=Player(\"Raina\",11)\r\nplayer5=Player(\"Jadeja\",13)\r\nplayer6=Player(\"Ishant\",9)\r\nplayer7=Player(\"Shikhar\",8)\r\nplayer8=Player(\"Axar\",7.5)\r\nplayer9=Player(\"Ashwin\",6)\r\nplayer10=Player(\"Stuart\",7)\r\nplayer11=Player(\"Bhuvneshwar\",5)\r\n#Add different values to the list and test the program\r\nplayers_list=[player1,player2,player3,player4,player5,player6,player7,player8,player9,player10,player11]\r\n#Create object of Game class, invoke the methods and test your program\r\n","asgnmtId":"4","SolutionFileName":"Assign4.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 19:39:19,658 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 19:39:19,658 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 19:39:19,658 INFO  Invoking the service to verify the user solution
2019-03-13 19:39:19,658 INFO  Time before invoking service:Wed Mar 13 19:39:19 IST 2019
2019-03-13 19:39:19,658 INFO  Initialising service address for VerifySolution
2019-03-13 19:39:19,658 INFO  Time before invoking service In SUPER:Wed Mar 13 19:39:19 IST 2019
2019-03-13 19:39:20,767 INFO  Time after invoking service In SUPER:Wed Mar 13 19:39:20 IST 2019
2019-03-13 19:39:20,767 INFO  Service responded successfully with required details
2019-03-13 19:39:20,767 INFO  Time after invoking service:Wed Mar 13 19:39:20 IST 2019
2019-03-13 19:39:20,767 INFO  User solution successfully verified
2019-03-13 19:39:20,767 INFO  Processing the response from verify service
2019-03-13 19:39:20,783 INFO  Starting to parse JSON response
2019-03-13 19:39:20,783 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 19:39:20,783 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 19:39:20,783 INFO  Successfully parsed JSON response
2019-03-13 19:39:20,783 INFO  In the process of generating verify response in HTML
2019-03-13 19:39:20,892 INFO  Successfully generated verify response in HTML
2019-03-13 19:39:20,892 INFO  Successfully processed the response from service
2019-03-13 19:40:07,406 INFO  Setting request parameters for VerifySolution
2019-03-13 19:40:07,406 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 19:40:07,406 INFO  Starting to parse the user solution
2019-03-13 19:40:07,406 INFO  Displaying user solution
2019-03-13 19:40:07,453 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-4\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Player:\r\n    def __init__(self,name,experience):\r\n        self.__name=name\r\n        self.__experience=experience\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n\r\n    def get_experience(self):\r\n        return self.__experience\r\n\r\n    def __str__(self):\r\n        return(self.__name+\" \"+(str)(self.__experience))\r\n\r\n#Implement Game class here\r\nclass Game:\r\n    def __init__(self,players_list):\r\n        self.__players_list = players_list\r\n    def sort_players_based_on_experience(self):\r\n        for i in range(0,len(self.__players_list)):\r\n            for j in range(i+1,len(self.__players_list)):\r\n                if(self.__players_list[i].get_experience()<self.__players_list[j].get_experience()):\r\n                    temp=self.__players_list[i]\r\n                    self.__players_list[i]=self.__players_list[j]\r\n                    self.__players_list[j]=temp\r\n    def shift_player_to_new_position(self,old_index_position, new_index_position):\r\n        A = self.__players_list[old_index_position]\r\n        self.__players_list.insert(new_index_position, A)\r\n        self.__players_list.pop(old_index_position)\r\n        \r\n    def display_player_details(self):\r\n        player_list =[]\r\n        for i in self.__players_list:\r\n            player_list.append(i.get_name())\r\n        if(len(players_list)==0):\r\n            return None\r\n        return player_list\r\n\r\nplayer1=Player(\"Dhoni\",15)\r\nplayer2=Player(\"Virat\",10)\r\nplayer3=Player(\"Rohit\",12)\r\nplayer4=Player(\"Raina\",11)\r\nplayer5=Player(\"Jadeja\",13)\r\nplayer6=Player(\"Ishant\",9)\r\nplayer7=Player(\"Shikhar\",8)\r\nplayer8=Player(\"Axar\",7.5)\r\nplayer9=Player(\"Ashwin\",6)\r\nplayer10=Player(\"Stuart\",7)\r\nplayer11=Player(\"Bhuvneshwar\",5)\r\n#Add different values to the list and test the program\r\nplayers_list=[player1,player2,player3,player4,player5,player6,player7,player8,player9,player10,player11]\r\n#Create object of Game class, invoke the methods and test your program\r\n","asgnmtId":"4","SolutionFileName":"Assign4.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 19:40:07,453 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 19:40:07,453 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 19:40:07,453 INFO  Invoking the service to verify the user solution
2019-03-13 19:40:07,453 INFO  Time before invoking service:Wed Mar 13 19:40:07 IST 2019
2019-03-13 19:40:07,453 INFO  Initialising service address for VerifySolution
2019-03-13 19:40:07,453 INFO  Time before invoking service In SUPER:Wed Mar 13 19:40:07 IST 2019
2019-03-13 19:40:08,515 INFO  Time after invoking service In SUPER:Wed Mar 13 19:40:08 IST 2019
2019-03-13 19:40:08,515 INFO  Service responded successfully with required details
2019-03-13 19:40:08,515 INFO  Time after invoking service:Wed Mar 13 19:40:08 IST 2019
2019-03-13 19:40:08,515 INFO  User solution successfully verified
2019-03-13 19:40:08,516 INFO  Processing the response from verify service
2019-03-13 19:40:08,517 INFO  Starting to parse JSON response
2019-03-13 19:40:08,518 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 19:40:08,518 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 19:40:08,519 INFO  Successfully parsed JSON response
2019-03-13 19:40:08,519 INFO  In the process of generating verify response in HTML
2019-03-13 19:40:08,601 INFO  Successfully generated verify response in HTML
2019-03-13 19:40:08,601 INFO  Successfully processed the response from service
2019-03-13 19:40:27,343 INFO  Setting request parameters for VerifySolution
2019-03-13 19:40:27,343 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 19:40:27,343 INFO  Starting to parse the user solution
2019-03-13 19:40:27,343 INFO  Displaying user solution
2019-03-13 19:40:27,406 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-4\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Player:\r\n    def __init__(self,name,experience):\r\n        self.__name=name\r\n        self.__experience=experience\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n\r\n    def get_experience(self):\r\n        return self.__experience\r\n\r\n    def __str__(self):\r\n        return(self.__name+\" \"+(str)(self.__experience))\r\n\r\n#Implement Game class here\r\nclass Game:\r\n    def __init__(self,players_list):\r\n        self.__players_list = players_list\r\n    def sort_players_based_on_experience(self):\r\n        for i in range(0,len(self.__players_list)):\r\n            for j in range(i+1,len(self.__players_list)):\r\n                if(self.__players_list[i].get_experience()<self.__players_list[j].get_experience()):\r\n                    temp=self.__players_list[i]\r\n                    self.__players_list[i]=self.__players_list[j]\r\n                    self.__players_list[j]=temp\r\n    def shift_player_to_new_position(self,old_index_position, new_index_position):\r\n        A = self.__players_list[old_index_position]\r\n        self.__players_list.pop(old_index_position)\r\n        self.__players_list.insert(new_index_position, A)\r\n        \r\n    def display_player_details(self):\r\n        player_list =[]\r\n        for i in self.__players_list:\r\n            player_list.append(i.get_name())\r\n        if(len(players_list)==0):\r\n            return None\r\n        return player_list\r\n\r\nplayer1=Player(\"Dhoni\",15)\r\nplayer2=Player(\"Virat\",10)\r\nplayer3=Player(\"Rohit\",12)\r\nplayer4=Player(\"Raina\",11)\r\nplayer5=Player(\"Jadeja\",13)\r\nplayer6=Player(\"Ishant\",9)\r\nplayer7=Player(\"Shikhar\",8)\r\nplayer8=Player(\"Axar\",7.5)\r\nplayer9=Player(\"Ashwin\",6)\r\nplayer10=Player(\"Stuart\",7)\r\nplayer11=Player(\"Bhuvneshwar\",5)\r\n#Add different values to the list and test the program\r\nplayers_list=[player1,player2,player3,player4,player5,player6,player7,player8,player9,player10,player11]\r\n#Create object of Game class, invoke the methods and test your program\r\n","asgnmtId":"4","SolutionFileName":"Assign4.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 19:40:27,406 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 19:40:27,406 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 19:40:27,406 INFO  Invoking the service to verify the user solution
2019-03-13 19:40:27,406 INFO  Time before invoking service:Wed Mar 13 19:40:27 IST 2019
2019-03-13 19:40:27,406 INFO  Initialising service address for VerifySolution
2019-03-13 19:40:27,406 INFO  Time before invoking service In SUPER:Wed Mar 13 19:40:27 IST 2019
2019-03-13 19:40:28,499 INFO  Time after invoking service In SUPER:Wed Mar 13 19:40:28 IST 2019
2019-03-13 19:40:28,500 INFO  Service responded successfully with required details
2019-03-13 19:40:28,500 INFO  Time after invoking service:Wed Mar 13 19:40:28 IST 2019
2019-03-13 19:40:28,500 INFO  User solution successfully verified
2019-03-13 19:40:28,500 INFO  Processing the response from verify service
2019-03-13 19:40:28,503 INFO  Starting to parse JSON response
2019-03-13 19:40:28,504 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 19:40:28,504 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 19:40:28,505 INFO  Successfully parsed JSON response
2019-03-13 19:40:28,506 INFO  In the process of generating verify response in HTML
2019-03-13 19:40:28,596 INFO  Successfully generated verify response in HTML
2019-03-13 19:40:28,596 INFO  Successfully processed the response from service
2019-03-13 19:41:24,247 INFO  Setting request parameters for VerifySolution
2019-03-13 19:41:24,247 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 19:41:24,247 INFO  Starting to parse the user solution
2019-03-13 19:41:24,247 INFO  Displaying user solution
2019-03-13 19:41:24,310 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-4\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Player:\r\n    def __init__(self,name,experience):\r\n        self.__name=name\r\n        self.__experience=experience\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n\r\n    def get_experience(self):\r\n        return self.__experience\r\n\r\n    def __str__(self):\r\n        return(self.__name+\" \"+(str)(self.__experience))\r\n\r\n#Implement Game class here\r\nclass Game:\r\n    def __init__(self,players_list):\r\n        self.__players_list = players_list\r\n    def sort_players_based_on_experience(self):\r\n        for i in range(0,len(self.__players_list)):\r\n            for j in range(i+1,len(self.__players_list)):\r\n                if(self.__players_list[i].get_experience()<self.__players_list[j].get_experience()):\r\n                    temp=self.__players_list[i]\r\n                    self.__players_list[i]=self.__players_list[j]\r\n                    self.__players_list[j]=temp\r\n    def shift_player_to_new_position(self,old_index_position, new_index_position):\r\n        A = self.__players_list[old_index_position]\r\n        self.__players_list.pop(old_index_position)\r\n        self.__players_list.insert(new_index_position, A)\r\n        \r\n    def display_player_details(self):\r\n        player_list =[]\r\n        for i in self.__players_list:\r\n            player_list.append(i.get_name())\r\n        if(len(players_list)==0):\r\n            return None\r\n        return player_list\r\n\r\nplayer1=Player(\"Dhoni\",15)\r\nplayer2=Player(\"Virat\",10)\r\nplayer3=Player(\"Rohit\",12)\r\nplayer4=Player(\"Raina\",11)\r\nplayer5=Player(\"Jadeja\",13)\r\nplayer6=Player(\"Ishant\",9)\r\nplayer7=Player(\"Shikhar\",8)\r\nplayer8=Player(\"Axar\",7.5)\r\nplayer9=Player(\"Ashwin\",6)\r\nplayer10=Player(\"Stuart\",7)\r\nplayer11=Player(\"Bhuvneshwar\",5)\r\n#Add different values to the list and test the program\r\nplayers_list=[player1,player2,player3,player4,player5,player6,player7,player8,player9,player10,player11]\r\n#Create object of Game class, invoke the methods and test your program\r\n","asgnmtId":"4","SolutionFileName":"Assign4.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 19:41:24,310 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 19:41:24,310 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 19:41:24,310 INFO  Invoking the service to verify the user solution
2019-03-13 19:41:24,310 INFO  Time before invoking service:Wed Mar 13 19:41:24 IST 2019
2019-03-13 19:41:24,310 INFO  Initialising service address for VerifySolution
2019-03-13 19:41:24,310 INFO  Time before invoking service In SUPER:Wed Mar 13 19:41:24 IST 2019
2019-03-13 19:41:25,449 INFO  Time after invoking service In SUPER:Wed Mar 13 19:41:25 IST 2019
2019-03-13 19:41:25,449 INFO  Service responded successfully with required details
2019-03-13 19:41:25,449 INFO  Time after invoking service:Wed Mar 13 19:41:25 IST 2019
2019-03-13 19:41:25,449 INFO  User solution successfully verified
2019-03-13 19:41:25,449 INFO  Processing the response from verify service
2019-03-13 19:41:25,449 INFO  Starting to parse JSON response
2019-03-13 19:41:25,449 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 19:41:25,449 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 19:41:25,465 INFO  Successfully parsed JSON response
2019-03-13 19:41:25,465 INFO  In the process of generating verify response in HTML
2019-03-13 19:41:25,550 INFO  Successfully generated verify response in HTML
2019-03-13 19:41:25,550 INFO  Successfully processed the response from service
2019-03-13 19:41:46,152 INFO  Setting request parameters for VerifySolution
2019-03-13 19:41:46,152 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 19:41:46,152 INFO  Starting to parse the user solution
2019-03-13 19:41:46,152 INFO  Displaying user solution
2019-03-13 19:41:46,214 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-4\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Player:\r\n    def __init__(self,name,experience):\r\n        self.__name=name\r\n        self.__experience=experience\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n\r\n    def get_experience(self):\r\n        return self.__experience\r\n\r\n    def __str__(self):\r\n        return(self.__name+\" \"+(str)(self.__experience))\r\n\r\n#Implement Game class here\r\nclass Game:\r\n    def __init__(self,players_list):\r\n        self.__players_list = players_list\r\n    def sort_players_based_on_experience(self):\r\n        for i in range(0,len(self.__players_list)):\r\n            for j in range(i+1,len(self.__players_list)):\r\n                if(self.__players_list[i].get_experience()<self.__players_list[j].get_experience()):\r\n                    temp=self.__players_list[i]\r\n                    self.__players_list[i]=self.__players_list[j]\r\n                    self.__players_list[j]=temp\r\n    def shift_player_to_new_position(self,old_index_position, new_index_position):\r\n        p1= self.__players_list[old_index_position]\r\n        self.__players_list.pop(old_index_position)\r\n        self.__players_list.insert(new_index_position, p1)\r\n        \r\n    def display_player_details(self):\r\n        player_list =[]\r\n        for i in self.__players_list:\r\n            player_list.append(i.get_name())\r\n        if(len(players_list)==0):\r\n            return None\r\n        return player_list\r\n\r\nplayer1=Player(\"Dhoni\",15)\r\nplayer2=Player(\"Virat\",10)\r\nplayer3=Player(\"Rohit\",12)\r\nplayer4=Player(\"Raina\",11)\r\nplayer5=Player(\"Jadeja\",13)\r\nplayer6=Player(\"Ishant\",9)\r\nplayer7=Player(\"Shikhar\",8)\r\nplayer8=Player(\"Axar\",7.5)\r\nplayer9=Player(\"Ashwin\",6)\r\nplayer10=Player(\"Stuart\",7)\r\nplayer11=Player(\"Bhuvneshwar\",5)\r\n#Add different values to the list and test the program\r\nplayers_list=[player1,player2,player3,player4,player5,player6,player7,player8,player9,player10,player11]\r\n#Create object of Game class, invoke the methods and test your program\r\n","asgnmtId":"4","SolutionFileName":"Assign4.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 19:41:46,214 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 19:41:46,214 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 19:41:46,214 INFO  Invoking the service to verify the user solution
2019-03-13 19:41:46,214 INFO  Time before invoking service:Wed Mar 13 19:41:46 IST 2019
2019-03-13 19:41:46,214 INFO  Initialising service address for VerifySolution
2019-03-13 19:41:46,214 INFO  Time before invoking service In SUPER:Wed Mar 13 19:41:46 IST 2019
2019-03-13 19:41:47,277 INFO  Time after invoking service In SUPER:Wed Mar 13 19:41:47 IST 2019
2019-03-13 19:41:47,277 INFO  Service responded successfully with required details
2019-03-13 19:41:47,277 INFO  Time after invoking service:Wed Mar 13 19:41:47 IST 2019
2019-03-13 19:41:47,277 INFO  User solution successfully verified
2019-03-13 19:41:47,277 INFO  Processing the response from verify service
2019-03-13 19:41:47,277 INFO  Starting to parse JSON response
2019-03-13 19:41:47,292 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 19:41:47,292 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 19:41:47,292 INFO  Successfully parsed JSON response
2019-03-13 19:41:47,292 INFO  In the process of generating verify response in HTML
2019-03-13 19:41:47,371 INFO  Successfully generated verify response in HTML
2019-03-13 19:41:47,371 INFO  Successfully processed the response from service
2019-03-13 19:42:42,377 INFO  Setting request parameters for VerifySolution
2019-03-13 19:42:42,377 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 19:42:42,377 INFO  Starting to parse the user solution
2019-03-13 19:42:42,377 INFO  Displaying user solution
2019-03-13 19:42:42,455 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-4\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Player:\r\n    def __init__(self,name,experience):\r\n        self.__name=name\r\n        self.__experience=experience\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n\r\n    def get_experience(self):\r\n        return self.__experience\r\n\r\n    def __str__(self):\r\n        return(self.__name+\" \"+(str)(self.__experience))\r\n\r\n#Implement Game class here\r\nclass Game:\r\n    def __init__(self,players_list):\r\n        self.__players_list = players_list\r\n    def sort_players_based_on_experience(self):\r\n        for i in range(0,len(self.__players_list)):\r\n            for j in range(i+1,len(self.__players_list)):\r\n                if(self.__players_list[i].get_experience()<self.__players_list[j].get_experience()):\r\n                    temp=self.__players_list[i]\r\n                    self.__players_list[i]=self.__players_list[j]\r\n                    self.__players_list[j]=temp\r\n    def shift_player_to_new_position(self,old_index_position, new_index_position):\r\n        p1= self.__players_list[old_index_position]\r\n        self.__players_list.pop(old_index_position)\r\n        self.__players_list.insert(new_index_position, p1)\r\n        \r\n    def display_player_details(self):\r\n        player_list =[]\r\n        for i in self.__players_list:\r\n            player_list.append(i.get_name(),i.get_experience())\r\n        if(len(players_list)==0):\r\n            return None\r\n        return player_list\r\n\r\nplayer1=Player(\"Dhoni\",15)\r\nplayer2=Player(\"Virat\",10)\r\nplayer3=Player(\"Rohit\",12)\r\nplayer4=Player(\"Raina\",11)\r\nplayer5=Player(\"Jadeja\",13)\r\nplayer6=Player(\"Ishant\",9)\r\nplayer7=Player(\"Shikhar\",8)\r\nplayer8=Player(\"Axar\",7.5)\r\nplayer9=Player(\"Ashwin\",6)\r\nplayer10=Player(\"Stuart\",7)\r\nplayer11=Player(\"Bhuvneshwar\",5)\r\n#Add different values to the list and test the program\r\nplayers_list=[player1,player2,player3,player4,player5,player6,player7,player8,player9,player10,player11]\r\n#Create object of Game class, invoke the methods and test your program\r\n","asgnmtId":"4","SolutionFileName":"Assign4.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 19:42:42,455 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 19:42:42,455 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 19:42:42,455 INFO  Invoking the service to verify the user solution
2019-03-13 19:42:42,455 INFO  Time before invoking service:Wed Mar 13 19:42:42 IST 2019
2019-03-13 19:42:42,455 INFO  Initialising service address for VerifySolution
2019-03-13 19:42:42,455 INFO  Time before invoking service In SUPER:Wed Mar 13 19:42:42 IST 2019
2019-03-13 19:42:43,502 INFO  Time after invoking service In SUPER:Wed Mar 13 19:42:43 IST 2019
2019-03-13 19:42:43,502 INFO  Service responded successfully with required details
2019-03-13 19:42:43,502 INFO  Time after invoking service:Wed Mar 13 19:42:43 IST 2019
2019-03-13 19:42:43,502 INFO  User solution successfully verified
2019-03-13 19:42:43,502 INFO  Processing the response from verify service
2019-03-13 19:42:43,502 INFO  Starting to parse JSON response
2019-03-13 19:42:43,502 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 19:42:43,502 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 19:42:43,502 INFO  Successfully parsed JSON response
2019-03-13 19:42:43,502 INFO  In the process of generating verify response in HTML
2019-03-13 19:42:43,580 INFO  Successfully generated verify response in HTML
2019-03-13 19:42:43,580 INFO  Successfully processed the response from service
2019-03-13 19:43:22,166 INFO  Setting request parameters for VerifySolution
2019-03-13 19:43:22,166 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 19:43:22,166 INFO  Starting to parse the user solution
2019-03-13 19:43:22,166 INFO  Displaying user solution
2019-03-13 19:43:22,213 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-4\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Player:\r\n    def __init__(self,name,experience):\r\n        self.__name=name\r\n        self.__experience=experience\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n\r\n    def get_experience(self):\r\n        return self.__experience\r\n\r\n    def __str__(self):\r\n        return(self.__name+\" \"+(str)(self.__experience))\r\n\r\n#Implement Game class here\r\nclass Game:\r\n    def __init__(self,players_list):\r\n        self.__players_list = players_list\r\n    def sort_players_based_on_experience(self):\r\n        for i in range(0,len(self.__players_list)):\r\n            for j in range(i+1,len(self.__players_list)):\r\n                if(self.__players_list[i].get_experience()<\r\n                   self.__players_list[j].get_experience()):\r\n                    temp=self.__players_list[i]\r\n                    self.__players_list[i]=self.__players_list[j]\r\n                    self.__players_list[j]=temp\r\n    def shift_player_to_new_position(self,old_index_position, new_index_position):\r\n        p1= self.__players_list[old_index_position]\r\n        self.__players_list.pop(old_index_position)\r\n        self.__players_list.insert(new_index_position, p1)\r\n        \r\n    def display_player_details(self):\r\n        player_list =[]\r\n        for i in self.__players_list:\r\n            player_list.append(i.get_name(),i.get_experience())\r\n        if(len(players_list)==0):\r\n            return None\r\n        return player_list\r\n\r\nplayer1=Player(\"Dhoni\",15)\r\nplayer2=Player(\"Virat\",10)\r\nplayer3=Player(\"Rohit\",12)\r\nplayer4=Player(\"Raina\",11)\r\nplayer5=Player(\"Jadeja\",13)\r\nplayer6=Player(\"Ishant\",9)\r\nplayer7=Player(\"Shikhar\",8)\r\nplayer8=Player(\"Axar\",7.5)\r\nplayer9=Player(\"Ashwin\",6)\r\nplayer10=Player(\"Stuart\",7)\r\nplayer11=Player(\"Bhuvneshwar\",5)\r\n#Add different values to the list and test the program\r\nplayers_list=[player1,player2,player3,player4,player5,player6,player7,player8,player9,player10,player11]\r\n#Create object of Game class, invoke the methods and test your program\r\n","asgnmtId":"4","SolutionFileName":"Assign4.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 19:43:22,213 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 19:43:22,213 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 19:43:22,213 INFO  Invoking the service to verify the user solution
2019-03-13 19:43:22,228 INFO  Time before invoking service:Wed Mar 13 19:43:22 IST 2019
2019-03-13 19:43:22,228 INFO  Initialising service address for VerifySolution
2019-03-13 19:43:22,228 INFO  Time before invoking service In SUPER:Wed Mar 13 19:43:22 IST 2019
2019-03-13 19:43:23,364 INFO  Time after invoking service In SUPER:Wed Mar 13 19:43:23 IST 2019
2019-03-13 19:43:23,364 INFO  Service responded successfully with required details
2019-03-13 19:43:23,364 INFO  Time after invoking service:Wed Mar 13 19:43:23 IST 2019
2019-03-13 19:43:23,364 INFO  User solution successfully verified
2019-03-13 19:43:23,364 INFO  Processing the response from verify service
2019-03-13 19:43:23,364 INFO  Starting to parse JSON response
2019-03-13 19:43:23,364 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 19:43:23,364 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 19:43:23,364 INFO  Successfully parsed JSON response
2019-03-13 19:43:23,364 INFO  In the process of generating verify response in HTML
2019-03-13 19:43:23,442 INFO  Successfully generated verify response in HTML
2019-03-13 19:43:23,442 INFO  Successfully processed the response from service
2019-03-13 19:43:47,900 INFO  Setting request parameters for VerifySolution
2019-03-13 19:43:47,900 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 19:43:47,900 INFO  Starting to parse the user solution
2019-03-13 19:43:47,900 INFO  Displaying user solution
2019-03-13 19:43:47,978 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-4\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Player:\r\n    def __init__(self,name,experience):\r\n        self.__name=name\r\n        self.__experience=experience\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n\r\n    def get_experience(self):\r\n        return self.__experience\r\n\r\n    def __str__(self):\r\n        return(self.__name+\" \"+(str)(self.__experience))\r\n\r\n#Implement Game class here\r\nclass Game:\r\n    def __init__(self,players_list):\r\n        self.__players_list = players_list\r\n    def sort_players_based_on_experience(self):\r\n        for i in range(0,len(self.__players_list)):\r\n            for j in range(i+1,len(self.__players_list)):\r\n                if(self.__players_list[i].get_experience()<\r\n                   self.__players_list[j].get_experience()):\r\n                    temp=self.__players_list[i]\r\n                    self.__players_list[i]=self.__players_list[j]\r\n                    self.__players_list[j]=temp\r\n    def shift_player_to_new_position(self,\r\n                                     old_index_position, \r\n                                     new_index_position):\r\n        p1= self.__players_list[old_index_position]\r\n        self.__players_list.pop(old_index_position)\r\n        self.__players_list.insert(new_index_position, p1)\r\n        \r\n    def display_player_details(self):\r\n        player_list =[]\r\n        for i in self.__players_list:\r\n            player_list.append(i.get_name(),i.get_experience())\r\n        if(len(players_list)==0):\r\n            return None\r\n        return player_list\r\n\r\nplayer1=Player(\"Dhoni\",15)\r\nplayer2=Player(\"Virat\",10)\r\nplayer3=Player(\"Rohit\",12)\r\nplayer4=Player(\"Raina\",11)\r\nplayer5=Player(\"Jadeja\",13)\r\nplayer6=Player(\"Ishant\",9)\r\nplayer7=Player(\"Shikhar\",8)\r\nplayer8=Player(\"Axar\",7.5)\r\nplayer9=Player(\"Ashwin\",6)\r\nplayer10=Player(\"Stuart\",7)\r\nplayer11=Player(\"Bhuvneshwar\",5)\r\n#Add different values to the list and test the program\r\nplayers_list=[player1,player2,player3,player4,player5,player6,player7,player8,player9,player10,player11]\r\n#Create object of Game class, invoke the methods and test your program\r\n","asgnmtId":"4","SolutionFileName":"Assign4.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 19:43:47,978 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 19:43:47,978 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 19:43:47,978 INFO  Invoking the service to verify the user solution
2019-03-13 19:43:47,978 INFO  Time before invoking service:Wed Mar 13 19:43:47 IST 2019
2019-03-13 19:43:47,978 INFO  Initialising service address for VerifySolution
2019-03-13 19:43:47,978 INFO  Time before invoking service In SUPER:Wed Mar 13 19:43:47 IST 2019
2019-03-13 19:43:49,088 INFO  Time after invoking service In SUPER:Wed Mar 13 19:43:49 IST 2019
2019-03-13 19:43:49,088 INFO  Service responded successfully with required details
2019-03-13 19:43:49,088 INFO  Time after invoking service:Wed Mar 13 19:43:49 IST 2019
2019-03-13 19:43:49,088 INFO  User solution successfully verified
2019-03-13 19:43:49,088 INFO  Processing the response from verify service
2019-03-13 19:43:49,088 INFO  Starting to parse JSON response
2019-03-13 19:43:49,088 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 19:43:49,088 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 19:43:49,088 INFO  Successfully parsed JSON response
2019-03-13 19:43:49,088 INFO  In the process of generating verify response in HTML
2019-03-13 19:43:49,166 INFO  Successfully generated verify response in HTML
2019-03-13 19:43:49,166 INFO  Successfully processed the response from service
2019-03-13 19:43:57,369 INFO  Initiating to process and prepare Input for the submit service
2019-03-13 19:43:57,369 INFO  Displaying user solution
2019-03-13 19:43:57,369 INFO  Successfully processed and prepared the input for the submit service
2019-03-13 19:43:57,369 INFO  Invoking the service to submit the user solution
2019-03-13 19:43:57,369 INFO  Initialising service address for Submit
2019-03-13 19:43:57,384 INFO  Time before invoking service In SUPER:Wed Mar 13 19:43:57 IST 2019
2019-03-13 19:43:57,917 INFO  Time after invoking service In SUPER:Wed Mar 13 19:43:57 IST 2019
2019-03-13 19:43:57,917 INFO  Service responded successfully with required details
2019-03-13 19:43:57,917 INFO  User solution successfully submitted
2019-03-13 19:43:57,917 INFO  Displaying submission status
2019-03-13 19:43:57,917 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-13 19:44:00,043 INFO  Initiating to process and prepare Input for the submit service
2019-03-13 19:44:00,043 INFO  Displaying user solution
2019-03-13 19:44:00,058 INFO  Successfully processed and prepared the input for the submit service
2019-03-13 19:44:00,058 INFO  Invoking the service to submit the user solution
2019-03-13 19:44:00,058 INFO  Initialising service address for Submit
2019-03-13 19:44:00,058 INFO  Time before invoking service In SUPER:Wed Mar 13 19:44:00 IST 2019
2019-03-13 19:44:00,355 INFO  Time after invoking service In SUPER:Wed Mar 13 19:44:00 IST 2019
2019-03-13 19:44:00,355 INFO  Service responded successfully with required details
2019-03-13 19:44:00,355 INFO  User solution successfully submitted
2019-03-13 19:44:00,355 INFO  Displaying submission status
2019-03-13 19:44:00,355 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-13 19:44:03,072 INFO  Initiating to process and prepare Input for the submit service
2019-03-13 19:44:03,072 INFO  Displaying user solution
2019-03-13 19:44:03,088 INFO  Successfully processed and prepared the input for the submit service
2019-03-13 19:44:03,088 INFO  Invoking the service to submit the user solution
2019-03-13 19:44:03,088 INFO  Initialising service address for Submit
2019-03-13 19:44:03,088 INFO  Time before invoking service In SUPER:Wed Mar 13 19:44:03 IST 2019
2019-03-13 19:44:03,244 INFO  Time after invoking service In SUPER:Wed Mar 13 19:44:03 IST 2019
2019-03-13 19:44:03,244 INFO  Service responded successfully with required details
2019-03-13 19:44:03,244 INFO  User solution successfully submitted
2019-03-13 19:44:03,244 INFO  Displaying submission status
2019-03-13 19:44:03,244 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-13 19:45:07,056 INFO  Initiating to process and prepare Input for the submit service
2019-03-13 19:45:07,056 INFO  Displaying user solution
2019-03-13 19:45:07,071 INFO  Successfully processed and prepared the input for the submit service
2019-03-13 19:45:07,071 INFO  Invoking the service to submit the user solution
2019-03-13 19:45:07,071 INFO  Initialising service address for Submit
2019-03-13 19:45:07,071 INFO  Time before invoking service In SUPER:Wed Mar 13 19:45:07 IST 2019
2019-03-13 19:45:07,353 INFO  Time after invoking service In SUPER:Wed Mar 13 19:45:07 IST 2019
2019-03-13 19:45:07,353 INFO  Service responded successfully with required details
2019-03-13 19:45:07,353 INFO  User solution successfully submitted
2019-03-13 19:45:07,353 INFO  Displaying submission status
2019-03-13 19:45:07,353 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-13 19:45:09,853 INFO  Setting request parameters for VerifySolution
2019-03-13 19:45:09,853 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 19:45:09,853 INFO  Starting to parse the user solution
2019-03-13 19:45:09,853 INFO  Displaying user solution
2019-03-13 19:45:09,931 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-4\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Player:\r\n    def __init__(self,name,experience):\r\n        self.__name=name\r\n        self.__experience=experience\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n\r\n    def get_experience(self):\r\n        return self.__experience\r\n\r\n    def __str__(self):\r\n        return(self.__name+\" \"+(str)(self.__experience))\r\n\r\n#Implement Game class here\r\nclass Game:\r\n    def __init__(self,players_list):\r\n        self.__players_list = players_list\r\n    def sort_players_based_on_experience(self):\r\n        for i in range(0,len(self.__players_list)):\r\n            for j in range(i+1,len(self.__players_list)):\r\n                if(self.__players_list[i].get_experience()<\r\n                   self.__players_list[j].get_experience()):\r\n                    temp=self.__players_list[i]\r\n                    self.__players_list[i]=self.__players_list[j]\r\n                    self.__players_list[j]=temp\r\n    def shift_player_to_new_position(self,\r\n                                     old_index_position, \r\n                                     new_index_position):\r\n        p1= self.__players_list[old_index_position]\r\n        self.__players_list.pop(old_index_position)\r\n        self.__players_list.insert(new_index_position, p1)\r\n        \r\n    def display_player_details(self):\r\n        player_list =[]\r\n        for i in self.__players_list:\r\n            player_list.append(i.get_name(),i.get_experience())\r\n        if(len(players_list)==0):\r\n            return None\r\n        return player_list\r\n\r\nplayer1=Player(\"Dhoni\",15)\r\nplayer2=Player(\"Virat\",10)\r\nplayer3=Player(\"Rohit\",12)\r\nplayer4=Player(\"Raina\",11)\r\nplayer5=Player(\"Jadeja\",13)\r\nplayer6=Player(\"Ishant\",9)\r\nplayer7=Player(\"Shikhar\",8)\r\nplayer8=Player(\"Axar\",7.5)\r\nplayer9=Player(\"Ashwin\",6)\r\nplayer10=Player(\"Stuart\",7)\r\nplayer11=Player(\"Bhuvneshwar\",5)\r\n#Add different values to the list and test the program\r\nplayers_list=[player1,player2,player3,player4,player5,player6,player7,player8,player9,player10,player11]\r\n#Create object of Game class, invoke the methods and test your program\r\n","asgnmtId":"4","SolutionFileName":"Assign4.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 19:45:09,931 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 19:45:09,931 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 19:45:09,931 INFO  Invoking the service to verify the user solution
2019-03-13 19:45:09,931 INFO  Time before invoking service:Wed Mar 13 19:45:09 IST 2019
2019-03-13 19:45:09,931 INFO  Initialising service address for VerifySolution
2019-03-13 19:45:09,931 INFO  Time before invoking service In SUPER:Wed Mar 13 19:45:09 IST 2019
2019-03-13 19:45:10,886 INFO  Time after invoking service In SUPER:Wed Mar 13 19:45:10 IST 2019
2019-03-13 19:45:10,886 INFO  Service responded successfully with required details
2019-03-13 19:45:10,886 INFO  Time after invoking service:Wed Mar 13 19:45:10 IST 2019
2019-03-13 19:45:10,886 INFO  User solution successfully verified
2019-03-13 19:45:10,886 INFO  Processing the response from verify service
2019-03-13 19:45:10,886 INFO  Starting to parse JSON response
2019-03-13 19:45:10,886 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 19:45:10,886 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 19:45:10,886 INFO  Successfully parsed JSON response
2019-03-13 19:45:10,886 INFO  In the process of generating verify response in HTML
2019-03-13 19:45:10,964 INFO  Successfully generated verify response in HTML
2019-03-13 19:45:10,964 INFO  Successfully processed the response from service
2019-03-13 19:47:32,853 INFO  Setting request parameters for VerifySolution
2019-03-13 19:47:32,853 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 19:47:32,853 INFO  Starting to parse the user solution
2019-03-13 19:47:32,853 INFO  Displaying user solution
2019-03-13 19:47:32,915 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-4\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Player:\r\n    def __init__(self,name,experience):\r\n        self.__name=name\r\n        self.__experience=experience\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n\r\n    def get_experience(self):\r\n        return self.__experience\r\n\r\n    def __str__(self):\r\n        return(self.__name+\" \"+(str)(self.__experience))\r\n\r\n#Implement Game class here\r\nclass Game:\r\n    def __init__(self,players_list):\r\n        self.__players_list = players_list\r\n    def sort_players_based_on_experience(self):\r\n        for i in range(0,len(self.__players_list)):\r\n            for j in range(i+1,len(self.__players_list)):\r\n                if(self.__players_list[i].get_experience()<\r\n                   self.__players_list[j].get_experience()):\r\n                    temp=self.__players_list[i]\r\n                    self.__players_list[i]=self.__players_list[j]\r\n                    self.__players_list[j]=temp\r\n    def shift_player_to_new_position(self,\r\n                                     old_index_position, \r\n                                     new_index_position):\r\n        p1= self.__players_list[old_index_position]\r\n        self.__players_list.pop(old_index_position)\r\n        self.__players_list.insert(new_index_position, p1)\r\n        \r\n    def display_player_details(self):\r\n        player_list =[]\r\n        for i in self.__players_list:\r\n            player_list.append(i.get_name(),i.get_experience())\r\n        if(len(players_list)==0):\r\n            return None\r\n        return player_list\r\n\r\nplayer1=Player(\"Dhoni\",15)\r\nplayer2=Player(\"Virat\",10)\r\nplayer3=Player(\"Rohit\",12)\r\nplayer4=Player(\"Raina\",11)\r\nplayer5=Player(\"Jadeja\",13)\r\nplayer6=Player(\"Ishant\",9)\r\nplayer7=Player(\"Shikhar\",8)\r\nplayer8=Player(\"Axar\",7.5)\r\nplayer9=Player(\"Ashwin\",6)\r\nplayer10=Player(\"Stuart\",7)\r\nplayer11=Player(\"Bhuvneshwar\",5)\r\n#Add different values to the list and test the program\r\nplayers_list=[player1,player2,player3,player4,player5,player6,player7,player8,player9,player10,player11]\r\n#Create object of Game class, invoke the methods and test your program\r\n","asgnmtId":"4","SolutionFileName":"Assign4.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 19:47:32,915 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 19:47:32,915 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 19:47:32,915 INFO  Invoking the service to verify the user solution
2019-03-13 19:47:32,915 INFO  Time before invoking service:Wed Mar 13 19:47:32 IST 2019
2019-03-13 19:47:32,915 INFO  Initialising service address for VerifySolution
2019-03-13 19:47:32,915 INFO  Time before invoking service In SUPER:Wed Mar 13 19:47:32 IST 2019
2019-03-13 19:47:33,996 INFO  Time after invoking service In SUPER:Wed Mar 13 19:47:33 IST 2019
2019-03-13 19:47:33,996 INFO  Service responded successfully with required details
2019-03-13 19:47:33,996 INFO  Time after invoking service:Wed Mar 13 19:47:33 IST 2019
2019-03-13 19:47:33,996 INFO  User solution successfully verified
2019-03-13 19:47:33,996 INFO  Processing the response from verify service
2019-03-13 19:47:34,011 INFO  Starting to parse JSON response
2019-03-13 19:47:34,011 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 19:47:34,011 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 19:47:34,011 INFO  Successfully parsed JSON response
2019-03-13 19:47:34,011 INFO  In the process of generating verify response in HTML
2019-03-13 19:47:34,089 INFO  Successfully generated verify response in HTML
2019-03-13 19:47:34,089 INFO  Successfully processed the response from service
2019-03-13 19:48:21,374 INFO  Setting request parameters for VerifySolution
2019-03-13 19:48:21,374 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 19:48:21,374 INFO  Starting to parse the user solution
2019-03-13 19:48:21,374 INFO  Displaying user solution
2019-03-13 19:48:21,421 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-4\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Player:\r\n    def __init__(self,name,experience):\r\n        self.__name=name\r\n        self.__experience=experience\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n\r\n    def get_experience(self):\r\n        return self.__experience\r\n\r\n    def __str__(self):\r\n        return(self.__name+\" \"+(str)(self.__experience))\r\n\r\n#Implement Game class here\r\nclass Game:\r\n    def __init__(self,players_list):\r\n        self.__players_list = players_list\r\n    def sort_players_based_on_experience(self):\r\n        for i in range(0,len(self.__players_list)):\r\n            for j in range(i+1,len(self.__players_list)):\r\n                if(self.__players_list[i].get_experience()<\r\n                   self.__players_list[j].get_experience()):\r\n                    temp=self.__players_list[i]\r\n                    self.__players_list[i]=self.__players_list[j]\r\n                    self.__players_list[j]=temp\r\n    def shift_player_to_new_position(self,\r\n                                     old_index_position, \r\n                                     new_index_position):\r\n        p1= self.__players_list[old_index_position]\r\n        self.__players_list.pop(old_index_position)\r\n        self.__players_list.insert(new_index_position, p1)\r\n        \r\n    def display_player_details(self):\r\n        player_list =[]\r\n        for i in self.__players_list:\r\n            player_list.append(i.get_name())\r\n            player_list.append(i.get_experience())\r\n        if(len(players_list)==0):\r\n            return None\r\n        return player_list\r\n\r\nplayer1=Player(\"Dhoni\",15)\r\nplayer2=Player(\"Virat\",10)\r\nplayer3=Player(\"Rohit\",12)\r\nplayer4=Player(\"Raina\",11)\r\nplayer5=Player(\"Jadeja\",13)\r\nplayer6=Player(\"Ishant\",9)\r\nplayer7=Player(\"Shikhar\",8)\r\nplayer8=Player(\"Axar\",7.5)\r\nplayer9=Player(\"Ashwin\",6)\r\nplayer10=Player(\"Stuart\",7)\r\nplayer11=Player(\"Bhuvneshwar\",5)\r\n#Add different values to the list and test the program\r\nplayers_list=[player1,player2,player3,player4,player5,player6,player7,player8,player9,player10,player11]\r\n#Create object of Game class, invoke the methods and test your program\r\n","asgnmtId":"4","SolutionFileName":"Assign4.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 19:48:21,437 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 19:48:21,437 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 19:48:21,437 INFO  Invoking the service to verify the user solution
2019-03-13 19:48:21,437 INFO  Time before invoking service:Wed Mar 13 19:48:21 IST 2019
2019-03-13 19:48:21,437 INFO  Initialising service address for VerifySolution
2019-03-13 19:48:21,437 INFO  Time before invoking service In SUPER:Wed Mar 13 19:48:21 IST 2019
2019-03-13 19:48:22,445 INFO  Time after invoking service In SUPER:Wed Mar 13 19:48:22 IST 2019
2019-03-13 19:48:22,460 INFO  Service responded successfully with required details
2019-03-13 19:48:22,460 INFO  Time after invoking service:Wed Mar 13 19:48:22 IST 2019
2019-03-13 19:48:22,460 INFO  User solution successfully verified
2019-03-13 19:48:22,460 INFO  Processing the response from verify service
2019-03-13 19:48:22,460 INFO  Starting to parse JSON response
2019-03-13 19:48:22,460 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 19:48:22,460 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 19:48:22,460 INFO  Successfully parsed JSON response
2019-03-13 19:48:22,460 INFO  In the process of generating verify response in HTML
2019-03-13 19:48:22,538 INFO  Successfully generated verify response in HTML
2019-03-13 19:48:22,538 INFO  Successfully processed the response from service
2019-03-13 19:51:12,325 INFO  Setting request parameters for VerifySolution
2019-03-13 19:51:12,325 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 19:51:12,325 INFO  Starting to parse the user solution
2019-03-13 19:51:12,325 INFO  Displaying user solution
2019-03-13 19:51:12,403 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-4\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Player:\r\n    def __init__(self,name,experience):\r\n        self.__name=name\r\n        self.__experience=experience\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n\r\n    def get_experience(self):\r\n        return self.__experience\r\n\r\n    def __str__(self):\r\n        return(self.__name+\" \"+(str)(self.__experience))\r\n\r\n#Implement Game class here\r\nclass Game:\r\n    def __init__(self,players_list):\r\n        self.__players_list = players_list\r\n    def sort_players_based_on_experience(self):\r\n        for i in range(0,len(self.__players_list)):\r\n            for j in range(i+1,len(self.__players_list)):\r\n                if(self.__players_list[i].get_experience()<\r\n                   self.__players_list[j].get_experience()):\r\n                    temp=self.__players_list[i]\r\n                    self.__players_list[i]=self.__players_list[j]\r\n                    self.__players_list[j]=temp\r\n    def shift_player_to_new_position(self,\r\n                                     old_index_position, \r\n                                     new_index_position):\r\n        p1= self.__players_list[old_index_position]\r\n        self.__players_list.pop(old_index_position)\r\n        self.__players_list.insert(new_index_position, p1)\r\n        \r\n    def display_player_details(self):\r\n        player_list =[]\r\n        for i in self.__players_list:\r\n            player_list.append(i.get_name()+':'+i.get_experience())\r\n        if(len(players_list)==0):\r\n            return None\r\n        return player_list\r\n\r\nplayer1=Player(\"Dhoni\",15)\r\nplayer2=Player(\"Virat\",10)\r\nplayer3=Player(\"Rohit\",12)\r\nplayer4=Player(\"Raina\",11)\r\nplayer5=Player(\"Jadeja\",13)\r\nplayer6=Player(\"Ishant\",9)\r\nplayer7=Player(\"Shikhar\",8)\r\nplayer8=Player(\"Axar\",7.5)\r\nplayer9=Player(\"Ashwin\",6)\r\nplayer10=Player(\"Stuart\",7)\r\nplayer11=Player(\"Bhuvneshwar\",5)\r\n#Add different values to the list and test the program\r\nplayers_list=[player1,player2,player3,player4,player5,player6,player7,player8,player9,player10,player11]\r\n#Create object of Game class, invoke the methods and test your program\r\n","asgnmtId":"4","SolutionFileName":"Assign4.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 19:51:12,403 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 19:51:12,403 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 19:51:12,403 INFO  Invoking the service to verify the user solution
2019-03-13 19:51:12,403 INFO  Time before invoking service:Wed Mar 13 19:51:12 IST 2019
2019-03-13 19:51:12,403 INFO  Initialising service address for VerifySolution
2019-03-13 19:51:12,418 INFO  Time before invoking service In SUPER:Wed Mar 13 19:51:12 IST 2019
2019-03-13 19:51:13,555 INFO  Time after invoking service In SUPER:Wed Mar 13 19:51:13 IST 2019
2019-03-13 19:51:13,555 INFO  Service responded successfully with required details
2019-03-13 19:51:13,555 INFO  Time after invoking service:Wed Mar 13 19:51:13 IST 2019
2019-03-13 19:51:13,555 INFO  User solution successfully verified
2019-03-13 19:51:13,555 INFO  Processing the response from verify service
2019-03-13 19:51:13,555 INFO  Starting to parse JSON response
2019-03-13 19:51:13,571 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 19:51:13,571 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 19:51:13,571 INFO  Successfully parsed JSON response
2019-03-13 19:51:13,571 INFO  In the process of generating verify response in HTML
2019-03-13 19:51:13,649 INFO  Successfully generated verify response in HTML
2019-03-13 19:51:13,649 INFO  Successfully processed the response from service
2019-03-13 19:51:20,345 INFO  Initiating to process and prepare Input for the submit service
2019-03-13 19:51:20,345 INFO  Displaying user solution
2019-03-13 19:51:20,361 INFO  Successfully processed and prepared the input for the submit service
2019-03-13 19:51:20,361 INFO  Invoking the service to submit the user solution
2019-03-13 19:51:20,361 INFO  Initialising service address for Submit
2019-03-13 19:51:20,361 INFO  Time before invoking service In SUPER:Wed Mar 13 19:51:20 IST 2019
2019-03-13 19:51:20,642 INFO  Time after invoking service In SUPER:Wed Mar 13 19:51:20 IST 2019
2019-03-13 19:51:20,642 INFO  Service responded successfully with required details
2019-03-13 19:51:20,642 INFO  User solution successfully submitted
2019-03-13 19:51:20,642 INFO  Displaying submission status
2019-03-13 19:51:20,642 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-13 19:51:24,399 INFO  Initiating to process and prepare Input for the submit service
2019-03-13 19:51:24,399 INFO  Displaying user solution
2019-03-13 19:51:24,414 INFO  Successfully processed and prepared the input for the submit service
2019-03-13 19:51:24,414 INFO  Invoking the service to submit the user solution
2019-03-13 19:51:24,414 INFO  Initialising service address for Submit
2019-03-13 19:51:24,414 INFO  Time before invoking service In SUPER:Wed Mar 13 19:51:24 IST 2019
2019-03-13 19:51:24,508 INFO  Time after invoking service In SUPER:Wed Mar 13 19:51:24 IST 2019
2019-03-13 19:51:24,508 INFO  Service responded successfully with required details
2019-03-13 19:51:24,508 INFO  User solution successfully submitted
2019-03-13 19:51:24,508 INFO  Displaying submission status
2019-03-13 19:51:24,508 INFO  Displayed submission status successfullySuccessfully Submitted!
2019-03-13 19:51:27,353 INFO  Setting request parameters for VerifySolution
2019-03-13 19:51:27,353 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 19:51:27,353 INFO  Starting to parse the user solution
2019-03-13 19:51:27,353 INFO  Displaying user solution
2019-03-13 19:51:27,431 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-4\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Player:\r\n    def __init__(self,name,experience):\r\n        self.__name=name\r\n        self.__experience=experience\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n\r\n    def get_experience(self):\r\n        return self.__experience\r\n\r\n    def __str__(self):\r\n        return(self.__name+\" \"+(str)(self.__experience))\r\n\r\n#Implement Game class here\r\nclass Game:\r\n    def __init__(self,players_list):\r\n        self.__players_list = players_list\r\n    def sort_players_based_on_experience(self):\r\n        for i in range(0,len(self.__players_list)):\r\n            for j in range(i+1,len(self.__players_list)):\r\n                if(self.__players_list[i].get_experience()<\r\n                   self.__players_list[j].get_experience()):\r\n                    temp=self.__players_list[i]\r\n                    self.__players_list[i]=self.__players_list[j]\r\n                    self.__players_list[j]=temp\r\n    def shift_player_to_new_position(self,\r\n                                     old_index_position, \r\n                                     new_index_position):\r\n        p1= self.__players_list[old_index_position]\r\n        self.__players_list.pop(old_index_position)\r\n        self.__players_list.insert(new_index_position, p1)\r\n        \r\n    def display_player_details(self):\r\n        player_list =[]\r\n        for i in self.__players_list:\r\n            player_list.append(i.get_name()+':'+i.get_experience())\r\n        if(len(players_list)==0):\r\n            return None\r\n        return player_list\r\n\r\nplayer1=Player(\"Dhoni\",15)\r\nplayer2=Player(\"Virat\",10)\r\nplayer3=Player(\"Rohit\",12)\r\nplayer4=Player(\"Raina\",11)\r\nplayer5=Player(\"Jadeja\",13)\r\nplayer6=Player(\"Ishant\",9)\r\nplayer7=Player(\"Shikhar\",8)\r\nplayer8=Player(\"Axar\",7.5)\r\nplayer9=Player(\"Ashwin\",6)\r\nplayer10=Player(\"Stuart\",7)\r\nplayer11=Player(\"Bhuvneshwar\",5)\r\n#Add different values to the list and test the program\r\nplayers_list=[player1,player2,player3,player4,player5,player6,player7,player8,player9,player10,player11]\r\n#Create object of Game class, invoke the methods and test your program\r\n","asgnmtId":"4","SolutionFileName":"Assign4.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 19:51:27,431 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 19:51:27,431 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 19:51:27,431 INFO  Invoking the service to verify the user solution
2019-03-13 19:51:27,431 INFO  Time before invoking service:Wed Mar 13 19:51:27 IST 2019
2019-03-13 19:51:27,431 INFO  Initialising service address for VerifySolution
2019-03-13 19:51:27,431 INFO  Time before invoking service In SUPER:Wed Mar 13 19:51:27 IST 2019
2019-03-13 19:51:28,417 INFO  Time after invoking service In SUPER:Wed Mar 13 19:51:28 IST 2019
2019-03-13 19:51:28,417 INFO  Service responded successfully with required details
2019-03-13 19:51:28,417 INFO  Time after invoking service:Wed Mar 13 19:51:28 IST 2019
2019-03-13 19:51:28,417 INFO  User solution successfully verified
2019-03-13 19:51:28,417 INFO  Processing the response from verify service
2019-03-13 19:51:28,417 INFO  Starting to parse JSON response
2019-03-13 19:51:28,417 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 19:51:28,417 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 19:51:28,417 INFO  Successfully parsed JSON response
2019-03-13 19:51:28,417 INFO  In the process of generating verify response in HTML
2019-03-13 19:51:28,480 INFO  Successfully generated verify response in HTML
2019-03-13 19:51:28,480 INFO  Successfully processed the response from service
2019-03-13 19:53:02,622 INFO  Setting request parameters for VerifySolution
2019-03-13 19:53:02,622 INFO  Initiating to process and prepare Input for the verify service
2019-03-13 19:53:02,622 INFO  Starting to parse the user solution
2019-03-13 19:53:02,638 INFO  Displaying user solution
2019-03-13 19:53:02,700 INFO  Successfully parsed the user solution{"CourseShortName":"DSA","UserSolution":"#DSA-Assgn-4\r\n'''\r\nCreated on Mar 13, 2019\r\n\r\n@author: vijay.pal01\r\n'''\r\n\r\n\r\nclass Player:\r\n    def __init__(self,name,experience):\r\n        self.__name=name\r\n        self.__experience=experience\r\n\r\n    def get_name(self):\r\n        return self.__name\r\n\r\n    def get_experience(self):\r\n        return self.__experience\r\n\r\n    def __str__(self):\r\n        return(self.__name+\" \"+(str)(self.__experience))\r\n\r\n#Implement Game class here\r\nclass Game:\r\n    def __init__(self,players_list):\r\n        self.__players_list = players_list\r\n    def sort_players_based_on_experience(self):\r\n        for i in range(0,len(self.__players_list)):\r\n            for j in range(i+1,len(self.__players_list)):\r\n                if(self.__players_list[i].get_experience()<\r\n                   self.__players_list[j].get_experience()):\r\n                    temp=self.__players_list[i]\r\n                    self.__players_list[i]=self.__players_list[j]\r\n                    self.__players_list[j]=temp\r\n    def shift_player_to_new_position(self,\r\n                                     old_index_position, \r\n                                     new_index_position):\r\n        p1= self.__players_list[old_index_position]\r\n        self.__players_list.pop(old_index_position)\r\n        self.__players_list.insert(new_index_position, p1)\r\n        \r\n    def display_player_details(self):\r\n        player_list =[]\r\n        for i in self.__players_list:\r\n            player_list.append(i.get_name()+':'+i.get_experience())\r\n        if(len(players_list)==0):\r\n            return None\r\n        return player_list\r\n\r\nplayer1=Player(\"Dhoni\",15)\r\nplayer2=Player(\"Virat\",10)\r\nplayer3=Player(\"Rohit\",12)\r\nplayer4=Player(\"Raina\",11)\r\nplayer5=Player(\"Jadeja\",13)\r\nplayer6=Player(\"Ishant\",9)\r\nplayer7=Player(\"Shikhar\",8)\r\nplayer8=Player(\"Axar\",7.5)\r\nplayer9=Player(\"Ashwin\",6)\r\nplayer10=Player(\"Stuart\",7)\r\nplayer11=Player(\"Bhuvneshwar\",5)\r\n#Add different values to the list and test the program\r\nplayers_list=[player1,player2,player3,player4,player5,player6,player7,player8,player9,player10,player11]\r\n#Create object of Game class, invoke the methods and test your program\r\n","asgnmtId":"4","SolutionFileName":"Assign4.py","AsgnmtTyp":"A","TestcaseFileName":""}
2019-03-13 19:53:02,700 INFO  Successfully processed and prepared the input for the verify service
2019-03-13 19:53:02,700 INFO  Successfully set the request parameters for VerifySolution
2019-03-13 19:53:02,700 INFO  Invoking the service to verify the user solution
2019-03-13 19:53:02,700 INFO  Time before invoking service:Wed Mar 13 19:53:02 IST 2019
2019-03-13 19:53:02,700 INFO  Initialising service address for VerifySolution
2019-03-13 19:53:02,700 INFO  Time before invoking service In SUPER:Wed Mar 13 19:53:02 IST 2019
2019-03-13 19:53:03,758 INFO  Time after invoking service In SUPER:Wed Mar 13 19:53:03 IST 2019
2019-03-13 19:53:03,758 INFO  Service responded successfully with required details
2019-03-13 19:53:03,758 INFO  Time after invoking service:Wed Mar 13 19:53:03 IST 2019
2019-03-13 19:53:03,758 INFO  User solution successfully verified
2019-03-13 19:53:03,758 INFO  Processing the response from verify service
2019-03-13 19:53:03,805 INFO  Starting to parse JSON response
2019-03-13 19:53:03,821 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 19:53:03,821 ERROR Keys used to parse test result JSON might be incorrect
2019-03-13 19:53:03,821 INFO  Successfully parsed JSON response
2019-03-13 19:53:03,821 INFO  In the process of generating verify response in HTML
2019-03-13 19:53:03,914 INFO  Successfully generated verify response in HTML
2019-03-13 19:53:03,914 INFO  Successfully processed the response from service
